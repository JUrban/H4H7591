Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% (39035)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 292
% Passive clauses: 3954
% Generated clauses: 31526
% Final active clauses: 262
% Final passive clauses: 3328
% Input formulas: 261
% Initial clauses: 551
% 
% Duplicate literals: 557
% Trivial inequalities: 517
% Fw subsumption resolutions: 2116
% Fw demodulations: 4354
% Bw demodulations: 26
% 
% Simple tautologies: 473
% Equational tautologies: 44
% Forward subsumptions: 19290
% Fw demodulations to eq. taut.: 2
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 142
% Factoring: 1
% Forward superposition: 11724
% Backward superposition: 11225
% Self superposition: 144
% Equality factoring: 76
% Equality resolution: 34
% 
% Split clauses: 212
% Split components: 426
% SAT solver clauses: 396
% SAT solver unit clauses: 8
% SAT solver binary clauses: 83
% 
% Sat splits: 212
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 395
% TWLsolver calls for satisfiability: 61
% 
% Memory used [KB]: 21748
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quantHeuristics
% (39046)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 257
% Passive clauses: 1841
% Generated clauses: 21036
% Final active clauses: 186
% Final passive clauses: 1124
% Input formulas: 261
% Initial clauses: 551
% 
% Duplicate literals: 85
% Trivial inequalities: 307
% Fw subsumption resolutions: 752
% Fw demodulations: 4891
% Bw demodulations: 507
% Condensations: 69
% Global subsumptions: 15
% 
% Simple tautologies: 286
% Equational tautologies: 15
% Forward subsumptions: 10250
% Fw demodulations to eq. taut.: 6
% 
% Binary resolution: 96
% Factoring: 1
% Forward superposition: 6875
% Backward superposition: 4370
% Self superposition: 79
% Equality factoring: 14
% Equality resolution: 32
% 
% Split clauses: 21
% Split components: 42
% SAT solver clauses: 2990
% SAT solver unit clauses: 618
% SAT solver binary clauses: 324
% SAT solver learnt clauses: 31
% SAT solver learnt literals: 4
% 
% Sat splits: 21
% Sat splitting refutations: 27
% 
% TWLsolver clauses: 2929
% TWLsolver calls for satisfiability: 2984
% 
% Memory used [KB]: 19829
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.quantHeuristics
% (39060)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1022
% Passive clauses: 11924
% Generated clauses: 134842
% Final active clauses: 436
% Final passive clauses: 2345
% Input formulas: 261
% Initial clauses: 551
% Discarded non-redundant clauses: 19561
% 
% Duplicate literals: 125
% Trivial inequalities: 323
% Fw subsumption resolutions: 3452
% Fw demodulations: 50149
% Bw demodulations: 493
% Condensations: 106
% Global subsumptions: 530
% 
% Simple tautologies: 357
% Equational tautologies: 225
% Forward subsumptions: 64647
% Fw demodulations to eq. taut.: 431
% Bw demodulations to eq. taut.: 2
% 
% Unit resulting resolution: 9851
% Factoring: 1
% Forward superposition: 41409
% Backward superposition: 26283
% Self superposition: 124
% Equality factoring: 24
% Equality resolution: 33
% 
% Split clauses: 29
% Split components: 58
% SAT solver clauses: 13051
% SAT solver unit clauses: 360
% SAT solver binary clauses: 7806
% 
% Sat splits: 29
% Sat splitting refutations: 536
% 
% Memory used [KB]: 232448
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 31 next slice time: 31
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f56048,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f931,f930,f1348,f1430,f1435,f1436,f1440,f1371,f1372,f1442,f1373,f1374,f1446,f1375,f1438,f1384,f1385,f1386,f1454,f1452,f1389,f1390,f1456,f1391,f1462,f1460,f1394,f1395,f1466,f1464,f1396,f1468,f1406,f1407,f1484,f1485,f3819,f1486,f3824,f3823,f3821,f1488,f1489,f3826,f1490,f3831,f3830,f3828,f1492,f1493,f3833,f1494,f3838,f3837,f3835,f1496,f1497,f3840,f1498,f3845,f3844,f3842,f1500,f1501,f3847,f1502,f3852,f3851,f3849,f1504,f1505,f3854,f1506,f3859,f3858,f3856,f1508,f1509,f3861,f1510,f3866,f3865,f3863,f1512,f1513,f3868,f1514,f3873,f3872,f3870,f1516,f1517,f3875,f1518,f3880,f3879,f3877,f1520,f1521,f3882,f1522,f3887,f3886,f3884,f1524,f1525,f3889,f1526,f3894,f3893,f3891,f1528,f1529,f3896,f1530,f3901,f3900,f3898,f4960,f4964,f4967,f4969,f4962,f4973,f4977,f4980,f4982,f4975,f4984,f4988,f4991,f4993,f4986,f5004,f5008,f5013,f5015,f5006,f5019,f5023,f5028,f5030,f5021,f5033,f5037,f5041,f5043,f5035,f5048,f5052,f5050,f5055,f5059,f5057,f5062,f5066,f5070,f5072,f5064,f5077,f5079,f1450,f5082,f5086,f5089,f5091,f1458,f5094,f5098,f5096,f5101,f5105,f5107,f5109,f5103,f5111,f5115,f5117,f5119,f5113,f5121,f5125,f5127,f5129,f5123,f5131,f5135,f5138,f5140,f5133,f5143,f5147,f5150,f5152,f5145,f5155,f5159,f5162,f5164,f5157,f5167,f5171,f5174,f5176,f5169,f5179,f5183,f5186,f5188,f5181,f2816,f2818,f2820,f1432,f5204,f2822,f1431,f5203,f5215,f5216,f1444,f5243,f5244,f5227,f5255,f5284,f5285,f5322,f5320,f5295,f5296,f1448,f5433,f5434,f5324,f5458,f8239,f8241,f8400,f8401,f1477,f8431,f11181,f11182,f1478,f11208,f12500,f1470,f12883,f14408,f14409,f14443,f14491,f14492,f14493,f14494,f14495,f14496,f14497,f14498,f14499,f14500,f14501,f14502,f14503,f14504,f14505,f14506,f14622,f14546,f14547,f14548,f14549,f14550,f14551,f1434,f14552,f14553,f14554,f14555,f14556,f14557,f14558,f14559,f14560,f14561,f14445,f14793,f14794,f14795,f14796,f14797,f14798,f14799,f14800,f1476,f14801,f14802,f14803,f14804,f14805,f14806,f14807,f14808,f14948,f14848,f14849,f14850,f14851,f14854,f14855,f14856,f14857,f14858,f14859,f14860,f14861,f14900,f14901,f14968,f14902,f14903,f14970,f14906,f14907,f14972,f14908,f14909,f14910,f14911,f14976,f14912,f14913,f14978,f15019,f15020,f15021,f15022,f15023,f15024,f15025,f15026,f15027,f15028,f15029,f15030,f15031,f15032,f15074,f15075,f15076,f15077,f15080,f15081,f15082,f15083,f15084,f15085,f15086,f15087,f15140,f15160,f15161,f15179,f15177,f15167,f15153,f15367,f15151,f15392,f15182,f16156,f16157,f16158,f16177,f17372,f17373,f17374,f16179,f17390,f17458,f17459,f18699,f18700,f18729,f18753,f18751,f18732,f18733,f18870,f18871,f18872,f18873,f18874,f18875,f18876,f18877,f18878,f18879,f18880,f18881,f18882,f18883,f18884,f18885,f18886,f18887,f19020,f18888,f19022,f19023,f18925,f18926,f14604,f18927,f18928,f14613,f18929,f18930,f14610,f18931,f18932,f14619,f18933,f18934,f18935,f18936,f14607,f18937,f18938,f14616,f18977,f18978,f19032,f18979,f18980,f19034,f18983,f18984,f19036,f18985,f18986,f19038,f18987,f18988,f19040,f18989,f18990,f19042,f19106,f19107,f19108,f19109,f19110,f19111,f19114,f19115,f19116,f19117,f19118,f19119,f19563,f19564,f19565,f19566,f19567,f19568,f19569,f19570,f19571,f19572,f19573,f19574,f19575,f19576,f19577,f19578,f19019,f19618,f19619,f14950,f19620,f19621,f19624,f19625,f19626,f19627,f19628,f19629,f14962,f19630,f19631,f19678,f19679,f14974,f21852,f21853,f21875,f21854,f21881,f21857,f21858,f21888,f21889,f16175,f22000,f22001,f19139,f22002,f22003,f19140,f22004,f22005,f19141,f22008,f22009,f19142,f22010,f22011,f19143,f22012,f22013,f19144,f27279,f27303,f27873,f27920,f21879,f28210,f28236,f17368,f17367,f16152,f16151,f28244,f28581,f28609,f28970,f28999,f18695,f18694,f21877,f17454,f17453,f29007,f29342,f29372,f27867,f27866,f5084,f21848,f21847,f29382,f18728,f18727,f28246,f29378,f29575,f29576,f33716,f33717,f33839,f33718,f33719,f33842,f33720,f33721,f33845,f33722,f33723,f33848,f33724,f33725,f33851,f33726,f33727,f33854,f33728,f33729,f33857,f33730,f33731,f33860,f33771,f33772,f33866,f33773,f33774,f33869,f33775,f33776,f33872,f33777,f33778,f33875,f33779,f33780,f33878,f33781,f33782,f33881,f33783,f33784,f33884,f33785,f33786,f33887,f35218,f35250,f29584,f29583,f14953,f35644,f35678,f29586,f29585,f14965,f36069,f36105,f29588,f29587,f14956,f36285,f36286,f36287,f36288,f36289,f36290,f36293,f36294,f36295,f36296,f36297,f36298,f36340,f36341,f36342,f36343,f36344,f36345,f36346,f36347,f36348,f36349,f36350,f36351,f36352,f36353,f36354,f36355,f36392,f36393,f36443,f36394,f36395,f36445,f36396,f36397,f36447,f36398,f36399,f36449,f36400,f36401,f36402,f36403,f36453,f36404,f36405,f36455,f36406,f36407,f36457,f36515,f36516,f36570,f36571,f36572,f36573,f36574,f36575,f36576,f36577,f36578,f36579,f36580,f36581,f36582,f36583,f36584,f36585,f36440,f36745,f36782,f37145,f37146,f29609,f37147,f37148,f37196,f37149,f37150,f37197,f37153,f37154,f35253,f37155,f37156,f35681,f37157,f37158,f36108,f37432,f37471,f18982,f18981,f37473,f37478,f4998,f1344,f1346,f37479,f37481,f1345,f41006,f41223,f40960,f41236,f40959,f40958,f41235,f41237,f41212,f40916,f41239,f40915,f40914,f41238,f41240,f41198,f40860,f41242,f40859,f40858,f41241,f41243,f41181,f40792,f41245,f40791,f40790,f41244,f41246,f41161,f40712,f41248,f40711,f40710,f41247,f41249,f41141,f40629,f41251,f40628,f40627,f41250,f41252,f41121,f40543,f41254,f40542,f40541,f41253,f41255,f41098,f40445,f41257,f40444,f40443,f41256,f41258,f41075,f40344,f41260,f40343,f40342,f41259,f41261,f41052,f40240,f41263,f40239,f40238,f41262,f41264,f41029,f40133,f41266,f40132,f40131,f41265,f41267,f43328,f37238,f43422,f37057,f43424,f37007,f43426,f36883,f43428,f36830,f43430,f36795,f43432,f36185,f1453,f36117,f43434,f35879,f43436,f35814,f43438,f35764,f43440,f35720,f43442,f35690,f43444,f35491,f43446,f35343,f43448,f29998,f43450,f29859,f43452,f29783,f43454,f29656,f43456,f29618,f43458,f29473,f27919,f29426,f43460,f29395,f21903,f29198,f43462,f29159,f43464,f29095,f1461,f28811,f43466,f28066,f43468,f28036,f43470,f28012,f43472,f27967,f43474,f27863,f43476,f27383,f43478,f27348,f43480,f27312,f43482,f25750,f43484,f24603,f43486,f21844,f43488,f19347,f43490,f19201,f43492,f19177,f43494,f18826,f18787,f43496,f18724,f43498,f18691,f43500,f17450,f43502,f15387,f43506,f15339,f43508,f15162,f43510,f12536,f45210,f45211,f45318,f45315,f45314,f45321,f45319,f45265,f45266,f45323,f45267,f45268,f45325,f45269,f45270,f45327,f45271,f45272,f45329,f45273,f45274,f45331,f45275,f45276,f45333,f45277,f45278,f45335,f45279,f45280,f45337,f45390,f45391,f45501,f45392,f45393,f45503,f45394,f45395,f45505,f45396,f45397,f45507,f45398,f45399,f45509,f45400,f45401,f45511,f45402,f45403,f45513,f45404,f45405,f45515,f45445,f45446,f45516,f45447,f45448,f45517,f45451,f45452,f45518,f45453,f45454,f45519,f45455,f45456,f45520,f45457,f45458,f45521,f45591,f45592,f45593,f45594,f45595,f45596,f45597,f45598,f45599,f45600,f45601,f45602,f45603,f45604,f45605,f45606,f45646,f45647,f45648,f45649,f45652,f45653,f45654,f45655,f45656,f45657,f45658,f45659,f45706,f45707,f45784,f45785,f45786,f45787,f45788,f45789,f45790,f45791,f45792,f45793,f45794,f45795,f45796,f45797,f45798,f45799,f45839,f45840,f45841,f45842,f45845,f45846,f45847,f45848,f45849,f45850,f45851,f45852,f47109,f47110,f47275,f47273,f47143,f47144,f47278,f47145,f47146,f47280,f47147,f47148,f47282,f47149,f47150,f47284,f47151,f47152,f47286,f47153,f47154,f47288,f47155,f47156,f47290,f47157,f47158,f47292,f47198,f47199,f47302,f47200,f47201,f47303,f47204,f47205,f47304,f47206,f47207,f47305,f47208,f47209,f47306,f47210,f47211,f47307,f48624,f48625,f48626,f48627,f48628,f48629,f48632,f48633,f48634,f48635,f48636,f48637,f48679,f48680,f48681,f48682,f48685,f48686,f48687,f48688,f48689,f48690,f48691,f48692,f48739,f48740,f48802,f48803,f48857,f48858,f48859,f48860,f48861,f48862,f48863,f48864,f48865,f48866,f48867,f48868,f48869,f48870,f48871,f48872,f49100,f49101,f49102,f49103,f49234,f49104,f49105,f49235,f49108,f49109,f49236,f49110,f49111,f49237,f49112,f49113,f49238,f49155,f49156,f49157,f49158,f49159,f49160,f49161,f49162,f49163,f49164,f49165,f49166,f49167,f49168,f49169,f49170,f49207,f49208,f49256,f49209,f49210,f49258,f49211,f49212,f49260,f49213,f49214,f49262,f49215,f49216,f49264,f49217,f49218,f49266,f49219,f49220,f49268,f49221,f49222,f49270,f49329,f49330,f49233,f49384,f49385,f49240,f49386,f49387,f49242,f49388,f49389,f49244,f49390,f49391,f49246,f49392,f49393,f49248,f49394,f49395,f49250,f49396,f49397,f49252,f49398,f49399,f49254,f50988,f50989,f50990,f50991,f50992,f50993,f50994,f50995,f50996,f50997,f50998,f50999,f51000,f51001,f51002,f51003,f51004,f51005,f15378,f51113,f51043,f51044,f51045,f51046,f51049,f51050,f51051,f51052,f51053,f51054,f51055,f51056,f52539,f52540,f52541,f52542,f52673,f52543,f52544,f52674,f52547,f52548,f52675,f52549,f52550,f52676,f52551,f52552,f52677,f52594,f52595,f52596,f52597,f52598,f52599,f52600,f52601,f52602,f52603,f52604,f52605,f52606,f52607,f52608,f52609,f52646,f52647,f52695,f52648,f52649,f52697,f52650,f52651,f52699,f52652,f52653,f52701,f52654,f52655,f52703,f52656,f52657,f52705,f52658,f52659,f52707,f52660,f52661,f52709,f52770,f52771,f52672,f52825,f52826,f52679,f52827,f52828,f52681,f52829,f52830,f52683,f52831,f52832,f52685,f52833,f52834,f52687,f52835,f52836,f52689,f52837,f52838,f52691,f52839,f52840,f52693,f53105,f53106,f53213,f53158,f53159,f53217,f53160,f53161,f53219,f53162,f53163,f53221,f53164,f53165,f53223,f53166,f53167,f53225,f53168,f53169,f53227,f53170,f53171,f53229,f53172,f53173,f53231,f53268,f53269,f45721,f53270,f53271,f45723,f53272,f53273,f45725,f53274,f53275,f45727,f53276,f53277,f45729,f53278,f53279,f45731,f53280,f53281,f45733,f53282,f53283,f45735,f53323,f53324,f45738,f53325,f53326,f45739,f53329,f53330,f45740,f53331,f53332,f45741,f53333,f53334,f45742,f53335,f53336,f45743,f53383,f53384,f45746,f53432,f53433,f33841,f53555,f53434,f53435,f33844,f53556,f53436,f53437,f33847,f53557,f53438,f53439,f33850,f53558,f53440,f53441,f33853,f53559,f53442,f53443,f33856,f53560,f53444,f53445,f33859,f53561,f53446,f53447,f33862,f53562,f53487,f53488,f33867,f33865,f53489,f53490,f33870,f33868,f53491,f53492,f33873,f33871,f53493,f53494,f33876,f33874,f53495,f53496,f33879,f33877,f53497,f53498,f33882,f33880,f53499,f53500,f33885,f33883,f53501,f53502,f33888,f33886,f53604,f53605,f36418,f53606,f53607,f36419,f53608,f53609,f36420,f53610,f53611,f53734,f53612,f53613,f36421,f53614,f53615,f36422,f53616,f53617,f36423,f53659,f53660,f36425,f53661,f53662,f36427,f53663,f53664,f19026,f36429,f53665,f53666,f36432,f53667,f53668,f36434,f53669,f53670,f36436,f53671,f53672,f36438,f53719,f53720,f36451,f53769,f53770,f53880,f53771,f53772,f53882,f53773,f53774,f53884,f53775,f53776,f53886,f53777,f53778,f53888,f53779,f53780,f53890,f53781,f53782,f53892,f53783,f53784,f53894,f53824,f53825,f53895,f53826,f53827,f53896,f53830,f53831,f53897,f53832,f53833,f53898,f53834,f53835,f53899,f53836,f53837,f53900,f54116,f54117,f54224,f54169,f54170,f54227,f54171,f54172,f54229,f54173,f54174,f54231,f54175,f54176,f54233,f54177,f54178,f54235,f54179,f54180,f54237,f54181,f54182,f54239,f54183,f54184,f54241,f54350,f54351,f54537,f54352,f54353,f54538,f54356,f54357,f54539,f54358,f54359,f54540,f54360,f54361,f54541,f54362,f54363,f54542,f54581,f54582,f45894,f54583,f54584,f45896,f54585,f54586,f45898,f54587,f54588,f45900,f54589,f54590,f45902,f54591,f54592,f45904,f54593,f54594,f45906,f54595,f54596,f45908,f54636,f54637,f45909,f54638,f54639,f45910,f54642,f54643,f45911,f54644,f54645,f45912,f54646,f54647,f45913,f54648,f54649,f45914,f54864,f54865,f19005,f54866,f54867,f19007,f54868,f54869,f19009,f54870,f54871,f19011,f54872,f54873,f19013,f54874,f54875,f19015,f54876,f54877,f19017,f54919,f54920,f19024,f54921,f54922,f19025,f54925,f54926,f19027,f54927,f54928,f19028,f54929,f54930,f19029,f54931,f54932,f19030,f54979,f54980,f45745,f55031,f55032,f51098,f14599,f55033,f55034,f51100,f14602,f55035,f55036,f51102,f14605,f55037,f55038,f51104,f14608,f55039,f55040,f51106,f14611,f55041,f55042,f51108,f14614,f55043,f55044,f51110,f14617,f55045,f55046,f51112,f14620,f55086,f55087,f51115,f14626,f55088,f55089,f51116,f14629,f55092,f55093,f51117,f14633,f55094,f55095,f51118,f14636,f55096,f55097,f51119,f14639,f55098,f55099,f51120,f14642,f55320,f55321,f48919,f55322,f55323,f48911,f55324,f55325,f48921,f55326,f55327,f48915,f55328,f55329,f48913,f55330,f55331,f48923,f55332,f55333,f48917,f55334,f55335,f48925,f55383,f55384,f48909,f14959,f55495,f55496,f14929,f55497,f55498,f14932,f55629,f55499,f55500,f14935,f55630,f55503,f55504,f14939,f55631,f55505,f55506,f14942,f55632,f55507,f55508,f14945,f55633,f55550,f55551,f14951,f55552,f55553,f14954,f55554,f55555,f36430,f55556,f55557,f14957,f55558,f55559,f14960,f55560,f55561,f14963,f55562,f55563,f14966,f55564,f55565,f36441,f55602,f55603,f14930,f55651,f55604,f55605,f14937,f55653,f55606,f55607,f14936,f55655,f55608,f55609,f14943,f55657,f55610,f55611,f14927,f55659,f55612,f55613,f14933,f55661,f55614,f55615,f14940,f55663,f55616,f55617,f14946,f55665,f55723,f55724,f14601,f55628,f55778,f55779,f14627,f55635,f55780,f55781,f14630,f55637,f55782,f55783,f14631,f55639,f55784,f55785,f14634,f55641,f55786,f55787,f14637,f55643,f55788,f55789,f14640,f55645,f55790,f55791,f14643,f55647,f55792,f55793,f14644,f55649,f56047])).
fof(f56047,plain,(
  $false | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f56046,f1329])).
fof(f1329,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f230])).
fof(f230,axiom,(
  p(s(bool,'T_0'))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.bool.TRUTH')).
fof(f56046,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f56020,f37521])).
fof(f37521,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl0),
  inference(resolution,[],[f1344,f1318])).
fof(f1318,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f922])).
fof(f922,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f524])).
fof(f524,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f241])).
fof(f241,axiom,(
  ! [X38] : (s(bool,'T_0') = s(bool,X38) <=> p(s(bool,X38)))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.bool.EQ_CLAUSES|split|1')).
fof(f56020,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl2),
  inference(equality_resolution,[],[f41233])).
fof(f41233,plain,(
  ( ! [X60] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),X60) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X60))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f40999,f949])).
fof(f949,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f274])).
fof(f274,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X26,X27] : s(bool,'const.arithmetic.>=_2'(s('type.num.num',X26),s('type.num.num',X27))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X27),s('type.num.num',X26)))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.arithmetic.GREATER_EQ')).
fof(f40999,plain,(
  ( ! [X60] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),X60) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X60))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1172])).
fof(f1172,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK814(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK815(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK816(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK817(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK818(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK819(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK820(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK821(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK822(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK823(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK824(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK825(X1,X0)),s('type.list.list'(X0),sK813(X1,X0)))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f793])).
fof(f793,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK814(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK815(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK816(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK817(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK818(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK819(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK820(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK821(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK822(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK823(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK824(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK825(X1,X0)),s('type.list.list'(X0),sK813(X1,X0))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X2))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK813,sK814,sK815,sK816,sK817,sK818,sK819,sK820,sK821,sK822,sK823,sK824,sK825])],[f792])).
fof(f792,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),X15)))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X2))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(rectify,[],[f791])).
fof(f791,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X2)))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X2))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f429])).
fof(f429,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X2))))))))))))))))))))))))))),
  inference(flattening,[],[f428])).
fof(f428,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X2))))))))))))))))))))))))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) <=> ? [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),X8))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49|5|split|46')).
fof(f55649,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1165),
  inference(cnf_transformation,[],[f55649_D])).
fof(f55649_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl1165),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1165])])).
fof(f14644,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) | $spl310),
  inference(cnf_transformation,[],[f14644_D])).
fof(f14644_D,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) <=> ~$spl310),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl310])])).
fof(f55793,plain,(
  ( ! [X926,X930,X928,X932,X927,X931,X929] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X926),X927))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X926),X927) != s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X928),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X929),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X930),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X931),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X932),s('type.list.list'(X926),'const.list.NIL_0')))))))))))) ) | $spl421),
  inference(superposition,[],[f55624,f1231])).
fof(f1231,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.NIL_0')))))))))))) )),
  inference(cnf_transformation,[],[f880])).
fof(f880,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1089(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1090(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1091(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1092(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1093(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1089,sK1090,sK1091,sK1092,sK1093])],[f879])).
fof(f879,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ? [X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.NIL_0')))))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(rectify,[],[f878])).
fof(f878,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.NIL_0')))))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(nnf_transformation,[],[f487])).
fof(f487,plain,(
  ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))),
  inference(flattening,[],[f486])).
fof(f486,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))),
  inference(rectify,[],[f170])).
fof(f170,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ? [X9,X10,X11,X12,X13] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.NIL_0'))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_5|split|0')).
fof(f55624,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl421),
  inference(trivial_inequality_removal,[],[f55598])).
fof(f55598,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num',X1) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1)) ) | $spl421),
  inference(superposition,[],[f19079,f1332])).
fof(f1332,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f926])).
fof(f926,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f533])).
fof(f533,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X26] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X26))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.numeral.numeral_distrib|split|17')).
fof(f19079,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl421),
  inference(superposition,[],[f19058,f933])).
fof(f933,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f562])).
fof(f562,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f265])).
fof(f265,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X26,X27] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))) <=> s('type.num.num',X26) = s('type.num.num',X27))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.numeral.numeral_distrib|split|19')).
fof(f19058,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl421),
  inference(trivial_inequality_removal,[],[f19054])).
fof(f19054,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl421),
  inference(superposition,[],[f19022,f1331])).
fof(f1331,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f926])).
fof(f55792,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) | $spl421),
  inference(superposition,[],[f55624,f1233])).
fof(f1233,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.NIL_0')))))))))))) )),
  inference(cnf_transformation,[],[f883])).
fof(f883,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1094(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1095(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1096(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1097(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1098(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1094,sK1095,sK1096,sK1097,sK1098])],[f882])).
fof(f882,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ? [X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.NIL_0')))))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(rectify,[],[f881])).
fof(f881,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.NIL_0')))))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(nnf_transformation,[],[f489])).
fof(f489,plain,(
  ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))),
  inference(flattening,[],[f488])).
fof(f488,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))),
  inference(rectify,[],[f172])).
fof(f172,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ? [X9,X10,X11,X12,X13] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.NIL_0'))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_5|split|1')).
fof(f55647,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1163),
  inference(cnf_transformation,[],[f55647_D])).
fof(f55647_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl1163),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1163])])).
fof(f14643,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl308),
  inference(cnf_transformation,[],[f14643_D])).
fof(f14643_D,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl308),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl308])])).
fof(f55791,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f55624,f1223])).
fof(f1223,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))) )),
  inference(cnf_transformation,[],[f868])).
fof(f868,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1055(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1056(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1057(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1058(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1059(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1060(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1061(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1062(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1063(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1055,sK1056,sK1057,sK1058,sK1059,sK1060,sK1061,sK1062,sK1063])],[f867])).
fof(f867,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X11,X12,X13,X14,X15,X16,X17,X18,X19] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(rectify,[],[f866])).
fof(f866,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(nnf_transformation,[],[f479])).
fof(f479,plain,(
  ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))),
  inference(flattening,[],[f478])).
fof(f478,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))),
  inference(rectify,[],[f179])).
fof(f179,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.NIL_0'))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49||48||split|14')).
fof(f55790,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f55624,f1225])).
fof(f1225,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))) )),
  inference(cnf_transformation,[],[f871])).
fof(f871,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1064(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1065(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1066(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1067(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1068(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1069(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1070(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1071(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1072(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1064,sK1065,sK1066,sK1067,sK1068,sK1069,sK1070,sK1071,sK1072])],[f870])).
fof(f870,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X11,X12,X13,X14,X15,X16,X17,X18,X19] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(rectify,[],[f869])).
fof(f869,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(nnf_transformation,[],[f481])).
fof(f481,plain,(
  ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))),
  inference(flattening,[],[f480])).
fof(f480,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))),
  inference(rectify,[],[f180])).
fof(f180,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.NIL_0'))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49||48||split|15')).
fof(f55645,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1161),
  inference(cnf_transformation,[],[f55645_D])).
fof(f55645_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl1161),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1161])])).
fof(f14640,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl304),
  inference(cnf_transformation,[],[f14640_D])).
fof(f14640_D,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl304),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl304])])).
fof(f55789,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f55624,f1211])).
fof(f1211,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f850])).
fof(f850,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK985(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK986(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK987(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK988(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK989(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK990(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK991(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK992(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK993(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK994(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK995(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK996(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK997(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK985,sK986,sK987,sK988,sK989,sK990,sK991,sK992,sK993,sK994,sK995,sK996,sK997])],[f849])).
fof(f849,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(rectify,[],[f848])).
fof(f848,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(nnf_transformation,[],[f467])).
fof(f467,plain,(
  ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))),
  inference(flattening,[],[f466])).
fof(f466,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))),
  inference(rectify,[],[f116])).
fof(f116,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X25] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),'const.list.NIL_0'))))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49|5|split|28')).
fof(f55788,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f55624,f1213])).
fof(f1213,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f853])).
fof(f853,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK998(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK999(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1000(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1001(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1002(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1003(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1004(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1005(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1006(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1007(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1008(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1009(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1010(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK998,sK999,sK1000,sK1001,sK1002,sK1003,sK1004,sK1005,sK1006,sK1007,sK1008,sK1009,sK1010])],[f852])).
fof(f852,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(rectify,[],[f851])).
fof(f851,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(nnf_transformation,[],[f469])).
fof(f469,plain,(
  ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))),
  inference(flattening,[],[f468])).
fof(f468,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))),
  inference(rectify,[],[f120])).
fof(f120,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X25] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),'const.list.NIL_0'))))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49|5|split|29')).
fof(f55643,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1159),
  inference(cnf_transformation,[],[f55643_D])).
fof(f55643_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl1159),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1159])])).
fof(f14637,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl300),
  inference(cnf_transformation,[],[f14637_D])).
fof(f14637_D,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl300),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl300])])).
fof(f55787,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f55624,f1203])).
fof(f1203,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f838])).
fof(f838,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK927(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK928(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK929(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK930(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK931(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK932(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK933(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK934(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK935(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK936(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK937(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK938(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK939(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK940(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK941(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK927,sK928,sK929,sK930,sK931,sK932,sK933,sK934,sK935,sK936,sK937,sK938,sK939,sK940,sK941])],[f837])).
fof(f837,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ? [X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,X31] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X29),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X30),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X31),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(rectify,[],[f836])).
fof(f836,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(nnf_transformation,[],[f459])).
fof(f459,plain,(
  ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))))))),
  inference(flattening,[],[f458])).
fof(f458,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))))))),
  inference(rectify,[],[f150])).
fof(f150,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X25,X40,X41] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X40),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X41),s('type.list.list'(X6),'const.list.NIL_0'))))))))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49|5|split|1')).
fof(f55786,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f55624,f1205])).
fof(f1205,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f841])).
fof(f841,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK942(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK943(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK944(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK945(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK946(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK947(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK948(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK949(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK950(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK951(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK952(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK953(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK954(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK955(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK956(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK942,sK943,sK944,sK945,sK946,sK947,sK948,sK949,sK950,sK951,sK952,sK953,sK954,sK955,sK956])],[f840])).
fof(f840,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ? [X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,X31] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X29),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X30),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X31),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(rectify,[],[f839])).
fof(f839,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(nnf_transformation,[],[f461])).
fof(f461,plain,(
  ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))))))),
  inference(flattening,[],[f460])).
fof(f460,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))))))),
  inference(rectify,[],[f145])).
fof(f145,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X25,X40,X41] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X40),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X41),s('type.list.list'(X6),'const.list.NIL_0'))))))))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49|5|split|0')).
fof(f55641,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1157),
  inference(cnf_transformation,[],[f55641_D])).
fof(f55641_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl1157),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1157])])).
fof(f14634,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl296),
  inference(cnf_transformation,[],[f14634_D])).
fof(f14634_D,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl296),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl296])])).
fof(f55785,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f55624,f1227])).
fof(f1227,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))) )),
  inference(cnf_transformation,[],[f874])).
fof(f874,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1073(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1074(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1075(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1076(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1077(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1078(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1079(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1080(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1073,sK1074,sK1075,sK1076,sK1077,sK1078,sK1079,sK1080])],[f873])).
fof(f873,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X10,X11,X12,X13,X14,X15,X16,X17] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(rectify,[],[f872])).
fof(f872,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(nnf_transformation,[],[f483])).
fof(f483,plain,(
  ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))),
  inference(flattening,[],[f482])).
fof(f482,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))),
  inference(rectify,[],[f207])).
fof(f207,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.NIL_0'))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49||48||split|28')).
fof(f55784,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f55624,f1229])).
fof(f1229,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))) )),
  inference(cnf_transformation,[],[f877])).
fof(f877,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1081(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1082(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1083(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1084(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1085(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1086(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1087(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1088(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1081,sK1082,sK1083,sK1084,sK1085,sK1086,sK1087,sK1088])],[f876])).
fof(f876,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X10,X11,X12,X13,X14,X15,X16,X17] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(rectify,[],[f875])).
fof(f875,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(nnf_transformation,[],[f485])).
fof(f485,plain,(
  ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))),
  inference(flattening,[],[f484])).
fof(f484,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))),
  inference(rectify,[],[f203])).
fof(f203,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.NIL_0'))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49||48||split|29')).
fof(f55639,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1155),
  inference(cnf_transformation,[],[f55639_D])).
fof(f55639_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl1155),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1155])])).
fof(f14631,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl292),
  inference(cnf_transformation,[],[f14631_D])).
fof(f14631_D,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) <=> ~$spl292),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl292])])).
fof(f55783,plain,(
  ( ! [X810,X808,X812,X802,X800,X806,X804,X799,X811,X809,X803,X801,X807,X805] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X799),X800))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X799),X800) != s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X801),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X802),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X803),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X804),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X805),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X806),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X807),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X808),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X809),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X810),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X811),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X812),s('type.list.list'(X799),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f55624,f1215])).
fof(f1215,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f856])).
fof(f856,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1011(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1012(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1013(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1014(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1015(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1016(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1017(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1018(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1019(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1020(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1021(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1022(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1011,sK1012,sK1013,sK1014,sK1015,sK1016,sK1017,sK1018,sK1019,sK1020,sK1021,sK1022])],[f855])).
fof(f855,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(rectify,[],[f854])).
fof(f854,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(nnf_transformation,[],[f471])).
fof(f471,plain,(
  ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))),
  inference(flattening,[],[f470])).
fof(f470,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.NIL_0'))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49|5|split|43')).
fof(f55782,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f55624,f1217])).
fof(f1217,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f859])).
fof(f859,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1023(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1024(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1025(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1026(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1027(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1028(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1029(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1030(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1031(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1032(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1033(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1034(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1023,sK1024,sK1025,sK1026,sK1027,sK1028,sK1029,sK1030,sK1031,sK1032,sK1033,sK1034])],[f858])).
fof(f858,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(rectify,[],[f857])).
fof(f857,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(nnf_transformation,[],[f473])).
fof(f473,plain,(
  ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))),
  inference(flattening,[],[f472])).
fof(f472,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.NIL_0'))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49|5|split|42')).
fof(f55637,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1153),
  inference(cnf_transformation,[],[f55637_D])).
fof(f55637_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl1153),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1153])])).
fof(f14630,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl290),
  inference(cnf_transformation,[],[f14630_D])).
fof(f14630_D,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl290),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl290])])).
fof(f55781,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f55624,f1219])).
fof(f1219,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f862])).
fof(f862,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1035(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1036(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1037(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1038(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1039(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1040(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1041(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1042(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1043(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1044(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1035,sK1036,sK1037,sK1038,sK1039,sK1040,sK1041,sK1042,sK1043,sK1044])],[f861])).
fof(f861,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(rectify,[],[f860])).
fof(f860,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(nnf_transformation,[],[f475])).
fof(f475,plain,(
  ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))),
  inference(flattening,[],[f474])).
fof(f474,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))),
  inference(rectify,[],[f166])).
fof(f166,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.NIL_0'))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49||48||split|0')).
fof(f55780,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f55624,f1221])).
fof(f1221,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f865])).
fof(f865,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1045(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1046(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1047(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1048(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1049(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1050(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1051(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1052(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1053(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1054(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1045,sK1046,sK1047,sK1048,sK1049,sK1050,sK1051,sK1052,sK1053,sK1054])],[f864])).
fof(f864,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(rectify,[],[f863])).
fof(f863,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(nnf_transformation,[],[f477])).
fof(f477,plain,(
  ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))),
  inference(flattening,[],[f476])).
fof(f476,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))),
  inference(rectify,[],[f164])).
fof(f164,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.NIL_0'))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49||48||split|1')).
fof(f55635,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1151),
  inference(cnf_transformation,[],[f55635_D])).
fof(f55635_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl1151),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1151])])).
fof(f14627,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl286),
  inference(cnf_transformation,[],[f14627_D])).
fof(f14627_D,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl286),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl286])])).
fof(f55779,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f55624,f1207])).
fof(f1207,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f844])).
fof(f844,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK957(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK958(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK959(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK960(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK961(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK962(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK963(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK964(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK965(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK966(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK967(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK968(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK969(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK970(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK957,sK958,sK959,sK960,sK961,sK962,sK963,sK964,sK965,sK966,sK967,sK968,sK969,sK970])],[f843])).
fof(f843,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X29),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(rectify,[],[f842])).
fof(f842,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(nnf_transformation,[],[f463])).
fof(f463,plain,(
  ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))))),
  inference(flattening,[],[f462])).
fof(f462,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))))),
  inference(rectify,[],[f136])).
fof(f136,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X25,X40] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X40),s('type.list.list'(X6),'const.list.NIL_0'))))))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49|5|split|14')).
fof(f55778,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f55624,f1209])).
fof(f1209,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f847])).
fof(f847,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK971(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK972(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK973(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK974(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK975(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK976(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK977(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK978(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK979(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK980(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK981(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK982(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK983(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK984(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK971,sK972,sK973,sK974,sK975,sK976,sK977,sK978,sK979,sK980,sK981,sK982,sK983,sK984])],[f846])).
fof(f846,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X29),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(rectify,[],[f845])).
fof(f845,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(nnf_transformation,[],[f465])).
fof(f465,plain,(
  ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))))),
  inference(flattening,[],[f464])).
fof(f464,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))))),
  inference(rectify,[],[f138])).
fof(f138,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X25,X40] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X40),s('type.list.list'(X6),'const.list.NIL_0'))))))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49|5|split|15')).
fof(f55628,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl1138),
  inference(cnf_transformation,[],[f55628_D])).
fof(f55628_D,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl1138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1138])])).
fof(f14601,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl255),
  inference(cnf_transformation,[],[f14601_D])).
fof(f14601_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl255),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl255])])).
fof(f55724,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f55624,f1205])).
fof(f55723,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f55624,f1203])).
fof(f55665,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl1181),
  inference(cnf_transformation,[],[f55665_D])).
fof(f55665_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl1181),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1181])])).
fof(f14946,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) | $spl338),
  inference(cnf_transformation,[],[f14946_D])).
fof(f14946_D,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) <=> ~$spl338),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl338])])).
fof(f55617,plain,(
  ( ! [X212,X210,X208,X213,X211,X209,X214] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X208),X209))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(X208),X209) != s('type.list.list'(X208),'const.list.CONS_2'(s(X208,X210),s('type.list.list'(X208),'const.list.CONS_2'(s(X208,X211),s('type.list.list'(X208),'const.list.CONS_2'(s(X208,X212),s('type.list.list'(X208),'const.list.CONS_2'(s(X208,X213),s('type.list.list'(X208),'const.list.CONS_2'(s(X208,X214),s('type.list.list'(X208),'const.list.NIL_0')))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1231])).
fof(f55616,plain,(
  ( ! [X206,X204,X202,X207,X205,X203,X201] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X201),X202))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(X201),X202) != s('type.list.list'(X201),'const.list.CONS_2'(s(X201,X203),s('type.list.list'(X201),'const.list.CONS_2'(s(X201,X204),s('type.list.list'(X201),'const.list.CONS_2'(s(X201,X205),s('type.list.list'(X201),'const.list.CONS_2'(s(X201,X206),s('type.list.list'(X201),'const.list.CONS_2'(s(X201,X207),s('type.list.list'(X201),'const.list.NIL_0')))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1233])).
fof(f55663,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1179),
  inference(cnf_transformation,[],[f55663_D])).
fof(f55663_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl1179),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1179])])).
fof(f14940,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl330),
  inference(cnf_transformation,[],[f14940_D])).
fof(f14940_D,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl330),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl330])])).
fof(f55615,plain,(
  ( ! [X191,X198,X196,X194,X192,X200,X190,X199,X197,X195,X193] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X190),X191))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X190),X191) != s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X192),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X193),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X194),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X195),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X196),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X197),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X198),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X199),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X200),s('type.list.list'(X190),'const.list.NIL_0')))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1223])).
fof(f55614,plain,(
  ( ! [X189,X187,X185,X182,X180,X188,X186,X184,X183,X181,X179] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X179),X180))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X179),X180) != s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X181),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X182),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X183),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X184),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X185),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X186),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X187),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X188),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X189),s('type.list.list'(X179),'const.list.NIL_0')))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1225])).
fof(f55661,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1177),
  inference(cnf_transformation,[],[f55661_D])).
fof(f55661_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl1177),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1177])])).
fof(f14933,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl320),
  inference(cnf_transformation,[],[f14933_D])).
fof(f14933_D,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl320),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl320])])).
fof(f55613,plain,(
  ( ! [X177,X167,X165,X175,X173,X171,X169,X178,X176,X166,X164,X174,X172,X170,X168] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X164),X165))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X164),X165) != s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X166),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X167),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X168),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X169),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X170),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X171),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X172),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X173),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X174),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X175),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X176),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X177),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X178),s('type.list.list'(X164),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1211])).
fof(f55612,plain,(
  ( ! [X158,X156,X154,X152,X163,X161,X151,X149,X159,X157,X155,X153,X162,X160,X150] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X149),X150))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X149),X150) != s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X151),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X152),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X153),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X154),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X155),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X156),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X157),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X158),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X159),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X160),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X161),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X162),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X163),s('type.list.list'(X149),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1213])).
fof(f55659,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1175),
  inference(cnf_transformation,[],[f55659_D])).
fof(f55659_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl1175),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1175])])).
fof(f14927,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl312),
  inference(cnf_transformation,[],[f14927_D])).
fof(f14927_D,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl312),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl312])])).
fof(f55611,plain,(
  ( ! [X146,X144,X134,X132,X142,X140,X138,X136,X147,X145,X135,X133,X143,X141,X139,X137,X148] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),X133))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X132),X133) != s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X134),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X135),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X136),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X137),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X138),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X139),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X140),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X141),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X142),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X143),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X144),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X145),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X146),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X147),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X148),s('type.list.list'(X132),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1203])).
fof(f55610,plain,(
  ( ! [X127,X125,X123,X121,X130,X128,X118,X116,X126,X124,X122,X120,X131,X129,X119,X117,X115] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X115),X116) != s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X117),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X118),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X119),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X120),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X121),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X122),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X123),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X124),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X125),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X126),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X127),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X128),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X129),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X130),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X131),s('type.list.list'(X115),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1205])).
fof(f55657,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1173),
  inference(cnf_transformation,[],[f55657_D])).
fof(f55657_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl1173),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1173])])).
fof(f14943,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl334),
  inference(cnf_transformation,[],[f14943_D])).
fof(f14943_D,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl334),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl334])])).
fof(f55609,plain,(
  ( ! [X111,X109,X107,X105,X114,X112,X110,X108,X106,X113] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),X106))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X105),X106) != s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X107),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X108),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X109),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X110),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X111),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X112),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X113),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X114),s('type.list.list'(X105),'const.list.NIL_0')))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1227])).
fof(f55608,plain,(
  ( ! [X103,X101,X99,X97,X95,X102,X100,X98,X96,X104] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),X96))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X95),X96) != s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X97),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X98),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X99),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X100),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X101),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X102),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X103),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X104),s('type.list.list'(X95),'const.list.NIL_0')))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1229])).
fof(f55655,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1171),
  inference(cnf_transformation,[],[f55655_D])).
fof(f55655_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl1171),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1171])])).
fof(f14936,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl324),
  inference(cnf_transformation,[],[f14936_D])).
fof(f14936_D,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) <=> ~$spl324),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl324])])).
fof(f55607,plain,(
  ( ! [X94,X92,X90,X88,X87,X85,X83,X81,X93,X91,X89,X86,X84,X82] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X81),X82) != s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X83),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X84),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X85),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X86),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X87),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X88),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X89),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X90),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X91),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X92),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X93),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X94),s('type.list.list'(X81),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1215])).
fof(f55606,plain,(
  ( ! [X80,X70,X68,X78,X76,X74,X72,X71,X69,X67,X79,X77,X75,X73] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X67),X68))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X67),X68) != s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X69),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X70),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X71),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X72),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X73),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X74),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X75),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X76),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X77),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X78),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X79),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X80),s('type.list.list'(X67),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1217])).
fof(f55653,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1169),
  inference(cnf_transformation,[],[f55653_D])).
fof(f55653_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl1169),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1169])])).
fof(f14937,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl326),
  inference(cnf_transformation,[],[f14937_D])).
fof(f14937_D,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl326),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl326])])).
fof(f55605,plain,(
  ( ! [X61,X59,X57,X66,X64,X62,X60,X58,X56,X65,X55,X63] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X55),X56) != s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X57),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X58),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X59),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X60),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X61),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X62),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X63),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X64),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X65),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X66),s('type.list.list'(X55),'const.list.NIL_0')))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1219])).
fof(f55604,plain,(
  ( ! [X47,X45,X43,X54,X52,X50,X48,X46,X44,X53,X51,X49] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X43),X44) != s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X45),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X46),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X47),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X48),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X49),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X50),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X51),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X52),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X53),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X54),s('type.list.list'(X43),'const.list.NIL_0')))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1221])).
fof(f55651,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1167),
  inference(cnf_transformation,[],[f55651_D])).
fof(f55651_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl1167),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1167])])).
fof(f14930,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl316),
  inference(cnf_transformation,[],[f14930_D])).
fof(f14930_D,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl316),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl316])])).
fof(f55603,plain,(
  ( ! [X30,X28,X39,X37,X35,X33,X41,X31,X29,X27,X38,X36,X34,X32,X42,X40] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X27),X28) != s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X29),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X30),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X31),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X32),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X33),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X34),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X35),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X36),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X37),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X38),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X39),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X40),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X41),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X42),s('type.list.list'(X27),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1207])).
fof(f55602,plain,(
  ( ! [X26,X24,X14,X12,X23,X21,X19,X17,X25,X15,X13,X11,X22,X20,X18,X16] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X11),X12) != s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X13),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X14),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X15),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X16),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X17),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X18),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X19),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X20),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X21),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X22),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X23),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X24),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X25),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X26),s('type.list.list'(X11),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1209])).
fof(f36441,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) | $spl586),
  inference(cnf_transformation,[],[f36441_D])).
fof(f36441_D,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) <=> ~$spl586),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl586])])).
fof(f55565,plain,(
  ( ! [X926,X930,X928,X932,X927,X931,X929] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X926),X927))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X926),X927) != s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X928),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X929),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X930),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X931),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X932),s('type.list.list'(X926),'const.list.NIL_0')))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1231])).
fof(f55564,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1233])).
fof(f14966,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl364),
  inference(cnf_transformation,[],[f14966_D])).
fof(f14966_D,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl364),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl364])])).
fof(f55563,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1223])).
fof(f55562,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1225])).
fof(f14963,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl360),
  inference(cnf_transformation,[],[f14963_D])).
fof(f14963_D,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl360),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl360])])).
fof(f55561,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1211])).
fof(f55560,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1213])).
fof(f14960,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl356),
  inference(cnf_transformation,[],[f14960_D])).
fof(f14960_D,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl356),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl356])])).
fof(f55559,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1203])).
fof(f55558,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1205])).
fof(f14957,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl352),
  inference(cnf_transformation,[],[f14957_D])).
fof(f14957_D,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl352),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl352])])).
fof(f55557,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1227])).
fof(f55556,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1229])).
fof(f36430,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl574),
  inference(cnf_transformation,[],[f36430_D])).
fof(f36430_D,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) <=> ~$spl574),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl574])])).
fof(f55555,plain,(
  ( ! [X810,X808,X812,X802,X800,X806,X804,X799,X811,X809,X803,X801,X807,X805] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X799),X800))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X799),X800) != s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X801),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X802),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X803),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X804),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X805),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X806),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X807),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X808),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X809),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X810),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X811),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X812),s('type.list.list'(X799),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1215])).
fof(f55554,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1217])).
fof(f14954,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl348),
  inference(cnf_transformation,[],[f14954_D])).
fof(f14954_D,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl348),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl348])])).
fof(f55553,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1219])).
fof(f55552,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1221])).
fof(f14951,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl344),
  inference(cnf_transformation,[],[f14951_D])).
fof(f14951_D,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl344),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl344])])).
fof(f55551,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1207])).
fof(f55550,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1209])).
fof(f55633,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl1148),
  inference(cnf_transformation,[],[f55633_D])).
fof(f55633_D,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl1148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1148])])).
fof(f14945,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl337),
  inference(cnf_transformation,[],[f14945_D])).
fof(f14945_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl337),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl337])])).
fof(f55508,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1229])).
fof(f55507,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1227])).
fof(f55632,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl1146),
  inference(cnf_transformation,[],[f55632_D])).
fof(f55632_D,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl1146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1146])])).
fof(f14942,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl333),
  inference(cnf_transformation,[],[f14942_D])).
fof(f14942_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl333),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl333])])).
fof(f55506,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1225])).
fof(f55505,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1223])).
fof(f55631,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl1144),
  inference(cnf_transformation,[],[f55631_D])).
fof(f55631_D,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl1144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1144])])).
fof(f14939,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl329),
  inference(cnf_transformation,[],[f14939_D])).
fof(f14939_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl329),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl329])])).
fof(f55504,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1221])).
fof(f55503,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1219])).
fof(f55630,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl1142),
  inference(cnf_transformation,[],[f55630_D])).
fof(f55630_D,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl1142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1142])])).
fof(f14935,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl323),
  inference(cnf_transformation,[],[f14935_D])).
fof(f14935_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl323),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl323])])).
fof(f55500,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1213])).
fof(f55499,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1211])).
fof(f55629,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl1140),
  inference(cnf_transformation,[],[f55629_D])).
fof(f55629_D,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl1140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1140])])).
fof(f14932,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl319),
  inference(cnf_transformation,[],[f14932_D])).
fof(f14932_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl319),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl319])])).
fof(f55498,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1209])).
fof(f55497,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1207])).
fof(f14929,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl315),
  inference(cnf_transformation,[],[f14929_D])).
fof(f14929_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ~$spl315),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl315])])).
fof(f55496,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1205])).
fof(f55495,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19079,f1203])).
fof(f14959,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl355),
  inference(cnf_transformation,[],[f14959_D])).
fof(f14959_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl355),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl355])])).
fof(f48909,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl908),
  inference(cnf_transformation,[],[f48909_D])).
fof(f48909_D,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl908),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl908])])).
fof(f55384,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19070,f1203])).
fof(f19070,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) ) | $spl421),
  inference(superposition,[],[f19058,f933])).
fof(f55383,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19070,f1205])).
fof(f48925,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl925),
  inference(cnf_transformation,[],[f48925_D])).
fof(f48925_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl925),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl925])])).
fof(f55335,plain,(
  ( ! [X621,X623,X617,X619,X620,X622,X618] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X617),X618))) | s('type.list.list'(X617),X618) != s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X619),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X620),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X621),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X622),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X623),s('type.list.list'(X617),'const.list.NIL_0')))))))))))) ) | $spl421),
  inference(superposition,[],[f19070,f1233])).
fof(f55334,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) | $spl421),
  inference(superposition,[],[f19070,f1231])).
fof(f48917,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl917),
  inference(cnf_transformation,[],[f48917_D])).
fof(f48917_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ~$spl917),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl917])])).
fof(f55333,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19070,f1229])).
fof(f55332,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19070,f1227])).
fof(f48923,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl923),
  inference(cnf_transformation,[],[f48923_D])).
fof(f48923_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ~$spl923),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl923])])).
fof(f55331,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19070,f1225])).
fof(f55330,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19070,f1223])).
fof(f48913,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl913),
  inference(cnf_transformation,[],[f48913_D])).
fof(f48913_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ~$spl913),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl913])])).
fof(f55329,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19070,f1221])).
fof(f55328,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19070,f1219])).
fof(f48915,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl915),
  inference(cnf_transformation,[],[f48915_D])).
fof(f48915_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ~$spl915),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl915])])).
fof(f55327,plain,(
  ( ! [X540,X542,X536,X538,X532,X534,X530,X541,X543,X537,X539,X533,X535,X531] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X530),X531))) | s('type.list.list'(X530),X531) != s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X532),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X533),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X534),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X535),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X536),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X537),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X538),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X539),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X540),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X541),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X542),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X543),s('type.list.list'(X530),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19070,f1217])).
fof(f55326,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19070,f1215])).
fof(f48921,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl921),
  inference(cnf_transformation,[],[f48921_D])).
fof(f48921_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ~$spl921),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl921])])).
fof(f55325,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19070,f1213])).
fof(f55324,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19070,f1211])).
fof(f48911,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl911),
  inference(cnf_transformation,[],[f48911_D])).
fof(f48911_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ~$spl911),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl911])])).
fof(f55323,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19070,f1209])).
fof(f55322,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19070,f1207])).
fof(f48919,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | $spl919),
  inference(cnf_transformation,[],[f48919_D])).
fof(f48919_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) <=> ~$spl919),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl919])])).
fof(f55321,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19070,f1205])).
fof(f55320,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19070,f1203])).
fof(f14642,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl307),
  inference(cnf_transformation,[],[f14642_D])).
fof(f14642_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl307),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl307])])).
fof(f51120,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl998),
  inference(cnf_transformation,[],[f51120_D])).
fof(f51120_D,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl998),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl998])])).
fof(f55099,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1223])).
fof(f51123,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) ) | $spl389),
  inference(superposition,[],[f15378,f1311])).
fof(f1311,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f919])).
fof(f919,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f519])).
fof(f519,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X26] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X26)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X26))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.numeral.numeral_distrib|split|30')).
fof(f55098,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1225])).
fof(f14639,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl303),
  inference(cnf_transformation,[],[f14639_D])).
fof(f14639_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl303),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl303])])).
fof(f51119,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl996),
  inference(cnf_transformation,[],[f51119_D])).
fof(f51119_D,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl996),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl996])])).
fof(f55097,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1211])).
fof(f55096,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1213])).
fof(f14636,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl299),
  inference(cnf_transformation,[],[f14636_D])).
fof(f14636_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ~$spl299),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl299])])).
fof(f51118,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl994),
  inference(cnf_transformation,[],[f51118_D])).
fof(f51118_D,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl994),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl994])])).
fof(f55095,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1203])).
fof(f55094,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1205])).
fof(f14633,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl295),
  inference(cnf_transformation,[],[f14633_D])).
fof(f14633_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl295),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl295])])).
fof(f51117,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl992),
  inference(cnf_transformation,[],[f51117_D])).
fof(f51117_D,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl992),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl992])])).
fof(f55093,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1227])).
fof(f55092,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1229])).
fof(f14629,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl289),
  inference(cnf_transformation,[],[f14629_D])).
fof(f14629_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl289),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl289])])).
fof(f51116,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl990),
  inference(cnf_transformation,[],[f51116_D])).
fof(f51116_D,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl990),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl990])])).
fof(f55089,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1219])).
fof(f55088,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1221])).
fof(f14626,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl285),
  inference(cnf_transformation,[],[f14626_D])).
fof(f14626_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl285),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl285])])).
fof(f51115,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl988),
  inference(cnf_transformation,[],[f51115_D])).
fof(f51115_D,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl988),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl988])])).
fof(f55087,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1207])).
fof(f55086,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1209])).
fof(f14620,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611)))))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) | $spl280),
  inference(cnf_transformation,[],[f14620_D])).
fof(f14620_D,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611)))))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) <=> ~$spl280),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl280])])).
fof(f51112,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl985),
  inference(cnf_transformation,[],[f51112_D])).
fof(f51112_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl985),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl985])])).
fof(f55046,plain,(
  ( ! [X621,X623,X617,X619,X620,X622,X618] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X617),X618)))))) | s('type.list.list'(X617),X618) != s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X619),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X620),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X621),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X622),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X623),s('type.list.list'(X617),'const.list.NIL_0')))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1233])).
fof(f55045,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611)))))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1231])).
fof(f14617,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591)))))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl276),
  inference(cnf_transformation,[],[f14617_D])).
fof(f14617_D,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591)))))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl276),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl276])])).
fof(f51110,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl983),
  inference(cnf_transformation,[],[f51110_D])).
fof(f51110_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl983),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl983])])).
fof(f55044,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601)))))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1229])).
fof(f55043,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591)))))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1227])).
fof(f14614,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569)))))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl272),
  inference(cnf_transformation,[],[f14614_D])).
fof(f14614_D,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569)))))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl272),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl272])])).
fof(f51108,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl981),
  inference(cnf_transformation,[],[f51108_D])).
fof(f51108_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl981),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl981])])).
fof(f55042,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580)))))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1225])).
fof(f55041,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569)))))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1223])).
fof(f14611,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545)))))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl268),
  inference(cnf_transformation,[],[f14611_D])).
fof(f14611_D,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545)))))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl268),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl268])])).
fof(f51106,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl979),
  inference(cnf_transformation,[],[f51106_D])).
fof(f51106_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl979),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl979])])).
fof(f55040,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557)))))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1221])).
fof(f55039,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545)))))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1219])).
fof(f14608,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517)))))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl264),
  inference(cnf_transformation,[],[f14608_D])).
fof(f14608_D,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517)))))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) <=> ~$spl264),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl264])])).
fof(f51104,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl977),
  inference(cnf_transformation,[],[f51104_D])).
fof(f51104_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl977),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl977])])).
fof(f55038,plain,(
  ( ! [X540,X542,X536,X538,X532,X534,X530,X541,X543,X537,X539,X533,X535,X531] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X530),X531)))))) | s('type.list.list'(X530),X531) != s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X532),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X533),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X534),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X535),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X536),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X537),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X538),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X539),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X540),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X541),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X542),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X543),s('type.list.list'(X530),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1217])).
fof(f55037,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517)))))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1215])).
fof(f14605,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487)))))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl260),
  inference(cnf_transformation,[],[f14605_D])).
fof(f14605_D,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487)))))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl260),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl260])])).
fof(f51102,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl975),
  inference(cnf_transformation,[],[f51102_D])).
fof(f51102_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl975),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl975])])).
fof(f55036,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502)))))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1213])).
fof(f55035,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487)))))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1211])).
fof(f14602,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455)))))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl256),
  inference(cnf_transformation,[],[f14602_D])).
fof(f14602_D,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455)))))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl256),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl256])])).
fof(f51100,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl973),
  inference(cnf_transformation,[],[f51100_D])).
fof(f51100_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl973),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl973])])).
fof(f55034,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471)))))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1209])).
fof(f55033,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455)))))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1207])).
fof(f14599,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421)))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl252),
  inference(cnf_transformation,[],[f14599_D])).
fof(f14599_D,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421)))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl252),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl252])])).
fof(f51098,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl971),
  inference(cnf_transformation,[],[f51098_D])).
fof(f51098_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ~$spl971),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl971])])).
fof(f55032,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438)))))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1205])).
fof(f55031,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421)))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl389),
  inference(superposition,[],[f51123,f1203])).
fof(f45745,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl845),
  inference(cnf_transformation,[],[f45745_D])).
fof(f45745_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl845),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl845])])).
fof(f54980,plain,(
  ( ! [X146,X144,X134,X132,X142,X140,X138,X136,X147,X145,X135,X133,X143,X141,X139,X137,X148] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),X133))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X132),X133) != s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X134),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X135),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X136),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X137),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X138),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X139),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X140),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X141),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X142),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X143),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X144),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X145),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X146),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X147),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X148),s('type.list.list'(X132),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1203])).
fof(f19043,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) ) | $spl421),
  inference(superposition,[],[f19022,f1311])).
fof(f54979,plain,(
  ( ! [X127,X125,X123,X121,X130,X128,X118,X116,X126,X124,X122,X120,X131,X129,X119,X117,X115] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X115),X116) != s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X117),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X118),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X119),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X120),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X121),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X122),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X123),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X124),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X125),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X126),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X127),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X128),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X129),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X130),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X131),s('type.list.list'(X115),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1205])).
fof(f19030,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl436),
  inference(cnf_transformation,[],[f19030_D])).
fof(f19030_D,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl436),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl436])])).
fof(f54932,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1223])).
fof(f54931,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1225])).
fof(f19029,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl434),
  inference(cnf_transformation,[],[f19029_D])).
fof(f19029_D,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl434),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl434])])).
fof(f54930,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1211])).
fof(f54929,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1213])).
fof(f19028,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl432),
  inference(cnf_transformation,[],[f19028_D])).
fof(f19028_D,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl432),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl432])])).
fof(f54928,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1203])).
fof(f54927,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1205])).
fof(f19027,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl430),
  inference(cnf_transformation,[],[f19027_D])).
fof(f19027_D,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl430),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl430])])).
fof(f54926,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1227])).
fof(f54925,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1229])).
fof(f19025,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl426),
  inference(cnf_transformation,[],[f19025_D])).
fof(f19025_D,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl426),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl426])])).
fof(f54922,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1219])).
fof(f54921,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1221])).
fof(f19024,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl424),
  inference(cnf_transformation,[],[f19024_D])).
fof(f19024_D,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl424),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl424])])).
fof(f54920,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1207])).
fof(f54919,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1209])).
fof(f19017,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl415),
  inference(cnf_transformation,[],[f19017_D])).
fof(f19017_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl415),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl415])])).
fof(f54877,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601)))))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1229])).
fof(f54876,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591)))))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1227])).
fof(f19015,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl413),
  inference(cnf_transformation,[],[f19015_D])).
fof(f19015_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl413),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl413])])).
fof(f54875,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580)))))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1225])).
fof(f54874,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569)))))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1223])).
fof(f19013,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl411),
  inference(cnf_transformation,[],[f19013_D])).
fof(f19013_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl411),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl411])])).
fof(f54873,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557)))))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1221])).
fof(f54872,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545)))))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1219])).
fof(f19011,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl409),
  inference(cnf_transformation,[],[f19011_D])).
fof(f19011_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl409),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl409])])).
fof(f54871,plain,(
  ( ! [X540,X542,X536,X538,X532,X534,X530,X541,X543,X537,X539,X533,X535,X531] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X530),X531)))))) | s('type.list.list'(X530),X531) != s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X532),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X533),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X534),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X535),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X536),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X537),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X538),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X539),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X540),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X541),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X542),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X543),s('type.list.list'(X530),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1217])).
fof(f54870,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517)))))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1215])).
fof(f19009,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl407),
  inference(cnf_transformation,[],[f19009_D])).
fof(f19009_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl407),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl407])])).
fof(f54869,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502)))))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1213])).
fof(f54868,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487)))))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1211])).
fof(f19007,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl405),
  inference(cnf_transformation,[],[f19007_D])).
fof(f19007_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl405),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl405])])).
fof(f54867,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471)))))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1209])).
fof(f54866,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455)))))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1207])).
fof(f19005,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl403),
  inference(cnf_transformation,[],[f19005_D])).
fof(f19005_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ~$spl403),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl403])])).
fof(f54865,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438)))))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1205])).
fof(f54864,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421)))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19043,f1203])).
fof(f45914,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl874),
  inference(cnf_transformation,[],[f45914_D])).
fof(f45914_D,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl874),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl874])])).
fof(f54649,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1223])).
fof(f15229,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) ) | $spl381),
  inference(superposition,[],[f15153,f1311])).
fof(f54648,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1225])).
fof(f45913,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl872),
  inference(cnf_transformation,[],[f45913_D])).
fof(f45913_D,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl872),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl872])])).
fof(f54647,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1211])).
fof(f54646,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1213])).
fof(f45912,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl870),
  inference(cnf_transformation,[],[f45912_D])).
fof(f45912_D,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl870),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl870])])).
fof(f54645,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1203])).
fof(f54644,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1205])).
fof(f45911,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl868),
  inference(cnf_transformation,[],[f45911_D])).
fof(f45911_D,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl868),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl868])])).
fof(f54643,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1227])).
fof(f54642,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1229])).
fof(f45910,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl866),
  inference(cnf_transformation,[],[f45910_D])).
fof(f45910_D,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl866),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl866])])).
fof(f54639,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1219])).
fof(f54638,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1221])).
fof(f45909,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl864),
  inference(cnf_transformation,[],[f45909_D])).
fof(f45909_D,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl864),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl864])])).
fof(f54637,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1207])).
fof(f54636,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1209])).
fof(f45908,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl863),
  inference(cnf_transformation,[],[f45908_D])).
fof(f45908_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl863),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl863])])).
fof(f54596,plain,(
  ( ! [X621,X623,X617,X619,X620,X622,X618] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X617),X618)))))) | s('type.list.list'(X617),X618) != s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X619),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X620),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X621),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X622),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X623),s('type.list.list'(X617),'const.list.NIL_0')))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1233])).
fof(f54595,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611)))))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1231])).
fof(f45906,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl861),
  inference(cnf_transformation,[],[f45906_D])).
fof(f45906_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl861),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl861])])).
fof(f54594,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601)))))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1229])).
fof(f54593,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591)))))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1227])).
fof(f45904,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl859),
  inference(cnf_transformation,[],[f45904_D])).
fof(f45904_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl859),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl859])])).
fof(f54592,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580)))))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1225])).
fof(f54591,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569)))))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1223])).
fof(f45902,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl857),
  inference(cnf_transformation,[],[f45902_D])).
fof(f45902_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl857),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl857])])).
fof(f54590,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557)))))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1221])).
fof(f54589,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545)))))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1219])).
fof(f45900,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl855),
  inference(cnf_transformation,[],[f45900_D])).
fof(f45900_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl855),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl855])])).
fof(f54588,plain,(
  ( ! [X540,X542,X536,X538,X532,X534,X530,X541,X543,X537,X539,X533,X535,X531] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X530),X531)))))) | s('type.list.list'(X530),X531) != s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X532),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X533),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X534),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X535),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X536),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X537),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X538),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X539),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X540),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X541),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X542),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X543),s('type.list.list'(X530),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1217])).
fof(f54587,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517)))))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1215])).
fof(f45898,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl853),
  inference(cnf_transformation,[],[f45898_D])).
fof(f45898_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl853),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl853])])).
fof(f54586,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502)))))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1213])).
fof(f54585,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487)))))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1211])).
fof(f45896,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl851),
  inference(cnf_transformation,[],[f45896_D])).
fof(f45896_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl851),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl851])])).
fof(f54584,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471)))))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1209])).
fof(f54583,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455)))))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1207])).
fof(f45894,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl849),
  inference(cnf_transformation,[],[f45894_D])).
fof(f45894_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ~$spl849),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl849])])).
fof(f54582,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438)))))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1205])).
fof(f54581,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421)))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl381),
  inference(superposition,[],[f15229,f1203])).
fof(f54542,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898)))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl1136),
  inference(cnf_transformation,[],[f54542_D])).
fof(f54542_D,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898)))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl1136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1136])])).
fof(f54363,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl879),
  inference(superposition,[],[f47326,f1223])).
fof(f47326,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl879),
  inference(superposition,[],[f47275,f1333])).
fof(f1333,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f927])).
fof(f927,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f534])).
fof(f534,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X26] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X26))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.numeral.numeral_distrib|split|18')).
fof(f54362,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl879),
  inference(superposition,[],[f47326,f1225])).
fof(f54541,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868)))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl1134),
  inference(cnf_transformation,[],[f54541_D])).
fof(f54541_D,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868)))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl1134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1134])])).
fof(f54361,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl879),
  inference(superposition,[],[f47326,f1211])).
fof(f54360,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl879),
  inference(superposition,[],[f47326,f1213])).
fof(f54540,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834)))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl1132),
  inference(cnf_transformation,[],[f54540_D])).
fof(f54540_D,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834)))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl1132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1132])])).
fof(f54359,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl879),
  inference(superposition,[],[f47326,f1203])).
fof(f54358,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl879),
  inference(superposition,[],[f47326,f1205])).
fof(f54539,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814)))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl1130),
  inference(cnf_transformation,[],[f54539_D])).
fof(f54539_D,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814)))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl1130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1130])])).
fof(f54357,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl879),
  inference(superposition,[],[f47326,f1227])).
fof(f54356,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl879),
  inference(superposition,[],[f47326,f1229])).
fof(f54538,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762)))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl1128),
  inference(cnf_transformation,[],[f54538_D])).
fof(f54538_D,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762)))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl1128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1128])])).
fof(f54353,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl879),
  inference(superposition,[],[f47326,f1219])).
fof(f54352,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl879),
  inference(superposition,[],[f47326,f1221])).
fof(f54537,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730)))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl1126),
  inference(cnf_transformation,[],[f54537_D])).
fof(f54537_D,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730)))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl1126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1126])])).
fof(f54351,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl879),
  inference(superposition,[],[f47326,f1207])).
fof(f54350,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl879),
  inference(superposition,[],[f47326,f1209])).
fof(f54241,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1125),
  inference(cnf_transformation,[],[f54241_D])).
fof(f54241_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl1125),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1125])])).
fof(f54184,plain,(
  ( ! [X926,X930,X928,X932,X927,X931,X929] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X926),X927))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X926),X927) != s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X928),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X929),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X930),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X931),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X932),s('type.list.list'(X926),'const.list.NIL_0')))))))))))) ) | $spl231),
  inference(superposition,[],[f45346,f1231])).
fof(f45346,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl231),
  inference(superposition,[],[f45312,f933])).
fof(f45312,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl231),
  inference(equality_resolution,[],[f5260])).
fof(f5260,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) ) | $spl231),
  inference(superposition,[],[f5227,f932])).
fof(f932,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f562])).
fof(f54183,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) | $spl231),
  inference(superposition,[],[f45346,f1233])).
fof(f54239,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1123),
  inference(cnf_transformation,[],[f54239_D])).
fof(f54239_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl1123),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1123])])).
fof(f54182,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f45346,f1223])).
fof(f54181,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f45346,f1225])).
fof(f54237,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1121),
  inference(cnf_transformation,[],[f54237_D])).
fof(f54237_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl1121),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1121])])).
fof(f54180,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f45346,f1211])).
fof(f54179,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f45346,f1213])).
fof(f54235,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl1119),
  inference(cnf_transformation,[],[f54235_D])).
fof(f54235_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ~$spl1119),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1119])])).
fof(f54178,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f45346,f1203])).
fof(f54177,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f45346,f1205])).
fof(f54233,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1117),
  inference(cnf_transformation,[],[f54233_D])).
fof(f54233_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl1117),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1117])])).
fof(f54176,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f45346,f1227])).
fof(f54175,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f45346,f1229])).
fof(f54231,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1115),
  inference(cnf_transformation,[],[f54231_D])).
fof(f54231_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl1115),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1115])])).
fof(f54174,plain,(
  ( ! [X810,X808,X812,X802,X800,X806,X804,X799,X811,X809,X803,X801,X807,X805] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X799),X800))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X799),X800) != s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X801),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X802),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X803),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X804),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X805),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X806),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X807),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X808),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X809),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X810),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X811),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X812),s('type.list.list'(X799),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f45346,f1215])).
fof(f54173,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f45346,f1217])).
fof(f54229,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1113),
  inference(cnf_transformation,[],[f54229_D])).
fof(f54229_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl1113),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1113])])).
fof(f54172,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f45346,f1219])).
fof(f54171,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f45346,f1221])).
fof(f54227,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1111),
  inference(cnf_transformation,[],[f54227_D])).
fof(f54227_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl1111),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1111])])).
fof(f54170,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f45346,f1207])).
fof(f54169,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f45346,f1209])).
fof(f54224,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl1108),
  inference(cnf_transformation,[],[f54224_D])).
fof(f54224_D,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl1108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1108])])).
fof(f54117,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f45346,f1205])).
fof(f54116,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f45346,f1203])).
fof(f53900,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl1106),
  inference(cnf_transformation,[],[f53900_D])).
fof(f53900_D,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl1106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1106])])).
fof(f53837,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1223])).
fof(f43654,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl247),
  inference(superposition,[],[f43596,f1333])).
fof(f43596,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl247),
  inference(resolution,[],[f12536,f1312])).
fof(f1312,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f919])).
fof(f53836,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1225])).
fof(f53899,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl1104),
  inference(cnf_transformation,[],[f53899_D])).
fof(f53899_D,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl1104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1104])])).
fof(f53835,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1211])).
fof(f53834,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1213])).
fof(f53898,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl1102),
  inference(cnf_transformation,[],[f53898_D])).
fof(f53898_D,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl1102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1102])])).
fof(f53833,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1203])).
fof(f53832,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1205])).
fof(f53897,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl1100),
  inference(cnf_transformation,[],[f53897_D])).
fof(f53897_D,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl1100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1100])])).
fof(f53831,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1227])).
fof(f53830,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1229])).
fof(f53896,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl1098),
  inference(cnf_transformation,[],[f53896_D])).
fof(f53896_D,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl1098),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1098])])).
fof(f53827,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1219])).
fof(f53826,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1221])).
fof(f53895,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl1096),
  inference(cnf_transformation,[],[f53895_D])).
fof(f53895_D,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl1096),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1096])])).
fof(f53825,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1207])).
fof(f53824,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1209])).
fof(f53894,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1095),
  inference(cnf_transformation,[],[f53894_D])).
fof(f53894_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl1095),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1095])])).
fof(f53784,plain,(
  ( ! [X621,X623,X617,X619,X620,X622,X618] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X617),X618))))) | s('type.list.list'(X617),X618) != s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X619),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X620),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X621),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X622),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X623),s('type.list.list'(X617),'const.list.NIL_0')))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1233])).
fof(f53783,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611))))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1231])).
fof(f53892,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1093),
  inference(cnf_transformation,[],[f53892_D])).
fof(f53892_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl1093),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1093])])).
fof(f53782,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601))))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1229])).
fof(f53781,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1227])).
fof(f53890,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1091),
  inference(cnf_transformation,[],[f53890_D])).
fof(f53890_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl1091),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1091])])).
fof(f53780,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580))))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1225])).
fof(f53779,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1223])).
fof(f53888,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1089),
  inference(cnf_transformation,[],[f53888_D])).
fof(f53888_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl1089),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1089])])).
fof(f53778,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557))))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1221])).
fof(f53777,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1219])).
fof(f53886,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1087),
  inference(cnf_transformation,[],[f53886_D])).
fof(f53886_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl1087),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1087])])).
fof(f53776,plain,(
  ( ! [X540,X542,X536,X538,X532,X534,X530,X541,X543,X537,X539,X533,X535,X531] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X530),X531))))) | s('type.list.list'(X530),X531) != s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X532),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X533),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X534),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X535),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X536),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X537),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X538),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X539),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X540),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X541),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X542),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X543),s('type.list.list'(X530),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1217])).
fof(f53775,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517))))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1215])).
fof(f53884,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1085),
  inference(cnf_transformation,[],[f53884_D])).
fof(f53884_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl1085),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1085])])).
fof(f53774,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502))))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1213])).
fof(f53773,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1211])).
fof(f53882,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1083),
  inference(cnf_transformation,[],[f53882_D])).
fof(f53882_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl1083),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1083])])).
fof(f53772,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471))))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1209])).
fof(f53771,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1207])).
fof(f53880,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl1081),
  inference(cnf_transformation,[],[f53880_D])).
fof(f53880_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ~$spl1081),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1081])])).
fof(f53770,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1205])).
fof(f53769,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl247),
  inference(superposition,[],[f43654,f1203])).
fof(f36451,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl597),
  inference(cnf_transformation,[],[f36451_D])).
fof(f36451_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl597),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl597])])).
fof(f53720,plain,(
  ( ! [X146,X144,X134,X132,X142,X140,X138,X136,X147,X145,X135,X133,X143,X141,X139,X137,X148] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),X133))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X132),X133) != s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X134),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X135),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X136),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X137),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X138),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X139),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X140),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X141),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X142),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X143),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X144),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X145),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X146),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X147),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X148),s('type.list.list'(X132),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1203])).
fof(f27589,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))) | s('type.num.num',X4) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27573,f933])).
fof(f27573,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl28 | $spl45)),
  inference(trivial_inequality_removal,[],[f27564])).
fof(f27564,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl28 | $spl45)),
  inference(superposition,[],[f27535,f1332])).
fof(f27535,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl28 | $spl45)),
  inference(subsumption_resolution,[],[f27534,f1323])).
fof(f1323,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f529])).
fof(f529,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47',aHL_FALSITY)).
fof(f27534,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl28 | $spl45)),
  inference(forward_demodulation,[],[f27496,f11218])).
fof(f11218,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl45),
  inference(resolution,[],[f1478,f1281])).
fof(f1281,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f900])).
fof(f900,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,X0)) & (s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0)) | p(s(bool,'F_0'))))),
  inference(flattening,[],[f899])).
fof(f899,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,X0)) & (s(bool,'F_0') != s(bool,X0) | (~p(s(bool,X0)) | p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f553])).
fof(f553,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,'F_0'))) <=> s(bool,'F_0') = s(bool,X0))),
  inference(ennf_transformation,[],[f509])).
fof(f509,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> s(bool,'F_0') = s(bool,X0))),
  inference(rectify,[],[f218])).
fof(f218,axiom,(
  ! [X38] : ((p(s(bool,X38)) => p(s(bool,'F_0'))) <=> s(bool,'F_0') = s(bool,X38))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.bool.IMP_F_EQ_F')).
fof(f27496,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl28),
  inference(superposition,[],[f1457,f1333])).
fof(f1457,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl28),
  inference(cnf_transformation,[],[f1457_D])).
fof(f1457_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f53719,plain,(
  ( ! [X127,X125,X123,X121,X130,X128,X118,X116,X126,X124,X122,X120,X131,X129,X119,X117,X115] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X115),X116) != s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X117),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X118),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X119),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X120),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X121),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X122),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X123),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X124),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X125),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X126),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X127),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X128),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X129),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X130),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X131),s('type.list.list'(X115),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1205])).
fof(f36438,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl583),
  inference(cnf_transformation,[],[f36438_D])).
fof(f36438_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl583),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl583])])).
fof(f53672,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1223])).
fof(f53671,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1225])).
fof(f36436,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl581),
  inference(cnf_transformation,[],[f36436_D])).
fof(f36436_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl581),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl581])])).
fof(f53670,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1211])).
fof(f53669,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1213])).
fof(f36434,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl579),
  inference(cnf_transformation,[],[f36434_D])).
fof(f36434_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl579),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl579])])).
fof(f53668,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1203])).
fof(f53667,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1205])).
fof(f36432,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl577),
  inference(cnf_transformation,[],[f36432_D])).
fof(f36432_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl577),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl577])])).
fof(f53666,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1227])).
fof(f53665,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1229])).
fof(f36429,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl573),
  inference(cnf_transformation,[],[f36429_D])).
fof(f36429_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl573),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl573])])).
fof(f19026,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl428),
  inference(cnf_transformation,[],[f19026_D])).
fof(f19026_D,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) <=> ~$spl428),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl428])])).
fof(f53664,plain,(
  ( ! [X810,X808,X812,X802,X800,X806,X804,X799,X811,X809,X803,X801,X807,X805] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X799),X800))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X799),X800) != s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X801),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X802),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X803),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X804),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X805),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X806),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X807),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X808),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X809),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X810),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X811),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X812),s('type.list.list'(X799),'const.list.NIL_0')))))))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1215])).
fof(f53663,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1217])).
fof(f36427,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl571),
  inference(cnf_transformation,[],[f36427_D])).
fof(f36427_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl571),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl571])])).
fof(f53662,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1219])).
fof(f53661,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1221])).
fof(f36425,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl569),
  inference(cnf_transformation,[],[f36425_D])).
fof(f36425_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl569),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl569])])).
fof(f53660,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1207])).
fof(f53659,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1209])).
fof(f36423,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl566),
  inference(cnf_transformation,[],[f36423_D])).
fof(f36423_D,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl566),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl566])])).
fof(f53617,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1229])).
fof(f53616,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1227])).
fof(f36422,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl564),
  inference(cnf_transformation,[],[f36422_D])).
fof(f36422_D,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl564),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl564])])).
fof(f53615,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1225])).
fof(f53614,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1223])).
fof(f36421,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl562),
  inference(cnf_transformation,[],[f36421_D])).
fof(f36421_D,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl562),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl562])])).
fof(f53613,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1221])).
fof(f53612,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1219])).
fof(f53734,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl1078),
  inference(cnf_transformation,[],[f53734_D])).
fof(f53734_D,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) <=> ~$spl1078),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1078])])).
fof(f53611,plain,(
  ( ! [X540,X542,X536,X538,X532,X534,X530,X541,X543,X537,X539,X533,X535,X531] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X530),X531))) | s('type.list.list'(X530),X531) != s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X532),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X533),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X534),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X535),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X536),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X537),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X538),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X539),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X540),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X541),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X542),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X543),s('type.list.list'(X530),'const.list.NIL_0')))))))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1217])).
fof(f53610,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1215])).
fof(f36420,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl560),
  inference(cnf_transformation,[],[f36420_D])).
fof(f36420_D,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl560),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl560])])).
fof(f53609,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1213])).
fof(f53608,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1211])).
fof(f36419,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl558),
  inference(cnf_transformation,[],[f36419_D])).
fof(f36419_D,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl558),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl558])])).
fof(f53607,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1209])).
fof(f53606,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1207])).
fof(f36418,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl556),
  inference(cnf_transformation,[],[f36418_D])).
fof(f36418_D,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl556),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl556])])).
fof(f53605,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1205])).
fof(f53604,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | ($spl28 | $spl45)),
  inference(superposition,[],[f27589,f1203])).
fof(f33886,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl546),
  inference(cnf_transformation,[],[f33886_D])).
fof(f33886_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl546),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl546])])).
fof(f33888,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) | $spl548),
  inference(cnf_transformation,[],[f33888_D])).
fof(f33888_D,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) <=> ~$spl548),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl548])])).
fof(f53502,plain,(
  ( ! [X926,X930,X928,X932,X927,X931,X929] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X926),X927))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X926),X927) != s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X928),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X929),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X930),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X931),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X932),s('type.list.list'(X926),'const.list.NIL_0')))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1231])).
fof(f37560,plain,(
  ( ! [X32] : (s('type.num.num',X32) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32))))))) ) | $spl0),
  inference(superposition,[],[f1344,f933])).
fof(f53501,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1233])).
fof(f33883,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl542),
  inference(cnf_transformation,[],[f33883_D])).
fof(f33883_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ~$spl542),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl542])])).
fof(f33885,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl544),
  inference(cnf_transformation,[],[f33885_D])).
fof(f33885_D,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl544),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl544])])).
fof(f53500,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1223])).
fof(f53499,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1225])).
fof(f33880,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl538),
  inference(cnf_transformation,[],[f33880_D])).
fof(f33880_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ~$spl538),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl538])])).
fof(f33882,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl540),
  inference(cnf_transformation,[],[f33882_D])).
fof(f33882_D,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl540),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl540])])).
fof(f53498,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1211])).
fof(f53497,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1213])).
fof(f33877,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | $spl534),
  inference(cnf_transformation,[],[f33877_D])).
fof(f33877_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) <=> ~$spl534),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl534])])).
fof(f33879,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl536),
  inference(cnf_transformation,[],[f33879_D])).
fof(f33879_D,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl536),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl536])])).
fof(f53496,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1203])).
fof(f53495,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1205])).
fof(f33874,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl530),
  inference(cnf_transformation,[],[f33874_D])).
fof(f33874_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ~$spl530),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl530])])).
fof(f33876,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl532),
  inference(cnf_transformation,[],[f33876_D])).
fof(f33876_D,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl532),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl532])])).
fof(f53494,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1227])).
fof(f53493,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1229])).
fof(f33871,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl526),
  inference(cnf_transformation,[],[f33871_D])).
fof(f33871_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ~$spl526),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl526])])).
fof(f33873,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl528),
  inference(cnf_transformation,[],[f33873_D])).
fof(f33873_D,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) <=> ~$spl528),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl528])])).
fof(f53492,plain,(
  ( ! [X810,X808,X812,X802,X800,X806,X804,X799,X811,X809,X803,X801,X807,X805] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X799),X800))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X799),X800) != s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X801),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X802),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X803),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X804),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X805),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X806),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X807),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X808),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X809),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X810),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X811),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X812),s('type.list.list'(X799),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1215])).
fof(f53491,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1217])).
fof(f33868,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl522),
  inference(cnf_transformation,[],[f33868_D])).
fof(f33868_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ~$spl522),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl522])])).
fof(f33870,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl524),
  inference(cnf_transformation,[],[f33870_D])).
fof(f33870_D,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl524),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl524])])).
fof(f53490,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1219])).
fof(f53489,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1221])).
fof(f33865,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl518),
  inference(cnf_transformation,[],[f33865_D])).
fof(f33865_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ~$spl518),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl518])])).
fof(f33867,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl520),
  inference(cnf_transformation,[],[f33867_D])).
fof(f33867_D,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl520),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl520])])).
fof(f53488,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1207])).
fof(f53487,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1209])).
fof(f53562,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611)))))))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) | $spl1076),
  inference(cnf_transformation,[],[f53562_D])).
fof(f53562_D,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611)))))))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) <=> ~$spl1076),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1076])])).
fof(f33862,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl517),
  inference(cnf_transformation,[],[f33862_D])).
fof(f33862_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl517),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl517])])).
fof(f53447,plain,(
  ( ! [X621,X623,X617,X619,X620,X622,X618] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X617),X618)))))))) | s('type.list.list'(X617),X618) != s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X619),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X620),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X621),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X622),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X623),s('type.list.list'(X617),'const.list.NIL_0')))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1233])).
fof(f53446,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611)))))))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1231])).
fof(f53561,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591)))))))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl1074),
  inference(cnf_transformation,[],[f53561_D])).
fof(f53561_D,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591)))))))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl1074),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1074])])).
fof(f33859,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl513),
  inference(cnf_transformation,[],[f33859_D])).
fof(f33859_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl513),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl513])])).
fof(f53445,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601)))))))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1229])).
fof(f53444,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591)))))))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1227])).
fof(f53560,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569)))))))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl1072),
  inference(cnf_transformation,[],[f53560_D])).
fof(f53560_D,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569)))))))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl1072),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1072])])).
fof(f33856,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl509),
  inference(cnf_transformation,[],[f33856_D])).
fof(f33856_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl509),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl509])])).
fof(f53443,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580)))))))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1225])).
fof(f53442,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569)))))))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1223])).
fof(f53559,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545)))))))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl1070),
  inference(cnf_transformation,[],[f53559_D])).
fof(f53559_D,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545)))))))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl1070),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1070])])).
fof(f33853,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl505),
  inference(cnf_transformation,[],[f33853_D])).
fof(f33853_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl505),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl505])])).
fof(f53441,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557)))))))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1221])).
fof(f53440,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545)))))))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1219])).
fof(f53558,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517)))))))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl1068),
  inference(cnf_transformation,[],[f53558_D])).
fof(f53558_D,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517)))))))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) <=> ~$spl1068),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1068])])).
fof(f33850,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl501),
  inference(cnf_transformation,[],[f33850_D])).
fof(f33850_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl501),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl501])])).
fof(f53439,plain,(
  ( ! [X540,X542,X536,X538,X532,X534,X530,X541,X543,X537,X539,X533,X535,X531] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X530),X531)))))))) | s('type.list.list'(X530),X531) != s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X532),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X533),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X534),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X535),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X536),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X537),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X538),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X539),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X540),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X541),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X542),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X543),s('type.list.list'(X530),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1217])).
fof(f53438,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517)))))))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1215])).
fof(f53557,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487)))))))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl1066),
  inference(cnf_transformation,[],[f53557_D])).
fof(f53557_D,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487)))))))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl1066),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1066])])).
fof(f33847,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl497),
  inference(cnf_transformation,[],[f33847_D])).
fof(f33847_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl497),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl497])])).
fof(f53437,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502)))))))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1213])).
fof(f53436,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487)))))))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1211])).
fof(f53556,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455)))))))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl1064),
  inference(cnf_transformation,[],[f53556_D])).
fof(f53556_D,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455)))))))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl1064),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1064])])).
fof(f33844,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl493),
  inference(cnf_transformation,[],[f33844_D])).
fof(f33844_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl493),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl493])])).
fof(f53435,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471)))))))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1209])).
fof(f53434,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455)))))))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1207])).
fof(f53555,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421)))))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl1062),
  inference(cnf_transformation,[],[f53555_D])).
fof(f53555_D,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421)))))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl1062),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1062])])).
fof(f33841,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl489),
  inference(cnf_transformation,[],[f33841_D])).
fof(f33841_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl489),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl489])])).
fof(f53433,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438)))))))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1205])).
fof(f53432,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421)))))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl0),
  inference(superposition,[],[f37560,f1203])).
fof(f45746,plain,(
  ( ! [X127,X125,X123,X121,X130,X128,X118,X116,X126,X124,X122,X120,X131,X129,X119,X117,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X115),X116) != s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X117),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X118),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X119),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X120),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X121),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X122),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X123),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X124),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X125),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X126),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X127),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X128),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X129),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X130),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X131),s('type.list.list'(X115),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl846),
  inference(cnf_transformation,[],[f45746_D])).
fof(f45746_D,plain,(
  ( ! [X127,X125,X123,X121,X130,X128,X118,X116,X126,X124,X122,X120,X131,X129,X119,X117,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X115),X116) != s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X117),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X118),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X119),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X120),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X121),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X122),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X123),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X124),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X125),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X126),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X127),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X128),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X129),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X130),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X131),s('type.list.list'(X115),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl846),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl846])])).
fof(f53384,plain,(
  ( ! [X146,X144,X134,X132,X142,X140,X138,X136,X147,X145,X135,X133,X143,X141,X139,X137,X148] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),X133))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X132),X133) != s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X134),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X135),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X136),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X137),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X138),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X139),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X140),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X141),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X142),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X143),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X144),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X145),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X146),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X147),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X148),s('type.list.list'(X132),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1203])).
fof(f8465,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl243),
  inference(superposition,[],[f8461,f1333])).
fof(f8461,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl243),
  inference(trivial_inequality_removal,[],[f8452])).
fof(f8452,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl243),
  inference(superposition,[],[f8431,f1332])).
fof(f53383,plain,(
  ( ! [X127,X125,X123,X121,X130,X128,X118,X116,X126,X124,X122,X120,X131,X129,X119,X117,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X115),X116) != s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X117),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X118),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X119),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X120),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X121),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X122),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X123),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X124),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X125),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X126),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X127),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X128),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X129),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X130),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X131),s('type.list.list'(X115),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1205])).
fof(f45743,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl842),
  inference(cnf_transformation,[],[f45743_D])).
fof(f45743_D,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl842),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl842])])).
fof(f53336,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1223])).
fof(f53335,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1225])).
fof(f45742,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl840),
  inference(cnf_transformation,[],[f45742_D])).
fof(f45742_D,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl840),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl840])])).
fof(f53334,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1211])).
fof(f53333,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1213])).
fof(f45741,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl838),
  inference(cnf_transformation,[],[f45741_D])).
fof(f45741_D,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl838),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl838])])).
fof(f53332,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1203])).
fof(f53331,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1205])).
fof(f45740,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl836),
  inference(cnf_transformation,[],[f45740_D])).
fof(f45740_D,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl836),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl836])])).
fof(f53330,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1227])).
fof(f53329,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1229])).
fof(f45739,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl834),
  inference(cnf_transformation,[],[f45739_D])).
fof(f45739_D,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl834),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl834])])).
fof(f53326,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1219])).
fof(f53325,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1221])).
fof(f45738,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl832),
  inference(cnf_transformation,[],[f45738_D])).
fof(f45738_D,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl832),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl832])])).
fof(f53324,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1207])).
fof(f53323,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1209])).
fof(f45735,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl831),
  inference(cnf_transformation,[],[f45735_D])).
fof(f45735_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl831),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl831])])).
fof(f53283,plain,(
  ( ! [X621,X623,X617,X619,X620,X622,X618] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X617),X618))))) | s('type.list.list'(X617),X618) != s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X619),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X620),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X621),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X622),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X623),s('type.list.list'(X617),'const.list.NIL_0')))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1233])).
fof(f53282,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611))))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1231])).
fof(f45733,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl829),
  inference(cnf_transformation,[],[f45733_D])).
fof(f45733_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl829),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl829])])).
fof(f53281,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601))))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1229])).
fof(f53280,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1227])).
fof(f45731,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl827),
  inference(cnf_transformation,[],[f45731_D])).
fof(f45731_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl827),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl827])])).
fof(f53279,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580))))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1225])).
fof(f53278,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1223])).
fof(f45729,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl825),
  inference(cnf_transformation,[],[f45729_D])).
fof(f45729_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl825),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl825])])).
fof(f53277,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557))))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1221])).
fof(f53276,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1219])).
fof(f45727,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl823),
  inference(cnf_transformation,[],[f45727_D])).
fof(f45727_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl823),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl823])])).
fof(f53275,plain,(
  ( ! [X540,X542,X536,X538,X532,X534,X530,X541,X543,X537,X539,X533,X535,X531] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X530),X531))))) | s('type.list.list'(X530),X531) != s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X532),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X533),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X534),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X535),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X536),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X537),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X538),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X539),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X540),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X541),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X542),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X543),s('type.list.list'(X530),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1217])).
fof(f53274,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517))))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1215])).
fof(f45725,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl821),
  inference(cnf_transformation,[],[f45725_D])).
fof(f45725_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl821),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl821])])).
fof(f53273,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502))))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1213])).
fof(f53272,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1211])).
fof(f45723,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl819),
  inference(cnf_transformation,[],[f45723_D])).
fof(f45723_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl819),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl819])])).
fof(f53271,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471))))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1209])).
fof(f53270,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1207])).
fof(f45721,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl817),
  inference(cnf_transformation,[],[f45721_D])).
fof(f45721_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ~$spl817),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl817])])).
fof(f53269,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1205])).
fof(f53268,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8465,f1203])).
fof(f53231,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl1061),
  inference(cnf_transformation,[],[f53231_D])).
fof(f53231_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl1061),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1061])])).
fof(f53173,plain,(
  ( ! [X926,X930,X928,X932,X927,X931,X929] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X926),X927))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X926),X927) != s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X928),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X929),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X930),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X931),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X932),s('type.list.list'(X926),'const.list.NIL_0')))))))))))) ) | $spl235),
  inference(superposition,[],[f5431,f1231])).
fof(f5431,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))))) ) | $spl235),
  inference(superposition,[],[f5364,f933])).
fof(f5364,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl235),
  inference(trivial_inequality_removal,[],[f5361])).
fof(f5361,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl235),
  inference(superposition,[],[f5320,f1311])).
fof(f53172,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) | $spl235),
  inference(superposition,[],[f5431,f1233])).
fof(f53229,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl1059),
  inference(cnf_transformation,[],[f53229_D])).
fof(f53229_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ~$spl1059),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1059])])).
fof(f53171,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5431,f1223])).
fof(f53170,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5431,f1225])).
fof(f53227,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl1057),
  inference(cnf_transformation,[],[f53227_D])).
fof(f53227_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ~$spl1057),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1057])])).
fof(f53169,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5431,f1211])).
fof(f53168,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5431,f1213])).
fof(f53225,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | $spl1055),
  inference(cnf_transformation,[],[f53225_D])).
fof(f53225_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) <=> ~$spl1055),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1055])])).
fof(f53167,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5431,f1203])).
fof(f53166,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5431,f1205])).
fof(f53223,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl1053),
  inference(cnf_transformation,[],[f53223_D])).
fof(f53223_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ~$spl1053),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1053])])).
fof(f53165,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5431,f1227])).
fof(f53164,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5431,f1229])).
fof(f53221,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl1051),
  inference(cnf_transformation,[],[f53221_D])).
fof(f53221_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ~$spl1051),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1051])])).
fof(f53163,plain,(
  ( ! [X810,X808,X812,X802,X800,X806,X804,X799,X811,X809,X803,X801,X807,X805] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X799),X800))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X799),X800) != s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X801),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X802),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X803),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X804),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X805),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X806),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X807),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X808),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X809),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X810),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X811),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X812),s('type.list.list'(X799),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5431,f1215])).
fof(f53162,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5431,f1217])).
fof(f53219,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl1049),
  inference(cnf_transformation,[],[f53219_D])).
fof(f53219_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ~$spl1049),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1049])])).
fof(f53161,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5431,f1219])).
fof(f53160,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5431,f1221])).
fof(f53217,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl1047),
  inference(cnf_transformation,[],[f53217_D])).
fof(f53217_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ~$spl1047),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1047])])).
fof(f53159,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5431,f1207])).
fof(f53158,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5431,f1209])).
fof(f53213,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421)))))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl1044),
  inference(cnf_transformation,[],[f53213_D])).
fof(f53213_D,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421)))))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl1044),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1044])])).
fof(f53106,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438)))))))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5431,f1205])).
fof(f53105,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421)))))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5431,f1203])).
fof(f52693,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1027),
  inference(cnf_transformation,[],[f52693_D])).
fof(f52693_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl1027),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1027])])).
fof(f52840,plain,(
  ( ! [X926,X930,X928,X932,X927,X931,X929] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X926),X927))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X926),X927) != s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X928),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X929),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X930),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X931),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X932),s('type.list.list'(X926),'const.list.NIL_0')))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f52668,f1231])).
fof(f52668,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl36 | $spl177)),
  inference(trivial_inequality_removal,[],[f52642])).
fof(f52642,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num',X1) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1)) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1332])).
fof(f12574,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12533,f933])).
fof(f12533,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl36 | $spl177)),
  inference(subsumption_resolution,[],[f12498,f1465])).
fof(f1465,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl36),
  inference(cnf_transformation,[],[f1465_D])).
fof(f1465_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f12498,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl177),
  inference(superposition,[],[f5096,f1333])).
fof(f52839,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f52668,f1233])).
fof(f52691,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1025),
  inference(cnf_transformation,[],[f52691_D])).
fof(f52691_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl1025),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1025])])).
fof(f52838,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f52668,f1223])).
fof(f52837,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f52668,f1225])).
fof(f52689,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1023),
  inference(cnf_transformation,[],[f52689_D])).
fof(f52689_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl1023),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1023])])).
fof(f52836,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f52668,f1211])).
fof(f52835,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f52668,f1213])).
fof(f52687,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1021),
  inference(cnf_transformation,[],[f52687_D])).
fof(f52687_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl1021),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1021])])).
fof(f52834,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f52668,f1203])).
fof(f52833,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f52668,f1205])).
fof(f52685,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1019),
  inference(cnf_transformation,[],[f52685_D])).
fof(f52685_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl1019),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1019])])).
fof(f52832,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f52668,f1227])).
fof(f52831,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f52668,f1229])).
fof(f52683,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1017),
  inference(cnf_transformation,[],[f52683_D])).
fof(f52683_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl1017),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1017])])).
fof(f52830,plain,(
  ( ! [X810,X808,X812,X802,X800,X806,X804,X799,X811,X809,X803,X801,X807,X805] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X799),X800))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X799),X800) != s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X801),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X802),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X803),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X804),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X805),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X806),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X807),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X808),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X809),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X810),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X811),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X812),s('type.list.list'(X799),'const.list.NIL_0')))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f52668,f1215])).
fof(f52829,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f52668,f1217])).
fof(f52681,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1015),
  inference(cnf_transformation,[],[f52681_D])).
fof(f52681_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl1015),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1015])])).
fof(f52828,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f52668,f1219])).
fof(f52827,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f52668,f1221])).
fof(f52679,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1013),
  inference(cnf_transformation,[],[f52679_D])).
fof(f52679_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl1013),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1013])])).
fof(f52826,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f52668,f1207])).
fof(f52825,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f52668,f1209])).
fof(f52672,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl1000),
  inference(cnf_transformation,[],[f52672_D])).
fof(f52672_D,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl1000),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1000])])).
fof(f52771,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f52668,f1205])).
fof(f52770,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f52668,f1203])).
fof(f52709,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl1043),
  inference(cnf_transformation,[],[f52709_D])).
fof(f52709_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl1043),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1043])])).
fof(f52661,plain,(
  ( ! [X212,X210,X208,X213,X211,X209,X214] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X208),X209))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(X208),X209) != s('type.list.list'(X208),'const.list.CONS_2'(s(X208,X210),s('type.list.list'(X208),'const.list.CONS_2'(s(X208,X211),s('type.list.list'(X208),'const.list.CONS_2'(s(X208,X212),s('type.list.list'(X208),'const.list.CONS_2'(s(X208,X213),s('type.list.list'(X208),'const.list.CONS_2'(s(X208,X214),s('type.list.list'(X208),'const.list.NIL_0')))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1231])).
fof(f52660,plain,(
  ( ! [X206,X204,X202,X207,X205,X203,X201] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X201),X202))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(X201),X202) != s('type.list.list'(X201),'const.list.CONS_2'(s(X201,X203),s('type.list.list'(X201),'const.list.CONS_2'(s(X201,X204),s('type.list.list'(X201),'const.list.CONS_2'(s(X201,X205),s('type.list.list'(X201),'const.list.CONS_2'(s(X201,X206),s('type.list.list'(X201),'const.list.CONS_2'(s(X201,X207),s('type.list.list'(X201),'const.list.NIL_0')))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1233])).
fof(f52707,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1041),
  inference(cnf_transformation,[],[f52707_D])).
fof(f52707_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl1041),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1041])])).
fof(f52659,plain,(
  ( ! [X191,X198,X196,X194,X192,X200,X190,X199,X197,X195,X193] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X190),X191))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X190),X191) != s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X192),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X193),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X194),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X195),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X196),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X197),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X198),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X199),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X200),s('type.list.list'(X190),'const.list.NIL_0')))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1223])).
fof(f52658,plain,(
  ( ! [X189,X187,X185,X182,X180,X188,X186,X184,X183,X181,X179] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X179),X180))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X179),X180) != s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X181),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X182),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X183),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X184),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X185),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X186),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X187),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X188),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X189),s('type.list.list'(X179),'const.list.NIL_0')))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1225])).
fof(f52705,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1039),
  inference(cnf_transformation,[],[f52705_D])).
fof(f52705_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl1039),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1039])])).
fof(f52657,plain,(
  ( ! [X177,X167,X165,X175,X173,X171,X169,X178,X176,X166,X164,X174,X172,X170,X168] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X164),X165))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X164),X165) != s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X166),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X167),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X168),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X169),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X170),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X171),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X172),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X173),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X174),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X175),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X176),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X177),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X178),s('type.list.list'(X164),'const.list.NIL_0')))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1211])).
fof(f52656,plain,(
  ( ! [X158,X156,X154,X152,X163,X161,X151,X149,X159,X157,X155,X153,X162,X160,X150] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X149),X150))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X149),X150) != s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X151),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X152),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X153),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X154),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X155),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X156),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X157),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X158),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X159),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X160),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X161),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X162),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X163),s('type.list.list'(X149),'const.list.NIL_0')))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1213])).
fof(f52703,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1037),
  inference(cnf_transformation,[],[f52703_D])).
fof(f52703_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl1037),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1037])])).
fof(f52655,plain,(
  ( ! [X146,X144,X134,X132,X142,X140,X138,X136,X147,X145,X135,X133,X143,X141,X139,X137,X148] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),X133))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X132),X133) != s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X134),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X135),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X136),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X137),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X138),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X139),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X140),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X141),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X142),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X143),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X144),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X145),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X146),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X147),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X148),s('type.list.list'(X132),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1203])).
fof(f52654,plain,(
  ( ! [X127,X125,X123,X121,X130,X128,X118,X116,X126,X124,X122,X120,X131,X129,X119,X117,X115] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X115),X116) != s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X117),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X118),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X119),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X120),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X121),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X122),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X123),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X124),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X125),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X126),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X127),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X128),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X129),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X130),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X131),s('type.list.list'(X115),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1205])).
fof(f52701,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1035),
  inference(cnf_transformation,[],[f52701_D])).
fof(f52701_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl1035),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1035])])).
fof(f52653,plain,(
  ( ! [X111,X109,X107,X105,X114,X112,X110,X108,X106,X113] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),X106))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X105),X106) != s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X107),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X108),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X109),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X110),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X111),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X112),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X113),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X114),s('type.list.list'(X105),'const.list.NIL_0')))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1227])).
fof(f52652,plain,(
  ( ! [X103,X101,X99,X97,X95,X102,X100,X98,X96,X104] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),X96))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X95),X96) != s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X97),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X98),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X99),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X100),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X101),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X102),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X103),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X104),s('type.list.list'(X95),'const.list.NIL_0')))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1229])).
fof(f52699,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1033),
  inference(cnf_transformation,[],[f52699_D])).
fof(f52699_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl1033),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1033])])).
fof(f52651,plain,(
  ( ! [X94,X92,X90,X88,X87,X85,X83,X81,X93,X91,X89,X86,X84,X82] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X81),X82) != s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X83),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X84),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X85),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X86),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X87),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X88),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X89),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X90),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X91),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X92),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X93),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X94),s('type.list.list'(X81),'const.list.NIL_0')))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1215])).
fof(f52650,plain,(
  ( ! [X80,X70,X68,X78,X76,X74,X72,X71,X69,X67,X79,X77,X75,X73] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X67),X68))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X67),X68) != s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X69),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X70),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X71),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X72),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X73),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X74),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X75),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X76),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X77),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X78),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X79),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X80),s('type.list.list'(X67),'const.list.NIL_0')))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1217])).
fof(f52697,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1031),
  inference(cnf_transformation,[],[f52697_D])).
fof(f52697_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl1031),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1031])])).
fof(f52649,plain,(
  ( ! [X61,X59,X57,X66,X64,X62,X60,X58,X56,X65,X55,X63] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X55),X56) != s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X57),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X58),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X59),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X60),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X61),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X62),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X63),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X64),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X65),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X66),s('type.list.list'(X55),'const.list.NIL_0')))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1219])).
fof(f52648,plain,(
  ( ! [X47,X45,X43,X54,X52,X50,X48,X46,X44,X53,X51,X49] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X43),X44) != s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X45),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X46),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X47),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X48),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X49),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X50),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X51),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X52),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X53),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X54),s('type.list.list'(X43),'const.list.NIL_0')))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1221])).
fof(f52695,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1029),
  inference(cnf_transformation,[],[f52695_D])).
fof(f52695_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl1029),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1029])])).
fof(f52647,plain,(
  ( ! [X30,X28,X39,X37,X35,X33,X41,X31,X29,X27,X38,X36,X34,X32,X42,X40] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X27),X28) != s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X29),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X30),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X31),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X32),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X33),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X34),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X35),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X36),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X37),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X38),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X39),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X40),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X41),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X42),s('type.list.list'(X27),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1207])).
fof(f52646,plain,(
  ( ! [X26,X24,X14,X12,X23,X21,X19,X17,X25,X15,X13,X11,X22,X20,X18,X16] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X11),X12) != s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X13),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X14),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X15),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X16),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X17),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X18),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X19),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X20),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X21),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X22),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X23),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X24),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X25),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X26),s('type.list.list'(X11),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1209])).
fof(f52609,plain,(
  ( ! [X926,X930,X928,X932,X927,X931,X929] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X926),X927))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X926),X927) != s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X928),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X929),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X930),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X931),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X932),s('type.list.list'(X926),'const.list.NIL_0')))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1231])).
fof(f52608,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1233])).
fof(f52607,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1223])).
fof(f52606,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1225])).
fof(f52605,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1211])).
fof(f52604,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1213])).
fof(f52603,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1203])).
fof(f52602,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1205])).
fof(f52601,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1227])).
fof(f52600,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1229])).
fof(f52599,plain,(
  ( ! [X810,X808,X812,X802,X800,X806,X804,X799,X811,X809,X803,X801,X807,X805] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X799),X800))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X799),X800) != s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X801),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X802),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X803),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X804),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X805),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X806),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X807),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X808),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X809),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X810),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X811),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X812),s('type.list.list'(X799),'const.list.NIL_0')))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1215])).
fof(f52598,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1217])).
fof(f52597,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1219])).
fof(f52596,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1221])).
fof(f52595,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1207])).
fof(f52594,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1209])).
fof(f52677,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl1010),
  inference(cnf_transformation,[],[f52677_D])).
fof(f52677_D,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl1010),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1010])])).
fof(f52552,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1229])).
fof(f52551,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1227])).
fof(f52676,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl1008),
  inference(cnf_transformation,[],[f52676_D])).
fof(f52676_D,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl1008),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1008])])).
fof(f52550,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1225])).
fof(f52549,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1223])).
fof(f52675,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl1006),
  inference(cnf_transformation,[],[f52675_D])).
fof(f52675_D,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl1006),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1006])])).
fof(f52548,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1221])).
fof(f52547,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1219])).
fof(f52674,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl1004),
  inference(cnf_transformation,[],[f52674_D])).
fof(f52674_D,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl1004),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1004])])).
fof(f52544,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1213])).
fof(f52543,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1211])).
fof(f52673,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl1002),
  inference(cnf_transformation,[],[f52673_D])).
fof(f52673_D,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl1002),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1002])])).
fof(f52542,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1209])).
fof(f52541,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1207])).
fof(f52540,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1205])).
fof(f52539,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | ($spl36 | $spl177)),
  inference(superposition,[],[f12574,f1203])).
fof(f51056,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1223])).
fof(f12548,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl177),
  inference(superposition,[],[f12538,f1333])).
fof(f12538,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl177),
  inference(subsumption_resolution,[],[f12537,f1342])).
fof(f1342,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f1274])).
fof(f1274,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f895])).
fof(f895,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f504])).
fof(f504,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f503])).
fof(f503,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f233])).
fof(f233,axiom,(
  ! [X6] : ! [X30] : (s(X6,X30) = s(X6,X30) <=> p(s(bool,'T_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.bool.REFL_CLAUSE')).
fof(f12537,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl177),
  inference(forward_demodulation,[],[f12503,f1330])).
fof(f1330,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f532])).
fof(f532,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X26] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.numeral.numeral_distrib|split|29')).
fof(f12503,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl177),
  inference(superposition,[],[f5096,f1334])).
fof(f1334,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f927])).
fof(f51055,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1225])).
fof(f51054,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1211])).
fof(f51053,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1213])).
fof(f51052,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1203])).
fof(f51051,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1205])).
fof(f51050,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1227])).
fof(f51049,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1229])).
fof(f51046,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1219])).
fof(f51045,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1221])).
fof(f51044,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1207])).
fof(f51043,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1209])).
fof(f51113,plain,(
  ( ! [X625,X624] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X624),X625))))) | s('type.list.list'(X624),'const.list.NIL_0') != s('type.list.list'(X624),X625)) ) | $spl986),
  inference(cnf_transformation,[],[f51113_D])).
fof(f51113_D,plain,(
  ( ! [X625,X624] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X624),X625))))) | s('type.list.list'(X624),'const.list.NIL_0') != s('type.list.list'(X624),X625)) ) <=> ~$spl986),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl986])])).
fof(f15378,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | $spl389),
  inference(cnf_transformation,[],[f15378_D])).
fof(f15378_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl389),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl389])])).
fof(f51005,plain,(
  ( ! [X627,X626] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X626),X627))))) | s('type.list.list'(X626),'const.list.NIL_0') != s('type.list.list'(X626),X627)) ) | $spl177),
  inference(superposition,[],[f12548,f1340])).
fof(f1340,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f929])).
fof(f929,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f540])).
fof(f540,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f539])).
fof(f539,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f69])).
fof(f69,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.list.LENGTH_NIL_SYM')).
fof(f51004,plain,(
  ( ! [X625,X624] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X624),X625))))) | s('type.list.list'(X624),'const.list.NIL_0') != s('type.list.list'(X624),X625)) ) | $spl177),
  inference(superposition,[],[f12548,f1338])).
fof(f1338,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f928])).
fof(f928,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f538])).
fof(f538,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f537])).
fof(f537,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.list.LENGTH_NIL')).
fof(f51003,plain,(
  ( ! [X621,X623,X617,X619,X620,X622,X618] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X617),X618))))) | s('type.list.list'(X617),X618) != s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X619),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X620),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X621),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X622),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X623),s('type.list.list'(X617),'const.list.NIL_0')))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1233])).
fof(f51002,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611))))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1231])).
fof(f51001,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601))))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1229])).
fof(f51000,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1227])).
fof(f50999,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580))))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1225])).
fof(f50998,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1223])).
fof(f50997,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557))))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1221])).
fof(f50996,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1219])).
fof(f50995,plain,(
  ( ! [X540,X542,X536,X538,X532,X534,X530,X541,X543,X537,X539,X533,X535,X531] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X530),X531))))) | s('type.list.list'(X530),X531) != s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X532),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X533),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X534),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X535),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X536),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X537),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X538),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X539),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X540),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X541),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X542),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X543),s('type.list.list'(X530),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1217])).
fof(f50994,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517))))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1215])).
fof(f50993,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502))))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1213])).
fof(f50992,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1211])).
fof(f50991,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471))))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1209])).
fof(f50990,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1207])).
fof(f50989,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1205])).
fof(f50988,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl177),
  inference(superposition,[],[f12548,f1203])).
fof(f49254,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl953),
  inference(cnf_transformation,[],[f49254_D])).
fof(f49254_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl953),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl953])])).
fof(f49399,plain,(
  ( ! [X926,X930,X928,X932,X927,X931,X929] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X926),X927))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X926),X927) != s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X928),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X929),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X930),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X931),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X932),s('type.list.list'(X926),'const.list.NIL_0')))))))))))) ) | $spl243),
  inference(superposition,[],[f49229,f1231])).
fof(f49229,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl243),
  inference(trivial_inequality_removal,[],[f49203])).
fof(f49203,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num',X1) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1)) ) | $spl243),
  inference(superposition,[],[f8453,f1332])).
fof(f8453,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl243),
  inference(superposition,[],[f8431,f933])).
fof(f49398,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) | $spl243),
  inference(superposition,[],[f49229,f1233])).
fof(f49252,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl951),
  inference(cnf_transformation,[],[f49252_D])).
fof(f49252_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl951),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl951])])).
fof(f49397,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f49229,f1223])).
fof(f49396,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f49229,f1225])).
fof(f49250,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl949),
  inference(cnf_transformation,[],[f49250_D])).
fof(f49250_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl949),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl949])])).
fof(f49395,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f49229,f1211])).
fof(f49394,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f49229,f1213])).
fof(f49248,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl947),
  inference(cnf_transformation,[],[f49248_D])).
fof(f49248_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl947),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl947])])).
fof(f49393,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f49229,f1203])).
fof(f49392,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f49229,f1205])).
fof(f49246,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl945),
  inference(cnf_transformation,[],[f49246_D])).
fof(f49246_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl945),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl945])])).
fof(f49391,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f49229,f1227])).
fof(f49390,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f49229,f1229])).
fof(f49244,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl943),
  inference(cnf_transformation,[],[f49244_D])).
fof(f49244_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl943),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl943])])).
fof(f49389,plain,(
  ( ! [X810,X808,X812,X802,X800,X806,X804,X799,X811,X809,X803,X801,X807,X805] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X799),X800))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X799),X800) != s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X801),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X802),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X803),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X804),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X805),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X806),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X807),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X808),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X809),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X810),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X811),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X812),s('type.list.list'(X799),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f49229,f1215])).
fof(f49388,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f49229,f1217])).
fof(f49242,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl941),
  inference(cnf_transformation,[],[f49242_D])).
fof(f49242_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl941),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl941])])).
fof(f49387,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f49229,f1219])).
fof(f49386,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f49229,f1221])).
fof(f49240,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl939),
  inference(cnf_transformation,[],[f49240_D])).
fof(f49240_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl939),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl939])])).
fof(f49385,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f49229,f1207])).
fof(f49384,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f49229,f1209])).
fof(f49233,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl926),
  inference(cnf_transformation,[],[f49233_D])).
fof(f49233_D,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl926),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl926])])).
fof(f49330,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f49229,f1205])).
fof(f49329,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f49229,f1203])).
fof(f49270,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl969),
  inference(cnf_transformation,[],[f49270_D])).
fof(f49270_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl969),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl969])])).
fof(f49222,plain,(
  ( ! [X212,X210,X208,X213,X211,X209,X214] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X208),X209))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(X208),X209) != s('type.list.list'(X208),'const.list.CONS_2'(s(X208,X210),s('type.list.list'(X208),'const.list.CONS_2'(s(X208,X211),s('type.list.list'(X208),'const.list.CONS_2'(s(X208,X212),s('type.list.list'(X208),'const.list.CONS_2'(s(X208,X213),s('type.list.list'(X208),'const.list.CONS_2'(s(X208,X214),s('type.list.list'(X208),'const.list.NIL_0')))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1231])).
fof(f49221,plain,(
  ( ! [X206,X204,X202,X207,X205,X203,X201] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X201),X202))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(X201),X202) != s('type.list.list'(X201),'const.list.CONS_2'(s(X201,X203),s('type.list.list'(X201),'const.list.CONS_2'(s(X201,X204),s('type.list.list'(X201),'const.list.CONS_2'(s(X201,X205),s('type.list.list'(X201),'const.list.CONS_2'(s(X201,X206),s('type.list.list'(X201),'const.list.CONS_2'(s(X201,X207),s('type.list.list'(X201),'const.list.NIL_0')))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1233])).
fof(f49268,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl967),
  inference(cnf_transformation,[],[f49268_D])).
fof(f49268_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl967),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl967])])).
fof(f49220,plain,(
  ( ! [X191,X198,X196,X194,X192,X200,X190,X199,X197,X195,X193] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X190),X191))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X190),X191) != s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X192),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X193),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X194),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X195),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X196),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X197),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X198),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X199),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X200),s('type.list.list'(X190),'const.list.NIL_0')))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1223])).
fof(f49219,plain,(
  ( ! [X189,X187,X185,X182,X180,X188,X186,X184,X183,X181,X179] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X179),X180))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X179),X180) != s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X181),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X182),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X183),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X184),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X185),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X186),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X187),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X188),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X189),s('type.list.list'(X179),'const.list.NIL_0')))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1225])).
fof(f49266,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl965),
  inference(cnf_transformation,[],[f49266_D])).
fof(f49266_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl965),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl965])])).
fof(f49218,plain,(
  ( ! [X177,X167,X165,X175,X173,X171,X169,X178,X176,X166,X164,X174,X172,X170,X168] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X164),X165))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X164),X165) != s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X166),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X167),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X168),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X169),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X170),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X171),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X172),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X173),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X174),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X175),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X176),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X177),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X178),s('type.list.list'(X164),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1211])).
fof(f49217,plain,(
  ( ! [X158,X156,X154,X152,X163,X161,X151,X149,X159,X157,X155,X153,X162,X160,X150] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X149),X150))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X149),X150) != s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X151),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X152),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X153),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X154),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X155),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X156),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X157),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X158),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X159),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X160),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X161),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X162),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X163),s('type.list.list'(X149),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1213])).
fof(f49264,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl963),
  inference(cnf_transformation,[],[f49264_D])).
fof(f49264_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl963),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl963])])).
fof(f49216,plain,(
  ( ! [X146,X144,X134,X132,X142,X140,X138,X136,X147,X145,X135,X133,X143,X141,X139,X137,X148] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),X133))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X132),X133) != s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X134),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X135),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X136),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X137),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X138),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X139),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X140),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X141),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X142),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X143),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X144),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X145),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X146),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X147),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X148),s('type.list.list'(X132),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1203])).
fof(f49215,plain,(
  ( ! [X127,X125,X123,X121,X130,X128,X118,X116,X126,X124,X122,X120,X131,X129,X119,X117,X115] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X115),X116) != s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X117),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X118),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X119),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X120),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X121),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X122),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X123),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X124),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X125),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X126),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X127),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X128),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X129),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X130),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X131),s('type.list.list'(X115),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1205])).
fof(f49262,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl961),
  inference(cnf_transformation,[],[f49262_D])).
fof(f49262_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl961),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl961])])).
fof(f49214,plain,(
  ( ! [X111,X109,X107,X105,X114,X112,X110,X108,X106,X113] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),X106))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X105),X106) != s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X107),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X108),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X109),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X110),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X111),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X112),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X113),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X114),s('type.list.list'(X105),'const.list.NIL_0')))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1227])).
fof(f49213,plain,(
  ( ! [X103,X101,X99,X97,X95,X102,X100,X98,X96,X104] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),X96))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X95),X96) != s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X97),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X98),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X99),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X100),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X101),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X102),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X103),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X104),s('type.list.list'(X95),'const.list.NIL_0')))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1229])).
fof(f49260,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl959),
  inference(cnf_transformation,[],[f49260_D])).
fof(f49260_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl959),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl959])])).
fof(f49212,plain,(
  ( ! [X94,X92,X90,X88,X87,X85,X83,X81,X93,X91,X89,X86,X84,X82] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X81),X82) != s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X83),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X84),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X85),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X86),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X87),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X88),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X89),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X90),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X91),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X92),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X93),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X94),s('type.list.list'(X81),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1215])).
fof(f49211,plain,(
  ( ! [X80,X70,X68,X78,X76,X74,X72,X71,X69,X67,X79,X77,X75,X73] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X67),X68))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X67),X68) != s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X69),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X70),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X71),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X72),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X73),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X74),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X75),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X76),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X77),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X78),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X79),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X80),s('type.list.list'(X67),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1217])).
fof(f49258,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl957),
  inference(cnf_transformation,[],[f49258_D])).
fof(f49258_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl957),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl957])])).
fof(f49210,plain,(
  ( ! [X61,X59,X57,X66,X64,X62,X60,X58,X56,X65,X55,X63] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X55),X56) != s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X57),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X58),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X59),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X60),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X61),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X62),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X63),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X64),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X65),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X66),s('type.list.list'(X55),'const.list.NIL_0')))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1219])).
fof(f49209,plain,(
  ( ! [X47,X45,X43,X54,X52,X50,X48,X46,X44,X53,X51,X49] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X43),X44) != s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X45),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X46),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X47),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X48),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X49),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X50),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X51),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X52),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X53),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X54),s('type.list.list'(X43),'const.list.NIL_0')))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1221])).
fof(f49256,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl955),
  inference(cnf_transformation,[],[f49256_D])).
fof(f49256_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl955),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl955])])).
fof(f49208,plain,(
  ( ! [X30,X28,X39,X37,X35,X33,X41,X31,X29,X27,X38,X36,X34,X32,X42,X40] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X27),X28) != s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X29),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X30),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X31),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X32),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X33),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X34),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X35),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X36),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X37),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X38),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X39),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X40),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X41),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X42),s('type.list.list'(X27),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1207])).
fof(f49207,plain,(
  ( ! [X26,X24,X14,X12,X23,X21,X19,X17,X25,X15,X13,X11,X22,X20,X18,X16] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X11),X12) != s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X13),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X14),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X15),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X16),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X17),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X18),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X19),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X20),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X21),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X22),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X23),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X24),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X25),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X26),s('type.list.list'(X11),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1209])).
fof(f49170,plain,(
  ( ! [X926,X930,X928,X932,X927,X931,X929] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X926),X927))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X926),X927) != s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X928),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X929),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X930),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X931),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X932),s('type.list.list'(X926),'const.list.NIL_0')))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1231])).
fof(f49169,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1233])).
fof(f49168,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1223])).
fof(f49167,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1225])).
fof(f49166,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1211])).
fof(f49165,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1213])).
fof(f49164,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1203])).
fof(f49163,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1205])).
fof(f49162,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1227])).
fof(f49161,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1229])).
fof(f49160,plain,(
  ( ! [X810,X808,X812,X802,X800,X806,X804,X799,X811,X809,X803,X801,X807,X805] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X799),X800))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X799),X800) != s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X801),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X802),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X803),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X804),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X805),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X806),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X807),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X808),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X809),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X810),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X811),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X812),s('type.list.list'(X799),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1215])).
fof(f49159,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1217])).
fof(f49158,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1219])).
fof(f49157,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1221])).
fof(f49156,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1207])).
fof(f49155,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1209])).
fof(f49238,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl936),
  inference(cnf_transformation,[],[f49238_D])).
fof(f49238_D,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl936),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl936])])).
fof(f49113,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1229])).
fof(f49112,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1227])).
fof(f49237,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl934),
  inference(cnf_transformation,[],[f49237_D])).
fof(f49237_D,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl934),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl934])])).
fof(f49111,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1225])).
fof(f49110,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1223])).
fof(f49236,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl932),
  inference(cnf_transformation,[],[f49236_D])).
fof(f49236_D,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl932),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl932])])).
fof(f49109,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1221])).
fof(f49108,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1219])).
fof(f49235,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl930),
  inference(cnf_transformation,[],[f49235_D])).
fof(f49235_D,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl930),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl930])])).
fof(f49105,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1213])).
fof(f49104,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1211])).
fof(f49234,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl928),
  inference(cnf_transformation,[],[f49234_D])).
fof(f49234_D,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl928),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl928])])).
fof(f49103,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1209])).
fof(f49102,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1207])).
fof(f49101,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1205])).
fof(f49100,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8453,f1203])).
fof(f48872,plain,(
  ( ! [X926,X930,X928,X932,X927,X931,X929] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X926),X927))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X926),X927) != s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X928),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X929),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X930),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X931),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X932),s('type.list.list'(X926),'const.list.NIL_0')))))))))))) ) | $spl243),
  inference(superposition,[],[f8444,f1231])).
fof(f8444,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl243),
  inference(superposition,[],[f8431,f933])).
fof(f48871,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) | $spl243),
  inference(superposition,[],[f8444,f1233])).
fof(f48870,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8444,f1223])).
fof(f48869,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8444,f1225])).
fof(f48868,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8444,f1211])).
fof(f48867,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8444,f1213])).
fof(f48866,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8444,f1203])).
fof(f48865,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8444,f1205])).
fof(f48864,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8444,f1227])).
fof(f48863,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8444,f1229])).
fof(f48862,plain,(
  ( ! [X810,X808,X812,X802,X800,X806,X804,X799,X811,X809,X803,X801,X807,X805] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X799),X800))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X799),X800) != s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X801),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X802),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X803),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X804),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X805),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X806),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X807),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X808),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X809),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X810),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X811),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X812),s('type.list.list'(X799),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8444,f1215])).
fof(f48861,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8444,f1217])).
fof(f48860,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8444,f1219])).
fof(f48859,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8444,f1221])).
fof(f48858,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8444,f1207])).
fof(f48857,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8444,f1209])).
fof(f48803,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))))))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8444,f1205])).
fof(f48802,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8444,f1203])).
fof(f48740,plain,(
  ( ! [X146,X144,X134,X132,X142,X140,X138,X136,X147,X145,X135,X133,X143,X141,X139,X137,X148] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),X133))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X132),X133) != s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X134),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X135),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X136),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X137),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X138),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X139),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X140),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X141),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X142),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X143),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X144),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X145),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X146),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X147),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X148),s('type.list.list'(X132),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1203])).
fof(f5487,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) ) | $spl239),
  inference(superposition,[],[f5324,f1333])).
fof(f48739,plain,(
  ( ! [X127,X125,X123,X121,X130,X128,X118,X116,X126,X124,X122,X120,X131,X129,X119,X117,X115] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X115),X116) != s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X117),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X118),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X119),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X120),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X121),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X122),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X123),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X124),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X125),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X126),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X127),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X128),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X129),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X130),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X131),s('type.list.list'(X115),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1205])).
fof(f48692,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1223])).
fof(f48691,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1225])).
fof(f48690,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1211])).
fof(f48689,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1213])).
fof(f48688,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1203])).
fof(f48687,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1205])).
fof(f48686,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1227])).
fof(f48685,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1229])).
fof(f48682,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1219])).
fof(f48681,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1221])).
fof(f48680,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1207])).
fof(f48679,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1209])).
fof(f48637,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601)))))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1229])).
fof(f48636,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591)))))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1227])).
fof(f48635,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580)))))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1225])).
fof(f48634,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569)))))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1223])).
fof(f48633,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557)))))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1221])).
fof(f48632,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545)))))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1219])).
fof(f48629,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502)))))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1213])).
fof(f48628,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487)))))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1211])).
fof(f48627,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471)))))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1209])).
fof(f48626,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455)))))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1207])).
fof(f48625,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438)))))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1205])).
fof(f48624,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421)))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5487,f1203])).
fof(f47307,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl906),
  inference(cnf_transformation,[],[f47307_D])).
fof(f47307_D,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl906),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl906])])).
fof(f47211,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1223])).
fof(f5481,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) ) | $spl239),
  inference(superposition,[],[f5324,f1311])).
fof(f47210,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1225])).
fof(f47306,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl904),
  inference(cnf_transformation,[],[f47306_D])).
fof(f47306_D,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl904),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl904])])).
fof(f47209,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1211])).
fof(f47208,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1213])).
fof(f47305,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl902),
  inference(cnf_transformation,[],[f47305_D])).
fof(f47305_D,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl902),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl902])])).
fof(f47207,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1203])).
fof(f47206,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1205])).
fof(f47304,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl900),
  inference(cnf_transformation,[],[f47304_D])).
fof(f47304_D,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl900),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl900])])).
fof(f47205,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1227])).
fof(f47204,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1229])).
fof(f47303,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl898),
  inference(cnf_transformation,[],[f47303_D])).
fof(f47303_D,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl898),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl898])])).
fof(f47201,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1219])).
fof(f47200,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1221])).
fof(f47302,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl896),
  inference(cnf_transformation,[],[f47302_D])).
fof(f47302_D,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl896),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl896])])).
fof(f47199,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1207])).
fof(f47198,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1209])).
fof(f47292,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl895),
  inference(cnf_transformation,[],[f47292_D])).
fof(f47292_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl895),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl895])])).
fof(f47158,plain,(
  ( ! [X621,X623,X617,X619,X620,X622,X618] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X617),X618)))))) | s('type.list.list'(X617),X618) != s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X619),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X620),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X621),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X622),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X623),s('type.list.list'(X617),'const.list.NIL_0')))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1233])).
fof(f47157,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611)))))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1231])).
fof(f47290,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl893),
  inference(cnf_transformation,[],[f47290_D])).
fof(f47290_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl893),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl893])])).
fof(f47156,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601)))))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1229])).
fof(f47155,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591)))))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1227])).
fof(f47288,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl891),
  inference(cnf_transformation,[],[f47288_D])).
fof(f47288_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl891),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl891])])).
fof(f47154,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580)))))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1225])).
fof(f47153,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569)))))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1223])).
fof(f47286,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl889),
  inference(cnf_transformation,[],[f47286_D])).
fof(f47286_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl889),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl889])])).
fof(f47152,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557)))))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1221])).
fof(f47151,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545)))))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1219])).
fof(f47284,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl887),
  inference(cnf_transformation,[],[f47284_D])).
fof(f47284_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl887),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl887])])).
fof(f47150,plain,(
  ( ! [X540,X542,X536,X538,X532,X534,X530,X541,X543,X537,X539,X533,X535,X531] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X530),X531)))))) | s('type.list.list'(X530),X531) != s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X532),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X533),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X534),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X535),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X536),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X537),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X538),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X539),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X540),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X541),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X542),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X543),s('type.list.list'(X530),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1217])).
fof(f47149,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517)))))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1215])).
fof(f47282,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl885),
  inference(cnf_transformation,[],[f47282_D])).
fof(f47282_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl885),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl885])])).
fof(f47148,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502)))))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1213])).
fof(f47147,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487)))))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1211])).
fof(f47280,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl883),
  inference(cnf_transformation,[],[f47280_D])).
fof(f47280_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl883),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl883])])).
fof(f47146,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471)))))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1209])).
fof(f47145,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455)))))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1207])).
fof(f47278,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl881),
  inference(cnf_transformation,[],[f47278_D])).
fof(f47278_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl881),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl881])])).
fof(f47144,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438)))))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1205])).
fof(f47143,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421)))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl239),
  inference(superposition,[],[f5481,f1203])).
fof(f47273,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl876),
  inference(cnf_transformation,[],[f47273_D])).
fof(f47273_D,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) <=> ~$spl876),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl876])])).
fof(f47275,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl879),
  inference(cnf_transformation,[],[f47275_D])).
fof(f47275_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl879),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl879])])).
fof(f47110,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) ) | $spl239),
  inference(superposition,[],[f5481,f1331])).
fof(f47109,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl239),
  inference(superposition,[],[f5481,f1333])).
fof(f45852,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1223])).
fof(f5391,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl19),
  inference(superposition,[],[f5389,f1333])).
fof(f5389,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl19),
  inference(trivial_inequality_removal,[],[f5380])).
fof(f5380,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl19),
  inference(superposition,[],[f1448,f1332])).
fof(f45851,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1225])).
fof(f45850,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1211])).
fof(f45849,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1213])).
fof(f45848,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1203])).
fof(f45847,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1205])).
fof(f45846,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1227])).
fof(f45845,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1229])).
fof(f45842,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1219])).
fof(f45841,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1221])).
fof(f45840,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1207])).
fof(f45839,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1209])).
fof(f45799,plain,(
  ( ! [X621,X623,X617,X619,X620,X622,X618] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X617),X618))))) | s('type.list.list'(X617),X618) != s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X619),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X620),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X621),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X622),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X623),s('type.list.list'(X617),'const.list.NIL_0')))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1233])).
fof(f45798,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611))))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1231])).
fof(f45797,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601))))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1229])).
fof(f45796,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1227])).
fof(f45795,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580))))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1225])).
fof(f45794,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1223])).
fof(f45793,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557))))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1221])).
fof(f45792,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1219])).
fof(f45791,plain,(
  ( ! [X540,X542,X536,X538,X532,X534,X530,X541,X543,X537,X539,X533,X535,X531] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X530),X531))))) | s('type.list.list'(X530),X531) != s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X532),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X533),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X534),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X535),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X536),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X537),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X538),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X539),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X540),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X541),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X542),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X543),s('type.list.list'(X530),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1217])).
fof(f45790,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517))))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1215])).
fof(f45789,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502))))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1213])).
fof(f45788,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1211])).
fof(f45787,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471))))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1209])).
fof(f45786,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1207])).
fof(f45785,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1205])).
fof(f45784,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5391,f1203])).
fof(f45707,plain,(
  ( ! [X146,X144,X134,X132,X142,X140,X138,X136,X147,X145,X135,X133,X143,X141,X139,X137,X148] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),X133))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X132),X133) != s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X134),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X135),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X136),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X137),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X138),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X139),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X140),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X141),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X142),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X143),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X144),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X145),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X146),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X147),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X148),s('type.list.list'(X132),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1203])).
fof(f5349,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) ) | $spl235),
  inference(superposition,[],[f5320,f1311])).
fof(f45706,plain,(
  ( ! [X127,X125,X123,X121,X130,X128,X118,X116,X126,X124,X122,X120,X131,X129,X119,X117,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X115),X116) != s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X117),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X118),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X119),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X120),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X121),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X122),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X123),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X124),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X125),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X126),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X127),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X128),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X129),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X130),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X131),s('type.list.list'(X115),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1205])).
fof(f45659,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1223])).
fof(f45658,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1225])).
fof(f45657,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1211])).
fof(f45656,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1213])).
fof(f45655,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1203])).
fof(f45654,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1205])).
fof(f45653,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1227])).
fof(f45652,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1229])).
fof(f45649,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1219])).
fof(f45648,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1221])).
fof(f45647,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1207])).
fof(f45646,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1209])).
fof(f45606,plain,(
  ( ! [X621,X623,X617,X619,X620,X622,X618] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X617),X618)))))) | s('type.list.list'(X617),X618) != s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X619),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X620),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X621),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X622),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X623),s('type.list.list'(X617),'const.list.NIL_0')))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1233])).
fof(f45605,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611)))))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1231])).
fof(f45604,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601)))))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1229])).
fof(f45603,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591)))))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1227])).
fof(f45602,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580)))))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1225])).
fof(f45601,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569)))))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1223])).
fof(f45600,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557)))))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1221])).
fof(f45599,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545)))))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1219])).
fof(f45598,plain,(
  ( ! [X540,X542,X536,X538,X532,X534,X530,X541,X543,X537,X539,X533,X535,X531] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X530),X531)))))) | s('type.list.list'(X530),X531) != s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X532),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X533),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X534),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X535),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X536),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X537),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X538),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X539),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X540),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X541),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X542),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X543),s('type.list.list'(X530),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1217])).
fof(f45597,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517)))))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1215])).
fof(f45596,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502)))))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1213])).
fof(f45595,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487)))))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1211])).
fof(f45594,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471)))))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1209])).
fof(f45593,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455)))))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1207])).
fof(f45592,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438)))))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1205])).
fof(f45591,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421)))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5349,f1203])).
fof(f45521,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl814),
  inference(cnf_transformation,[],[f45521_D])).
fof(f45521_D,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl814),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl814])])).
fof(f45458,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1223])).
fof(f5337,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl23),
  inference(superposition,[],[f5264,f1333])).
fof(f5264,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl23),
  inference(resolution,[],[f1452,f1312])).
fof(f45457,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1225])).
fof(f45520,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl812),
  inference(cnf_transformation,[],[f45520_D])).
fof(f45520_D,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl812),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl812])])).
fof(f45456,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1211])).
fof(f45455,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1213])).
fof(f45519,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl810),
  inference(cnf_transformation,[],[f45519_D])).
fof(f45519_D,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl810),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl810])])).
fof(f45454,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1203])).
fof(f45453,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1205])).
fof(f45518,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl808),
  inference(cnf_transformation,[],[f45518_D])).
fof(f45518_D,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl808),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl808])])).
fof(f45452,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1227])).
fof(f45451,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1229])).
fof(f45517,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl806),
  inference(cnf_transformation,[],[f45517_D])).
fof(f45517_D,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl806),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl806])])).
fof(f45448,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1219])).
fof(f45447,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1221])).
fof(f45516,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl804),
  inference(cnf_transformation,[],[f45516_D])).
fof(f45516_D,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl804),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl804])])).
fof(f45446,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1207])).
fof(f45445,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1209])).
fof(f45515,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl803),
  inference(cnf_transformation,[],[f45515_D])).
fof(f45515_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl803),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl803])])).
fof(f45405,plain,(
  ( ! [X621,X623,X617,X619,X620,X622,X618] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X617),X618))))) | s('type.list.list'(X617),X618) != s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X619),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X620),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X621),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X622),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X623),s('type.list.list'(X617),'const.list.NIL_0')))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1233])).
fof(f45404,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611))))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1231])).
fof(f45513,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl801),
  inference(cnf_transformation,[],[f45513_D])).
fof(f45513_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl801),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl801])])).
fof(f45403,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601))))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1229])).
fof(f45402,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1227])).
fof(f45511,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl799),
  inference(cnf_transformation,[],[f45511_D])).
fof(f45511_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl799),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl799])])).
fof(f45401,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580))))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1225])).
fof(f45400,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1223])).
fof(f45509,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl797),
  inference(cnf_transformation,[],[f45509_D])).
fof(f45509_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl797),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl797])])).
fof(f45399,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557))))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1221])).
fof(f45398,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1219])).
fof(f45507,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl795),
  inference(cnf_transformation,[],[f45507_D])).
fof(f45507_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl795),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl795])])).
fof(f45397,plain,(
  ( ! [X540,X542,X536,X538,X532,X534,X530,X541,X543,X537,X539,X533,X535,X531] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X530),X531))))) | s('type.list.list'(X530),X531) != s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X532),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X533),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X534),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X535),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X536),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X537),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X538),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X539),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X540),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X541),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X542),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X543),s('type.list.list'(X530),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1217])).
fof(f45396,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517))))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1215])).
fof(f45505,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl793),
  inference(cnf_transformation,[],[f45505_D])).
fof(f45505_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl793),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl793])])).
fof(f45395,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502))))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1213])).
fof(f45394,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1211])).
fof(f45503,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl791),
  inference(cnf_transformation,[],[f45503_D])).
fof(f45503_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl791),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl791])])).
fof(f45393,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471))))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1209])).
fof(f45392,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1207])).
fof(f45501,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl789),
  inference(cnf_transformation,[],[f45501_D])).
fof(f45501_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ~$spl789),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl789])])).
fof(f45391,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1205])).
fof(f45390,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl23),
  inference(superposition,[],[f5337,f1203])).
fof(f45337,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl787),
  inference(cnf_transformation,[],[f45337_D])).
fof(f45337_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl787),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl787])])).
fof(f45280,plain,(
  ( ! [X926,X930,X928,X932,X927,X931,X929] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X926),X927))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X926),X927) != s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X928),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X929),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X930),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X931),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X932),s('type.list.list'(X926),'const.list.NIL_0')))))))))))) ) | $spl231),
  inference(superposition,[],[f5260,f1231])).
fof(f45279,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) | $spl231),
  inference(superposition,[],[f5260,f1233])).
fof(f45335,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl785),
  inference(cnf_transformation,[],[f45335_D])).
fof(f45335_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl785),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl785])])).
fof(f45278,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5260,f1223])).
fof(f45277,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5260,f1225])).
fof(f45333,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl783),
  inference(cnf_transformation,[],[f45333_D])).
fof(f45333_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl783),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl783])])).
fof(f45276,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5260,f1211])).
fof(f45275,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5260,f1213])).
fof(f45331,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl781),
  inference(cnf_transformation,[],[f45331_D])).
fof(f45331_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ~$spl781),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl781])])).
fof(f45274,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5260,f1203])).
fof(f45273,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5260,f1205])).
fof(f45329,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl779),
  inference(cnf_transformation,[],[f45329_D])).
fof(f45329_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl779),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl779])])).
fof(f45272,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5260,f1227])).
fof(f45271,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5260,f1229])).
fof(f45327,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl777),
  inference(cnf_transformation,[],[f45327_D])).
fof(f45327_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl777),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl777])])).
fof(f45270,plain,(
  ( ! [X810,X808,X812,X802,X800,X806,X804,X799,X811,X809,X803,X801,X807,X805] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X799),X800))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X799),X800) != s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X801),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X802),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X803),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X804),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X805),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X806),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X807),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X808),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X809),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X810),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X811),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X812),s('type.list.list'(X799),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5260,f1215])).
fof(f45269,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5260,f1217])).
fof(f45325,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl775),
  inference(cnf_transformation,[],[f45325_D])).
fof(f45325_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl775),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl775])])).
fof(f45268,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5260,f1219])).
fof(f45267,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5260,f1221])).
fof(f45323,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl773),
  inference(cnf_transformation,[],[f45323_D])).
fof(f45323_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl773),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl773])])).
fof(f45266,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5260,f1207])).
fof(f45265,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5260,f1209])).
fof(f45319,plain,(
  ( ! [X716] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X716)))) ) | $spl768),
  inference(cnf_transformation,[],[f45319_D])).
fof(f45319_D,plain,(
  ( ! [X716] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X716)))) ) <=> ~$spl768),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl768])])).
fof(f45321,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl771),
  inference(cnf_transformation,[],[f45321_D])).
fof(f45321_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl771),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl771])])).
fof(f45314,plain,(
  ( ! [X717] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X717)))) ) | $spl231),
  inference(trivial_inequality_removal,[],[f45259])).
fof(f45259,plain,(
  ( ! [X717] : (s('type.num.num',X717) != s('type.num.num',X717) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X717)))) ) | $spl231),
  inference(superposition,[],[f5260,f1331])).
fof(f45315,plain,(
  ( ! [X716] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X716)))) ) | $spl231),
  inference(trivial_inequality_removal,[],[f45258])).
fof(f45258,plain,(
  ( ! [X716] : (s('type.num.num',X716) != s('type.num.num',X716) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X716)))) ) | $spl231),
  inference(superposition,[],[f5260,f1333])).
fof(f45318,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl766),
  inference(cnf_transformation,[],[f45318_D])).
fof(f45318_D,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl766),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl766])])).
fof(f45211,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5260,f1205])).
fof(f45210,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5260,f1203])).
fof(f12536,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl247),
  inference(cnf_transformation,[],[f12536_D])).
fof(f12536_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl247),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl247])])).
fof(f43510,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | $spl765),
  inference(cnf_transformation,[],[f43510_D])).
fof(f43510_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl765),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl765])])).
fof(f15162,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl369),
  inference(superposition,[],[f14970,f1311])).
fof(f43508,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl763),
  inference(cnf_transformation,[],[f43508_D])).
fof(f43508_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl763),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl763])])).
fof(f15339,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl371),
  inference(superposition,[],[f14972,f1311])).
fof(f43506,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | $spl761),
  inference(cnf_transformation,[],[f43506_D])).
fof(f43506_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl761),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl761])])).
fof(f15387,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl377),
  inference(superposition,[],[f14978,f1311])).
fof(f43502,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl759),
  inference(cnf_transformation,[],[f43502_D])).
fof(f43502_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl759),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl759])])).
fof(f17450,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl205),
  inference(superposition,[],[f5145,f1311])).
fof(f43500,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl757),
  inference(cnf_transformation,[],[f43500_D])).
fof(f43500_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl757),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl757])])).
fof(f18691,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl211),
  inference(superposition,[],[f5157,f1311])).
fof(f43498,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl755),
  inference(cnf_transformation,[],[f43498_D])).
fof(f43498_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl755),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl755])])).
fof(f18724,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl217),
  inference(superposition,[],[f5169,f1311])).
fof(f43496,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))) | $spl753),
  inference(cnf_transformation,[],[f43496_D])).
fof(f43496_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl753),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl753])])).
fof(f18787,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl399),
  inference(superposition,[],[f18751,f1311])).
fof(f18826,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl399),
  inference(superposition,[],[f18754,f1311])).
fof(f18754,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl399),
  inference(resolution,[],[f18751,f1312])).
fof(f43494,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | $spl751),
  inference(cnf_transformation,[],[f43494_D])).
fof(f43494_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl751),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl751])])).
fof(f19177,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl441),
  inference(superposition,[],[f19034,f1311])).
fof(f43492,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl749),
  inference(cnf_transformation,[],[f43492_D])).
fof(f43492_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl749),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl749])])).
fof(f19201,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl443),
  inference(superposition,[],[f19036,f1311])).
fof(f43490,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | $spl747),
  inference(cnf_transformation,[],[f43490_D])).
fof(f43490_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl747),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl747])])).
fof(f19347,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl449),
  inference(superposition,[],[f19042,f1311])).
fof(f43488,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl745),
  inference(cnf_transformation,[],[f43488_D])).
fof(f43488_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl745),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl745])])).
fof(f21844,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl181),
  inference(superposition,[],[f5103,f1311])).
fof(f43486,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl742),
  inference(cnf_transformation,[],[f43486_D])).
fof(f43486_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl742),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl742])])).
fof(f24603,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl399),
  inference(superposition,[],[f18761,f1311])).
fof(f18761,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl399),
  inference(resolution,[],[f18751,f1281])).
fof(f43484,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl741),
  inference(cnf_transformation,[],[f43484_D])).
fof(f43484_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl741),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl741])])).
fof(f25750,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl399),
  inference(superposition,[],[f18770,f1311])).
fof(f18770,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl399),
  inference(resolution,[],[f18751,f1317])).
fof(f1317,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f922])).
fof(f43482,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl739),
  inference(cnf_transformation,[],[f43482_D])).
fof(f43482_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl739),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl739])])).
fof(f27312,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl271),
  inference(superposition,[],[f14613,f1311])).
fof(f43480,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl737),
  inference(cnf_transformation,[],[f43480_D])).
fof(f43480_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl737),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl737])])).
fof(f27348,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl275),
  inference(superposition,[],[f14616,f1311])).
fof(f43478,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl735),
  inference(cnf_transformation,[],[f43478_D])).
fof(f43478_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl735),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl735])])).
fof(f27383,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl279),
  inference(superposition,[],[f14619,f1311])).
fof(f43476,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))))))) | $spl733),
  inference(cnf_transformation,[],[f43476_D])).
fof(f43476_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))))))) <=> ~$spl733),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl733])])).
fof(f27863,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl119),
  inference(superposition,[],[f4962,f1311])).
fof(f43474,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) | $spl731),
  inference(cnf_transformation,[],[f43474_D])).
fof(f43474_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) <=> ~$spl731),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl731])])).
fof(f27967,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl467),
  inference(superposition,[],[f21879,f1311])).
fof(f43472,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl729),
  inference(cnf_transformation,[],[f43472_D])).
fof(f43472_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl729),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl729])])).
fof(f28012,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl467),
  inference(superposition,[],[f27934,f1311])).
fof(f27934,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl467),
  inference(resolution,[],[f21879,f1312])).
fof(f43470,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl727),
  inference(cnf_transformation,[],[f43470_D])).
fof(f43470_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl727),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl727])])).
fof(f28036,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl119),
  inference(superposition,[],[f27924,f1311])).
fof(f27924,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl119),
  inference(subsumption_resolution,[],[f27923,f1342])).
fof(f27923,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl119),
  inference(forward_demodulation,[],[f27883,f1330])).
fof(f27883,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl119),
  inference(superposition,[],[f4962,f1334])).
fof(f43468,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl725),
  inference(cnf_transformation,[],[f43468_D])).
fof(f43468_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl725),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl725])])).
fof(f28066,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl373),
  inference(superposition,[],[f14974,f1311])).
fof(f43466,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))) | $spl723),
  inference(cnf_transformation,[],[f43466_D])).
fof(f43466_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))) <=> ~$spl723),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl723])])).
fof(f28811,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl369),
  inference(superposition,[],[f15175,f1311])).
fof(f15175,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl369),
  inference(trivial_inequality_removal,[],[f15172])).
fof(f15172,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl369),
  inference(superposition,[],[f14970,f1311])).
fof(f1461,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))) | $spl32),
  inference(cnf_transformation,[],[f1461_D])).
fof(f1461_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f29095,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl20),
  inference(superposition,[],[f1449,f1311])).
fof(f1449,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl20),
  inference(cnf_transformation,[],[f1449_D])).
fof(f1449_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f43464,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl721),
  inference(cnf_transformation,[],[f43464_D])).
fof(f43464_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl721),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl721])])).
fof(f29159,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ($spl20 | $spl45)),
  inference(superposition,[],[f29144,f1311])).
fof(f29144,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl20 | $spl45)),
  inference(subsumption_resolution,[],[f29143,f1323])).
fof(f29143,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl20 | $spl45)),
  inference(forward_demodulation,[],[f29108,f11218])).
fof(f29108,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl20),
  inference(superposition,[],[f1449,f1333])).
fof(f43462,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | $spl719),
  inference(cnf_transformation,[],[f43462_D])).
fof(f43462_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl719),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl719])])).
fof(f29198,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ($spl20 | $spl45)),
  inference(superposition,[],[f29187,f1311])).
fof(f29187,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl20 | $spl45)),
  inference(trivial_inequality_removal,[],[f29178])).
fof(f29178,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl20 | $spl45)),
  inference(superposition,[],[f29144,f1332])).
fof(f21903,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl471),
  inference(cnf_transformation,[],[f21903_D])).
fof(f21903_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl471),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl471])])).
fof(f29395,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl481),
  inference(superposition,[],[f29378,f1311])).
fof(f43460,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | $spl717),
  inference(cnf_transformation,[],[f43460_D])).
fof(f43460_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl717),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl717])])).
fof(f29426,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl481),
  inference(superposition,[],[f29413,f1311])).
fof(f29413,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl481),
  inference(trivial_inequality_removal,[],[f29404])).
fof(f29404,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl481),
  inference(superposition,[],[f29378,f1332])).
fof(f27919,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) | $spl472),
  inference(cnf_transformation,[],[f27919_D])).
fof(f27919_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) <=> ~$spl472),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl472])])).
fof(f29473,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl170),
  inference(superposition,[],[f5083,f1311])).
fof(f5083,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl170),
  inference(cnf_transformation,[],[f5083_D])).
fof(f5083_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl170),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl170])])).
fof(f43458,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl715),
  inference(cnf_transformation,[],[f43458_D])).
fof(f43458_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl715),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl715])])).
fof(f29618,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ($spl45 | $spl170)),
  inference(superposition,[],[f29523,f1311])).
fof(f29523,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl45 | $spl170)),
  inference(subsumption_resolution,[],[f29522,f1323])).
fof(f29522,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl45 | $spl170)),
  inference(forward_demodulation,[],[f29485,f11218])).
fof(f29485,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl170),
  inference(superposition,[],[f5083,f1333])).
fof(f43456,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl713),
  inference(cnf_transformation,[],[f43456_D])).
fof(f43456_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl713),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl713])])).
fof(f29656,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ($spl45 | $spl170)),
  inference(superposition,[],[f29645,f1311])).
fof(f29645,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl45 | $spl170)),
  inference(trivial_inequality_removal,[],[f29636])).
fof(f29636,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl45 | $spl170)),
  inference(superposition,[],[f29523,f1332])).
fof(f43454,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) | $spl711),
  inference(cnf_transformation,[],[f43454_D])).
fof(f43454_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) <=> ~$spl711),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl711])])).
fof(f29783,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl481),
  inference(superposition,[],[f29412,f1311])).
fof(f29412,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl481),
  inference(trivial_inequality_removal,[],[f29409])).
fof(f29409,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl481),
  inference(superposition,[],[f29378,f1311])).
fof(f43452,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) | $spl709),
  inference(cnf_transformation,[],[f43452_D])).
fof(f43452_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) <=> ~$spl709),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl709])])).
fof(f29859,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl371),
  inference(superposition,[],[f15352,f1311])).
fof(f15352,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl371),
  inference(trivial_inequality_removal,[],[f15349])).
fof(f15349,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl371),
  inference(superposition,[],[f14972,f1311])).
fof(f43450,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))) | $spl707),
  inference(cnf_transformation,[],[f43450_D])).
fof(f43450_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))) <=> ~$spl707),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl707])])).
fof(f29998,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl377),
  inference(superposition,[],[f15400,f1311])).
fof(f15400,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl377),
  inference(trivial_inequality_removal,[],[f15397])).
fof(f15397,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl377),
  inference(superposition,[],[f14978,f1311])).
fof(f43448,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))))) | $spl704),
  inference(cnf_transformation,[],[f43448_D])).
fof(f43448_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))))) <=> ~$spl704),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl704])])).
fof(f35343,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl136),
  inference(superposition,[],[f5005,f1311])).
fof(f5005,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl136),
  inference(cnf_transformation,[],[f5005_D])).
fof(f5005_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f43446,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl703),
  inference(cnf_transformation,[],[f43446_D])).
fof(f43446_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl703),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl703])])).
fof(f35491,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl347),
  inference(superposition,[],[f14953,f1311])).
fof(f43444,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | $spl701),
  inference(cnf_transformation,[],[f43444_D])).
fof(f43444_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl701),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl701])])).
fof(f35690,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl479),
  inference(superposition,[],[f29007,f1311])).
fof(f43442,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) | $spl699),
  inference(cnf_transformation,[],[f43442_D])).
fof(f43442_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl699),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl699])])).
fof(f35720,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl479),
  inference(superposition,[],[f35709,f1311])).
fof(f35709,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl479),
  inference(trivial_inequality_removal,[],[f35700])).
fof(f35700,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl479),
  inference(superposition,[],[f29007,f1332])).
fof(f43440,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))) | $spl697),
  inference(cnf_transformation,[],[f43440_D])).
fof(f43440_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))) <=> ~$spl697),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl697])])).
fof(f35764,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl479),
  inference(superposition,[],[f35708,f1311])).
fof(f35708,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl479),
  inference(trivial_inequality_removal,[],[f35705])).
fof(f35705,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl479),
  inference(superposition,[],[f29007,f1311])).
fof(f43438,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl695),
  inference(cnf_transformation,[],[f43438_D])).
fof(f43438_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl695),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl695])])).
fof(f35814,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl363),
  inference(superposition,[],[f14965,f1311])).
fof(f43436,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))))) | $spl692),
  inference(cnf_transformation,[],[f43436_D])).
fof(f43436_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))))) <=> ~$spl692),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl692])])).
fof(f35879,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl142),
  inference(superposition,[],[f5020,f1311])).
fof(f5020,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl142),
  inference(cnf_transformation,[],[f5020_D])).
fof(f5020_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f43434,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl691),
  inference(cnf_transformation,[],[f43434_D])).
fof(f43434_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl691),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl691])])).
fof(f36117,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl351),
  inference(superposition,[],[f14956,f1311])).
fof(f1453,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))))) | $spl24),
  inference(cnf_transformation,[],[f1453_D])).
fof(f1453_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f36185,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl148),
  inference(superposition,[],[f5034,f1311])).
fof(f5034,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl148),
  inference(cnf_transformation,[],[f5034_D])).
fof(f5034_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f43432,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl689),
  inference(cnf_transformation,[],[f43432_D])).
fof(f43432_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl689),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl689])])).
fof(f36795,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl463),
  inference(superposition,[],[f21875,f1311])).
fof(f43430,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl687),
  inference(cnf_transformation,[],[f43430_D])).
fof(f43430_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl687),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl687])])).
fof(f36830,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl463),
  inference(superposition,[],[f36818,f1311])).
fof(f36818,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl463),
  inference(trivial_inequality_removal,[],[f36809])).
fof(f36809,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl463),
  inference(superposition,[],[f21875,f1332])).
fof(f43428,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))))) | $spl684),
  inference(cnf_transformation,[],[f43428_D])).
fof(f43428_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))))) <=> ~$spl684),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl684])])).
fof(f36883,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl154),
  inference(superposition,[],[f5049,f1311])).
fof(f5049,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl154),
  inference(cnf_transformation,[],[f5049_D])).
fof(f5049_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f43426,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | $spl683),
  inference(cnf_transformation,[],[f43426_D])).
fof(f43426_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl683),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl683])])).
fof(f37007,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl591),
  inference(superposition,[],[f36445,f1311])).
fof(f43424,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl681),
  inference(cnf_transformation,[],[f43424_D])).
fof(f43424_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl681),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl681])])).
fof(f37057,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl595),
  inference(superposition,[],[f36449,f1311])).
fof(f43422,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | $spl679),
  inference(cnf_transformation,[],[f43422_D])).
fof(f43422_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl679),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl679])])).
fof(f37238,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl601),
  inference(superposition,[],[f36455,f1311])).
fof(f43328,plain,(
  $false | ($spl0 | $spl2 | $spl176)),
  inference(subsumption_resolution,[],[f43327,f1346])).
fof(f43327,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK814('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK815('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK816('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK817('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK818('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK819('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK820('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK821('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK822('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK823('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK824('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK825('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),sK813('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)))))))))))))))))))))))))) | ($spl0 | $spl176)),
  inference(forward_demodulation,[],[f43326,f12951])).
fof(f12951,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0)))) | $spl176),
  inference(resolution,[],[f5095,f1200])).
fof(f1200,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK926(X1,X0)),s('type.list.list'(X0),sK925(X1,X0)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(cnf_transformation,[],[f835])).
fof(f835,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK926(X1,X0)),s('type.list.list'(X0),sK925(X1,X0))))) & (! [X2,X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK925,sK926])],[f834])).
fof(f834,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ? [X4,X5] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X4)))) & (! [X2,X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(rectify,[],[f833])).
fof(f833,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))) & (! [X2,X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(nnf_transformation,[],[f457])).
fof(f457,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))))),
  inference(flattening,[],[f456])).
fof(f456,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))))),
  inference(rectify,[],[f213])).
fof(f213,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ? [X8,X9] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X8))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49||split|5')).
fof(f5095,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl176),
  inference(cnf_transformation,[],[f5095_D])).
fof(f5095_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl176),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl176])])).
fof(f43326,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0)))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK814('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK815('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK816('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK817('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK818('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK819('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK820('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK821('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK822('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK823('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK824('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK825('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),sK813('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)))))))))))))))))))))))))) | ($spl0 | $spl176)),
  inference(subsumption_resolution,[],[f43325,f1344])).
fof(f43325,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0)))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK814('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK815('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK816('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK817('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK818('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK819('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK820('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK821('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK822('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK823('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK824('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK825('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),sK813('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)))))))))))))))))))))))))) | $spl176),
  inference(forward_demodulation,[],[f41720,f949])).
fof(f41720,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0)))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK814('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK815('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK816('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK817('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK818('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK819('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK820('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK821('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK822('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK823('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK824('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK825('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)),s('type.list.list'(sK0),sK813('const.list.CONS_2'(s(sK0,sK926(sK1,sK0)),s('type.list.list'(sK0),sK925(sK1,sK0))),sK0)))))))))))))))))))))))))) | $spl176),
  inference(superposition,[],[f1172,f12951])).
fof(f41267,plain,(
  ( ! [X1366,X1365] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1365),s('type.list.list'(sK0),X1366)))))) ) | $spl676),
  inference(cnf_transformation,[],[f41267_D])).
fof(f41267_D,plain,(
  ( ! [X1366,X1365] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1365),s('type.list.list'(sK0),X1366)))))) ) <=> ~$spl676),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl676])])).
fof(f41265,plain,(
  ( ! [X1393,X1395,X1397,X1399,X1400,X1402,X1394,X1396,X1398,X1401,X1403] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1393),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1394),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1395),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1396),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1397),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1398),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1399),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1400),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1401),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1402),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1403),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))) ) | $spl672),
  inference(cnf_transformation,[],[f41265_D])).
fof(f41265_D,plain,(
  ( ! [X1393,X1395,X1397,X1399,X1400,X1402,X1394,X1396,X1398,X1401,X1403] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1393),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1394),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1395),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1396),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1397),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1398),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1399),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1400),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1401),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1402),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1403),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))) ) <=> ~$spl672),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl672])])).
fof(f40131,plain,(
  ( ! [X1360,X1362,X1364,X1352,X1354,X1356,X1358,X1361,X1363,X1353,X1355,X1357,X1359] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1354),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1355),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1356),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1357),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1358),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1359),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1360),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1361),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1362),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1363),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1364),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1352),s('type.list.list'(sK0),X1353)))))) ) | $spl2),
  inference(superposition,[],[f1346,f1339])).
fof(f1339,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f929])).
fof(f40132,plain,(
  ( ! [X1366,X1377,X1369,X1371,X1373,X1375,X1365,X1367,X1376,X1368,X1370,X1372,X1374] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1367),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1368),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1369),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1370),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1371),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1372),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1373),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1374),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1375),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1376),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1377),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1365),s('type.list.list'(sK0),X1366)))))) ) | $spl2),
  inference(superposition,[],[f1346,f1337])).
fof(f1337,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f928])).
fof(f41266,plain,(
  ( ! [X1391,X1392] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1391),s('type.list.list'(sK0),X1392))))))))) ) | $spl674),
  inference(cnf_transformation,[],[f41266_D])).
fof(f41266_D,plain,(
  ( ! [X1391,X1392] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1391),s('type.list.list'(sK0),X1392))))))))) ) <=> ~$spl674),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl674])])).
fof(f40133,plain,(
  ( ! [X1385,X1387,X1389,X1379,X1381,X1383,X1384,X1386,X1388,X1390,X1378,X1380,X1382] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1380),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1381),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1382),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1383),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1384),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1385),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1386),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1387),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1388),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1389),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1390),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1378),s('type.list.list'(sK0),X1379))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1272])).
fof(f1272,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f894])).
fof(f894,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f502])).
fof(f502,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f501])).
fof(f501,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f55])).
fof(f55,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_COMPARE_|49||split|2')).
fof(f41029,plain,(
  ( ! [X1393,X1395,X1397,X1399,X1391,X1400,X1402,X1392,X1394,X1396,X1398,X1401,X1403] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1391),s('type.list.list'(sK0),X1392)))))))) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1393),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1394),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1395),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1396),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1397),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1398),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1399),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1400),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1401),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1402),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1403),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f40134,f949])).
fof(f40134,plain,(
  ( ! [X1393,X1395,X1397,X1399,X1391,X1400,X1402,X1392,X1394,X1396,X1398,X1401,X1403] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1393),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1394),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1395),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1396),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1397),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1398),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1399),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1400),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1401),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1402),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1403),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1391),s('type.list.list'(sK0),X1392))))),s('type.num.num','const.num.|48|_0'))))) ) | $spl2),
  inference(superposition,[],[f1346,f1270])).
fof(f1270,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(cnf_transformation,[],[f893])).
fof(f893,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.|48|_0'))))))),
  inference(nnf_transformation,[],[f500])).
fof(f500,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.|48|_0')))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f499])).
fof(f499,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.|48|_0')))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f58])).
fof(f58,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.num.|48|_0')))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_COMPARE_|49||split|3')).
fof(f41264,plain,(
  ( ! [X1213,X1212,X1211] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1211),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1212),s('type.list.list'(sK0),X1213)))))))) ) | $spl670),
  inference(cnf_transformation,[],[f41264_D])).
fof(f41264_D,plain,(
  ( ! [X1213,X1212,X1211] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1211),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1212),s('type.list.list'(sK0),X1213)))))))) ) <=> ~$spl670),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl670])])).
fof(f41262,plain,(
  ( ! [X1242,X1240,X1246,X1244,X1248,X1243,X1241,X1247,X1245,X1249] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1240),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1241),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1242),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1243),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1244),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1245),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1246),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1247),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1248),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1249),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) | $spl666),
  inference(cnf_transformation,[],[f41262_D])).
fof(f41262_D,plain,(
  ( ! [X1242,X1240,X1246,X1244,X1248,X1243,X1241,X1247,X1245,X1249] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1240),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1241),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1242),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1243),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1244),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1245),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1246),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1247),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1248),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1249),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl666),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl666])])).
fof(f40238,plain,(
  ( ! [X1203,X1201,X1207,X1205,X1198,X1210,X1208,X1202,X1200,X1206,X1204,X1199,X1209] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1201),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1202),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1203),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1204),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1205),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1206),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1207),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1208),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1209),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1210),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1198),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1199),s('type.list.list'(sK0),X1200)))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1339])).
fof(f40239,plain,(
  ( ! [X1220,X1222,X1211,X1213,X1219,X1217,X1223,X1214,X1221,X1212,X1218,X1216,X1215] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1214),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1215),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1216),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1217),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1218),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1219),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1220),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1221),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1222),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1223),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1211),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1212),s('type.list.list'(sK0),X1213)))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1337])).
fof(f41263,plain,(
  ( ! [X1238,X1239,X1237] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1237),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1238),s('type.list.list'(sK0),X1239))))))))))) ) | $spl668),
  inference(cnf_transformation,[],[f41263_D])).
fof(f41263_D,plain,(
  ( ! [X1238,X1239,X1237] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1237),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1238),s('type.list.list'(sK0),X1239))))))))))) ) <=> ~$spl668),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl668])])).
fof(f40240,plain,(
  ( ! [X1234,X1232,X1236,X1227,X1225,X1231,X1229,X1235,X1233,X1226,X1224,X1230,X1228] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1227),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1228),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1229),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1230),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1231),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1232),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1233),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1234),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1235),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1236),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1224),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1225),s('type.list.list'(sK0),X1226))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1272])).
fof(f41052,plain,(
  ( ! [X1242,X1240,X1238,X1244,X1246,X1248,X1243,X1241,X1239,X1237,X1245,X1247,X1249] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1237),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1238),s('type.list.list'(sK0),X1239)))))))))) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1240),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1241),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1242),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1243),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1244),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1245),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1246),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1247),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1248),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1249),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f40241,f949])).
fof(f40241,plain,(
  ( ! [X1242,X1240,X1246,X1244,X1238,X1248,X1243,X1241,X1247,X1245,X1237,X1239,X1249] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1240),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1241),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1242),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1243),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1244),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1245),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1246),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1247),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1248),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1249),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1237),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1238),s('type.list.list'(sK0),X1239))))))),s('type.num.num','const.num.|48|_0'))))) ) | $spl2),
  inference(superposition,[],[f1346,f1270])).
fof(f41261,plain,(
  ( ! [X1079,X1077,X1078,X1076] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1076),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1077),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1078),s('type.list.list'(sK0),X1079)))))))))) ) | $spl664),
  inference(cnf_transformation,[],[f41261_D])).
fof(f41261_D,plain,(
  ( ! [X1079,X1077,X1078,X1076] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1076),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1077),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1078),s('type.list.list'(sK0),X1079)))))))))) ) <=> ~$spl664),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl664])])).
fof(f41259,plain,(
  ( ! [X1112,X1106,X1110,X1108,X1113,X1107,X1111,X1109,X1114] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1106),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1107),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1108),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1109),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1110),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1111),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1112),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1113),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1114),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) | $spl660),
  inference(cnf_transformation,[],[f41259_D])).
fof(f41259_D,plain,(
  ( ! [X1112,X1106,X1110,X1108,X1113,X1107,X1111,X1109,X1114] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1106),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1107),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1108),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1109),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1110),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1111),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1112),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1113),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1114),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl660),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl660])])).
fof(f40342,plain,(
  ( ! [X1075,X1073,X1066,X1064,X1070,X1068,X1074,X1072,X1067,X1065,X1071,X1069,X1063] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1067),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1068),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1069),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1070),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1071),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1072),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1073),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1074),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1075),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1063),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1064),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1065),s('type.list.list'(sK0),X1066)))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1339])).
fof(f40343,plain,(
  ( ! [X1081,X1087,X1085,X1079,X1077,X1082,X1080,X1086,X1084,X1078,X1076,X1088,X1083] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1080),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1081),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1082),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1083),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1084),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1085),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1086),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1087),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1088),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1076),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1077),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1078),s('type.list.list'(sK0),X1079)))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1337])).
fof(f41260,plain,(
  ( ! [X1104,X1103,X1105,X1102] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1102),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1103),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1104),s('type.list.list'(sK0),X1105))))))))))))) ) | $spl662),
  inference(cnf_transformation,[],[f41260_D])).
fof(f41260_D,plain,(
  ( ! [X1104,X1103,X1105,X1102] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1102),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1103),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1104),s('type.list.list'(sK0),X1105))))))))))))) ) <=> ~$spl662),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl662])])).
fof(f40344,plain,(
  ( ! [X1099,X1097,X1101,X1091,X1089,X1095,X1093,X1098,X1096,X1100,X1090,X1094,X1092] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1093),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1094),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1095),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1096),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1097),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1098),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1099),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1100),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1101),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1089),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1090),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1091),s('type.list.list'(sK0),X1092))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1272])).
fof(f41075,plain,(
  ( ! [X1112,X1106,X1104,X1110,X1108,X1103,X1113,X1107,X1105,X1111,X1109,X1102,X1114] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1102),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1103),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1104),s('type.list.list'(sK0),X1105)))))))))))) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1106),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1107),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1108),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1109),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1110),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1111),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1112),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1113),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1114),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f40345,f949])).
fof(f40345,plain,(
  ( ! [X1112,X1106,X1104,X1110,X1108,X1103,X1113,X1107,X1105,X1111,X1109,X1102,X1114] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1106),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1107),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1108),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1109),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1110),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1111),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1112),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1113),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1114),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1102),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1103),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1104),s('type.list.list'(sK0),X1105))))))))),s('type.num.num','const.num.|48|_0'))))) ) | $spl2),
  inference(superposition,[],[f1346,f1270])).
fof(f41258,plain,(
  ( ! [X947,X951,X949,X950,X948] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X947),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X948),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X949),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X950),s('type.list.list'(sK0),X951)))))))))))) ) | $spl658),
  inference(cnf_transformation,[],[f41258_D])).
fof(f41258_D,plain,(
  ( ! [X947,X951,X949,X950,X948] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X947),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X948),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X949),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X950),s('type.list.list'(sK0),X951)))))))))))) ) <=> ~$spl658),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl658])])).
fof(f41256,plain,(
  ( ! [X984,X978,X982,X980,X985,X979,X983,X981] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X978),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X979),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X980),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X981),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X982),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X983),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X984),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X985),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) | $spl654),
  inference(cnf_transformation,[],[f41256_D])).
fof(f41256_D,plain,(
  ( ! [X984,X978,X982,X980,X985,X979,X983,X981] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X978),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X979),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X980),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X981),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X982),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X983),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X984),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X985),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl654),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl654])])).
fof(f40443,plain,(
  ( ! [X945,X938,X936,X942,X940,X934,X946,X944,X939,X937,X943,X941,X935] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X939),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X940),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X941),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X942),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X943),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X944),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X945),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X946),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X934),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X935),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X936),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X937),s('type.list.list'(sK0),X938)))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1339])).
fof(f40444,plain,(
  ( ! [X957,X947,X951,X949,X954,X952,X958,X956,X950,X948,X955,X953,X959] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X952),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X953),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X954),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X955),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X956),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X957),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X958),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X959),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X947),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X948),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X949),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X950),s('type.list.list'(sK0),X951)))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1337])).
fof(f41257,plain,(
  ( ! [X976,X975,X973,X977,X974] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X973),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X974),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X975),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X976),s('type.list.list'(sK0),X977))))))))))))))) ) | $spl656),
  inference(cnf_transformation,[],[f41257_D])).
fof(f41257_D,plain,(
  ( ! [X976,X975,X973,X977,X974] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X973),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X974),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X975),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X976),s('type.list.list'(sK0),X977))))))))))))))) ) <=> ~$spl656),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl656])])).
fof(f40445,plain,(
  ( ! [X971,X969,X963,X961,X967,X965,X970,X968,X972,X962,X960,X966,X964] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X965),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X966),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X967),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X968),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X969),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X970),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X971),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X972),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X960),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X961),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X962),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X963),s('type.list.list'(sK0),X964))))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1272])).
fof(f41098,plain,(
  ( ! [X984,X978,X976,X982,X980,X975,X973,X985,X979,X977,X983,X981,X974] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X973),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X974),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X975),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X976),s('type.list.list'(sK0),X977)))))))))))))) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X978),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X979),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X980),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X981),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X982),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X983),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X984),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X985),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f40446,f949])).
fof(f40446,plain,(
  ( ! [X984,X978,X976,X982,X980,X975,X973,X985,X979,X977,X983,X981,X974] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X978),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X979),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X980),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X981),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X982),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X983),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X984),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X985),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X973),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X974),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X975),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X976),s('type.list.list'(sK0),X977))))))))))),s('type.num.num','const.num.|48|_0'))))) ) | $spl2),
  inference(superposition,[],[f1346,f1270])).
fof(f41255,plain,(
  ( ! [X825,X829,X826,X824,X828,X827] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X824),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X825),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X826),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X827),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X828),s('type.list.list'(sK0),X829)))))))))))))) ) | $spl652),
  inference(cnf_transformation,[],[f41255_D])).
fof(f41255_D,plain,(
  ( ! [X825,X829,X826,X824,X828,X827] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X824),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X825),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X826),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X827),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X828),s('type.list.list'(sK0),X829)))))))))))))) ) <=> ~$spl652),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl652])])).
fof(f41253,plain,(
  ( ! [X860,X859,X857,X861,X858,X856,X862] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X856),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X857),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X858),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X859),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X860),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X861),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X862),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))) ) | $spl648),
  inference(cnf_transformation,[],[f41253_D])).
fof(f41253_D,plain,(
  ( ! [X860,X859,X857,X861,X858,X856,X862] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X856),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X857),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X858),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X859),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X860),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X861),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X862),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))) ) <=> ~$spl648),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl648])])).
fof(f40541,plain,(
  ( ! [X819,X817,X823,X821,X814,X812,X818,X816,X822,X820,X811,X815,X813] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X817),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X818),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X819),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X820),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X821),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X822),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X823),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X811),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X812),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X813),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X814),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X815),s('type.list.list'(sK0),X816)))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1339])).
fof(f40542,plain,(
  ( ! [X825,X831,X829,X835,X833,X826,X824,X830,X828,X834,X832,X836,X827] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X830),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X831),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X832),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X833),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X834),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X835),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X836),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X824),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X825),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X826),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X827),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X828),s('type.list.list'(sK0),X829)))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1337])).
fof(f41254,plain,(
  ( ! [X850,X854,X852,X851,X855,X853] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X850),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X851),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X852),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X853),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X854),s('type.list.list'(sK0),X855))))))))))))))))) ) | $spl650),
  inference(cnf_transformation,[],[f41254_D])).
fof(f41254_D,plain,(
  ( ! [X850,X854,X852,X851,X855,X853] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X850),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X851),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X852),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X853),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X854),s('type.list.list'(sK0),X855))))))))))))))))) ) <=> ~$spl650),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl650])])).
fof(f40543,plain,(
  ( ! [X848,X843,X841,X847,X845,X839,X837,X849,X842,X840,X846,X844,X838] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X843),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X844),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X845),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X846),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X847),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X848),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X849),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X837),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X838),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X839),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X840),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X841),s('type.list.list'(sK0),X842))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1272])).
fof(f41121,plain,(
  ( ! [X860,X850,X854,X852,X859,X857,X861,X851,X855,X853,X858,X856,X862] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X850),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X851),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X852),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X853),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X854),s('type.list.list'(sK0),X855)))))))))))))))) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X856),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X857),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X858),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X859),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X860),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X861),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X862),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f40544,f949])).
fof(f40544,plain,(
  ( ! [X860,X850,X854,X852,X859,X857,X861,X851,X855,X853,X858,X856,X862] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X856),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X857),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X858),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X859),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X860),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X861),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X862),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X850),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X851),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X852),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X853),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X854),s('type.list.list'(sK0),X855))))))))))))),s('type.num.num','const.num.|48|_0'))))) ) | $spl2),
  inference(superposition,[],[f1346,f1270])).
fof(f41252,plain,(
  ( ! [X639,X644,X640,X642,X638,X641,X643] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X638),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X639),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X640),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X641),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X642),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X643),s('type.list.list'(sK0),X644)))))))))))))))) ) | $spl646),
  inference(cnf_transformation,[],[f41252_D])).
fof(f41252_D,plain,(
  ( ! [X639,X644,X640,X642,X638,X641,X643] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X638),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X639),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X640),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X641),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X642),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X643),s('type.list.list'(sK0),X644)))))))))))))))) ) <=> ~$spl646),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl646])])).
fof(f41250,plain,(
  ( ! [X673,X675,X671,X676,X672,X674] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X671),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X672),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X673),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X674),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X675),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X676),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))) ) | $spl642),
  inference(cnf_transformation,[],[f41250_D])).
fof(f41250_D,plain,(
  ( ! [X673,X675,X671,X676,X672,X674] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X671),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X672),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X673),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X674),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X675),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X676),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))) ) <=> ~$spl642),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl642])])).
fof(f40627,plain,(
  ( ! [X633,X635,X629,X631,X625,X627,X636,X632,X634,X628,X630,X626,X637] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X632),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X633),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X634),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X635),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X636),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X637),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X625),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X626),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X627),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X628),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X629),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X630),s('type.list.list'(sK0),X631)))))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1339])).
fof(f40628,plain,(
  ( ! [X639,X648,X650,X644,X646,X640,X642,X638,X649,X645,X647,X641,X643] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X645),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X646),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X647),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X648),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X649),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X650),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X638),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X639),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X640),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X641),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X642),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X643),s('type.list.list'(sK0),X644)))))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1337])).
fof(f41251,plain,(
  ( ! [X666,X668,X670,X664,X667,X669,X665] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X664),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X665),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X666),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X667),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X668),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X669),s('type.list.list'(sK0),X670))))))))))))))))))) ) | $spl644),
  inference(cnf_transformation,[],[f41251_D])).
fof(f41251_D,plain,(
  ( ! [X666,X668,X670,X664,X667,X669,X665] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X664),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X665),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X666),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X667),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X668),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X669),s('type.list.list'(sK0),X670))))))))))))))))))) ) <=> ~$spl644),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl644])])).
fof(f40629,plain,(
  ( ! [X660,X662,X656,X658,X652,X654,X661,X663,X657,X659,X653,X655,X651] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X658),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X659),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X660),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X661),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X662),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X663),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X651),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X652),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X653),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X654),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X655),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X656),s('type.list.list'(sK0),X657))))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1272])).
fof(f41141,plain,(
  ( ! [X666,X668,X670,X664,X673,X675,X667,X669,X671,X665,X676,X672,X674] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X664),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X665),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X666),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X667),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X668),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X669),s('type.list.list'(sK0),X670)))))))))))))))))) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X671),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X672),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X673),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X674),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X675),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X676),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f40630,f949])).
fof(f40630,plain,(
  ( ! [X666,X668,X670,X664,X673,X675,X667,X669,X671,X665,X676,X672,X674] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X671),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X672),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X673),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X674),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X675),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X676),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X664),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X665),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X666),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X667),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X668),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X669),s('type.list.list'(sK0),X670))))))))))))))),s('type.num.num','const.num.|48|_0'))))) ) | $spl2),
  inference(superposition,[],[f1346,f1270])).
fof(f41249,plain,(
  ( ! [X540,X542,X536,X538,X541,X543,X537,X539] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X536),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X537),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X538),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X539),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X540),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X541),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X542),s('type.list.list'(sK0),X543)))))))))))))))))) ) | $spl640),
  inference(cnf_transformation,[],[f41249_D])).
fof(f41249_D,plain,(
  ( ! [X540,X542,X536,X538,X541,X543,X537,X539] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X536),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X537),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X538),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X539),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X540),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X541),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X542),s('type.list.list'(sK0),X543)))))))))))))))))) ) <=> ~$spl640),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl640])])).
fof(f41247,plain,(
  ( ! [X573,X571,X572,X574,X570] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X570),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X571),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X572),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X573),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X574),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl636),
  inference(cnf_transformation,[],[f41247_D])).
fof(f41247_D,plain,(
  ( ! [X573,X571,X572,X574,X570] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X570),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X571),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X572),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X573),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X574),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) <=> ~$spl636),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl636])])).
fof(f40710,plain,(
  ( ! [X532,X534,X528,X530,X524,X526,X533,X535,X529,X531,X525,X527,X523] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X531),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X532),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X533),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X534),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X535),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X523),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X524),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X525),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X526),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X527),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X528),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X529),s('type.list.list'(sK0),X530)))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1339])).
fof(f40711,plain,(
  ( ! [X546,X540,X536,X538,X542,X545,X547,X541,X537,X539,X543,X548,X544] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X544),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X545),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X546),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X547),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X548),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X536),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X537),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X538),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X539),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X540),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X541),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X542),s('type.list.list'(sK0),X543)))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1337])).
fof(f41248,plain,(
  ( ! [X569,X565,X567,X563,X568,X564,X566,X562] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X562),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X563),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X564),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X565),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X566),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X567),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X568),s('type.list.list'(sK0),X569))))))))))))))))))))) ) | $spl638),
  inference(cnf_transformation,[],[f41248_D])).
fof(f41248_D,plain,(
  ( ! [X569,X565,X567,X563,X568,X564,X566,X562] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X562),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X563),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X564),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X565),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X566),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X567),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X568),s('type.list.list'(sK0),X569))))))))))))))))))))) ) <=> ~$spl638),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl638])])).
fof(f40712,plain,(
  ( ! [X561,X557,X559,X553,X555,X549,X551,X560,X556,X558,X552,X554,X550] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X557),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X558),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X559),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X560),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X561),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X549),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X550),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X551),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X552),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X553),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X554),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X555),s('type.list.list'(sK0),X556))))))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1272])).
fof(f41161,plain,(
  ( ! [X573,X569,X571,X565,X567,X563,X572,X574,X568,X570,X564,X566,X562] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X562),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X563),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X564),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X565),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X566),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X567),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X568),s('type.list.list'(sK0),X569)))))))))))))))))))) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X570),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X571),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X572),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X573),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X574),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f40713,f949])).
fof(f40713,plain,(
  ( ! [X573,X569,X571,X565,X567,X563,X572,X574,X568,X570,X564,X566,X562] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X570),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X571),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X572),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X573),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X574),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X562),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X563),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X564),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X565),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X566),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X567),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X568),s('type.list.list'(sK0),X569))))))))))))))))),s('type.num.num','const.num.|48|_0'))))) ) | $spl2),
  inference(superposition,[],[f1346,f1270])).
fof(f41246,plain,(
  ( ! [X445,X447,X441,X443,X444,X446,X440,X442,X448] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X440),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X441),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X442),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X443),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X444),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X445),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X446),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X447),s('type.list.list'(sK0),X448)))))))))))))))))))) ) | $spl634),
  inference(cnf_transformation,[],[f41246_D])).
fof(f41246_D,plain,(
  ( ! [X445,X447,X441,X443,X444,X446,X440,X442,X448] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X440),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X441),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X442),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X443),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X444),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X445),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X446),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X447),s('type.list.list'(sK0),X448)))))))))))))))))))) ) <=> ~$spl634),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl634])])).
fof(f41244,plain,(
  ( ! [X476,X478,X475,X477] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X475),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X476),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X477),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X478),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) | $spl630),
  inference(cnf_transformation,[],[f41244_D])).
fof(f41244_D,plain,(
  ( ! [X476,X478,X475,X477] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X475),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X476),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X477),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X478),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) <=> ~$spl630),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl630])])).
fof(f40790,plain,(
  ( ! [X428,X430,X436,X438,X432,X434,X429,X431,X427,X437,X439,X433,X435] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X436),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X437),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X438),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X439),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X427),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X428),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X429),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X430),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X431),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X432),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X433),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X434),s('type.list.list'(sK0),X435)))))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1339])).
fof(f40791,plain,(
  ( ! [X445,X447,X441,X443,X449,X451,X444,X446,X440,X442,X452,X448,X450] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X449),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X450),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X451),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X452),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X440),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X441),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X442),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X443),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X444),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X445),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X446),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X447),s('type.list.list'(sK0),X448)))))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1337])).
fof(f41245,plain,(
  ( ! [X466,X472,X474,X469,X471,X467,X473,X468,X470] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X466),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X467),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X468),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X469),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X470),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X471),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X472),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X473),s('type.list.list'(sK0),X474))))))))))))))))))))))) ) | $spl632),
  inference(cnf_transformation,[],[f41245_D])).
fof(f41245_D,plain,(
  ( ! [X466,X472,X474,X469,X471,X467,X473,X468,X470] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X466),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X467),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X468),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X469),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X470),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X471),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X472),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X473),s('type.list.list'(sK0),X474))))))))))))))))))))))) ) <=> ~$spl632),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl632])])).
fof(f40792,plain,(
  ( ! [X453,X455,X461,X463,X457,X459,X465,X454,X460,X462,X456,X458,X464] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X462),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X463),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X464),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X465),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X453),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X454),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X455),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X456),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X457),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X458),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X459),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X460),s('type.list.list'(sK0),X461))))))))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1272])).
fof(f41181,plain,(
  ( ! [X466,X476,X478,X472,X474,X469,X471,X467,X475,X477,X473,X468,X470] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X466),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X467),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X468),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X469),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X470),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X471),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X472),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X473),s('type.list.list'(sK0),X474)))))))))))))))))))))) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X475),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X476),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X477),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X478),s('type.list.list'(sK0),'const.list.NIL_0')))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f40793,f949])).
fof(f40793,plain,(
  ( ! [X466,X476,X478,X472,X474,X469,X471,X475,X477,X467,X473,X468,X470] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X475),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X476),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X477),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X478),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X466),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X467),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X468),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X469),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X470),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X471),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X472),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X473),s('type.list.list'(sK0),X474))))))))))))))))))),s('type.num.num','const.num.|48|_0'))))) ) | $spl2),
  inference(superposition,[],[f1346,f1270])).
fof(f41243,plain,(
  ( ! [X313,X315,X308,X310,X316,X312,X314,X309,X311,X317] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X308),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X309),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X310),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X311),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X312),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X313),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X314),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X315),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X316),s('type.list.list'(sK0),X317)))))))))))))))))))))) ) | $spl628),
  inference(cnf_transformation,[],[f41243_D])).
fof(f41243_D,plain,(
  ( ! [X313,X315,X308,X310,X316,X312,X314,X309,X311,X317] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X308),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X309),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X310),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X311),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X312),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X313),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X314),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X315),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X316),s('type.list.list'(sK0),X317)))))))))))))))))))))) ) <=> ~$spl628),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl628])])).
fof(f41241,plain,(
  ( ! [X344,X346,X345] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X344),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X345),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X346),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) | $spl624),
  inference(cnf_transformation,[],[f41241_D])).
fof(f41241_D,plain,(
  ( ! [X344,X346,X345] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X344),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X345),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X346),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) <=> ~$spl624),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl624])])).
fof(f40858,plain,(
  ( ! [X300,X302,X296,X298,X304,X306,X295,X301,X303,X297,X299,X305,X307] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X305),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X306),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X307),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X295),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X296),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X297),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X298),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X299),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X300),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X301),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X302),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X303),s('type.list.list'(sK0),X304)))))))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1339])).
fof(f40859,plain,(
  ( ! [X313,X315,X308,X310,X316,X318,X312,X314,X320,X309,X311,X317,X319] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X318),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X319),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X320),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X308),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X309),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X310),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X311),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X312),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X313),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X314),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X315),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X316),s('type.list.list'(sK0),X317)))))))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1337])).
fof(f41242,plain,(
  ( ! [X335,X341,X343,X337,X339,X334,X340,X342,X336,X338] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X334),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X335),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X336),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X337),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X338),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X339),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X340),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X341),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X342),s('type.list.list'(sK0),X343))))))))))))))))))))))))) ) | $spl626),
  inference(cnf_transformation,[],[f41242_D])).
fof(f41242_D,plain,(
  ( ! [X335,X341,X343,X337,X339,X334,X340,X342,X336,X338] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X334),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X335),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X336),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X337),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X338),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X339),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X340),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X341),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X342),s('type.list.list'(sK0),X343))))))))))))))))))))))))) ) <=> ~$spl626),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl626])])).
fof(f40860,plain,(
  ( ! [X325,X327,X321,X323,X333,X329,X331,X324,X326,X322,X332,X328,X330] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X331),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X332),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X333),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X321),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X322),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X323),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X324),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X325),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X326),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X327),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X328),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X329),s('type.list.list'(sK0),X330))))))))))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1272])).
fof(f41198,plain,(
  ( ! [X344,X346,X335,X341,X343,X337,X339,X345,X334,X340,X342,X336,X338] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X334),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X335),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X336),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X337),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X338),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X339),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X340),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X341),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X342),s('type.list.list'(sK0),X343)))))))))))))))))))))))) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X344),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X345),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X346),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) | $spl2),
  inference(forward_demodulation,[],[f40861,f949])).
fof(f40861,plain,(
  ( ! [X344,X346,X335,X341,X343,X337,X339,X345,X334,X340,X342,X336,X338] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X344),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X345),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X346),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X334),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X335),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X336),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X337),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X338),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X339),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X340),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X341),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X342),s('type.list.list'(sK0),X343))))))))))))))))))))),s('type.num.num','const.num.|48|_0'))))) ) | $spl2),
  inference(superposition,[],[f1346,f1270])).
fof(f41240,plain,(
  ( ! [X210,X208,X206,X204,X202,X200,X209,X207,X205,X203,X201] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X200),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X201),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X202),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X203),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X204),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X205),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X206),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X207),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X208),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X209),s('type.list.list'(sK0),X210)))))))))))))))))))))))) ) | $spl622),
  inference(cnf_transformation,[],[f41240_D])).
fof(f41240_D,plain,(
  ( ! [X210,X208,X206,X204,X202,X200,X209,X207,X205,X203,X201] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X200),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X201),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X202),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X203),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X204),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X205),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X206),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X207),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X208),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X209),s('type.list.list'(sK0),X210)))))))))))))))))))))))) ) <=> ~$spl622),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl622])])).
fof(f41238,plain,(
  ( ! [X237,X238] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X237),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X238),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) | $spl618),
  inference(cnf_transformation,[],[f41238_D])).
fof(f41238_D,plain,(
  ( ! [X237,X238] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X237),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X238),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) <=> ~$spl618),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl618])])).
fof(f40914,plain,(
  ( ! [X191,X189,X198,X187,X194,X192,X196,X190,X199,X188,X195,X193,X197] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X198),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X199),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X187),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X188),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X189),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X190),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X191),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X192),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X193),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X194),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X195),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X196),s('type.list.list'(sK0),X197)))))))))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1339])).
fof(f40915,plain,(
  ( ! [X212,X210,X208,X206,X204,X202,X200,X211,X209,X207,X205,X203,X201] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X211),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X212),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X200),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X201),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X202),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X203),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X204),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X205),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X206),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X207),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X208),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X209),s('type.list.list'(sK0),X210)))))))))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1337])).
fof(f41239,plain,(
  ( ! [X231,X229,X227,X235,X233,X230,X228,X226,X236,X234,X232] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X226),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X227),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X228),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X229),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X230),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X231),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X232),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X233),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X234),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X235),s('type.list.list'(sK0),X236))))))))))))))))))))))))))) ) | $spl620),
  inference(cnf_transformation,[],[f41239_D])).
fof(f41239_D,plain,(
  ( ! [X231,X229,X227,X235,X233,X230,X228,X226,X236,X234,X232] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X226),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X227),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X228),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X229),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X230),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X231),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X232),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X233),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X234),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X235),s('type.list.list'(sK0),X236))))))))))))))))))))))))))) ) <=> ~$spl620),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl620])])).
fof(f40916,plain,(
  ( ! [X218,X216,X222,X220,X225,X215,X213,X219,X217,X223,X221,X224,X214] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X224),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X225),s('type.list.list'(sK0),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X213),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X214),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X215),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X216),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X217),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X218),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X219),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X220),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X221),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X222),s('type.list.list'(sK0),X223))))))))))))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1272])).
fof(f41212,plain,(
  ( ! [X231,X229,X227,X237,X235,X233,X230,X228,X226,X238,X236,X234,X232] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X226),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X227),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X228),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X229),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X230),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X231),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X232),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X233),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X234),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X235),s('type.list.list'(sK0),X236)))))))))))))))))))))))))) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X237),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X238),s('type.list.list'(sK0),'const.list.NIL_0')))))) ) | $spl2),
  inference(forward_demodulation,[],[f40917,f949])).
fof(f40917,plain,(
  ( ! [X231,X229,X227,X237,X235,X233,X230,X228,X226,X238,X236,X234,X232] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X237),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X238),s('type.list.list'(sK0),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X226),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X227),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X228),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X229),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X230),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X231),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X232),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X233),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X234),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X235),s('type.list.list'(sK0),X236))))))))))))))))))))))),s('type.num.num','const.num.|48|_0'))))) ) | $spl2),
  inference(superposition,[],[f1346,f1270])).
fof(f41237,plain,(
  ( ! [X127,X125,X123,X121,X118,X116,X126,X124,X122,X120,X119,X117] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X116),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X117),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X118),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X119),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X120),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X121),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X122),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X123),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X124),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X125),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X126),s('type.list.list'(sK0),X127)))))))))))))))))))))))))) ) | $spl616),
  inference(cnf_transformation,[],[f41237_D])).
fof(f41237_D,plain,(
  ( ! [X127,X125,X123,X121,X118,X116,X126,X124,X122,X120,X119,X117] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X116),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X117),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X118),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X119),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X120),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X121),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X122),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X123),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X124),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X125),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X126),s('type.list.list'(sK0),X127)))))))))))))))))))))))))) ) <=> ~$spl616),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl616])])).
fof(f41235,plain,(
  ( ! [X154] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X154),s('type.list.list'(sK0),'const.list.NIL_0')))) ) | $spl612),
  inference(cnf_transformation,[],[f41235_D])).
fof(f41235_D,plain,(
  ( ! [X154] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X154),s('type.list.list'(sK0),'const.list.NIL_0')))) ) <=> ~$spl612),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl612])])).
fof(f40958,plain,(
  ( ! [X103,X111,X109,X107,X105,X114,X112,X110,X108,X106,X104,X115,X113] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X115),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X103),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X104),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X105),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X106),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X107),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X108),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X109),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X110),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X111),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X112),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X113),s('type.list.list'(sK0),X114)))))))))))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1339])).
fof(f40959,plain,(
  ( ! [X127,X125,X123,X121,X128,X118,X116,X126,X124,X122,X120,X119,X117] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X128),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X116),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X117),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X118),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X119),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X120),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X121),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X122),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X123),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X124),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X125),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X126),s('type.list.list'(sK0),X127)))))))))))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1337])).
fof(f41236,plain,(
  ( ! [X146,X144,X152,X142,X151,X149,X147,X145,X153,X143,X150,X148] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X142),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X143),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X144),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X145),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X146),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X147),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X148),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X149),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X150),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X151),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X152),s('type.list.list'(sK0),X153))))))))))))))))))))))))))))) ) | $spl614),
  inference(cnf_transformation,[],[f41236_D])).
fof(f41236_D,plain,(
  ( ! [X146,X144,X152,X142,X151,X149,X147,X145,X153,X143,X150,X148] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X142),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X143),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X144),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X145),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X146),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X147),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X148),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X149),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X150),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X151),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X152),s('type.list.list'(sK0),X153))))))))))))))))))))))))))))) ) <=> ~$spl614),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl614])])).
fof(f40960,plain,(
  ( ! [X134,X132,X130,X140,X138,X136,X135,X133,X131,X129,X141,X139,X137] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X141),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X129),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X130),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X131),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X132),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X133),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X134),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X135),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X136),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X137),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X138),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X139),s('type.list.list'(sK0),X140))))))))))))))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f1346,f1272])).
fof(f41223,plain,(
  ( ! [X146,X144,X154,X152,X142,X151,X149,X147,X145,X153,X143,X150,X148] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X142),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X143),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X144),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X145),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X146),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X147),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X148),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X149),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X150),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X151),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X152),s('type.list.list'(sK0),X153)))))))))))))))))))))))))))) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X154),s('type.list.list'(sK0),'const.list.NIL_0')))) ) | $spl2),
  inference(forward_demodulation,[],[f40961,f949])).
fof(f40961,plain,(
  ( ! [X146,X144,X154,X152,X142,X151,X149,X147,X145,X153,X143,X150,X148] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X154),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X142),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X143),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X144),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X145),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X146),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X147),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X148),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X149),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X150),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X151),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X152),s('type.list.list'(sK0),X153))))))))))))))))))))))))),s('type.num.num','const.num.|48|_0'))))) ) | $spl2),
  inference(superposition,[],[f1346,f1270])).
fof(f41006,plain,(
  $false | ($spl2 | $spl4)),
  inference(trivial_inequality_removal,[],[f40962])).
fof(f40962,plain,(
  s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),sK1) | ($spl2 | $spl4)),
  inference(superposition,[],[f1346,f1348])).
fof(f1345,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl1),
  inference(cnf_transformation,[],[f1345_D])).
fof(f1345_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f37481,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK814('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK815('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK816('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK817('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK818('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK819('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK820('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK821('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK822('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK823('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK824('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK825('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK813('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))) | $spl610),
  inference(cnf_transformation,[],[f37481_D])).
fof(f37481_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK814('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK815('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK816('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK817('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK818('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK819('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK820('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK821('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK822('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK823('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK824('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK825('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK813('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))) <=> ~$spl610),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl610])])).
fof(f37479,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK814('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK815('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK816('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK817('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK818('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK819('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK820('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK821('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK822('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK823('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK824('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK825('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK813('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(forward_demodulation,[],[f4996,f1348])).
fof(f4996,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK814('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK815('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK816('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK817('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK818('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK819('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK820('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK821('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK822('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK823('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK824('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK825('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK813('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))) | $spl4),
  inference(forward_demodulation,[],[f2706,f949])).
fof(f2706,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK814('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK815('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK816('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK817('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK818('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK819('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK820('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK821('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK822('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK823('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK824('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK825('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK813('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1172,f1348])).
fof(f1346,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X7,X5,X3,X13,X11,X9] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),X2)))))))))))))))))))))))))) ) | $spl2),
  inference(cnf_transformation,[],[f1346_D])).
fof(f1346_D,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X7,X5,X3,X13,X11,X9] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),X2)))))))))))))))))))))))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f1344,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl0),
  inference(cnf_transformation,[],[f1344_D])).
fof(f1344_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f4998,plain,(
  ( ! [X8949,X8951,X8945,X8947,X8941,X8943,X8939,X8948,X8950,X8944,X8946,X8940,X8942] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8939),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8940),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8941),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8942),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8943),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8944),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8945),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8946),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8947),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8948),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8949),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8950),s('type.list.list'(sK0),X8951)))))))))))))))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f4997,f1348])).
fof(f4997,plain,(
  ( ! [X8949,X8951,X8945,X8947,X8941,X8943,X8939,X8948,X8950,X8944,X8946,X8940,X8942] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8939),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8940),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8941),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8942),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8943),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8944),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8945),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8946),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8947),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8948),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8949),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8950),s('type.list.list'(sK0),X8951)))))))))))))))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f2707,f949])).
fof(f2707,plain,(
  ( ! [X8949,X8951,X8945,X8947,X8941,X8943,X8939,X8948,X8950,X8944,X8946,X8940,X8942] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8939),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8940),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8941),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8942),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8943),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8944),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8945),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8946),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8947),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8948),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8949),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8950),s('type.list.list'(sK0),X8951))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f1173,f1348])).
fof(f1173,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X2)))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f793])).
fof(f37478,plain,(
  ( ! [X8976,X8971,X8969,X8975,X8973,X8967,X8965,X8977,X8970,X8968,X8974,X8972,X8966] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8965),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8966),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8967),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8968),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8969),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8970),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8971),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8972),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8973),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8974),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8975),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8976),s('type.list.list'(sK0),X8977))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f5000,f1348])).
fof(f5000,plain,(
  ( ! [X8976,X8971,X8969,X8975,X8973,X8967,X8965,X8977,X8970,X8968,X8974,X8972,X8966] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8965),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8966),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8967),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8968),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8969),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8970),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8971),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8972),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8973),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8974),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8975),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8976),s('type.list.list'(sK0),X8977)))))))))))))))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f2709,f949])).
fof(f2709,plain,(
  ( ! [X8976,X8971,X8969,X8975,X8973,X8967,X8965,X8977,X8970,X8968,X8974,X8972,X8966] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8965),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8966),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8967),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8968),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8969),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8970),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8971),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8972),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8973),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8974),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8975),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8976),s('type.list.list'(sK0),X8977)))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f1173,f1348])).
fof(f37473,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl609),
  inference(cnf_transformation,[],[f37473_D])).
fof(f37473_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl609),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl609])])).
fof(f18981,plain,(
  ( ! [X80,X70,X68,X78,X76,X74,X72,X71,X69,X67,X79,X77,X75,X73] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X67),X68))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X67),X68) != s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X69),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X70),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X71),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X72),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X73),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X74),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X75),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X76),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X77),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X78),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X79),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X80),s('type.list.list'(X67),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1217])).
fof(f8473,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl243),
  inference(superposition,[],[f8461,f933])).
fof(f18982,plain,(
  ( ! [X94,X92,X90,X88,X87,X85,X83,X81,X93,X91,X89,X86,X84,X82] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X81),X82) != s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X83),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X84),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X85),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X86),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X87),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X88),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X89),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X90),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X91),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X92),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X93),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X94),s('type.list.list'(X81),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1215])).
fof(f37471,plain,(
  $false | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f37470,f1323])).
fof(f37470,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f37423,f1355])).
fof(f1355,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1),
  inference(resolution,[],[f1345,f1281])).
fof(f37423,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(equality_resolution,[],[f3928])).
fof(f3928,plain,(
  ( ! [X114] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),X114) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X114))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f1566,f949])).
fof(f1566,plain,(
  ( ! [X114] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),X114) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X114))))))) ) | $spl4),
  inference(superposition,[],[f1173,f1348])).
fof(f37432,plain,(
  $false | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f37431,f1323])).
fof(f37431,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f37430,f1355])).
fof(f37430,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(forward_demodulation,[],[f37424,f1348])).
fof(f37424,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(trivial_inequality_removal,[],[f37312])).
fof(f37312,plain,(
  s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),sK1) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(superposition,[],[f3928,f1348])).
fof(f36108,plain,(
  ( ! [X509,X511,X516,X512,X514,X510,X513,X515] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X509),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X510),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X511),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X512),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X513),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X514),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X515),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X516),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) | $spl554),
  inference(cnf_transformation,[],[f36108_D])).
fof(f36108_D,plain,(
  ( ! [X509,X511,X516,X512,X514,X510,X513,X515] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X509),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X510),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X511),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X512),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X513),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X514),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X515),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X516),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl554),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl554])])).
fof(f37158,plain,(
  ( ! [X509,X511,X516,X512,X514,X510,X513,X515] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X509),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X510),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X511),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X512),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X513),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X514),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X515),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X516),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) | $spl69),
  inference(superposition,[],[f3844,f1229])).
fof(f37157,plain,(
  ( ! [X505,X507,X502,X508,X504,X506,X501,X503] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X501),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X502),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X503),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X504),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X505),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X506),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X507),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X508),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) | $spl69),
  inference(superposition,[],[f3844,f1227])).
fof(f35681,plain,(
  ( ! [X499,X492,X494,X500,X496,X498,X493,X495,X497] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X492),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X493),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X494),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X495),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X496),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X497),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X498),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X499),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X500),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) | $spl552),
  inference(cnf_transformation,[],[f35681_D])).
fof(f35681_D,plain,(
  ( ! [X499,X492,X494,X500,X496,X498,X493,X495,X497] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X492),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X493),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X494),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X495),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X496),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X497),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X498),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X499),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X500),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl552),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl552])])).
fof(f37156,plain,(
  ( ! [X499,X492,X494,X500,X496,X498,X493,X495,X497] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X492),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X493),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X494),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X495),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X496),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X497),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X498),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X499),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X500),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) | $spl69),
  inference(superposition,[],[f3844,f1225])).
fof(f37155,plain,(
  ( ! [X484,X486,X488,X490,X485,X487,X483,X489,X491] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X483),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X484),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X485),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X486),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X487),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X488),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X489),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X490),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X491),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) | $spl69),
  inference(superposition,[],[f3844,f1223])).
fof(f35253,plain,(
  ( ! [X476,X478,X474,X480,X482,X475,X477,X479,X473,X481] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X473),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X474),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X475),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X476),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X477),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X478),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X479),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X480),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X481),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X482),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) | $spl550),
  inference(cnf_transformation,[],[f35253_D])).
fof(f35253_D,plain,(
  ( ! [X476,X478,X474,X480,X482,X475,X477,X479,X473,X481] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X473),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X474),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X475),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X476),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X477),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X478),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X479),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X480),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X481),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X482),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl550),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl550])])).
fof(f37154,plain,(
  ( ! [X476,X478,X474,X480,X482,X475,X477,X479,X473,X481] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X473),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X474),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X475),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X476),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X477),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X478),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X479),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X480),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X481),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X482),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) | $spl69),
  inference(superposition,[],[f3844,f1221])).
fof(f37153,plain,(
  ( ! [X466,X472,X463,X469,X471,X465,X467,X468,X470,X464] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X463),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X464),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X465),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X466),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X467),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X468),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X469),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X470),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X471),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X472),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) | $spl69),
  inference(superposition,[],[f3844,f1219])).
fof(f37197,plain,(
  ( ! [X414,X420,X422,X416,X418,X424,X413,X415,X421,X423,X417,X419,X425] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X413),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X414),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X415),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X416),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X417),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X418),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X419),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X420),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X421),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X422),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X423),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X424),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X425),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl606),
  inference(cnf_transformation,[],[f37197_D])).
fof(f37197_D,plain,(
  ( ! [X414,X420,X422,X416,X418,X424,X413,X415,X421,X423,X417,X419,X425] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X413),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X414),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X415),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X416),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X417),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X418),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X419),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X420),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X421),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X422),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X423),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X424),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X425),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl606),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl606])])).
fof(f37150,plain,(
  ( ! [X428,X430,X426,X436,X438,X432,X434,X429,X431,X427,X437,X433,X435] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X426),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X427),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X428),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X429),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X430),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X431),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X432),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X433),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X434),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X435),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X436),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X437),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X438),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl69),
  inference(superposition,[],[f3844,f1213])).
fof(f37149,plain,(
  ( ! [X414,X420,X422,X416,X418,X424,X413,X415,X421,X423,X417,X419,X425] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X413),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X414),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X415),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X416),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X417),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X418),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X419),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X420),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X421),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X422),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X423),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X424),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X425),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl69),
  inference(superposition,[],[f3844,f1211])).
fof(f37196,plain,(
  ( ! [X389,X391,X385,X387,X397,X393,X395,X388,X390,X386,X396,X398,X392,X394] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X385),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X386),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X387),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X388),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X389),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X390),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X391),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X392),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X393),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X394),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X395),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X396),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X397),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X398),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl604),
  inference(cnf_transformation,[],[f37196_D])).
fof(f37196_D,plain,(
  ( ! [X389,X391,X385,X387,X397,X393,X395,X388,X390,X386,X396,X398,X392,X394] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X385),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X386),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X387),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X388),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X389),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X390),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X391),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X392),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X393),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X394),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X395),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X396),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X397),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X398),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl604),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl604])])).
fof(f37148,plain,(
  ( ! [X412,X408,X410,X399,X405,X407,X401,X403,X409,X411,X404,X406,X400,X402] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X399),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X400),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X401),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X402),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X403),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X404),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X405),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X406),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X407),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X408),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X409),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X410),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X411),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X412),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl69),
  inference(superposition,[],[f3844,f1209])).
fof(f37147,plain,(
  ( ! [X389,X391,X385,X387,X397,X393,X395,X388,X390,X386,X396,X398,X392,X394] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X385),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X386),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X387),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X388),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X389),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X390),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X391),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X392),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X393),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X394),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X395),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X396),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X397),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X398),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl69),
  inference(superposition,[],[f3844,f1207])).
fof(f29609,plain,(
  ( ! [X356,X358,X364,X366,X360,X362,X368,X357,X359,X355,X365,X367,X361,X363,X369] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X355),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X356),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X357),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X358),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X359),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X360),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X361),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X362),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X363),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X364),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X365),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X366),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X367),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X368),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X369),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl484),
  inference(cnf_transformation,[],[f29609_D])).
fof(f29609_D,plain,(
  ( ! [X356,X358,X364,X366,X360,X362,X368,X357,X359,X355,X365,X367,X361,X363,X369] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X355),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X356),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X357),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X358),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X359),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X360),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X361),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X362),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X363),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X364),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X365),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X366),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X367),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X368),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X369),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl484),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl484])])).
fof(f37146,plain,(
  ( ! [X383,X377,X379,X372,X374,X370,X380,X382,X376,X378,X384,X373,X375,X371,X381] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X370),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X371),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X372),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X373),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X374),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X375),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X376),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X377),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X378),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X379),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X380),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X381),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X382),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X383),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X384),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl69),
  inference(superposition,[],[f3844,f1205])).
fof(f37145,plain,(
  ( ! [X356,X358,X364,X366,X360,X362,X368,X357,X359,X355,X365,X367,X361,X363,X369] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X355),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X356),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X357),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X358),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X359),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X360),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X361),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X362),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X363),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X364),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X365),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X366),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X367),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X368),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X369),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl69),
  inference(superposition,[],[f3844,f1203])).
fof(f36782,plain,(
  $false | ($spl4 | $spl155)),
  inference(subsumption_resolution,[],[f36737,f5050])).
fof(f36737,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(equality_resolution,[],[f1814])).
fof(f1814,plain,(
  ( ! [X1421] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),X1421) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1421))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl4),
  inference(superposition,[],[f1187,f1348])).
fof(f1187,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),X2)))))))))))))))) )),
  inference(cnf_transformation,[],[f814])).
fof(f814,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK887(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK888(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK889(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK890(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK891(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK892(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK893(X1,X0)),s('type.list.list'(X0),sK886(X1,X0))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),X2))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK886,sK887,sK888,sK889,sK890,sK891,sK892,sK893])],[f813])).
fof(f813,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ? [X10,X11,X12,X13,X14,X15,X16,X17] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),X10)))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),X2))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(rectify,[],[f812])).
fof(f812,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),X2)))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),X2))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(nnf_transformation,[],[f443])).
fof(f443,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),X2))))))))))))))))),
  inference(flattening,[],[f442])).
fof(f442,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),X2))))))))))))))))),
  inference(rectify,[],[f190])).
fof(f190,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),X8))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_7|split|5')).
fof(f36745,plain,(
  $false | ($spl4 | $spl155)),
  inference(subsumption_resolution,[],[f36744,f5050])).
fof(f36744,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(forward_demodulation,[],[f36738,f1348])).
fof(f36738,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(trivial_inequality_removal,[],[f36626])).
fof(f36626,plain,(
  s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),sK1) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(superposition,[],[f1814,f1348])).
fof(f36440,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl585),
  inference(cnf_transformation,[],[f36440_D])).
fof(f36440_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl585),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl585])])).
fof(f36585,plain,(
  ( ! [X926,X930,X928,X932,X927,X931,X929] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X926),X927))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X926),X927) != s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X928),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X929),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X930),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X931),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X932),s('type.list.list'(X926),'const.list.NIL_0')))))))))))) ) | $spl19),
  inference(superposition,[],[f36414,f1231])).
fof(f36414,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl19),
  inference(trivial_inequality_removal,[],[f36388])).
fof(f36388,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num',X1) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1)) ) | $spl19),
  inference(superposition,[],[f5381,f1332])).
fof(f5381,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))) | s('type.num.num',X4) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl19),
  inference(superposition,[],[f1448,f933])).
fof(f36584,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) | $spl19),
  inference(superposition,[],[f36414,f1233])).
fof(f36583,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f36414,f1223])).
fof(f36582,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f36414,f1225])).
fof(f36581,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f36414,f1211])).
fof(f36580,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f36414,f1213])).
fof(f36579,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f36414,f1203])).
fof(f36578,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f36414,f1205])).
fof(f36577,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f36414,f1227])).
fof(f36576,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f36414,f1229])).
fof(f36575,plain,(
  ( ! [X810,X808,X812,X802,X800,X806,X804,X799,X811,X809,X803,X801,X807,X805] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X799),X800))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X799),X800) != s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X801),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X802),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X803),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X804),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X805),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X806),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X807),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X808),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X809),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X810),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X811),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X812),s('type.list.list'(X799),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f36414,f1215])).
fof(f36574,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f36414,f1217])).
fof(f36573,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f36414,f1219])).
fof(f36572,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f36414,f1221])).
fof(f36571,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f36414,f1207])).
fof(f36570,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f36414,f1209])).
fof(f36516,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f36414,f1205])).
fof(f36515,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f36414,f1203])).
fof(f36457,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl603),
  inference(cnf_transformation,[],[f36457_D])).
fof(f36457_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl603),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl603])])).
fof(f36407,plain,(
  ( ! [X212,X210,X208,X213,X211,X209,X214] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X208),X209))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(X208),X209) != s('type.list.list'(X208),'const.list.CONS_2'(s(X208,X210),s('type.list.list'(X208),'const.list.CONS_2'(s(X208,X211),s('type.list.list'(X208),'const.list.CONS_2'(s(X208,X212),s('type.list.list'(X208),'const.list.CONS_2'(s(X208,X213),s('type.list.list'(X208),'const.list.CONS_2'(s(X208,X214),s('type.list.list'(X208),'const.list.NIL_0')))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1231])).
fof(f36406,plain,(
  ( ! [X206,X204,X202,X207,X205,X203,X201] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X201),X202))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(X201),X202) != s('type.list.list'(X201),'const.list.CONS_2'(s(X201,X203),s('type.list.list'(X201),'const.list.CONS_2'(s(X201,X204),s('type.list.list'(X201),'const.list.CONS_2'(s(X201,X205),s('type.list.list'(X201),'const.list.CONS_2'(s(X201,X206),s('type.list.list'(X201),'const.list.CONS_2'(s(X201,X207),s('type.list.list'(X201),'const.list.NIL_0')))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1233])).
fof(f36455,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl601),
  inference(cnf_transformation,[],[f36455_D])).
fof(f36455_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl601),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl601])])).
fof(f36405,plain,(
  ( ! [X191,X198,X196,X194,X192,X200,X190,X199,X197,X195,X193] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X190),X191))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X190),X191) != s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X192),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X193),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X194),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X195),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X196),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X197),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X198),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X199),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X200),s('type.list.list'(X190),'const.list.NIL_0')))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1223])).
fof(f36404,plain,(
  ( ! [X189,X187,X185,X182,X180,X188,X186,X184,X183,X181,X179] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X179),X180))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X179),X180) != s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X181),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X182),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X183),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X184),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X185),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X186),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X187),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X188),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X189),s('type.list.list'(X179),'const.list.NIL_0')))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1225])).
fof(f36453,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl599),
  inference(cnf_transformation,[],[f36453_D])).
fof(f36453_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl599),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl599])])).
fof(f36403,plain,(
  ( ! [X177,X167,X165,X175,X173,X171,X169,X178,X176,X166,X164,X174,X172,X170,X168] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X164),X165))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X164),X165) != s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X166),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X167),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X168),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X169),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X170),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X171),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X172),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X173),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X174),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X175),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X176),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X177),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X178),s('type.list.list'(X164),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1211])).
fof(f36402,plain,(
  ( ! [X158,X156,X154,X152,X163,X161,X151,X149,X159,X157,X155,X153,X162,X160,X150] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X149),X150))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X149),X150) != s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X151),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X152),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X153),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X154),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X155),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X156),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X157),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X158),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X159),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X160),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X161),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X162),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X163),s('type.list.list'(X149),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1213])).
fof(f36401,plain,(
  ( ! [X146,X144,X134,X132,X142,X140,X138,X136,X147,X145,X135,X133,X143,X141,X139,X137,X148] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),X133))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X132),X133) != s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X134),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X135),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X136),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X137),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X138),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X139),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X140),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X141),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X142),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X143),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X144),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X145),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X146),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X147),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X148),s('type.list.list'(X132),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1203])).
fof(f36400,plain,(
  ( ! [X127,X125,X123,X121,X130,X128,X118,X116,X126,X124,X122,X120,X131,X129,X119,X117,X115] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X115),X116) != s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X117),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X118),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X119),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X120),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X121),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X122),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X123),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X124),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X125),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X126),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X127),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X128),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X129),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X130),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X131),s('type.list.list'(X115),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1205])).
fof(f36449,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl595),
  inference(cnf_transformation,[],[f36449_D])).
fof(f36449_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl595),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl595])])).
fof(f36399,plain,(
  ( ! [X111,X109,X107,X105,X114,X112,X110,X108,X106,X113] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),X106))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X105),X106) != s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X107),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X108),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X109),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X110),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X111),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X112),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X113),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X114),s('type.list.list'(X105),'const.list.NIL_0')))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1227])).
fof(f36398,plain,(
  ( ! [X103,X101,X99,X97,X95,X102,X100,X98,X96,X104] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),X96))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X95),X96) != s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X97),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X98),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X99),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X100),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X101),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X102),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X103),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X104),s('type.list.list'(X95),'const.list.NIL_0')))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1229])).
fof(f36447,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl593),
  inference(cnf_transformation,[],[f36447_D])).
fof(f36447_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl593),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl593])])).
fof(f36397,plain,(
  ( ! [X94,X92,X90,X88,X87,X85,X83,X81,X93,X91,X89,X86,X84,X82] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X81),X82) != s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X83),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X84),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X85),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X86),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X87),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X88),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X89),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X90),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X91),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X92),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X93),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,X94),s('type.list.list'(X81),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1215])).
fof(f36396,plain,(
  ( ! [X80,X70,X68,X78,X76,X74,X72,X71,X69,X67,X79,X77,X75,X73] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X67),X68))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X67),X68) != s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X69),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X70),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X71),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X72),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X73),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X74),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X75),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X76),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X77),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X78),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X79),s('type.list.list'(X67),'const.list.CONS_2'(s(X67,X80),s('type.list.list'(X67),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1217])).
fof(f36445,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl591),
  inference(cnf_transformation,[],[f36445_D])).
fof(f36445_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl591),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl591])])).
fof(f36395,plain,(
  ( ! [X61,X59,X57,X66,X64,X62,X60,X58,X56,X65,X55,X63] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X55),X56) != s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X57),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X58),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X59),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X60),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X61),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X62),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X63),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X64),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X65),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X66),s('type.list.list'(X55),'const.list.NIL_0')))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1219])).
fof(f36394,plain,(
  ( ! [X47,X45,X43,X54,X52,X50,X48,X46,X44,X53,X51,X49] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X43),X44) != s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X45),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X46),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X47),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X48),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X49),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X50),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X51),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X52),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X53),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X54),s('type.list.list'(X43),'const.list.NIL_0')))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1221])).
fof(f36443,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl589),
  inference(cnf_transformation,[],[f36443_D])).
fof(f36443_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl589),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl589])])).
fof(f36393,plain,(
  ( ! [X30,X28,X39,X37,X35,X33,X41,X31,X29,X27,X38,X36,X34,X32,X42,X40] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X27),X28) != s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X29),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X30),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X31),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X32),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X33),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X34),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X35),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X36),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X37),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X38),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X39),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X40),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X41),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X42),s('type.list.list'(X27),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1207])).
fof(f36392,plain,(
  ( ! [X26,X24,X14,X12,X23,X21,X19,X17,X25,X15,X13,X11,X22,X20,X18,X16] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X11),X12) != s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X13),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X14),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X15),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X16),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X17),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X18),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X19),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X20),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X21),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X22),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X23),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X24),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X25),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X26),s('type.list.list'(X11),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1209])).
fof(f36355,plain,(
  ( ! [X926,X930,X928,X932,X927,X931,X929] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X926),X927))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X926),X927) != s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X928),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X929),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X930),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X931),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X932),s('type.list.list'(X926),'const.list.NIL_0')))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1231])).
fof(f36354,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1233])).
fof(f36353,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1223])).
fof(f36352,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1225])).
fof(f36351,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1211])).
fof(f36350,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1213])).
fof(f36349,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1203])).
fof(f36348,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1205])).
fof(f36347,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1227])).
fof(f36346,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1229])).
fof(f36345,plain,(
  ( ! [X810,X808,X812,X802,X800,X806,X804,X799,X811,X809,X803,X801,X807,X805] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X799),X800))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X799),X800) != s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X801),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X802),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X803),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X804),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X805),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X806),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X807),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X808),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X809),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X810),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X811),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X812),s('type.list.list'(X799),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1215])).
fof(f36344,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1217])).
fof(f36343,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1219])).
fof(f36342,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1221])).
fof(f36341,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1207])).
fof(f36340,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1209])).
fof(f36298,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1229])).
fof(f36297,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1227])).
fof(f36296,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1225])).
fof(f36295,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1223])).
fof(f36294,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1221])).
fof(f36293,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1219])).
fof(f36290,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1213])).
fof(f36289,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1211])).
fof(f36288,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1209])).
fof(f36287,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1207])).
fof(f36286,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1205])).
fof(f36285,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl19),
  inference(superposition,[],[f5381,f1203])).
fof(f14956,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl351),
  inference(cnf_transformation,[],[f14956_D])).
fof(f14956_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl351),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl351])])).
fof(f29587,plain,(
  ( ! [X505,X507,X502,X508,X504,X506,X501,X503] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X501),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X502),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X503),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X504),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X505),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X506),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X507),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X508),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) | $spl65),
  inference(superposition,[],[f3840,f1227])).
fof(f29588,plain,(
  ( ! [X509,X511,X516,X512,X514,X510,X513,X515] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X509),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X510),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X511),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X512),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X513),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X514),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X515),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X516),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) | $spl65),
  inference(superposition,[],[f3840,f1229])).
fof(f36105,plain,(
  $false | ($spl4 | $spl149)),
  inference(subsumption_resolution,[],[f36061,f5035])).
fof(f36061,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(equality_resolution,[],[f1749])).
fof(f1749,plain,(
  ( ! [X1031] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),X1031) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1031))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl4),
  inference(superposition,[],[f1183,f1348])).
fof(f1183,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),X2)))))))))))))))))) )),
  inference(cnf_transformation,[],[f808])).
fof(f808,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK869(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK870(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK871(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK872(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK873(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK874(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK875(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK876(X1,X0)),s('type.list.list'(X0),sK868(X1,X0))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),X2))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK868,sK869,sK870,sK871,sK872,sK873,sK874,sK875,sK876])],[f807])).
fof(f807,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ? [X11,X12,X13,X14,X15,X16,X17,X18,X19] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),X11)))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),X2))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(rectify,[],[f806])).
fof(f806,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),X2)))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),X2))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(nnf_transformation,[],[f439])).
fof(f439,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),X2))))))))))))))))))),
  inference(flattening,[],[f438])).
fof(f438,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),X2))))))))))))))))))),
  inference(rectify,[],[f153])).
fof(f153,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),X8))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49||48||split|33')).
fof(f36069,plain,(
  $false | ($spl4 | $spl149)),
  inference(subsumption_resolution,[],[f36068,f5035])).
fof(f36068,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(forward_demodulation,[],[f36062,f1348])).
fof(f36062,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(trivial_inequality_removal,[],[f35950])).
fof(f35950,plain,(
  s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),sK1) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(superposition,[],[f1749,f1348])).
fof(f14965,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl363),
  inference(cnf_transformation,[],[f14965_D])).
fof(f14965_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl363),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl363])])).
fof(f29585,plain,(
  ( ! [X484,X486,X488,X490,X485,X487,X483,X489,X491] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X483),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X484),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X485),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X486),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X487),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X488),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X489),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X490),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X491),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) | $spl65),
  inference(superposition,[],[f3840,f1223])).
fof(f29586,plain,(
  ( ! [X499,X492,X494,X500,X496,X498,X493,X495,X497] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X492),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X493),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X494),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X495),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X496),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X497),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X498),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X499),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X500),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) | $spl65),
  inference(superposition,[],[f3840,f1225])).
fof(f35678,plain,(
  $false | ($spl4 | $spl143)),
  inference(subsumption_resolution,[],[f35636,f5021])).
fof(f35636,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(equality_resolution,[],[f1689])).
fof(f1689,plain,(
  ( ! [X709] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),X709) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X709))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl4),
  inference(superposition,[],[f1181,f1348])).
fof(f1181,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),X2)))))))))))))))))))) )),
  inference(cnf_transformation,[],[f805])).
fof(f805,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK859(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK860(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK861(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK862(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK863(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK864(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK865(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK866(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK867(X1,X0)),s('type.list.list'(X0),sK858(X1,X0))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),X2))))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK858,sK859,sK860,sK861,sK862,sK863,sK864,sK865,sK866,sK867])],[f804])).
fof(f804,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ? [X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),X12)))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),X2))))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(rectify,[],[f803])).
fof(f803,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),X2)))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),X2))))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(nnf_transformation,[],[f437])).
fof(f437,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),X2))))))))))))))))))))),
  inference(flattening,[],[f436])).
fof(f436,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),X2))))))))))))))))))))),
  inference(rectify,[],[f130])).
fof(f130,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),X8))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49||48||split|19')).
fof(f35644,plain,(
  $false | ($spl4 | $spl143)),
  inference(subsumption_resolution,[],[f35643,f5021])).
fof(f35643,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(forward_demodulation,[],[f35637,f1348])).
fof(f35637,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(trivial_inequality_removal,[],[f35525])).
fof(f35525,plain,(
  s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),sK1) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(superposition,[],[f1689,f1348])).
fof(f14953,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl347),
  inference(cnf_transformation,[],[f14953_D])).
fof(f14953_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl347),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl347])])).
fof(f29583,plain,(
  ( ! [X466,X472,X463,X469,X471,X465,X467,X468,X470,X464] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X463),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X464),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X465),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X466),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X467),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X468),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X469),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X470),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X471),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X472),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) | $spl65),
  inference(superposition,[],[f3840,f1219])).
fof(f29584,plain,(
  ( ! [X476,X478,X474,X480,X482,X475,X477,X479,X473,X481] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X473),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X474),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X475),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X476),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X477),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X478),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X479),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X480),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X481),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X482),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) | $spl65),
  inference(superposition,[],[f3840,f1221])).
fof(f35250,plain,(
  $false | ($spl4 | $spl137)),
  inference(subsumption_resolution,[],[f35210,f5006])).
fof(f35210,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(equality_resolution,[],[f1638])).
fof(f1638,plain,(
  ( ! [X455] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),X455) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X455))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl4),
  inference(superposition,[],[f1177,f1348])).
fof(f1177,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X2)))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f799])).
fof(f799,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK838(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK839(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK840(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK841(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK842(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK843(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK844(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK845(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK846(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK847(X1,X0)),s('type.list.list'(X0),sK837(X1,X0))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X2))))))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK837,sK838,sK839,sK840,sK841,sK842,sK843,sK844,sK845,sK846,sK847])],[f798])).
fof(f798,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ? [X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),X13)))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X2))))))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(rectify,[],[f797])).
fof(f797,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X2)))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X2))))))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(nnf_transformation,[],[f433])).
fof(f433,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X2))))))))))))))))))))))),
  inference(flattening,[],[f432])).
fof(f432,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X2))))))))))))))))))))))),
  inference(rectify,[],[f122])).
fof(f122,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),X8))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49||48||split|5')).
fof(f35218,plain,(
  $false | ($spl4 | $spl137)),
  inference(subsumption_resolution,[],[f35217,f5006])).
fof(f35217,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(forward_demodulation,[],[f35211,f1348])).
fof(f35211,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(trivial_inequality_removal,[],[f35099])).
fof(f35099,plain,(
  s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),sK1) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(superposition,[],[f1638,f1348])).
fof(f33887,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl547),
  inference(cnf_transformation,[],[f33887_D])).
fof(f33887_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl547),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl547])])).
fof(f33786,plain,(
  ( ! [X926,X930,X928,X932,X927,X931,X929] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X926),X927))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X926),X927) != s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X928),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X929),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X930),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X931),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X932),s('type.list.list'(X926),'const.list.NIL_0')))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1231])).
fof(f1404,plain,(
  ( ! [X32] : (s('type.num.num',X32) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32))))))) ) | $spl1),
  inference(superposition,[],[f1345,f933])).
fof(f33785,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1233])).
fof(f33884,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl543),
  inference(cnf_transformation,[],[f33884_D])).
fof(f33884_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ~$spl543),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl543])])).
fof(f33784,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1223])).
fof(f33783,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1225])).
fof(f33881,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl539),
  inference(cnf_transformation,[],[f33881_D])).
fof(f33881_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ~$spl539),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl539])])).
fof(f33782,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1211])).
fof(f33781,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1213])).
fof(f33878,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | $spl535),
  inference(cnf_transformation,[],[f33878_D])).
fof(f33878_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) <=> ~$spl535),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl535])])).
fof(f33780,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1203])).
fof(f33779,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1205])).
fof(f33875,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl531),
  inference(cnf_transformation,[],[f33875_D])).
fof(f33875_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ~$spl531),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl531])])).
fof(f33778,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1227])).
fof(f33777,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1229])).
fof(f33872,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl527),
  inference(cnf_transformation,[],[f33872_D])).
fof(f33872_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ~$spl527),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl527])])).
fof(f33776,plain,(
  ( ! [X810,X808,X812,X802,X800,X806,X804,X799,X811,X809,X803,X801,X807,X805] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X799),X800))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X799),X800) != s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X801),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X802),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X803),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X804),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X805),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X806),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X807),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X808),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X809),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X810),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X811),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X812),s('type.list.list'(X799),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1215])).
fof(f33775,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1217])).
fof(f33869,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl523),
  inference(cnf_transformation,[],[f33869_D])).
fof(f33869_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ~$spl523),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl523])])).
fof(f33774,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1219])).
fof(f33773,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1221])).
fof(f33866,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl519),
  inference(cnf_transformation,[],[f33866_D])).
fof(f33866_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ~$spl519),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl519])])).
fof(f33772,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1207])).
fof(f33771,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1209])).
fof(f33860,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611)))))))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) | $spl514),
  inference(cnf_transformation,[],[f33860_D])).
fof(f33860_D,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611)))))))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) <=> ~$spl514),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl514])])).
fof(f33731,plain,(
  ( ! [X621,X623,X617,X619,X620,X622,X618] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X617),X618)))))))) | s('type.list.list'(X617),X618) != s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X619),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X620),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X621),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X622),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X623),s('type.list.list'(X617),'const.list.NIL_0')))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1233])).
fof(f33730,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611)))))))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1231])).
fof(f33857,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591)))))))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl510),
  inference(cnf_transformation,[],[f33857_D])).
fof(f33857_D,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591)))))))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl510),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl510])])).
fof(f33729,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601)))))))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1229])).
fof(f33728,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591)))))))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1227])).
fof(f33854,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569)))))))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl506),
  inference(cnf_transformation,[],[f33854_D])).
fof(f33854_D,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569)))))))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl506),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl506])])).
fof(f33727,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580)))))))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1225])).
fof(f33726,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569)))))))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1223])).
fof(f33851,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545)))))))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl502),
  inference(cnf_transformation,[],[f33851_D])).
fof(f33851_D,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545)))))))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl502),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl502])])).
fof(f33725,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557)))))))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1221])).
fof(f33724,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545)))))))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1219])).
fof(f33848,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517)))))))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl498),
  inference(cnf_transformation,[],[f33848_D])).
fof(f33848_D,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517)))))))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) <=> ~$spl498),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl498])])).
fof(f33723,plain,(
  ( ! [X540,X542,X536,X538,X532,X534,X530,X541,X543,X537,X539,X533,X535,X531] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X530),X531)))))))) | s('type.list.list'(X530),X531) != s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X532),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X533),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X534),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X535),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X536),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X537),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X538),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X539),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X540),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X541),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X542),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X543),s('type.list.list'(X530),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1217])).
fof(f33722,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517)))))))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1215])).
fof(f33845,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487)))))))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl494),
  inference(cnf_transformation,[],[f33845_D])).
fof(f33845_D,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487)))))))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl494),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl494])])).
fof(f33721,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502)))))))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1213])).
fof(f33720,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487)))))))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1211])).
fof(f33842,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455)))))))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl490),
  inference(cnf_transformation,[],[f33842_D])).
fof(f33842_D,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455)))))))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl490),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl490])])).
fof(f33719,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471)))))))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1209])).
fof(f33718,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455)))))))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1207])).
fof(f33839,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421)))))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl486),
  inference(cnf_transformation,[],[f33839_D])).
fof(f33839_D,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421)))))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl486),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl486])])).
fof(f33717,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438)))))))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1205])).
fof(f33716,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421)))))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl1),
  inference(superposition,[],[f1404,f1203])).
fof(f29576,plain,(
  ( ! [X383,X377,X379,X372,X374,X370,X380,X382,X376,X378,X384,X373,X375,X371,X381] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X370),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X371),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X372),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X373),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X374),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X375),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X376),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X377),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X378),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X379),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X380),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X381),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X382),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X383),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X384),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl65),
  inference(superposition,[],[f3840,f1205])).
fof(f29575,plain,(
  ( ! [X356,X358,X364,X366,X360,X362,X368,X357,X359,X355,X365,X367,X361,X363,X369] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X355),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X356),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X357),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X358),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X359),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X360),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X361),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X362),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X363),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X364),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X365),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X366),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X367),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X368),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X369),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl65),
  inference(superposition,[],[f3840,f1203])).
fof(f29378,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl481),
  inference(cnf_transformation,[],[f29378_D])).
fof(f29378_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl481),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl481])])).
fof(f28246,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl477),
  inference(cnf_transformation,[],[f28246_D])).
fof(f28246_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl477),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl477])])).
fof(f18727,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl217),
  inference(superposition,[],[f5169,f1333])).
fof(f18728,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl217),
  inference(superposition,[],[f5169,f1331])).
fof(f29382,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl483),
  inference(cnf_transformation,[],[f29382_D])).
fof(f29382_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl483),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl483])])).
fof(f21847,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl181),
  inference(superposition,[],[f5103,f1333])).
fof(f21848,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl181),
  inference(superposition,[],[f5103,f1331])).
fof(f5084,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl171),
  inference(cnf_transformation,[],[f5084_D])).
fof(f5084_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl171),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl171])])).
fof(f27866,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl119),
  inference(superposition,[],[f4962,f1333])).
fof(f27867,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl119),
  inference(superposition,[],[f4962,f1331])).
fof(f29372,plain,(
  $false | ($spl4 | $spl171)),
  inference(subsumption_resolution,[],[f29334,f5084])).
fof(f29334,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(equality_resolution,[],[f2121])).
fof(f2121,plain,(
  ( ! [X3757] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),X3757) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3757))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl4),
  inference(superposition,[],[f1197,f1348])).
fof(f1197,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X2)))))))) )),
  inference(cnf_transformation,[],[f829])).
fof(f829,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK919(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK920(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK921(X1,X0)),s('type.list.list'(X0),sK918(X1,X0))))))))) & (! [X2,X3,X4,X5] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X2))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK918,sK919,sK920,sK921])],[f828])).
fof(f828,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ? [X6,X7,X8,X9] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),X6)))))))) & (! [X2,X3,X4,X5] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X2))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(rectify,[],[f827])).
fof(f827,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ? [X2,X3,X4,X5] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X2)))))))) & (! [X2,X3,X4,X5] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X2))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(nnf_transformation,[],[f453])).
fof(f453,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X2,X3,X4,X5] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X2))))))))),
  inference(flattening,[],[f452])).
fof(f452,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X2,X3,X4,X5] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X2))))))))),
  inference(rectify,[],[f208])).
fof(f208,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X8,X9,X10,X11] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),X8))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_3|split|5')).
fof(f29342,plain,(
  $false | ($spl4 | $spl171)),
  inference(subsumption_resolution,[],[f29341,f5084])).
fof(f29341,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(forward_demodulation,[],[f29335,f1348])).
fof(f29335,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(trivial_inequality_removal,[],[f29223])).
fof(f29223,plain,(
  s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),sK1) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(superposition,[],[f2121,f1348])).
fof(f29007,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl479),
  inference(cnf_transformation,[],[f29007_D])).
fof(f29007_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl479),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl479])])).
fof(f17453,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl205),
  inference(superposition,[],[f5145,f1333])).
fof(f17454,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl205),
  inference(superposition,[],[f5145,f1331])).
fof(f21877,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl465),
  inference(cnf_transformation,[],[f21877_D])).
fof(f21877_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl465),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl465])])).
fof(f18694,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl211),
  inference(superposition,[],[f5157,f1333])).
fof(f18695,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl211),
  inference(superposition,[],[f5157,f1331])).
fof(f28999,plain,(
  $false | ($spl4 | $spl21)),
  inference(subsumption_resolution,[],[f28962,f1450])).
fof(f28962,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(equality_resolution,[],[f2038])).
fof(f2038,plain,(
  ( ! [X3047] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),X3047) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3047))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl4),
  inference(superposition,[],[f1195,f1348])).
fof(f1195,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2)))))))))) )),
  inference(cnf_transformation,[],[f826])).
fof(f826,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK914(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK915(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK916(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK917(X1,X0)),s('type.list.list'(X0),sK913(X1,X0))))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK913,sK914,sK915,sK916,sK917])],[f825])).
fof(f825,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ? [X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),X7)))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(rectify,[],[f824])).
fof(f824,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2)))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(nnf_transformation,[],[f451])).
fof(f451,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))))),
  inference(flattening,[],[f450])).
fof(f450,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))))),
  inference(rectify,[],[f191])).
fof(f191,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X8,X9,X10,X11,X12] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),X8))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_4|split|5')).
fof(f28970,plain,(
  $false | ($spl4 | $spl21)),
  inference(subsumption_resolution,[],[f28969,f1450])).
fof(f28969,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(forward_demodulation,[],[f28963,f1348])).
fof(f28963,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(trivial_inequality_removal,[],[f28851])).
fof(f28851,plain,(
  s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),sK1) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(superposition,[],[f2038,f1348])).
fof(f28609,plain,(
  $false | ($spl4 | $spl163)),
  inference(subsumption_resolution,[],[f28573,f5064])).
fof(f28573,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(equality_resolution,[],[f1957])).
fof(f1957,plain,(
  ( ! [X2421] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),X2421) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2421))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl4),
  inference(superposition,[],[f1191,f1348])).
fof(f1191,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X2)))))))))))) )),
  inference(cnf_transformation,[],[f820])).
fof(f820,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK902(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK903(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK904(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK905(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK906(X1,X0)),s('type.list.list'(X0),sK901(X1,X0))))))))))))) & (! [X2,X3,X4,X5,X6,X7] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X2))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK901,sK902,sK903,sK904,sK905,sK906])],[f819])).
fof(f819,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ? [X8,X9,X10,X11,X12,X13] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),X8)))))))))))) & (! [X2,X3,X4,X5,X6,X7] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X2))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(rectify,[],[f818])).
fof(f818,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ? [X2,X3,X4,X5,X6,X7] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X2)))))))))))) & (! [X2,X3,X4,X5,X6,X7] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X2))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(nnf_transformation,[],[f447])).
fof(f447,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X2,X3,X4,X5,X6,X7] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X2))))))))))))),
  inference(flattening,[],[f446])).
fof(f446,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X2,X3,X4,X5,X6,X7] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X2))))))))))))),
  inference(rectify,[],[f127])).
fof(f127,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X8,X9,X10,X11,X12,X13] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X8))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_5|split|5')).
fof(f28581,plain,(
  $false | ($spl4 | $spl163)),
  inference(subsumption_resolution,[],[f28580,f5064])).
fof(f28580,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(forward_demodulation,[],[f28574,f1348])).
fof(f28574,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(trivial_inequality_removal,[],[f28462])).
fof(f28462,plain,(
  s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),sK1) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(superposition,[],[f1957,f1348])).
fof(f28244,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl475),
  inference(cnf_transformation,[],[f28244_D])).
fof(f28244_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl475),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl475])])).
fof(f16151,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl187),
  inference(superposition,[],[f5113,f1333])).
fof(f16152,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl187),
  inference(superposition,[],[f5113,f1331])).
fof(f17367,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl193),
  inference(superposition,[],[f5123,f1333])).
fof(f17368,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl193),
  inference(superposition,[],[f5123,f1331])).
fof(f28236,plain,(
  $false | ($spl4 | $spl159)),
  inference(subsumption_resolution,[],[f28202,f5057])).
fof(f28202,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(equality_resolution,[],[f1881])).
fof(f1881,plain,(
  ( ! [X1879] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),X1879) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1879))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl4),
  inference(superposition,[],[f1189,f1348])).
fof(f1189,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X2)))))))))))))) )),
  inference(cnf_transformation,[],[f817])).
fof(f817,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK895(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK896(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK897(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK898(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK899(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK900(X1,X0)),s('type.list.list'(X0),sK894(X1,X0))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X2))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK894,sK895,sK896,sK897,sK898,sK899,sK900])],[f816])).
fof(f816,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ? [X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),X9)))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X2))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(rectify,[],[f815])).
fof(f815,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ? [X2,X3,X4,X5,X6,X7,X8] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X2)))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X2))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(nnf_transformation,[],[f445])).
fof(f445,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X2))))))))))))))),
  inference(flattening,[],[f444])).
fof(f444,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X2))))))))))))))),
  inference(rectify,[],[f185])).
fof(f185,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),X8))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_7|split|19')).
fof(f28210,plain,(
  $false | ($spl4 | $spl159)),
  inference(subsumption_resolution,[],[f28209,f5057])).
fof(f28209,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(forward_demodulation,[],[f28203,f1348])).
fof(f28203,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(trivial_inequality_removal,[],[f28091])).
fof(f28091,plain,(
  s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),sK1) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(superposition,[],[f1881,f1348])).
fof(f21879,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl467),
  inference(cnf_transformation,[],[f21879_D])).
fof(f21879_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl467),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl467])])).
fof(f27920,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) | $spl473),
  inference(cnf_transformation,[],[f27920_D])).
fof(f27920_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) <=> ~$spl473),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl473])])).
fof(f27873,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl119),
  inference(superposition,[],[f4962,f1311])).
fof(f27303,plain,(
  $false | ($spl4 | $spl29)),
  inference(subsumption_resolution,[],[f27271,f1458])).
fof(f27271,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl4),
  inference(equality_resolution,[],[f2207])).
fof(f2207,plain,(
  ( ! [X4555] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),X4555) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X4555))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl4),
  inference(superposition,[],[f1199,f1348])).
fof(f1199,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f832])).
fof(f832,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK923(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK924(X1,X0)),s('type.list.list'(X0),sK922(X1,X0))))))) & (! [X2,X3,X4] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK922,sK923,sK924])],[f831])).
fof(f831,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ? [X5,X6,X7] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X5)))))) & (! [X2,X3,X4] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(rectify,[],[f830])).
fof(f830,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ? [X2,X3,X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2)))))) & (! [X2,X3,X4] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(nnf_transformation,[],[f455])).
fof(f455,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ? [X2,X3,X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))))),
  inference(flattening,[],[f454])).
fof(f454,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ? [X2,X3,X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))))),
  inference(rectify,[],[f197])).
fof(f197,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ? [X8,X9,X10] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),X8))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_2|split|5')).
fof(f27279,plain,(
  $false | ($spl4 | $spl29)),
  inference(subsumption_resolution,[],[f27278,f1458])).
fof(f27278,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl4),
  inference(forward_demodulation,[],[f27272,f1348])).
fof(f27272,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl4),
  inference(trivial_inequality_removal,[],[f27160])).
fof(f27160,plain,(
  s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),sK1) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl4),
  inference(superposition,[],[f2207,f1348])).
fof(f19144,plain,(
  ( ! [X208,X206,X204,X202,X207,X205,X203,X201] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X201),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X202),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X203),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X204),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X205),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X206),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X207),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X208),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) | $spl460),
  inference(cnf_transformation,[],[f19144_D])).
fof(f19144_D,plain,(
  ( ! [X208,X206,X204,X202,X207,X205,X203,X201] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X201),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X202),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X203),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X204),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X205),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X206),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X207),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X208),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) <=> ~$spl460),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl460])])).
fof(f22013,plain,(
  ( ! [X212,X210,X216,X215,X213,X211,X209,X214] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X209),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X210),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X211),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X212),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X213),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X214),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X215),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X216),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) | $spl63),
  inference(superposition,[],[f3837,f1229])).
fof(f22012,plain,(
  ( ! [X208,X206,X204,X202,X207,X205,X203,X201] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X201),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X202),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X203),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X204),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X205),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X206),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X207),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X208),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) | $spl63),
  inference(superposition,[],[f3837,f1227])).
fof(f19143,plain,(
  ( ! [X191,X189,X187,X185,X190,X188,X186,X184,X183] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X183),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X184),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X185),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X186),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X187),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X188),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X189),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X190),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X191),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) | $spl458),
  inference(cnf_transformation,[],[f19143_D])).
fof(f19143_D,plain,(
  ( ! [X191,X189,X187,X185,X190,X188,X186,X184,X183] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X183),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X184),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X185),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X186),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X187),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X188),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X189),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X190),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X191),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) <=> ~$spl458),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl458])])).
fof(f22011,plain,(
  ( ! [X198,X196,X194,X192,X200,X199,X197,X195,X193] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X192),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X193),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X194),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X195),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X196),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X197),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X198),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X199),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X200),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) | $spl63),
  inference(superposition,[],[f3837,f1225])).
fof(f22010,plain,(
  ( ! [X191,X189,X187,X185,X190,X188,X186,X184,X183] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X183),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X184),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X185),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X186),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X187),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X188),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X189),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X190),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X191),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) | $spl63),
  inference(superposition,[],[f3837,f1223])).
fof(f19142,plain,(
  ( ! [X167,X165,X163,X171,X169,X166,X164,X172,X170,X168] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X163),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X164),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X165),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X166),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X167),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X168),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X169),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X170),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X171),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X172),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) | $spl456),
  inference(cnf_transformation,[],[f19142_D])).
fof(f19142_D,plain,(
  ( ! [X167,X165,X163,X171,X169,X166,X164,X172,X170,X168] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X163),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X164),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X165),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X166),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X167),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X168),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X169),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X170),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X171),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X172),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) <=> ~$spl456),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl456])])).
fof(f22009,plain,(
  ( ! [X177,X175,X173,X182,X180,X178,X176,X174,X181,X179] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X173),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X174),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X175),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X176),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X177),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X178),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X179),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X180),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X181),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X182),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) | $spl63),
  inference(superposition,[],[f3837,f1221])).
fof(f22008,plain,(
  ( ! [X167,X165,X163,X171,X169,X166,X164,X172,X170,X168] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X163),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X164),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X165),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X166),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X167),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X168),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X169),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X170),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X171),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X172),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) | $spl63),
  inference(superposition,[],[f3837,f1219])).
fof(f19141,plain,(
  ( ! [X125,X123,X121,X118,X116,X114,X124,X122,X120,X119,X117,X115,X113] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X113),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X114),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X115),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X116),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X117),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X118),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X119),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X120),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X121),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X122),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X123),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X124),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X125),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl454),
  inference(cnf_transformation,[],[f19141_D])).
fof(f19141_D,plain,(
  ( ! [X125,X123,X121,X118,X116,X114,X124,X122,X120,X119,X117,X115,X113] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X113),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X114),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X115),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X116),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X117),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X118),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X119),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X120),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X121),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X122),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X123),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X124),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X125),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))) ) <=> ~$spl454),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl454])])).
fof(f22005,plain,(
  ( ! [X127,X134,X132,X130,X128,X138,X136,X126,X135,X133,X131,X129,X137] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X126),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X127),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X128),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X129),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X130),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X131),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X132),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X133),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X134),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X135),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X136),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X137),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X138),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl63),
  inference(superposition,[],[f3837,f1213])).
fof(f22004,plain,(
  ( ! [X125,X123,X121,X118,X116,X114,X124,X122,X120,X119,X117,X115,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X113),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X114),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X115),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X116),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X117),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X118),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X119),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X120),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X121),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X122),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X123),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X124),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X125),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl63),
  inference(superposition,[],[f3837,f1211])).
fof(f19140,plain,(
  ( ! [X94,X92,X90,X88,X97,X87,X85,X95,X93,X91,X89,X98,X96,X86] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X85),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X86),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X87),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X88),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X89),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X90),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X91),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X92),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X93),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X94),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X95),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X96),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X97),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X98),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl452),
  inference(cnf_transformation,[],[f19140_D])).
fof(f19140_D,plain,(
  ( ! [X94,X92,X90,X88,X97,X87,X85,X95,X93,X91,X89,X98,X96,X86] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X85),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X86),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X87),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X88),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X89),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X90),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X91),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X92),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X93),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X94),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X95),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X96),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X97),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X98),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))) ) <=> ~$spl452),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl452])])).
fof(f22003,plain,(
  ( ! [X103,X101,X99,X111,X109,X107,X105,X112,X102,X100,X110,X108,X106,X104] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X99),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X100),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X101),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X102),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X103),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X104),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X105),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X106),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X107),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X108),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X109),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X110),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X111),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X112),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl63),
  inference(superposition,[],[f3837,f1209])).
fof(f22002,plain,(
  ( ! [X94,X92,X90,X88,X97,X87,X85,X95,X93,X91,X89,X98,X96,X86] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X85),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X86),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X87),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X88),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X89),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X90),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X91),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X92),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X93),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X94),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X95),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X96),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X97),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X98),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl63),
  inference(superposition,[],[f3837,f1207])).
fof(f19139,plain,(
  ( ! [X61,X59,X57,X68,X66,X64,X62,X60,X58,X56,X69,X67,X65,X55,X63] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X64),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X66),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X67),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X68),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl450),
  inference(cnf_transformation,[],[f19139_D])).
fof(f19139_D,plain,(
  ( ! [X61,X59,X57,X68,X66,X64,X62,X60,X58,X56,X69,X67,X65,X55,X63] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X64),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X66),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X67),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X68),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) <=> ~$spl450),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl450])])).
fof(f22001,plain,(
  ( ! [X80,X70,X78,X76,X74,X72,X83,X81,X71,X79,X77,X75,X73,X84,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X71),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X72),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X73),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X74),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X75),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X76),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X77),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X78),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X79),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X80),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X81),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X82),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X83),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X84),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl63),
  inference(superposition,[],[f3837,f1205])).
fof(f22000,plain,(
  ( ! [X61,X59,X57,X68,X66,X64,X62,X60,X58,X56,X69,X67,X65,X55,X63] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X64),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X66),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X67),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X68),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl63),
  inference(superposition,[],[f3837,f1203])).
fof(f16175,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | $spl391),
  inference(cnf_transformation,[],[f16175_D])).
fof(f16175_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) <=> ~$spl391),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl391])])).
fof(f21889,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl469),
  inference(superposition,[],[f21881,f1331])).
fof(f21888,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl469),
  inference(superposition,[],[f21881,f1333])).
fof(f21858,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl181),
  inference(superposition,[],[f5103,f1331])).
fof(f21857,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl181),
  inference(superposition,[],[f5103,f1333])).
fof(f21881,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl469),
  inference(cnf_transformation,[],[f21881_D])).
fof(f21881_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl469),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl469])])).
fof(f21854,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl181),
  inference(superposition,[],[f5103,f1311])).
fof(f21875,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl463),
  inference(cnf_transformation,[],[f21875_D])).
fof(f21875_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl463),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl463])])).
fof(f21853,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl181),
  inference(superposition,[],[f5103,f1331])).
fof(f21852,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl181),
  inference(superposition,[],[f5103,f1333])).
fof(f14974,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl373),
  inference(cnf_transformation,[],[f14974_D])).
fof(f14974_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl373),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl373])])).
fof(f19679,plain,(
  ( ! [X146,X144,X134,X132,X142,X140,X138,X136,X147,X145,X135,X133,X143,X141,X139,X137,X148] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),X133))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X132),X133) != s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X134),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X135),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X136),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X137),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X138),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X139),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X140),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X141),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X142),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X143),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X144),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X145),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X146),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X147),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X148),s('type.list.list'(X132),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1203])).
fof(f19051,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) ) | $spl421),
  inference(superposition,[],[f19022,f933])).
fof(f19678,plain,(
  ( ! [X127,X125,X123,X121,X130,X128,X118,X116,X126,X124,X122,X120,X131,X129,X119,X117,X115] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X115),X116) != s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X117),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X118),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X119),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X120),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X121),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X122),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X123),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X124),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X125),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X126),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X127),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X128),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X129),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X130),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X131),s('type.list.list'(X115),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1205])).
fof(f19631,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1223])).
fof(f19630,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1225])).
fof(f14962,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl359),
  inference(cnf_transformation,[],[f14962_D])).
fof(f14962_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl359),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl359])])).
fof(f19629,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1211])).
fof(f19628,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1213])).
fof(f19627,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1203])).
fof(f19626,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1205])).
fof(f19625,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1227])).
fof(f19624,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1229])).
fof(f19621,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1219])).
fof(f19620,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1221])).
fof(f14950,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl343),
  inference(cnf_transformation,[],[f14950_D])).
fof(f14950_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl343),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl343])])).
fof(f19619,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1207])).
fof(f19618,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1209])).
fof(f19019,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl417),
  inference(cnf_transformation,[],[f19019_D])).
fof(f19019_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl417),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl417])])).
fof(f19578,plain,(
  ( ! [X621,X623,X617,X619,X620,X622,X618] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X617),X618))) | s('type.list.list'(X617),X618) != s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X619),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X620),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X621),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X622),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X623),s('type.list.list'(X617),'const.list.NIL_0')))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1233])).
fof(f19577,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1231])).
fof(f19576,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1229])).
fof(f19575,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1227])).
fof(f19574,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1225])).
fof(f19573,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1223])).
fof(f19572,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1221])).
fof(f19571,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1219])).
fof(f19570,plain,(
  ( ! [X540,X542,X536,X538,X532,X534,X530,X541,X543,X537,X539,X533,X535,X531] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X530),X531))) | s('type.list.list'(X530),X531) != s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X532),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X533),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X534),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X535),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X536),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X537),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X538),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X539),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X540),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X541),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X542),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X543),s('type.list.list'(X530),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1217])).
fof(f19569,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1215])).
fof(f19568,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1213])).
fof(f19567,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1211])).
fof(f19566,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1209])).
fof(f19565,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1207])).
fof(f19564,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1205])).
fof(f19563,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl421),
  inference(superposition,[],[f19051,f1203])).
fof(f19119,plain,(
  ( ! [X212,X210,X216,X215,X213,X211,X209,X214] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X209),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X210),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X211),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X212),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X213),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X214),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X215),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X216),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) | $spl59),
  inference(superposition,[],[f3833,f1229])).
fof(f19118,plain,(
  ( ! [X208,X206,X204,X202,X207,X205,X203,X201] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X201),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X202),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X203),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X204),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X205),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X206),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X207),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X208),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))) ) | $spl59),
  inference(superposition,[],[f3833,f1227])).
fof(f19117,plain,(
  ( ! [X198,X196,X194,X192,X200,X199,X197,X195,X193] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X192),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X193),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X194),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X195),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X196),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X197),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X198),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X199),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X200),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) | $spl59),
  inference(superposition,[],[f3833,f1225])).
fof(f19116,plain,(
  ( ! [X191,X189,X187,X185,X190,X188,X186,X184,X183] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X183),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X184),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X185),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X186),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X187),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X188),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X189),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X190),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X191),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))) ) | $spl59),
  inference(superposition,[],[f3833,f1223])).
fof(f19115,plain,(
  ( ! [X177,X175,X173,X182,X180,X178,X176,X174,X181,X179] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X173),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X174),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X175),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X176),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X177),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X178),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X179),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X180),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X181),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X182),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) | $spl59),
  inference(superposition,[],[f3833,f1221])).
fof(f19114,plain,(
  ( ! [X167,X165,X163,X171,X169,X166,X164,X172,X170,X168] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X163),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X164),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X165),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X166),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X167),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X168),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X169),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X170),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X171),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X172),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))) ) | $spl59),
  inference(superposition,[],[f3833,f1219])).
fof(f19111,plain,(
  ( ! [X127,X134,X132,X130,X128,X138,X136,X126,X135,X133,X131,X129,X137] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X126),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X127),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X128),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X129),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X130),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X131),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X132),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X133),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X134),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X135),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X136),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X137),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X138),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl59),
  inference(superposition,[],[f3833,f1213])).
fof(f19110,plain,(
  ( ! [X125,X123,X121,X118,X116,X114,X124,X122,X120,X119,X117,X115,X113] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X113),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X114),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X115),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X116),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X117),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X118),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X119),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X120),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X121),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X122),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X123),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X124),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X125),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl59),
  inference(superposition,[],[f3833,f1211])).
fof(f19109,plain,(
  ( ! [X103,X101,X99,X111,X109,X107,X105,X112,X102,X100,X110,X108,X106,X104] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X99),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X100),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X101),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X102),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X103),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X104),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X105),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X106),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X107),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X108),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X109),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X110),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X111),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X112),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl59),
  inference(superposition,[],[f3833,f1209])).
fof(f19108,plain,(
  ( ! [X94,X92,X90,X88,X97,X87,X85,X95,X93,X91,X89,X98,X96,X86] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X85),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X86),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X87),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X88),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X89),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X90),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X91),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X92),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X93),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X94),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X95),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X96),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X97),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X98),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl59),
  inference(superposition,[],[f3833,f1207])).
fof(f19107,plain,(
  ( ! [X80,X70,X78,X76,X74,X72,X83,X81,X71,X79,X77,X75,X73,X84,X82] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X71),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X72),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X73),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X74),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X75),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X76),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X77),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X78),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X79),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X80),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X81),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X82),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X83),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X84),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl59),
  inference(superposition,[],[f3833,f1205])).
fof(f19106,plain,(
  ( ! [X61,X59,X57,X68,X66,X64,X62,X60,X58,X56,X69,X67,X65,X55,X63] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X64),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X66),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X67),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X68),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl59),
  inference(superposition,[],[f3833,f1203])).
fof(f19042,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl449),
  inference(cnf_transformation,[],[f19042_D])).
fof(f19042_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl449),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl449])])).
fof(f18990,plain,(
  ( ! [X191,X198,X196,X194,X192,X200,X190,X199,X197,X195,X193] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X190),X191))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X190),X191) != s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X192),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X193),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X194),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X195),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X196),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X197),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X198),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X199),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X200),s('type.list.list'(X190),'const.list.NIL_0')))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1223])).
fof(f18989,plain,(
  ( ! [X189,X187,X185,X182,X180,X188,X186,X184,X183,X181,X179] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X179),X180))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X179),X180) != s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X181),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X182),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X183),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X184),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X185),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X186),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X187),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X188),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X189),s('type.list.list'(X179),'const.list.NIL_0')))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1225])).
fof(f19040,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl447),
  inference(cnf_transformation,[],[f19040_D])).
fof(f19040_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl447),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl447])])).
fof(f18988,plain,(
  ( ! [X177,X167,X165,X175,X173,X171,X169,X178,X176,X166,X164,X174,X172,X170,X168] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X164),X165))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X164),X165) != s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X166),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X167),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X168),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X169),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X170),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X171),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X172),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X173),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X174),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X175),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X176),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X177),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X178),s('type.list.list'(X164),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1211])).
fof(f18987,plain,(
  ( ! [X158,X156,X154,X152,X163,X161,X151,X149,X159,X157,X155,X153,X162,X160,X150] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X149),X150))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X149),X150) != s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X151),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X152),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X153),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X154),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X155),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X156),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X157),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X158),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X159),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X160),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X161),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X162),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X163),s('type.list.list'(X149),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1213])).
fof(f19038,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl445),
  inference(cnf_transformation,[],[f19038_D])).
fof(f19038_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl445),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl445])])).
fof(f18986,plain,(
  ( ! [X146,X144,X134,X132,X142,X140,X138,X136,X147,X145,X135,X133,X143,X141,X139,X137,X148] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),X133))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X132),X133) != s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X134),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X135),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X136),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X137),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X138),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X139),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X140),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X141),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X142),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X143),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X144),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X145),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X146),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X147),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X148),s('type.list.list'(X132),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1203])).
fof(f18985,plain,(
  ( ! [X127,X125,X123,X121,X130,X128,X118,X116,X126,X124,X122,X120,X131,X129,X119,X117,X115] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X115),X116) != s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X117),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X118),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X119),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X120),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X121),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X122),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X123),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X124),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X125),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X126),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X127),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X128),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X129),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X130),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X131),s('type.list.list'(X115),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1205])).
fof(f19036,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl443),
  inference(cnf_transformation,[],[f19036_D])).
fof(f19036_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl443),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl443])])).
fof(f18984,plain,(
  ( ! [X111,X109,X107,X105,X114,X112,X110,X108,X106,X113] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),X106))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X105),X106) != s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X107),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X108),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X109),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X110),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X111),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X112),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X113),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X114),s('type.list.list'(X105),'const.list.NIL_0')))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1227])).
fof(f18983,plain,(
  ( ! [X103,X101,X99,X97,X95,X102,X100,X98,X96,X104] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),X96))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X95),X96) != s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X97),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X98),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X99),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X100),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X101),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X102),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X103),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X104),s('type.list.list'(X95),'const.list.NIL_0')))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1229])).
fof(f19034,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl441),
  inference(cnf_transformation,[],[f19034_D])).
fof(f19034_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl441),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl441])])).
fof(f18980,plain,(
  ( ! [X61,X59,X57,X66,X64,X62,X60,X58,X56,X65,X55,X63] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X55),X56) != s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X57),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X58),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X59),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X60),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X61),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X62),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X63),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X64),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X65),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X66),s('type.list.list'(X55),'const.list.NIL_0')))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1219])).
fof(f18979,plain,(
  ( ! [X47,X45,X43,X54,X52,X50,X48,X46,X44,X53,X51,X49] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X43),X44) != s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X45),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X46),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X47),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X48),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X49),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X50),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X51),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X52),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X53),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X54),s('type.list.list'(X43),'const.list.NIL_0')))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1221])).
fof(f19032,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl439),
  inference(cnf_transformation,[],[f19032_D])).
fof(f19032_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl439),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl439])])).
fof(f18978,plain,(
  ( ! [X30,X28,X39,X37,X35,X33,X41,X31,X29,X27,X38,X36,X34,X32,X42,X40] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X27),X28) != s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X29),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X30),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X31),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X32),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X33),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X34),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X35),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X36),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X37),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X38),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X39),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X40),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X41),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X42),s('type.list.list'(X27),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1207])).
fof(f18977,plain,(
  ( ! [X26,X24,X14,X12,X23,X21,X19,X17,X25,X15,X13,X11,X22,X20,X18,X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X11),X12) != s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X13),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X14),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X15),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X16),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X17),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X18),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X19),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X20),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X21),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X22),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X23),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X24),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X25),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X26),s('type.list.list'(X11),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1209])).
fof(f14616,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl275),
  inference(cnf_transformation,[],[f14616_D])).
fof(f14616_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl275),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl275])])).
fof(f18938,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1223])).
fof(f18937,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1225])).
fof(f14607,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl263),
  inference(cnf_transformation,[],[f14607_D])).
fof(f14607_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl263),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl263])])).
fof(f18936,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1211])).
fof(f18935,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1213])).
fof(f18934,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1203])).
fof(f18933,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1205])).
fof(f14619,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl279),
  inference(cnf_transformation,[],[f14619_D])).
fof(f14619_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl279),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl279])])).
fof(f18932,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1227])).
fof(f18931,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1229])).
fof(f14610,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl267),
  inference(cnf_transformation,[],[f14610_D])).
fof(f14610_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl267),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl267])])).
fof(f18930,plain,(
  ( ! [X810,X808,X812,X802,X800,X806,X804,X799,X811,X809,X803,X801,X807,X805] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X799),X800))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X799),X800) != s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X801),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X802),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X803),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X804),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X805),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X806),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X807),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X808),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X809),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X810),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X811),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X812),s('type.list.list'(X799),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1215])).
fof(f18929,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1217])).
fof(f14613,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl271),
  inference(cnf_transformation,[],[f14613_D])).
fof(f14613_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl271),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl271])])).
fof(f18928,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1219])).
fof(f18927,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1221])).
fof(f14604,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl259),
  inference(cnf_transformation,[],[f14604_D])).
fof(f14604_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl259),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl259])])).
fof(f18926,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1207])).
fof(f18925,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1209])).
fof(f19023,plain,(
  ( ! [X628] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X628),'const.list.NIL_0')))) ) | $spl422),
  inference(cnf_transformation,[],[f19023_D])).
fof(f19023_D,plain,(
  ( ! [X628] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X628),'const.list.NIL_0')))) ) <=> ~$spl422),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl422])])).
fof(f19022,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl421),
  inference(cnf_transformation,[],[f19022_D])).
fof(f19022_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl421),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl421])])).
fof(f18888,plain,(
  ( ! [X628] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X628),'const.list.NIL_0')))) ) | $spl243),
  inference(superposition,[],[f8473,f1341])).
fof(f1341,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f541])).
fof(f541,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f249])).
fof(f249,axiom,(
  ! [X6] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.list.LENGTH|split|0')).
fof(f19020,plain,(
  ( ! [X625,X624] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X624),X625))) | s('type.list.list'(X624),'const.list.NIL_0') != s('type.list.list'(X624),X625)) ) | $spl418),
  inference(cnf_transformation,[],[f19020_D])).
fof(f19020_D,plain,(
  ( ! [X625,X624] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X624),X625))) | s('type.list.list'(X624),'const.list.NIL_0') != s('type.list.list'(X624),X625)) ) <=> ~$spl418),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl418])])).
fof(f18887,plain,(
  ( ! [X627,X626] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X626),X627))) | s('type.list.list'(X626),'const.list.NIL_0') != s('type.list.list'(X626),X627)) ) | $spl243),
  inference(superposition,[],[f8473,f1340])).
fof(f18886,plain,(
  ( ! [X625,X624] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X624),X625))) | s('type.list.list'(X624),'const.list.NIL_0') != s('type.list.list'(X624),X625)) ) | $spl243),
  inference(superposition,[],[f8473,f1338])).
fof(f18885,plain,(
  ( ! [X621,X623,X617,X619,X620,X622,X618] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X617),X618))) | s('type.list.list'(X617),X618) != s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X619),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X620),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X621),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X622),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X623),s('type.list.list'(X617),'const.list.NIL_0')))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1233])).
fof(f18884,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1231])).
fof(f18883,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1229])).
fof(f18882,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1227])).
fof(f18881,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1225])).
fof(f18880,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1223])).
fof(f18879,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1221])).
fof(f18878,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1219])).
fof(f18877,plain,(
  ( ! [X540,X542,X536,X538,X532,X534,X530,X541,X543,X537,X539,X533,X535,X531] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X530),X531))) | s('type.list.list'(X530),X531) != s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X532),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X533),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X534),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X535),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X536),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X537),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X538),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X539),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X540),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X541),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X542),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X543),s('type.list.list'(X530),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1217])).
fof(f18876,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1215])).
fof(f18875,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1213])).
fof(f18874,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1211])).
fof(f18873,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1209])).
fof(f18872,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1207])).
fof(f18871,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1205])).
fof(f18870,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl243),
  inference(superposition,[],[f8473,f1203])).
fof(f18733,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl217),
  inference(superposition,[],[f5169,f1331])).
fof(f18732,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl217),
  inference(superposition,[],[f5169,f1333])).
fof(f18751,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl399),
  inference(cnf_transformation,[],[f18751_D])).
fof(f18751_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl399),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl399])])).
fof(f18753,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | $spl401),
  inference(cnf_transformation,[],[f18753_D])).
fof(f18753_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl401),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl401])])).
fof(f18729,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl217),
  inference(superposition,[],[f5169,f1311])).
fof(f18700,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl211),
  inference(superposition,[],[f5157,f1331])).
fof(f18699,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl211),
  inference(superposition,[],[f5157,f1333])).
fof(f17459,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl205),
  inference(superposition,[],[f5145,f1331])).
fof(f17458,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl205),
  inference(superposition,[],[f5145,f1333])).
fof(f17390,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl397),
  inference(cnf_transformation,[],[f17390_D])).
fof(f17390_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl397),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl397])])).
fof(f16179,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | $spl395),
  inference(cnf_transformation,[],[f16179_D])).
fof(f16179_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) <=> ~$spl395),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl395])])).
fof(f17374,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl193),
  inference(superposition,[],[f5123,f1311])).
fof(f17373,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl193),
  inference(superposition,[],[f5123,f1331])).
fof(f17372,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl193),
  inference(superposition,[],[f5123,f1333])).
fof(f16177,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl393),
  inference(cnf_transformation,[],[f16177_D])).
fof(f16177_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl393),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl393])])).
fof(f16158,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl187),
  inference(superposition,[],[f5113,f1311])).
fof(f16157,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl187),
  inference(superposition,[],[f5113,f1331])).
fof(f16156,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl187),
  inference(superposition,[],[f5113,f1333])).
fof(f15182,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl387),
  inference(cnf_transformation,[],[f15182_D])).
fof(f15182_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl387),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl387])])).
fof(f15392,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl377),
  inference(superposition,[],[f14978,f1311])).
fof(f15151,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl379),
  inference(cnf_transformation,[],[f15151_D])).
fof(f15151_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl379),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl379])])).
fof(f15367,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl375),
  inference(superposition,[],[f14976,f1311])).
fof(f15153,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) | $spl381),
  inference(cnf_transformation,[],[f15153_D])).
fof(f15153_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl381),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl381])])).
fof(f15167,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl369),
  inference(superposition,[],[f14970,f1311])).
fof(f15177,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl383),
  inference(cnf_transformation,[],[f15177_D])).
fof(f15177_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl383),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl383])])).
fof(f15179,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl385),
  inference(cnf_transformation,[],[f15179_D])).
fof(f15179_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl385),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl385])])).
fof(f15161,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl369),
  inference(superposition,[],[f14970,f1331])).
fof(f15160,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl369),
  inference(superposition,[],[f14970,f1333])).
fof(f15140,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl367),
  inference(superposition,[],[f14968,f1311])).
fof(f15087,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1223])).
fof(f14922,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1)) ) | $spl235),
  inference(trivial_inequality_removal,[],[f14896])).
fof(f14896,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1)) ) | $spl235),
  inference(superposition,[],[f5357,f1332])).
fof(f5357,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) ) | $spl235),
  inference(superposition,[],[f5320,f933])).
fof(f15086,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1225])).
fof(f15085,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1211])).
fof(f15084,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1213])).
fof(f15083,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1203])).
fof(f15082,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1205])).
fof(f15081,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1227])).
fof(f15080,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1229])).
fof(f15077,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1219])).
fof(f15076,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1221])).
fof(f15075,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1207])).
fof(f15074,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1209])).
fof(f15032,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1229])).
fof(f15031,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1227])).
fof(f15030,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1225])).
fof(f15029,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1223])).
fof(f15028,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1221])).
fof(f15027,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1219])).
fof(f15026,plain,(
  ( ! [X540,X542,X536,X538,X532,X534,X530,X541,X543,X537,X539,X533,X535,X531] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X530),X531))) | s('type.list.list'(X530),X531) != s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X532),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X533),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X534),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X535),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X536),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X537),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X538),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X539),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X540),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X541),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X542),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X543),s('type.list.list'(X530),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1217])).
fof(f15025,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1215])).
fof(f15024,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1213])).
fof(f15023,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1211])).
fof(f15022,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1209])).
fof(f15021,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1207])).
fof(f15020,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1205])).
fof(f15019,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f14922,f1203])).
fof(f14978,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl377),
  inference(cnf_transformation,[],[f14978_D])).
fof(f14978_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl377),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl377])])).
fof(f14913,plain,(
  ( ! [X191,X198,X196,X194,X192,X200,X190,X199,X197,X195,X193] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X190),X191))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X190),X191) != s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X192),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X193),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X194),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X195),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X196),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X197),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X198),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X199),s('type.list.list'(X190),'const.list.CONS_2'(s(X190,X200),s('type.list.list'(X190),'const.list.NIL_0')))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1223])).
fof(f14912,plain,(
  ( ! [X189,X187,X185,X182,X180,X188,X186,X184,X183,X181,X179] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X179),X180))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X179),X180) != s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X181),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X182),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X183),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X184),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X185),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X186),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X187),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X188),s('type.list.list'(X179),'const.list.CONS_2'(s(X179,X189),s('type.list.list'(X179),'const.list.NIL_0')))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1225])).
fof(f14976,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl375),
  inference(cnf_transformation,[],[f14976_D])).
fof(f14976_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl375),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl375])])).
fof(f14911,plain,(
  ( ! [X177,X167,X165,X175,X173,X171,X169,X178,X176,X166,X164,X174,X172,X170,X168] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X164),X165))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X164),X165) != s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X166),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X167),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X168),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X169),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X170),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X171),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X172),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X173),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X174),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X175),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X176),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X177),s('type.list.list'(X164),'const.list.CONS_2'(s(X164,X178),s('type.list.list'(X164),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1211])).
fof(f14910,plain,(
  ( ! [X158,X156,X154,X152,X163,X161,X151,X149,X159,X157,X155,X153,X162,X160,X150] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X149),X150))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X149),X150) != s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X151),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X152),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X153),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X154),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X155),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X156),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X157),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X158),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X159),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X160),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X161),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X162),s('type.list.list'(X149),'const.list.CONS_2'(s(X149,X163),s('type.list.list'(X149),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1213])).
fof(f14909,plain,(
  ( ! [X146,X144,X134,X132,X142,X140,X138,X136,X147,X145,X135,X133,X143,X141,X139,X137,X148] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),X133))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X132),X133) != s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X134),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X135),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X136),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X137),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X138),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X139),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X140),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X141),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X142),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X143),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X144),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X145),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X146),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X147),s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X148),s('type.list.list'(X132),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1203])).
fof(f14908,plain,(
  ( ! [X127,X125,X123,X121,X130,X128,X118,X116,X126,X124,X122,X120,X131,X129,X119,X117,X115] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X115),X116) != s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X117),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X118),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X119),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X120),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X121),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X122),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X123),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X124),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X125),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X126),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X127),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X128),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X129),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X130),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,X131),s('type.list.list'(X115),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1205])).
fof(f14972,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl371),
  inference(cnf_transformation,[],[f14972_D])).
fof(f14972_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl371),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl371])])).
fof(f14907,plain,(
  ( ! [X111,X109,X107,X105,X114,X112,X110,X108,X106,X113] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),X106))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X105),X106) != s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X107),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X108),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X109),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X110),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X111),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X112),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X113),s('type.list.list'(X105),'const.list.CONS_2'(s(X105,X114),s('type.list.list'(X105),'const.list.NIL_0')))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1227])).
fof(f14906,plain,(
  ( ! [X103,X101,X99,X97,X95,X102,X100,X98,X96,X104] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),X96))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X95),X96) != s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X97),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X98),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X99),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X100),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X101),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X102),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X103),s('type.list.list'(X95),'const.list.CONS_2'(s(X95,X104),s('type.list.list'(X95),'const.list.NIL_0')))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1229])).
fof(f14970,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl369),
  inference(cnf_transformation,[],[f14970_D])).
fof(f14970_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl369),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl369])])).
fof(f14903,plain,(
  ( ! [X61,X59,X57,X66,X64,X62,X60,X58,X56,X65,X55,X63] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X55),X56) != s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X57),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X58),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X59),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X60),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X61),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X62),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X63),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X64),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X65),s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X66),s('type.list.list'(X55),'const.list.NIL_0')))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1219])).
fof(f14902,plain,(
  ( ! [X47,X45,X43,X54,X52,X50,X48,X46,X44,X53,X51,X49] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X43),X44) != s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X45),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X46),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X47),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X48),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X49),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X50),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X51),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X52),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X53),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X54),s('type.list.list'(X43),'const.list.NIL_0')))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1221])).
fof(f14968,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl367),
  inference(cnf_transformation,[],[f14968_D])).
fof(f14968_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl367),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl367])])).
fof(f14901,plain,(
  ( ! [X30,X28,X39,X37,X35,X33,X41,X31,X29,X27,X38,X36,X34,X32,X42,X40] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X27),X28) != s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X29),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X30),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X31),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X32),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X33),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X34),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X35),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X36),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X37),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X38),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X39),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X40),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X41),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X42),s('type.list.list'(X27),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1207])).
fof(f14900,plain,(
  ( ! [X26,X24,X14,X12,X23,X21,X19,X17,X25,X15,X13,X11,X22,X20,X18,X16] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X11),X12) != s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X13),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X14),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X15),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X16),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X17),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X18),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X19),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X20),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X21),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X22),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X23),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X24),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X25),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X26),s('type.list.list'(X11),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1209])).
fof(f14861,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1223])).
fof(f14860,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1225])).
fof(f14859,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1211])).
fof(f14858,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1213])).
fof(f14857,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1203])).
fof(f14856,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1205])).
fof(f14855,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1227])).
fof(f14854,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1229])).
fof(f14851,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1219])).
fof(f14850,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1221])).
fof(f14849,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1207])).
fof(f14848,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1209])).
fof(f14948,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl341),
  inference(cnf_transformation,[],[f14948_D])).
fof(f14948_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl341),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl341])])).
fof(f14808,plain,(
  ( ! [X621,X623,X617,X619,X620,X622,X618] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X617),X618))) | s('type.list.list'(X617),X618) != s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X619),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X620),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X621),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X622),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X623),s('type.list.list'(X617),'const.list.NIL_0')))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1233])).
fof(f14807,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1231])).
fof(f14806,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1229])).
fof(f14805,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1227])).
fof(f14804,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1225])).
fof(f14803,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1223])).
fof(f14802,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1221])).
fof(f14801,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1219])).
fof(f1476,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl43),
  inference(cnf_transformation,[],[f1476_D])).
fof(f1476_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f14800,plain,(
  ( ! [X540,X542,X536,X538,X532,X534,X530,X541,X543,X537,X539,X533,X535,X531] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X530),X531))) | s('type.list.list'(X530),X531) != s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X532),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X533),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X534),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X535),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X536),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X537),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X538),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X539),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X540),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X541),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X542),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X543),s('type.list.list'(X530),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1217])).
fof(f14799,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1215])).
fof(f14798,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1213])).
fof(f14797,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1211])).
fof(f14796,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1209])).
fof(f14795,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1207])).
fof(f14794,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1205])).
fof(f14793,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl235),
  inference(superposition,[],[f5357,f1203])).
fof(f14445,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl251),
  inference(cnf_transformation,[],[f14445_D])).
fof(f14445_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl251),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl251])])).
fof(f14561,plain,(
  ( ! [X926,X930,X928,X932,X927,X931,X929] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X926),X927))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X926),X927) != s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X928),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X929),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X930),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X931),s('type.list.list'(X926),'const.list.CONS_2'(s(X926,X932),s('type.list.list'(X926),'const.list.NIL_0')))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1231])).
fof(f5256,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) ) | $spl231),
  inference(superposition,[],[f5227,f1311])).
fof(f14560,plain,(
  ( ! [X922,X920,X924,X923,X921,X919,X925] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X919),X920))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X919),X920) != s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X921),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X922),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X923),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X924),s('type.list.list'(X919),'const.list.CONS_2'(s(X919,X925),s('type.list.list'(X919),'const.list.NIL_0')))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1233])).
fof(f14559,plain,(
  ( ! [X912,X918,X916,X914,X911,X909,X915,X913,X917,X910,X908] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X908),X909))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X908),X909) != s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X910),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X911),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X912),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X913),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X914),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X915),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X916),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X917),s('type.list.list'(X908),'const.list.CONS_2'(s(X908,X918),s('type.list.list'(X908),'const.list.NIL_0')))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1223])).
fof(f14558,plain,(
  ( ! [X907,X905,X899,X897,X903,X901,X906,X904,X898,X902,X900] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X897),X898))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X897),X898) != s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X899),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X900),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X901),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X902),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X903),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X904),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X905),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X906),s('type.list.list'(X897),'const.list.CONS_2'(s(X897,X907),s('type.list.list'(X897),'const.list.NIL_0')))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1225])).
fof(f14557,plain,(
  ( ! [X895,X893,X883,X887,X885,X890,X888,X894,X892,X882,X886,X884,X896,X891,X889] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X882),X883))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X882),X883) != s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X884),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X885),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X886),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X887),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X888),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X889),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X890),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X891),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X892),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X893),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X894),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X895),s('type.list.list'(X882),'const.list.CONS_2'(s(X882,X896),s('type.list.list'(X882),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1211])).
fof(f14556,plain,(
  ( ! [X881,X874,X872,X878,X876,X870,X868,X880,X875,X873,X879,X877,X867,X871,X869] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X867),X868))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X867),X868) != s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X869),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X870),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X871),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X872),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X873),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X874),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X875),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X876),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X877),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X878),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X879),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X880),s('type.list.list'(X867),'const.list.CONS_2'(s(X867,X881),s('type.list.list'(X867),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1213])).
fof(f14555,plain,(
  ( ! [X860,X850,X854,X852,X866,X864,X859,X857,X863,X861,X851,X855,X853,X865,X858,X856,X862] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X850),X851))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X850),X851) != s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X852),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X853),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X854),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X855),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X856),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X857),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X858),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X859),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X860),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X861),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X862),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X863),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X864),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X865),s('type.list.list'(X850),'const.list.CONS_2'(s(X850,X866),s('type.list.list'(X850),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1203])).
fof(f14554,plain,(
  ( ! [X848,X843,X841,X847,X845,X835,X833,X839,X837,X849,X842,X840,X846,X844,X834,X838,X836] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X833),X834))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X833),X834) != s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X835),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X836),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X837),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X838),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X839),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X840),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X841),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X842),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X843),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X844),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X845),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X846),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X847),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X848),s('type.list.list'(X833),'const.list.CONS_2'(s(X833,X849),s('type.list.list'(X833),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1205])).
fof(f14553,plain,(
  ( ! [X825,X831,X829,X823,X826,X824,X830,X828,X832,X827] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X823),X824))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X823),X824) != s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X825),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X826),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X827),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X828),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X829),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X830),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X831),s('type.list.list'(X823),'const.list.CONS_2'(s(X823,X832),s('type.list.list'(X823),'const.list.NIL_0')))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1227])).
fof(f14552,plain,(
  ( ! [X819,X817,X821,X814,X818,X816,X822,X820,X815,X813] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X813),X814))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X813),X814) != s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X815),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X816),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X817),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X818),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X819),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X820),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X821),s('type.list.list'(X813),'const.list.CONS_2'(s(X813,X822),s('type.list.list'(X813),'const.list.NIL_0')))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1229])).
fof(f1434,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl9),
  inference(cnf_transformation,[],[f1434_D])).
fof(f1434_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f14551,plain,(
  ( ! [X810,X808,X812,X802,X800,X806,X804,X799,X811,X809,X803,X801,X807,X805] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X799),X800))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X799),X800) != s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X801),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X802),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X803),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X804),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X805),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X806),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X807),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X808),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X809),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X810),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X811),s('type.list.list'(X799),'const.list.CONS_2'(s(X799,X812),s('type.list.list'(X799),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1215])).
fof(f14550,plain,(
  ( ! [X798,X796,X786,X790,X788,X795,X793,X797,X787,X785,X791,X789,X794,X792] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X785),X786))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X785),X786) != s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X787),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X788),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X789),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X790),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X791),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X792),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X793),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X794),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X795),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X796),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X797),s('type.list.list'(X785),'const.list.CONS_2'(s(X785,X798),s('type.list.list'(X785),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1217])).
fof(f14549,plain,(
  ( ! [X784,X779,X777,X783,X781,X775,X773,X778,X776,X782,X780,X774] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X773),X774))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X773),X774) != s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X775),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X776),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X777),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X778),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X779),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X780),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X781),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X782),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X783),s('type.list.list'(X773),'const.list.CONS_2'(s(X773,X784),s('type.list.list'(X773),'const.list.NIL_0')))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1219])).
fof(f14548,plain,(
  ( ! [X765,X767,X761,X763,X771,X769,X764,X766,X762,X770,X768,X772] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X761),X762))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X761),X762) != s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X763),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X764),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X765),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X766),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X767),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X768),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X769),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X770),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X771),s('type.list.list'(X761),'const.list.CONS_2'(s(X761,X772),s('type.list.list'(X761),'const.list.NIL_0')))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1221])).
fof(f14547,plain,(
  ( ! [X757,X759,X753,X755,X749,X751,X745,X747,X760,X756,X758,X752,X754,X748,X750,X746] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X745),X746))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X745),X746) != s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X747),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X748),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X749),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X750),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X751),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X752),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X753),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X754),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X755),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X756),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X757),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X758),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X759),s('type.list.list'(X745),'const.list.CONS_2'(s(X745,X760),s('type.list.list'(X745),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1207])).
fof(f14546,plain,(
  ( ! [X736,X732,X734,X738,X730,X741,X743,X737,X733,X735,X729,X731,X739,X744,X740,X742] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X729),X730))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X729),X730) != s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X731),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X732),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X733),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X734),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X735),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X736),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X737),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X738),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X739),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X740),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X741),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X742),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X743),s('type.list.list'(X729),'const.list.CONS_2'(s(X729,X744),s('type.list.list'(X729),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1209])).
fof(f14622,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl283),
  inference(cnf_transformation,[],[f14622_D])).
fof(f14622_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl283),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl283])])).
fof(f14506,plain,(
  ( ! [X621,X623,X617,X619,X620,X622,X618] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X617),X618)))))) | s('type.list.list'(X617),X618) != s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X619),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X620),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X621),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X622),s('type.list.list'(X617),'const.list.CONS_2'(s(X617,X623),s('type.list.list'(X617),'const.list.NIL_0')))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1233])).
fof(f14505,plain,(
  ( ! [X613,X615,X611,X616,X612,X614,X610] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X610),X611)))))) | s('type.list.list'(X610),X611) != s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X612),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X613),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X614),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X615),s('type.list.list'(X610),'const.list.CONS_2'(s(X610,X616),s('type.list.list'(X610),'const.list.NIL_0')))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1231])).
fof(f14504,plain,(
  ( ! [X606,X600,X602,X609,X605,X607,X601,X603,X608,X604] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X600),X601)))))) | s('type.list.list'(X600),X601) != s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X602),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X603),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X604),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X605),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X606),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X607),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X608),s('type.list.list'(X600),'const.list.CONS_2'(s(X600,X609),s('type.list.list'(X600),'const.list.NIL_0')))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1229])).
fof(f14503,plain,(
  ( ! [X596,X598,X592,X594,X590,X597,X599,X593,X595,X591] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X590),X591)))))) | s('type.list.list'(X590),X591) != s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X592),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X593),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X594),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X595),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X596),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X597),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X598),s('type.list.list'(X590),'const.list.CONS_2'(s(X590,X599),s('type.list.list'(X590),'const.list.NIL_0')))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1227])).
fof(f14502,plain,(
  ( ! [X588,X584,X586,X580,X582,X589,X585,X587,X581,X583,X579] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X579),X580)))))) | s('type.list.list'(X579),X580) != s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X581),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X582),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X583),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X584),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X585),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X586),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X587),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X588),s('type.list.list'(X579),'const.list.CONS_2'(s(X579,X589),s('type.list.list'(X579),'const.list.NIL_0')))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1225])).
fof(f14501,plain,(
  ( ! [X573,X575,X569,X571,X576,X578,X572,X574,X568,X570,X577] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X568),X569)))))) | s('type.list.list'(X568),X569) != s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X570),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X571),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X572),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X573),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X574),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X575),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X576),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X577),s('type.list.list'(X568),'const.list.CONS_2'(s(X568,X578),s('type.list.list'(X568),'const.list.NIL_0')))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1223])).
fof(f14500,plain,(
  ( ! [X565,X567,X561,X563,X557,X559,X564,X566,X560,X562,X556,X558] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X556),X557)))))) | s('type.list.list'(X556),X557) != s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X558),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X559),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X560),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X561),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X562),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X563),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X564),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X565),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X566),s('type.list.list'(X556),'const.list.CONS_2'(s(X556,X567),s('type.list.list'(X556),'const.list.NIL_0')))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1221])).
fof(f14499,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550,X544] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X544),X545)))))) | s('type.list.list'(X544),X545) != s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X546),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X547),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X548),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X549),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X550),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X551),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X552),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X553),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X554),s('type.list.list'(X544),'const.list.CONS_2'(s(X544,X555),s('type.list.list'(X544),'const.list.NIL_0')))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1219])).
fof(f14498,plain,(
  ( ! [X540,X542,X536,X538,X532,X534,X530,X541,X543,X537,X539,X533,X535,X531] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X530),X531)))))) | s('type.list.list'(X530),X531) != s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X532),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X533),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X534),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X535),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X536),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X537),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X538),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X539),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X540),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X541),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X542),s('type.list.list'(X530),'const.list.CONS_2'(s(X530,X543),s('type.list.list'(X530),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1217])).
fof(f14497,plain,(
  ( ! [X528,X524,X526,X520,X522,X516,X518,X529,X525,X527,X521,X523,X517,X519] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X516),X517)))))) | s('type.list.list'(X516),X517) != s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X518),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X519),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X520),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X521),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X522),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X523),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X524),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X525),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X526),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X527),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X528),s('type.list.list'(X516),'const.list.CONS_2'(s(X516,X529),s('type.list.list'(X516),'const.list.NIL_0')))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1215])).
fof(f14496,plain,(
  ( ! [X515,X509,X511,X505,X507,X502,X512,X514,X508,X510,X504,X506,X501,X503,X513] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X501),X502)))))) | s('type.list.list'(X501),X502) != s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X503),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X504),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X505),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X506),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X507),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X508),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X509),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X510),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X511),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X512),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X513),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X514),s('type.list.list'(X501),'const.list.CONS_2'(s(X501,X515),s('type.list.list'(X501),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1213])).
fof(f14495,plain,(
  ( ! [X499,X486,X492,X494,X488,X490,X500,X496,X498,X487,X493,X495,X489,X491,X497] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X486),X487)))))) | s('type.list.list'(X486),X487) != s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X488),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X489),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X490),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X491),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X492),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X493),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X494),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X495),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X496),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X497),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X498),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X499),s('type.list.list'(X486),'const.list.CONS_2'(s(X486,X500),s('type.list.list'(X486),'const.list.NIL_0')))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1211])).
fof(f14494,plain,(
  ( ! [X476,X478,X472,X474,X484,X480,X482,X471,X475,X477,X479,X473,X485,X481,X483,X470] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X470),X471)))))) | s('type.list.list'(X470),X471) != s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X472),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X473),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X474),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X475),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X476),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X477),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X478),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X479),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X480),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X481),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X482),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X483),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X484),s('type.list.list'(X470),'const.list.CONS_2'(s(X470,X485),s('type.list.list'(X470),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1209])).
fof(f14493,plain,(
  ( ! [X466,X455,X461,X463,X457,X459,X469,X465,X467,X454,X460,X462,X456,X458,X468,X464] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X454),X455)))))) | s('type.list.list'(X454),X455) != s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X456),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X457),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X458),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X459),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X460),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X461),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X462),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X463),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X464),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X465),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X466),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X467),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X468),s('type.list.list'(X454),'const.list.CONS_2'(s(X454,X469),s('type.list.list'(X454),'const.list.NIL_0')))))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1207])).
fof(f14492,plain,(
  ( ! [X445,X447,X441,X443,X453,X449,X451,X438,X444,X446,X440,X442,X452,X448,X450,X437,X439] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X437),X438)))))) | s('type.list.list'(X437),X438) != s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X439),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X440),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X441),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X442),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X443),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X444),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X445),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X446),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X447),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X448),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X449),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X450),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X451),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X452),s('type.list.list'(X437),'const.list.CONS_2'(s(X437,X453),s('type.list.list'(X437),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1205])).
fof(f14491,plain,(
  ( ! [X420,X422,X428,X430,X424,X426,X436,X432,X434,X421,X423,X429,X431,X425,X427,X433,X435] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X420),X421)))))) | s('type.list.list'(X420),X421) != s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X422),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X423),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X424),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X425),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X426),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X427),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X428),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X429),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X430),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X431),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X432),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X433),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X434),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X435),s('type.list.list'(X420),'const.list.CONS_2'(s(X420,X436),s('type.list.list'(X420),'const.list.NIL_0')))))))))))))))))))))))))))))))) ) | $spl231),
  inference(superposition,[],[f5256,f1203])).
fof(f14443,plain,(
  ( ! [X35,X33,X31,X34,X32] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X34),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X35),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl248),
  inference(cnf_transformation,[],[f14443_D])).
fof(f14443_D,plain,(
  ( ! [X35,X33,X31,X34,X32] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X34),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X35),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) <=> ~$spl248),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl248])])).
fof(f14409,plain,(
  ( ! [X39,X37,X38,X36,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X36),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl57),
  inference(superposition,[],[f3830,f1233])).
fof(f14408,plain,(
  ( ! [X35,X33,X31,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X34),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X35),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl57),
  inference(superposition,[],[f3830,f1231])).
fof(f12883,plain,(
  $false | ($spl4 | $spl177)),
  inference(trivial_inequality_removal,[],[f12772])).
fof(f12772,plain,(
  s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),sK1) | ($spl4 | $spl177)),
  inference(superposition,[],[f12462,f1348])).
fof(f12462,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),X1)))) ) | $spl177),
  inference(resolution,[],[f5096,f1201])).
fof(f1201,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f835])).
fof(f1470,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl41),
  inference(cnf_transformation,[],[f1470_D])).
fof(f1470_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl41),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl41])])).
fof(f12500,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl177),
  inference(superposition,[],[f5096,f1311])).
fof(f11208,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl245),
  inference(cnf_transformation,[],[f11208_D])).
fof(f11208_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl245),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl245])])).
fof(f1478,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl45),
  inference(cnf_transformation,[],[f1478_D])).
fof(f1478_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl45),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl45])])).
fof(f11182,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl29),
  inference(superposition,[],[f1458,f1331])).
fof(f11181,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl29),
  inference(superposition,[],[f1458,f1333])).
fof(f8431,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl243),
  inference(cnf_transformation,[],[f8431_D])).
fof(f8431_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl243),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl243])])).
fof(f1477,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl44),
  inference(cnf_transformation,[],[f1477_D])).
fof(f1477_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f8401,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl36),
  inference(superposition,[],[f1465,f1331])).
fof(f8400,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl36),
  inference(superposition,[],[f1465,f1333])).
fof(f8241,plain,(
  $false | $spl37),
  inference(subsumption_resolution,[],[f8240,f1329])).
fof(f8240,plain,(
  ~p(s(bool,'T_0')) | $spl37),
  inference(forward_demodulation,[],[f8234,f1330])).
fof(f8234,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.num.|48|_0')))) | $spl37),
  inference(trivial_inequality_removal,[],[f8207])).
fof(f8207,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | $spl37),
  inference(superposition,[],[f1466,f1332])).
fof(f8239,plain,(
  $false | $spl37),
  inference(subsumption_resolution,[],[f8238,f1329])).
fof(f8238,plain,(
  ~p(s(bool,'T_0')) | $spl37),
  inference(forward_demodulation,[],[f8235,f1330])).
fof(f8235,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.num.|48|_0')))) | $spl37),
  inference(trivial_inequality_removal,[],[f8206])).
fof(f8206,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | $spl37),
  inference(superposition,[],[f1466,f1334])).
fof(f5458,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl241),
  inference(cnf_transformation,[],[f5458_D])).
fof(f5458_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl241),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl241])])).
fof(f5324,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl239),
  inference(cnf_transformation,[],[f5324_D])).
fof(f5324_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl239),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl239])])).
fof(f5434,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl235),
  inference(superposition,[],[f5364,f1331])).
fof(f5433,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl235),
  inference(superposition,[],[f5364,f1333])).
fof(f1448,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl19),
  inference(cnf_transformation,[],[f1448_D])).
fof(f1448_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f5296,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl23),
  inference(superposition,[],[f1452,f1331])).
fof(f5295,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl23),
  inference(superposition,[],[f1452,f1333])).
fof(f5320,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl235),
  inference(cnf_transformation,[],[f5320_D])).
fof(f5320_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl235),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl235])])).
fof(f5322,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl237),
  inference(cnf_transformation,[],[f5322_D])).
fof(f5322_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl237),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl237])])).
fof(f5285,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl23),
  inference(superposition,[],[f1452,f1331])).
fof(f5284,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl23),
  inference(superposition,[],[f1452,f1333])).
fof(f5255,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) | $spl233),
  inference(cnf_transformation,[],[f5255_D])).
fof(f5255_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) <=> ~$spl233),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl233])])).
fof(f5227,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | $spl231),
  inference(cnf_transformation,[],[f5227_D])).
fof(f5227_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') <=> ~$spl231),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl231])])).
fof(f5244,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) | $spl47),
  inference(superposition,[],[f3819,f1331])).
fof(f5243,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) | $spl47),
  inference(superposition,[],[f3819,f1333])).
fof(f1444,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))))) | $spl15),
  inference(cnf_transformation,[],[f1444_D])).
fof(f1444_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))))) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f5216,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))))) | $spl7),
  inference(superposition,[],[f1432,f1331])).
fof(f5215,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))))) | $spl7),
  inference(superposition,[],[f1432,f1333])).
fof(f5203,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) | $spl229),
  inference(cnf_transformation,[],[f5203_D])).
fof(f5203_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) <=> ~$spl229),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl229])])).
fof(f1431,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | $spl6),
  inference(cnf_transformation,[],[f1431_D])).
fof(f1431_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f2822,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1340,f1348])).
fof(f5204,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) | $spl228),
  inference(cnf_transformation,[],[f5204_D])).
fof(f5204_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) <=> ~$spl228),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl228])])).
fof(f1432,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | $spl7),
  inference(cnf_transformation,[],[f1432_D])).
fof(f1432_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f2820,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1339,f1348])).
fof(f2818,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1338,f1348])).
fof(f2816,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1337,f1348])).
fof(f5181,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl223),
  inference(cnf_transformation,[],[f5181_D])).
fof(f5181_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl223),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl223])])).
fof(f5188,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1094('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1095('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1096('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1097('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1098('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | $spl226),
  inference(cnf_transformation,[],[f5188_D])).
fof(f5188_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1094('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1095('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1096('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1097('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1098('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) <=> ~$spl226),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl226])])).
fof(f5186,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1094('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1095('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1096('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1097('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1098('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl4),
  inference(forward_demodulation,[],[f2805,f1348])).
fof(f2805,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1094('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1095('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1096('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1097('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1098('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | $spl4),
  inference(superposition,[],[f1232,f1348])).
fof(f1232,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1094(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1095(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1096(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1097(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1098(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f883])).
fof(f5183,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1089('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1090('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1091('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1092('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1093('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | $spl224),
  inference(cnf_transformation,[],[f5183_D])).
fof(f5183_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1089('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1090('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1091('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1092('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1093('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) <=> ~$spl224),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl224])])).
fof(f5179,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1089('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1090('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1091('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1092('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1093('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl4),
  inference(forward_demodulation,[],[f2802,f1348])).
fof(f2802,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1089('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1090('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1091('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1092('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1093('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | $spl4),
  inference(superposition,[],[f1230,f1348])).
fof(f1230,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1089(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1090(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1091(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1092(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1093(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f880])).
fof(f5169,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl217),
  inference(cnf_transformation,[],[f5169_D])).
fof(f5169_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl217),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl217])])).
fof(f5176,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1081('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1082('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1083('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1084('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1085('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1086('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1087('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1088('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | $spl220),
  inference(cnf_transformation,[],[f5176_D])).
fof(f5176_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1081('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1082('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1083('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1084('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1085('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1086('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1087('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1088('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) <=> ~$spl220),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl220])])).
fof(f5174,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1081('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1082('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1083('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1084('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1085('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1086('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1087('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1088('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl4),
  inference(forward_demodulation,[],[f2799,f1348])).
fof(f2799,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1081('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1082('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1083('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1084('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1085('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1086('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1087('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1088('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | $spl4),
  inference(superposition,[],[f1228,f1348])).
fof(f1228,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1081(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1082(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1083(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1084(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1085(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1086(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1087(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1088(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f877])).
fof(f5171,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1073('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1074('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1075('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1076('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1077('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1078('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1079('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1080('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | $spl218),
  inference(cnf_transformation,[],[f5171_D])).
fof(f5171_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1073('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1074('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1075('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1076('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1077('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1078('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1079('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1080('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) <=> ~$spl218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl218])])).
fof(f5167,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1073('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1074('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1075('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1076('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1077('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1078('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1079('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1080('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl4),
  inference(forward_demodulation,[],[f2796,f1348])).
fof(f2796,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1073('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1074('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1075('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1076('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1077('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1078('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1079('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1080('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | $spl4),
  inference(superposition,[],[f1226,f1348])).
fof(f1226,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1073(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1074(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1075(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1076(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1077(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1078(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1079(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1080(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f874])).
fof(f5157,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl211),
  inference(cnf_transformation,[],[f5157_D])).
fof(f5157_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl211),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl211])])).
fof(f5164,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1064('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1065('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1066('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1067('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1068('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1069('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1070('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1071('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1072('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | $spl214),
  inference(cnf_transformation,[],[f5164_D])).
fof(f5164_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1064('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1065('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1066('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1067('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1068('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1069('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1070('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1071('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1072('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) <=> ~$spl214),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl214])])).
fof(f5162,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1064('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1065('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1066('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1067('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1068('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1069('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1070('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1071('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1072('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl4),
  inference(forward_demodulation,[],[f2793,f1348])).
fof(f2793,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1064('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1065('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1066('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1067('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1068('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1069('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1070('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1071('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1072('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1224,f1348])).
fof(f1224,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1064(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1065(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1066(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1067(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1068(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1069(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1070(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1071(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1072(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f871])).
fof(f5159,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1055('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1056('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1057('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1058('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1059('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1060('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1061('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1062('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1063('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | $spl212),
  inference(cnf_transformation,[],[f5159_D])).
fof(f5159_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1055('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1056('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1057('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1058('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1059('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1060('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1061('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1062('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1063('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) <=> ~$spl212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl212])])).
fof(f5155,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1055('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1056('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1057('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1058('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1059('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1060('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1061('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1062('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1063('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl4),
  inference(forward_demodulation,[],[f2790,f1348])).
fof(f2790,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1055('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1056('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1057('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1058('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1059('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1060('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1061('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1062('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1063('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1222,f1348])).
fof(f1222,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1055(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1056(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1057(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1058(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1059(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1060(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1061(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1062(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1063(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f868])).
fof(f5145,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl205),
  inference(cnf_transformation,[],[f5145_D])).
fof(f5145_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl205),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl205])])).
fof(f5152,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1045('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1046('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1047('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1048('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1049('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1050('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1051('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1052('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1053('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1054('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | $spl208),
  inference(cnf_transformation,[],[f5152_D])).
fof(f5152_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1045('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1046('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1047('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1048('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1049('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1050('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1051('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1052('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1053('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1054('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) <=> ~$spl208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl208])])).
fof(f5150,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1045('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1046('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1047('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1048('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1049('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1050('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1051('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1052('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1053('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1054('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl4),
  inference(forward_demodulation,[],[f2787,f1348])).
fof(f2787,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1045('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1046('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1047('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1048('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1049('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1050('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1051('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1052('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1053('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1054('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1220,f1348])).
fof(f1220,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1045(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1046(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1047(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1048(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1049(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1050(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1051(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1052(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1053(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1054(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f865])).
fof(f5147,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1035('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1036('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1037('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1038('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1039('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1040('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1041('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1042('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1043('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1044('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | $spl206),
  inference(cnf_transformation,[],[f5147_D])).
fof(f5147_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1035('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1036('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1037('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1038('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1039('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1040('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1041('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1042('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1043('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1044('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) <=> ~$spl206),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl206])])).
fof(f5143,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1035('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1036('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1037('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1038('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1039('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1040('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1041('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1042('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1043('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1044('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl4),
  inference(forward_demodulation,[],[f2784,f1348])).
fof(f2784,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1035('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1036('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1037('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1038('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1039('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1040('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1041('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1042('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1043('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1044('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1218,f1348])).
fof(f1218,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1035(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1036(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1037(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1038(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1039(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1040(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1041(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1042(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1043(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1044(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f862])).
fof(f5133,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl199),
  inference(cnf_transformation,[],[f5133_D])).
fof(f5133_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl199),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl199])])).
fof(f5140,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1023('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1024('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1025('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1026('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1027('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1028('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1029('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1030('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1031('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1032('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1033('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1034('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) | $spl202),
  inference(cnf_transformation,[],[f5140_D])).
fof(f5140_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1023('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1024('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1025('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1026('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1027('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1028('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1029('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1030('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1031('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1032('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1033('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1034('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) <=> ~$spl202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl202])])).
fof(f5138,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1023('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1024('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1025('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1026('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1027('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1028('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1029('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1030('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1031('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1032('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1033('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1034('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl4),
  inference(forward_demodulation,[],[f2781,f1348])).
fof(f2781,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1023('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1024('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1025('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1026('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1027('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1028('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1029('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1030('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1031('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1032('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1033('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1034('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1216,f1348])).
fof(f1216,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1023(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1024(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1025(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1026(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1027(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1028(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1029(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1030(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1031(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1032(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1033(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1034(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f859])).
fof(f5135,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1011('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1012('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1013('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1014('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1015('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1016('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1017('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1018('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1019('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1020('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1021('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1022('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) | $spl200),
  inference(cnf_transformation,[],[f5135_D])).
fof(f5135_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1011('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1012('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1013('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1014('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1015('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1016('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1017('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1018('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1019('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1020('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1021('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1022('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) <=> ~$spl200),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl200])])).
fof(f5131,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1011('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1012('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1013('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1014('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1015('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1016('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1017('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1018('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1019('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1020('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1021('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1022('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl4),
  inference(forward_demodulation,[],[f2778,f1348])).
fof(f2778,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1011('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1012('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1013('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1014('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1015('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1016('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1017('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1018('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1019('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1020('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1021('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1022('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1214,f1348])).
fof(f1214,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1011(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1012(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1013(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1014(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1015(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1016(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1017(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1018(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1019(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1020(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1021(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1022(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f856])).
fof(f5123,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl193),
  inference(cnf_transformation,[],[f5123_D])).
fof(f5123_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl193),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl193])])).
fof(f5129,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK998('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK999('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1000('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1001('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1002('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1003('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1004('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1005('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1006('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1007('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1008('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1009('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1010('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))) | $spl196),
  inference(cnf_transformation,[],[f5129_D])).
fof(f5129_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK998('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK999('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1000('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1001('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1002('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1003('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1004('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1005('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1006('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1007('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1008('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1009('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1010('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))) <=> ~$spl196),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl196])])).
fof(f5127,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK998('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK999('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1000('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1001('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1002('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1003('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1004('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1005('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1006('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1007('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1008('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1009('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1010('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl4),
  inference(forward_demodulation,[],[f2776,f1348])).
fof(f2776,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK998('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK999('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1000('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1001('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1002('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1003('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1004('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1005('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1006('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1007('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1008('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1009('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1010('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1212,f1348])).
fof(f1212,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK998(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK999(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1000(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1001(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1002(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1003(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1004(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1005(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1006(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1007(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1008(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1009(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK1010(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f853])).
fof(f5125,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK985('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK986('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK987('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK988('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK989('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK990('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK991('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK992('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK993('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK994('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK995('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK996('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK997('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))) | $spl194),
  inference(cnf_transformation,[],[f5125_D])).
fof(f5125_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK985('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK986('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK987('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK988('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK989('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK990('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK991('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK992('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK993('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK994('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK995('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK996('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK997('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f5121,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK985('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK986('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK987('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK988('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK989('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK990('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK991('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK992('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK993('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK994('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK995('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK996('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK997('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl4),
  inference(forward_demodulation,[],[f2774,f1348])).
fof(f2774,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK985('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK986('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK987('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK988('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK989('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK990('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK991('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK992('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK993('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK994('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK995('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK996('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK997('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1210,f1348])).
fof(f1210,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK985(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK986(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK987(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK988(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK989(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK990(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK991(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK992(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK993(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK994(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK995(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK996(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK997(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f850])).
fof(f5113,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl187),
  inference(cnf_transformation,[],[f5113_D])).
fof(f5113_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl187),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl187])])).
fof(f5119,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK971('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK972('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK973('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK974('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK975('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK976('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK977('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK978('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK979('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK980('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK981('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK982('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK983('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK984('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))) | $spl190),
  inference(cnf_transformation,[],[f5119_D])).
fof(f5119_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK971('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK972('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK973('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK974('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK975('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK976('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK977('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK978('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK979('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK980('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK981('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK982('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK983('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK984('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))) <=> ~$spl190),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl190])])).
fof(f5117,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK971('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK972('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK973('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK974('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK975('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK976('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK977('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK978('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK979('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK980('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK981('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK982('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK983('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK984('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl4),
  inference(forward_demodulation,[],[f2772,f1348])).
fof(f2772,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK971('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK972('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK973('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK974('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK975('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK976('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK977('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK978('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK979('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK980('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK981('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK982('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK983('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK984('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1208,f1348])).
fof(f1208,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK971(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK972(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK973(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK974(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK975(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK976(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK977(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK978(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK979(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK980(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK981(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK982(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK983(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK984(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f847])).
fof(f5115,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK957('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK958('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK959('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK960('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK961('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK962('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK963('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK964('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK965('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK966('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK967('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK968('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK969('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK970('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))) | $spl188),
  inference(cnf_transformation,[],[f5115_D])).
fof(f5115_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK957('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK958('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK959('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK960('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK961('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK962('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK963('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK964('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK965('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK966('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK967('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK968('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK969('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK970('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))) <=> ~$spl188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl188])])).
fof(f5111,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK957('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK958('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK959('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK960('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK961('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK962('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK963('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK964('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK965('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK966('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK967('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK968('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK969('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK970('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl4),
  inference(forward_demodulation,[],[f2770,f1348])).
fof(f2770,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK957('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK958('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK959('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK960('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK961('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK962('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK963('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK964('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK965('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK966('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK967('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK968('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK969('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK970('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1206,f1348])).
fof(f1206,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK957(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK958(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK959(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK960(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK961(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK962(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK963(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK964(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK965(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK966(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK967(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK968(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK969(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK970(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f844])).
fof(f5103,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl181),
  inference(cnf_transformation,[],[f5103_D])).
fof(f5103_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl181),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl181])])).
fof(f5109,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK942('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK943('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK944('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK945('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK946('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK947('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK948('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK949('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK950('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK951('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK952('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK953('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK954('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK955('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK956('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))))) | $spl184),
  inference(cnf_transformation,[],[f5109_D])).
fof(f5109_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK942('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK943('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK944('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK945('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK946('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK947('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK948('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK949('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK950('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK951('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK952('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK953('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK954('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK955('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK956('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))))) <=> ~$spl184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl184])])).
fof(f5107,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK942('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK943('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK944('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK945('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK946('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK947('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK948('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK949('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK950('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK951('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK952('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK953('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK954('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK955('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK956('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl4),
  inference(forward_demodulation,[],[f2768,f1348])).
fof(f2768,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK942('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK943('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK944('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK945('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK946('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK947('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK948('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK949('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK950('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK951('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK952('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK953('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK954('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK955('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK956('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1204,f1348])).
fof(f1204,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK942(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK943(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK944(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK945(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK946(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK947(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK948(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK949(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK950(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK951(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK952(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK953(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK954(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK955(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK956(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) )),
  inference(cnf_transformation,[],[f841])).
fof(f5105,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK927('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK928('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK929('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK930('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK931('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK932('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK933('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK934('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK935('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK936('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK937('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK938('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK939('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK940('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK941('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))))) | $spl182),
  inference(cnf_transformation,[],[f5105_D])).
fof(f5105_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK927('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK928('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK929('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK930('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK931('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK932('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK933('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK934('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK935('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK936('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK937('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK938('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK939('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK940('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK941('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))))) <=> ~$spl182),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl182])])).
fof(f5101,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK927('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK928('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK929('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK930('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK931('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK932('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK933('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK934('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK935('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK936('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK937('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK938('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK939('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK940('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK941('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl4),
  inference(forward_demodulation,[],[f2766,f1348])).
fof(f2766,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK927('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK928('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK929('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK930('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK931('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK932('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK933('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK934('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK935('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK936('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK937('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK938('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK939('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK940('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK941('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1202,f1348])).
fof(f1202,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK927(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK928(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK929(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK930(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK931(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK932(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK933(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK934(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK935(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK936(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK937(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK938(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK939(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK940(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK941(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) )),
  inference(cnf_transformation,[],[f838])).
fof(f5096,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl177),
  inference(cnf_transformation,[],[f5096_D])).
fof(f5096_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl177),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl177])])).
fof(f5098,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK926('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK925('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))) | $spl178),
  inference(cnf_transformation,[],[f5098_D])).
fof(f5098_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK926('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK925('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f5094,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK926('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK925('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl4),
  inference(forward_demodulation,[],[f2762,f1348])).
fof(f2762,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK926('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK925('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))) | $spl4),
  inference(superposition,[],[f1200,f1348])).
fof(f1458,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl29),
  inference(cnf_transformation,[],[f1458_D])).
fof(f1458_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f5091,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK923('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK924('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK922('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))) | $spl174),
  inference(cnf_transformation,[],[f5091_D])).
fof(f5091_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK923('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK924('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK922('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))) <=> ~$spl174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl174])])).
fof(f5089,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK923('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK924('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK922('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl4),
  inference(forward_demodulation,[],[f2758,f1348])).
fof(f2758,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK923('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK924('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK922('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))) | $spl4),
  inference(superposition,[],[f1198,f1348])).
fof(f1198,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK923(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK924(X1,X0)),s('type.list.list'(X0),sK922(X1,X0)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(cnf_transformation,[],[f832])).
fof(f5086,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK919('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK920('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK921('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK918('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))) | $spl172),
  inference(cnf_transformation,[],[f5086_D])).
fof(f5086_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK919('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK920('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK921('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK918('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f5082,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK919('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK920('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK921('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK918('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(forward_demodulation,[],[f2754,f1348])).
fof(f2754,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK919('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK920('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK921('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK918('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))) | $spl4),
  inference(superposition,[],[f1196,f1348])).
fof(f1196,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK919(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK920(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK921(X1,X0)),s('type.list.list'(X0),sK918(X1,X0)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(cnf_transformation,[],[f829])).
fof(f1450,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl21),
  inference(cnf_transformation,[],[f1450_D])).
fof(f1450_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f5079,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK914('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK915('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK916('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK917('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK913('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))) | $spl168),
  inference(cnf_transformation,[],[f5079_D])).
fof(f5079_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK914('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK915('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK916('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK917('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK913('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f5077,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK914('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK915('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK916('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK917('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK913('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(forward_demodulation,[],[f2750,f1348])).
fof(f2750,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK914('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK915('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK916('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK917('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK913('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))) | $spl4),
  inference(superposition,[],[f1194,f1348])).
fof(f1194,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK914(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK915(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK916(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK917(X1,X0)),s('type.list.list'(X0),sK913(X1,X0)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(cnf_transformation,[],[f826])).
fof(f5064,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl163),
  inference(cnf_transformation,[],[f5064_D])).
fof(f5064_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl163),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl163])])).
fof(f5072,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK908('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK909('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK910('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK911('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK912('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK907('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))) | $spl166),
  inference(cnf_transformation,[],[f5072_D])).
fof(f5072_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK908('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK909('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK910('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK911('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK912('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK907('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))) <=> ~$spl166),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl166])])).
fof(f5070,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK908('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK909('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK910('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK911('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK912('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK907('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(forward_demodulation,[],[f5069,f1348])).
fof(f5069,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK908('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK909('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK910('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK911('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK912('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK907('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))) | $spl4),
  inference(forward_demodulation,[],[f2746,f949])).
fof(f2746,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK908('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK909('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK910('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK911('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK912('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK907('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))) | $spl4),
  inference(superposition,[],[f1192,f1348])).
fof(f1192,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK908(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK909(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK910(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK911(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK912(X1,X0)),s('type.list.list'(X0),sK907(X1,X0)))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f823])).
fof(f823,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK908(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK909(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK910(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK911(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK912(X1,X0)),s('type.list.list'(X0),sK907(X1,X0))))))))))))) & (! [X2,X3,X4,X5,X6,X7] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X2))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK907,sK908,sK909,sK910,sK911,sK912])],[f822])).
fof(f822,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X8,X9,X10,X11,X12,X13] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),X8)))))))))))) & (! [X2,X3,X4,X5,X6,X7] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X2))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(rectify,[],[f821])).
fof(f821,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X2,X3,X4,X5,X6,X7] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X2)))))))))))) & (! [X2,X3,X4,X5,X6,X7] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X2))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f449])).
fof(f449,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4,X5,X6,X7] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X2))))))))))))),
  inference(flattening,[],[f448])).
fof(f448,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4,X5,X6,X7] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X2))))))))))))),
  inference(rectify,[],[f167])).
fof(f167,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) <=> ? [X8,X9,X10,X11,X12,X13] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X8))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_5|split|4')).
fof(f5066,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK902('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK903('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK904('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK905('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK906('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK901('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))) | $spl164),
  inference(cnf_transformation,[],[f5066_D])).
fof(f5066_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK902('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK903('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK904('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK905('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK906('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK901('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f5062,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK902('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK903('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK904('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK905('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK906('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK901('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(forward_demodulation,[],[f2742,f1348])).
fof(f2742,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK902('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK903('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK904('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK905('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK906('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK901('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))) | $spl4),
  inference(superposition,[],[f1190,f1348])).
fof(f1190,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK902(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK903(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK904(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK905(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK906(X1,X0)),s('type.list.list'(X0),sK901(X1,X0)))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(cnf_transformation,[],[f820])).
fof(f5057,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl159),
  inference(cnf_transformation,[],[f5057_D])).
fof(f5057_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl159),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl159])])).
fof(f5059,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK895('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK896('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK897('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK898('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK899('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK900('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK894('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))) | $spl160),
  inference(cnf_transformation,[],[f5059_D])).
fof(f5059_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK895('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK896('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK897('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK898('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK899('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK900('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK894('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f5055,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK895('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK896('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK897('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK898('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK899('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK900('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK894('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(forward_demodulation,[],[f2738,f1348])).
fof(f2738,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK895('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK896('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK897('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK898('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK899('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK900('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK894('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))) | $spl4),
  inference(superposition,[],[f1188,f1348])).
fof(f1188,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK895(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK896(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK897(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK898(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK899(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK900(X1,X0)),s('type.list.list'(X0),sK894(X1,X0)))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(cnf_transformation,[],[f817])).
fof(f5050,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl155),
  inference(cnf_transformation,[],[f5050_D])).
fof(f5050_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl155),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl155])])).
fof(f5052,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK887('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK888('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK889('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK890('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK891('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK892('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK893('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK886('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))) | $spl156),
  inference(cnf_transformation,[],[f5052_D])).
fof(f5052_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK887('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK888('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK889('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK890('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK891('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK892('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK893('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK886('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f5048,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK887('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK888('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK889('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK890('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK891('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK892('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK893('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK886('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(forward_demodulation,[],[f2734,f1348])).
fof(f2734,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK887('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK888('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK889('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK890('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK891('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK892('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK893('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK886('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))) | $spl4),
  inference(superposition,[],[f1186,f1348])).
fof(f1186,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK887(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK888(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK889(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK890(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK891(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK892(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK893(X1,X0)),s('type.list.list'(X0),sK886(X1,X0)))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(cnf_transformation,[],[f814])).
fof(f5035,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl149),
  inference(cnf_transformation,[],[f5035_D])).
fof(f5035_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl149),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl149])])).
fof(f5043,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK878('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK879('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK880('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK881('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK882('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK883('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK884('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK885('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK877('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))) | $spl152),
  inference(cnf_transformation,[],[f5043_D])).
fof(f5043_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK878('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK879('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK880('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK881('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK882('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK883('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK884('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK885('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK877('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f5041,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK878('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK879('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK880('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK881('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK882('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK883('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK884('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK885('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK877('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(forward_demodulation,[],[f5040,f1348])).
fof(f5040,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK878('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK879('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK880('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK881('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK882('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK883('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK884('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK885('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK877('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))) | $spl4),
  inference(forward_demodulation,[],[f2730,f949])).
fof(f2730,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK878('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK879('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK880('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK881('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK882('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK883('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK884('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK885('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK877('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))) | $spl4),
  inference(superposition,[],[f1184,f1348])).
fof(f1184,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK878(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK879(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK880(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK881(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK882(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK883(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK884(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK885(X1,X0)),s('type.list.list'(X0),sK877(X1,X0)))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f811])).
fof(f811,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK878(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK879(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK880(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK881(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK882(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK883(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK884(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK885(X1,X0)),s('type.list.list'(X0),sK877(X1,X0))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),X2))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK877,sK878,sK879,sK880,sK881,sK882,sK883,sK884,sK885])],[f810])).
fof(f810,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X11,X12,X13,X14,X15,X16,X17,X18,X19] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),X11)))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),X2))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(rectify,[],[f809])).
fof(f809,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),X2)))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),X2))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f441])).
fof(f441,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),X2))))))))))))))))))),
  inference(flattening,[],[f440])).
fof(f440,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),X2))))))))))))))))))),
  inference(rectify,[],[f200])).
fof(f200,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) <=> ? [X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),X8))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49||48||split|32')).
fof(f5037,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK869('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK870('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK871('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK872('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK873('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK874('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK875('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK876('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK868('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))) | $spl150),
  inference(cnf_transformation,[],[f5037_D])).
fof(f5037_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK869('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK870('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK871('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK872('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK873('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK874('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK875('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK876('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK868('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f5033,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK869('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK870('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK871('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK872('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK873('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK874('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK875('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK876('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK868('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(forward_demodulation,[],[f2726,f1348])).
fof(f2726,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK869('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK870('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK871('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK872('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK873('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK874('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK875('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK876('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK868('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))) | $spl4),
  inference(superposition,[],[f1182,f1348])).
fof(f1182,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK869(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK870(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK871(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK872(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK873(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK874(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK875(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK876(X1,X0)),s('type.list.list'(X0),sK868(X1,X0)))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(cnf_transformation,[],[f808])).
fof(f5021,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl143),
  inference(cnf_transformation,[],[f5021_D])).
fof(f5021_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl143),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl143])])).
fof(f5030,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK859('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK860('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK861('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK862('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK863('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK864('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK865('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK866('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK867('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK858('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))) | $spl146),
  inference(cnf_transformation,[],[f5030_D])).
fof(f5030_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK859('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK860('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK861('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK862('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK863('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK864('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK865('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK866('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK867('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK858('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f5028,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK859('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK860('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK861('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK862('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK863('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK864('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK865('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK866('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK867('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK858('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(forward_demodulation,[],[f2722,f1348])).
fof(f2722,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK859('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK860('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK861('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK862('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK863('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK864('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK865('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK866('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK867('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK858('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1180,f1348])).
fof(f1180,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK859(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK860(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK861(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK862(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK863(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK864(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK865(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK866(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK867(X1,X0)),s('type.list.list'(X0),sK858(X1,X0)))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(cnf_transformation,[],[f805])).
fof(f5023,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK849('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK850('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK851('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK852('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK853('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK854('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK855('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK856('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK857('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK848('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))) | $spl144),
  inference(cnf_transformation,[],[f5023_D])).
fof(f5023_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK849('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK850('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK851('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK852('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK853('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK854('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK855('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK856('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK857('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK848('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f5019,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK849('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK850('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK851('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK852('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK853('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK854('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK855('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK856('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK857('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK848('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(forward_demodulation,[],[f5018,f1348])).
fof(f5018,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK849('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK850('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK851('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK852('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK853('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK854('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK855('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK856('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK857('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK848('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))) | $spl4),
  inference(forward_demodulation,[],[f2718,f949])).
fof(f2718,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK849('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK850('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK851('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK852('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK853('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK854('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK855('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK856('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK857('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK848('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1178,f1348])).
fof(f1178,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK849(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK850(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK851(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK852(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK853(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK854(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK855(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK856(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK857(X1,X0)),s('type.list.list'(X0),sK848(X1,X0)))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f802])).
fof(f802,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK849(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK850(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK851(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK852(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK853(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK854(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK855(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK856(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK857(X1,X0)),s('type.list.list'(X0),sK848(X1,X0))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),X2))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK848,sK849,sK850,sK851,sK852,sK853,sK854,sK855,sK856,sK857])],[f801])).
fof(f801,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),X12)))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),X2))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(rectify,[],[f800])).
fof(f800,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),X2)))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),X2))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f435])).
fof(f435,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),X2))))))))))))))))))))),
  inference(flattening,[],[f434])).
fof(f434,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),X2))))))))))))))))))))),
  inference(rectify,[],[f177])).
fof(f177,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) <=> ? [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),X8))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49||48||split|18')).
fof(f5006,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl137),
  inference(cnf_transformation,[],[f5006_D])).
fof(f5006_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl137),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl137])])).
fof(f5015,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK838('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK839('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK840('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK841('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK842('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK843('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK844('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK845('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK846('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK847('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK837('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))) | $spl140),
  inference(cnf_transformation,[],[f5015_D])).
fof(f5015_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK838('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK839('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK840('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK841('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK842('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK843('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK844('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK845('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK846('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK847('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK837('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f5013,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK838('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK839('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK840('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK841('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK842('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK843('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK844('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK845('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK846('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK847('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK837('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(forward_demodulation,[],[f2714,f1348])).
fof(f2714,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK838('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK839('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK840('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK841('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK842('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK843('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK844('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK845('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK846('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK847('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK837('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1176,f1348])).
fof(f1176,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK838(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK839(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK840(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK841(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK842(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK843(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK844(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK845(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK846(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK847(X1,X0)),s('type.list.list'(X0),sK837(X1,X0)))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(cnf_transformation,[],[f799])).
fof(f5008,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK827('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK828('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK829('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK830('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK831('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK832('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK833('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK834('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK835('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK836('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK826('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))) | $spl138),
  inference(cnf_transformation,[],[f5008_D])).
fof(f5008_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK827('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK828('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK829('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK830('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK831('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK832('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK833('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK834('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK835('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK836('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK826('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f5004,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK827('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK828('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK829('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK830('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK831('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK832('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK833('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK834('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK835('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK836('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK826('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(forward_demodulation,[],[f5003,f1348])).
fof(f5003,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK827('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK828('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK829('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK830('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK831('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK832('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK833('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK834('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK835('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK836('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK826('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))) | $spl4),
  inference(forward_demodulation,[],[f2710,f949])).
fof(f2710,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK827('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK828('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK829('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK830('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK831('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK832('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK833('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK834('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK835('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK836('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK826('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1174,f1348])).
fof(f1174,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK827(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK828(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK829(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK830(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK831(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK832(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK833(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK834(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK835(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK836(X1,X0)),s('type.list.list'(X0),sK826(X1,X0)))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f796])).
fof(f796,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK827(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK828(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK829(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK830(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK831(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK832(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK833(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK834(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK835(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK836(X1,X0)),s('type.list.list'(X0),sK826(X1,X0))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X2))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK826,sK827,sK828,sK829,sK830,sK831,sK832,sK833,sK834,sK835,sK836])],[f795])).
fof(f795,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),X13)))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X2))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(rectify,[],[f794])).
fof(f794,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X2)))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X2))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f431])).
fof(f431,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X2))))))))))))))))))))))),
  inference(flattening,[],[f430])).
fof(f430,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X2))))))))))))))))))))))),
  inference(rectify,[],[f159])).
fof(f159,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) <=> ? [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),X8))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49||48||split|4')).
fof(f4986,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl131),
  inference(cnf_transformation,[],[f4986_D])).
fof(f4986_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl131),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl131])])).
fof(f4993,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK800('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK801('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK802('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK803('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK804('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK805('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK806('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK807('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK808('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK809('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK810('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK811('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK812('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK799('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))) | $spl134),
  inference(cnf_transformation,[],[f4993_D])).
fof(f4993_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK800('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK801('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK802('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK803('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK804('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK805('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK806('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK807('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK808('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK809('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK810('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK811('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK812('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK799('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f4991,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK800('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK801('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK802('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK803('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK804('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK805('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK806('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK807('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK808('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK809('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK810('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK811('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK812('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK799('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(forward_demodulation,[],[f4990,f1348])).
fof(f4990,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK800('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK801('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK802('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK803('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK804('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK805('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK806('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK807('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK808('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK809('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK810('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK811('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK812('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK799('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))) | $spl4),
  inference(forward_demodulation,[],[f2703,f949])).
fof(f2703,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK800('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK801('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK802('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK803('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK804('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK805('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK806('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK807('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK808('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK809('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK810('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK811('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK812('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK799('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1170,f1348])).
fof(f1170,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK800(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK801(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK802(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK803(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK804(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK805(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK806(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK807(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK808(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK809(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK810(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK811(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK812(X1,X0)),s('type.list.list'(X0),sK799(X1,X0)))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f790])).
fof(f790,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK800(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK801(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK802(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK803(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK804(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK805(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK806(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK807(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK808(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK809(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK810(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK811(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK812(X1,X0)),s('type.list.list'(X0),sK799(X1,X0))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),X2))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK799,sK800,sK801,sK802,sK803,sK804,sK805,sK806,sK807,sK808,sK809,sK810,sK811,sK812])],[f789])).
fof(f789,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X29),s('type.list.list'(X0),X16)))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),X2))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(rectify,[],[f788])).
fof(f788,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),X2)))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),X2))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f427])).
fof(f427,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),X2))))))))))))))))))))))))))))),
  inference(flattening,[],[f426])).
fof(f426,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),X2))))))))))))))))))))))))))))),
  inference(rectify,[],[f111])).
fof(f111,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) <=> ? [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X25] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),X8))))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49|5|split|32')).
fof(f4988,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK786('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK787('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK788('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK789('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK790('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK791('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK792('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK793('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK794('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK795('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK796('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK797('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK798('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK785('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))) | $spl132),
  inference(cnf_transformation,[],[f4988_D])).
fof(f4988_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK786('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK787('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK788('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK789('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK790('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK791('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK792('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK793('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK794('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK795('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK796('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK797('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK798('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK785('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f4984,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK786('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK787('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK788('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK789('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK790('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK791('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK792('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK793('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK794('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK795('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK796('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK797('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK798('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK785('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(forward_demodulation,[],[f2700,f1348])).
fof(f2700,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK786('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK787('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK788('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK789('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK790('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK791('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK792('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK793('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK794('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK795('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK796('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK797('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK798('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK785('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1168,f1348])).
fof(f1168,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK786(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK787(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK788(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK789(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK790(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK791(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK792(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK793(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK794(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK795(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK796(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK797(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK798(X1,X0)),s('type.list.list'(X0),sK785(X1,X0)))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(cnf_transformation,[],[f787])).
fof(f787,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK786(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK787(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK788(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK789(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK790(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK791(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK792(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK793(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK794(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK795(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK796(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK797(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK798(X1,X0)),s('type.list.list'(X0),sK785(X1,X0))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),X2))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK785,sK786,sK787,sK788,sK789,sK790,sK791,sK792,sK793,sK794,sK795,sK796,sK797,sK798])],[f786])).
fof(f786,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ? [X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X29),s('type.list.list'(X0),X16)))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),X2))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(rectify,[],[f785])).
fof(f785,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),X2)))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),X2))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(nnf_transformation,[],[f425])).
fof(f425,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),X2))))))))))))))))))))))))))))),
  inference(flattening,[],[f424])).
fof(f424,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),X2))))))))))))))))))))))))))))),
  inference(rectify,[],[f101])).
fof(f101,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X25] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),X8))))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49|5|split|33')).
fof(f4975,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl125),
  inference(cnf_transformation,[],[f4975_D])).
fof(f4975_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl125),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl125])])).
fof(f4982,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK771('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK772('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK773('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK774('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK775('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK776('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK777('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK778('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK779('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK780('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK781('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK782('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK783('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK784('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK770('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))))) | $spl128),
  inference(cnf_transformation,[],[f4982_D])).
fof(f4982_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK771('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK772('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK773('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK774('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK775('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK776('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK777('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK778('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK779('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK780('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK781('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK782('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK783('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK784('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK770('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))))) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f4980,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK771('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK772('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK773('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK774('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK775('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK776('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK777('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK778('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK779('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK780('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK781('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK782('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK783('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK784('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK770('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(forward_demodulation,[],[f2697,f1348])).
fof(f2697,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK771('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK772('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK773('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK774('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK775('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK776('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK777('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK778('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK779('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK780('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK781('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK782('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK783('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK784('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK770('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1166,f1348])).
fof(f1166,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK771(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK772(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK773(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK774(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK775(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK776(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK777(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK778(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK779(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK780(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK781(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK782(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK783(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK784(X1,X0)),s('type.list.list'(X0),sK770(X1,X0)))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(cnf_transformation,[],[f784])).
fof(f784,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK771(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK772(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK773(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK774(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK775(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK776(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK777(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK778(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK779(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK780(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK781(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK782(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK783(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK784(X1,X0)),s('type.list.list'(X0),sK770(X1,X0))))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),X2))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK770,sK771,sK772,sK773,sK774,sK775,sK776,sK777,sK778,sK779,sK780,sK781,sK782,sK783,sK784])],[f783])).
fof(f783,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ? [X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,X31] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X29),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X30),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X31),s('type.list.list'(X0),X17)))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),X2))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(rectify,[],[f782])).
fof(f782,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),X2)))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),X2))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(nnf_transformation,[],[f423])).
fof(f423,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),X2))))))))))))))))))))))))))))))),
  inference(flattening,[],[f422])).
fof(f422,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),X2))))))))))))))))))))))))))))))),
  inference(rectify,[],[f107])).
fof(f107,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X25,X40] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X40),s('type.list.list'(X6),X8))))))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49|5|split|19')).
fof(f4977,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK756('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK757('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK758('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK759('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK760('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK761('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK762('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK763('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK764('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK765('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK766('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK767('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK768('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK769('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK755('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))))) | $spl126),
  inference(cnf_transformation,[],[f4977_D])).
fof(f4977_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK756('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK757('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK758('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK759('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK760('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK761('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK762('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK763('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK764('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK765('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK766('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK767('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK768('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK769('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK755('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))))) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f4973,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK756('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK757('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK758('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK759('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK760('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK761('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK762('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK763('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK764('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK765('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK766('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK767('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK768('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK769('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK755('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl4),
  inference(forward_demodulation,[],[f4972,f1348])).
fof(f4972,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK756('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK757('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK758('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK759('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK760('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK761('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK762('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK763('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK764('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK765('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK766('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK767('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK768('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK769('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK755('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))))) | $spl4),
  inference(forward_demodulation,[],[f2694,f949])).
fof(f2694,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK756('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK757('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK758('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK759('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK760('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK761('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK762('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK763('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK764('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK765('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK766('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK767('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK768('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK769('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK755('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1164,f1348])).
fof(f1164,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK756(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK757(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK758(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK759(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK760(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK761(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK762(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK763(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK764(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK765(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK766(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK767(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK768(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK769(X1,X0)),s('type.list.list'(X0),sK755(X1,X0)))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f781])).
fof(f781,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK756(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK757(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK758(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK759(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK760(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK761(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK762(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK763(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK764(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK765(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK766(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK767(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK768(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK769(X1,X0)),s('type.list.list'(X0),sK755(X1,X0))))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),X2))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK755,sK756,sK757,sK758,sK759,sK760,sK761,sK762,sK763,sK764,sK765,sK766,sK767,sK768,sK769])],[f780])).
fof(f780,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,X31] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X29),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X30),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X31),s('type.list.list'(X0),X17)))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),X2))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(rectify,[],[f779])).
fof(f779,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),X2)))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),X2))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f421])).
fof(f421,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),X2))))))))))))))))))))))))))))))),
  inference(flattening,[],[f420])).
fof(f420,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),X2))))))))))))))))))))))))))))))),
  inference(rectify,[],[f132])).
fof(f132,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) <=> ? [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X25,X40] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X40),s('type.list.list'(X6),X8))))))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49|5|split|18')).
fof(f4962,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl119),
  inference(cnf_transformation,[],[f4962_D])).
fof(f4962_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ~$spl119),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl119])])).
fof(f4969,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK740('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK741('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK742('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK743('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK744('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK745('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK746('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK747('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK748('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK749('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK750('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK751('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK752('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK753('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK754('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK739('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))))))) | $spl122),
  inference(cnf_transformation,[],[f4969_D])).
fof(f4969_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK740('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK741('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK742('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK743('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK744('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK745('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK746('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK747('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK748('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK749('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK750('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK751('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK752('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK753('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK754('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK739('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))))))) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f4967,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK740('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK741('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK742('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK743('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK744('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK745('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK746('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK747('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK748('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK749('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK750('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK751('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK752('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK753('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK754('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK739('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl4),
  inference(forward_demodulation,[],[f4966,f1348])).
fof(f4966,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK740('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK741('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK742('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK743('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK744('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK745('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK746('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK747('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK748('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK749('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK750('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK751('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK752('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK753('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK754('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK739('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))))))) | $spl4),
  inference(forward_demodulation,[],[f2691,f949])).
fof(f2691,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK740('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK741('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK742('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK743('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK744('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK745('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK746('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK747('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK748('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK749('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK750('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK751('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK752('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK753('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK754('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK739('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1162,f1348])).
fof(f1162,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK740(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK741(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK742(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK743(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK744(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK745(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK746(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK747(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK748(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK749(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK750(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK751(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK752(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK753(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK754(X1,X0)),s('type.list.list'(X0),sK739(X1,X0)))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f778])).
fof(f778,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK740(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK741(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK742(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK743(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK744(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK745(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK746(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK747(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK748(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK749(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK750(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK751(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK752(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK753(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK754(X1,X0)),s('type.list.list'(X0),sK739(X1,X0))))))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),X2))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK739,sK740,sK741,sK742,sK743,sK744,sK745,sK746,sK747,sK748,sK749,sK750,sK751,sK752,sK753,sK754])],[f777])).
fof(f777,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,X31,X32,X33] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X29),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X30),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X31),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X32),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X33),s('type.list.list'(X0),X18)))))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),X2))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(rectify,[],[f776])).
fof(f776,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),X2)))))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),X2))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f419])).
fof(f419,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),X2))))))))))))))))))))))))))))))))),
  inference(flattening,[],[f418])).
fof(f418,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),X2))))))))))))))))))))))))))))))))),
  inference(rectify,[],[f142])).
fof(f142,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) <=> ? [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X25,X40,X41] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X40),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X41),s('type.list.list'(X6),X8))))))))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49|5|split|4')).
fof(f4964,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK724('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK725('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK726('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK727('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK728('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK729('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK730('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK731('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK732('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK733('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK734('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK735('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK736('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK737('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK738('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK723('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))))))) | $spl120),
  inference(cnf_transformation,[],[f4964_D])).
fof(f4964_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK724('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK725('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK726('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK727('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK728('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK729('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK730('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK731('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK732('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK733('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK734('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK735('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK736('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK737('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK738('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK723('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))))))) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f4960,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK724('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK725('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK726('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK727('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK728('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK729('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK730('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK731('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK732('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK733('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK734('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK735('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK736('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK737('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK738('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK723('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | $spl4),
  inference(forward_demodulation,[],[f2688,f1348])).
fof(f2688,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK724('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK725('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK726('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK727('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK728('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK729('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK730('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK731('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK732('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK733('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK734('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK735('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK736('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK737('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK738('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)),s('type.list.list'(sK0),sK723('const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))),sK0)))))))))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1160,f1348])).
fof(f1160,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK724(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK725(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK726(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK727(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK728(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK729(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK730(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK731(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK732(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK733(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK734(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK735(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK736(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK737(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK738(X1,X0)),s('type.list.list'(X0),sK723(X1,X0)))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) )),
  inference(cnf_transformation,[],[f775])).
fof(f775,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK724(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK725(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK726(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK727(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK728(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK729(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK730(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK731(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK732(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK733(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK734(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK735(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK736(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK737(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK738(X1,X0)),s('type.list.list'(X0),sK723(X1,X0))))))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),X2))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK723,sK724,sK725,sK726,sK727,sK728,sK729,sK730,sK731,sK732,sK733,sK734,sK735,sK736,sK737,sK738])],[f774])).
fof(f774,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | ? [X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,X31,X32,X33] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X29),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X30),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X31),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X32),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X33),s('type.list.list'(X0),X18)))))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),X2))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),
  inference(rectify,[],[f773])).
fof(f773,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),X2)))))))))))))))))))))))))))))))) & (! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),X2))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),
  inference(nnf_transformation,[],[f417])).
fof(f417,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),X2))))))))))))))))))))))))))))))))),
  inference(flattening,[],[f416])).
fof(f416,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),X2))))))))))))))))))))))))))))))))),
  inference(rectify,[],[f108])).
fof(f108,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ? [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X25,X40,X41] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X40),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X41),s('type.list.list'(X6),X8))))))))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49|5|split|5')).
fof(f3898,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.NIL_0'))) | $spl114),
  inference(cnf_transformation,[],[f3898_D])).
fof(f3898_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.NIL_0'))) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f3900,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))) | $spl117),
  inference(cnf_transformation,[],[f3900_D])).
fof(f3900_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))) <=> ~$spl117),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl117])])).
fof(f3901,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))) | s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.NIL_0'))) | $spl4),
  inference(forward_demodulation,[],[f1531,f949])).
fof(f1531,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))),s('type.num.num','const.num.|48|_0')))) | $spl4),
  inference(superposition,[],[f1348,f1270])).
fof(f1530,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1272])).
fof(f3896,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) | $spl113),
  inference(cnf_transformation,[],[f3896_D])).
fof(f3896_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) <=> ~$spl113),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl113])])).
fof(f1529,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1337])).
fof(f1528,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1339])).
fof(f3891,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.NIL_0'))))) | $spl108),
  inference(cnf_transformation,[],[f3891_D])).
fof(f3891_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.NIL_0'))))) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f3893,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))) | $spl111),
  inference(cnf_transformation,[],[f3893_D])).
fof(f3893_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))) <=> ~$spl111),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl111])])).
fof(f3894,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))) | s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.NIL_0'))))) | $spl4),
  inference(forward_demodulation,[],[f1527,f949])).
fof(f1527,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))),s('type.num.num','const.num.|48|_0')))) | $spl4),
  inference(superposition,[],[f1348,f1270])).
fof(f1526,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.NIL_0'))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1272])).
fof(f3889,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))) | $spl107),
  inference(cnf_transformation,[],[f3889_D])).
fof(f3889_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))) <=> ~$spl107),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl107])])).
fof(f1525,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1337])).
fof(f1524,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1339])).
fof(f3884,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | $spl102),
  inference(cnf_transformation,[],[f3884_D])).
fof(f3884_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.NIL_0'))))))) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f3886,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))) | $spl105),
  inference(cnf_transformation,[],[f3886_D])).
fof(f3886_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))) <=> ~$spl105),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl105])])).
fof(f3887,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))) | s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | $spl4),
  inference(forward_demodulation,[],[f1523,f949])).
fof(f1523,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))),s('type.num.num','const.num.|48|_0')))) | $spl4),
  inference(superposition,[],[f1348,f1270])).
fof(f1522,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1272])).
fof(f3882,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))) | $spl101),
  inference(cnf_transformation,[],[f3882_D])).
fof(f3882_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))) <=> ~$spl101),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl101])])).
fof(f1521,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1337])).
fof(f1520,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.NIL_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1339])).
fof(f3877,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | $spl96),
  inference(cnf_transformation,[],[f3877_D])).
fof(f3877_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f3879,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))) | $spl99),
  inference(cnf_transformation,[],[f3879_D])).
fof(f3879_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))) <=> ~$spl99),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl99])])).
fof(f3880,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))) | s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | $spl4),
  inference(forward_demodulation,[],[f1519,f949])).
fof(f1519,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))),s('type.num.num','const.num.|48|_0')))) | $spl4),
  inference(superposition,[],[f1348,f1270])).
fof(f1518,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1272])).
fof(f3875,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))) | $spl95),
  inference(cnf_transformation,[],[f3875_D])).
fof(f3875_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))) <=> ~$spl95),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl95])])).
fof(f1517,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1337])).
fof(f1516,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1339])).
fof(f3870,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | $spl90),
  inference(cnf_transformation,[],[f3870_D])).
fof(f3870_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f3872,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))) | $spl93),
  inference(cnf_transformation,[],[f3872_D])).
fof(f3872_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))) <=> ~$spl93),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl93])])).
fof(f3873,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))) | s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | $spl4),
  inference(forward_demodulation,[],[f1515,f949])).
fof(f1515,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))),s('type.num.num','const.num.|48|_0')))) | $spl4),
  inference(superposition,[],[f1348,f1270])).
fof(f1514,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1272])).
fof(f3868,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))) | $spl89),
  inference(cnf_transformation,[],[f3868_D])).
fof(f3868_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))) <=> ~$spl89),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl89])])).
fof(f1513,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1337])).
fof(f1512,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1339])).
fof(f3863,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | $spl84),
  inference(cnf_transformation,[],[f3863_D])).
fof(f3863_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f3865,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))) | $spl87),
  inference(cnf_transformation,[],[f3865_D])).
fof(f3865_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))) <=> ~$spl87),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl87])])).
fof(f3866,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))) | s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | $spl4),
  inference(forward_demodulation,[],[f1511,f949])).
fof(f1511,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))),s('type.num.num','const.num.|48|_0')))) | $spl4),
  inference(superposition,[],[f1348,f1270])).
fof(f1510,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1272])).
fof(f3861,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))) | $spl83),
  inference(cnf_transformation,[],[f3861_D])).
fof(f3861_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))) <=> ~$spl83),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl83])])).
fof(f1509,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1337])).
fof(f1508,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1339])).
fof(f3856,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | $spl78),
  inference(cnf_transformation,[],[f3856_D])).
fof(f3856_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f3858,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))) | $spl81),
  inference(cnf_transformation,[],[f3858_D])).
fof(f3858_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))) <=> ~$spl81),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl81])])).
fof(f3859,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))) | s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | $spl4),
  inference(forward_demodulation,[],[f1507,f949])).
fof(f1507,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))),s('type.num.num','const.num.|48|_0')))) | $spl4),
  inference(superposition,[],[f1348,f1270])).
fof(f1506,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1272])).
fof(f3854,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))) | $spl77),
  inference(cnf_transformation,[],[f3854_D])).
fof(f3854_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))) <=> ~$spl77),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl77])])).
fof(f1505,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1337])).
fof(f1504,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1339])).
fof(f3849,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | $spl72),
  inference(cnf_transformation,[],[f3849_D])).
fof(f3849_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f3851,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))) | $spl75),
  inference(cnf_transformation,[],[f3851_D])).
fof(f3851_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))) <=> ~$spl75),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl75])])).
fof(f3852,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))) | s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | $spl4),
  inference(forward_demodulation,[],[f1503,f949])).
fof(f1503,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))),s('type.num.num','const.num.|48|_0')))) | $spl4),
  inference(superposition,[],[f1348,f1270])).
fof(f1502,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1272])).
fof(f3847,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))) | $spl71),
  inference(cnf_transformation,[],[f3847_D])).
fof(f3847_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))) <=> ~$spl71),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl71])])).
fof(f1501,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1337])).
fof(f1500,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1339])).
fof(f3842,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | $spl66),
  inference(cnf_transformation,[],[f3842_D])).
fof(f3842_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f3844,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))) | $spl69),
  inference(cnf_transformation,[],[f3844_D])).
fof(f3844_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))) <=> ~$spl69),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl69])])).
fof(f3845,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))) | s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | $spl4),
  inference(forward_demodulation,[],[f1499,f949])).
fof(f1499,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))),s('type.num.num','const.num.|48|_0')))) | $spl4),
  inference(superposition,[],[f1348,f1270])).
fof(f1498,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))) | $spl4),
  inference(superposition,[],[f1348,f1272])).
fof(f3840,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))) | $spl65),
  inference(cnf_transformation,[],[f3840_D])).
fof(f3840_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))) <=> ~$spl65),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl65])])).
fof(f1497,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))) | $spl4),
  inference(superposition,[],[f1348,f1337])).
fof(f1496,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))) | $spl4),
  inference(superposition,[],[f1348,f1339])).
fof(f3835,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | $spl60),
  inference(cnf_transformation,[],[f3835_D])).
fof(f3835_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f3837,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))) | $spl63),
  inference(cnf_transformation,[],[f3837_D])).
fof(f3837_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))) <=> ~$spl63),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl63])])).
fof(f3838,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))) | s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | $spl4),
  inference(forward_demodulation,[],[f1495,f949])).
fof(f1495,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))),s('type.num.num','const.num.|48|_0')))) | $spl4),
  inference(superposition,[],[f1348,f1270])).
fof(f1494,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))) | $spl4),
  inference(superposition,[],[f1348,f1272])).
fof(f3833,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) | $spl59),
  inference(cnf_transformation,[],[f3833_D])).
fof(f3833_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) <=> ~$spl59),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl59])])).
fof(f1493,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) | $spl4),
  inference(superposition,[],[f1348,f1337])).
fof(f1492,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))) | $spl4),
  inference(superposition,[],[f1348,f1339])).
fof(f3828,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))) | $spl54),
  inference(cnf_transformation,[],[f3828_D])).
fof(f3828_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f3830,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))) | $spl57),
  inference(cnf_transformation,[],[f3830_D])).
fof(f3830_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))) <=> ~$spl57),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl57])])).
fof(f3831,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))) | s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))) | $spl4),
  inference(forward_demodulation,[],[f1491,f949])).
fof(f1491,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))),s('type.num.num','const.num.|48|_0')))) | $spl4),
  inference(superposition,[],[f1348,f1270])).
fof(f1490,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))) | $spl4),
  inference(superposition,[],[f1348,f1272])).
fof(f3826,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) | $spl53),
  inference(cnf_transformation,[],[f3826_D])).
fof(f3826_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) <=> ~$spl53),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl53])])).
fof(f1489,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) | $spl4),
  inference(superposition,[],[f1348,f1337])).
fof(f1488,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))) | $spl4),
  inference(superposition,[],[f1348,f1339])).
fof(f3821,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) | $spl48),
  inference(cnf_transformation,[],[f3821_D])).
fof(f3821_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f3823,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl51),
  inference(cnf_transformation,[],[f3823_D])).
fof(f3823_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f3824,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) | $spl4),
  inference(forward_demodulation,[],[f1487,f949])).
fof(f1487,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.num.|48|_0')))) | $spl4),
  inference(superposition,[],[f1348,f1270])).
fof(f1486,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl4),
  inference(superposition,[],[f1348,f1272])).
fof(f3819,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl47),
  inference(cnf_transformation,[],[f3819_D])).
fof(f3819_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f1485,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl4),
  inference(superposition,[],[f1348,f1337])).
fof(f1484,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl4),
  inference(superposition,[],[f1348,f1339])).
fof(f1407,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1),
  inference(superposition,[],[f1345,f1331])).
fof(f1406,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1),
  inference(superposition,[],[f1345,f1333])).
fof(f1468,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl39),
  inference(cnf_transformation,[],[f1468_D])).
fof(f1468_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f1396,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl1),
  inference(superposition,[],[f1345,f1311])).
fof(f1464,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl35),
  inference(cnf_transformation,[],[f1464_D])).
fof(f1464_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f1466,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl37),
  inference(cnf_transformation,[],[f1466_D])).
fof(f1466_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f1395,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1),
  inference(superposition,[],[f1345,f1331])).
fof(f1394,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1),
  inference(superposition,[],[f1345,f1333])).
fof(f1460,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl31),
  inference(cnf_transformation,[],[f1460_D])).
fof(f1460_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f1462,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))) | $spl33),
  inference(cnf_transformation,[],[f1462_D])).
fof(f1462_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))) <=> ~$spl33),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl33])])).
fof(f1391,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl1),
  inference(superposition,[],[f1345,f1311])).
fof(f1456,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl27),
  inference(cnf_transformation,[],[f1456_D])).
fof(f1456_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl27),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl27])])).
fof(f1390,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1),
  inference(superposition,[],[f1345,f1331])).
fof(f1389,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1),
  inference(superposition,[],[f1345,f1333])).
fof(f1452,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl23),
  inference(cnf_transformation,[],[f1452_D])).
fof(f1452_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f1454,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))))) | $spl25),
  inference(cnf_transformation,[],[f1454_D])).
fof(f1454_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f1386,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl1),
  inference(superposition,[],[f1345,f1311])).
fof(f1385,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl1),
  inference(superposition,[],[f1345,f1331])).
fof(f1384,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl1),
  inference(superposition,[],[f1345,f1333])).
fof(f1438,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) | $spl11),
  inference(cnf_transformation,[],[f1438_D])).
fof(f1438_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f1375,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) | $spl1),
  inference(superposition,[],[f1345,f1311])).
fof(f1446,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl17),
  inference(cnf_transformation,[],[f1446_D])).
fof(f1446_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f1374,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))))) | $spl1),
  inference(superposition,[],[f1345,f1331])).
fof(f1373,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))))) | $spl1),
  inference(superposition,[],[f1345,f1333])).
fof(f1442,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK1) | $spl13),
  inference(cnf_transformation,[],[f1442_D])).
fof(f1442_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK1) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f1372,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK1) | $spl1),
  inference(superposition,[],[f1345,f1340])).
fof(f1371,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK1) | $spl1),
  inference(superposition,[],[f1345,f1338])).
fof(f1440,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl1),
  inference(forward_demodulation,[],[f1439,f949])).
fof(f1439,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.num.|48|_0')))) | $spl1),
  inference(forward_demodulation,[],[f1370,f1341])).
fof(f1370,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.num.|48|_0')))) | $spl1),
  inference(superposition,[],[f1345,f1270])).
fof(f1436,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) | $spl1),
  inference(forward_demodulation,[],[f1369,f1341])).
fof(f1369,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) | $spl1),
  inference(superposition,[],[f1345,f1272])).
fof(f1435,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | $spl1),
  inference(forward_demodulation,[],[f1368,f1341])).
fof(f1368,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | $spl1),
  inference(superposition,[],[f1345,f1337])).
fof(f1430,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | $spl1),
  inference(forward_demodulation,[],[f1367,f1341])).
fof(f1367,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | $spl1),
  inference(superposition,[],[f1345,f1339])).
fof(f1348,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) | $spl4),
  inference(cnf_transformation,[],[f1348_D])).
fof(f1348_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f930,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(cnf_transformation,[],[f561])).
fof(f561,plain,(
  (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK2)))))))))))))))))))))))))) & (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),X2))))))))))))))))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11,sK12,sK13,sK14])],[f560])).
fof(f560,plain,(
  ? [X0,X1] : ((p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ? [X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),X15)))))))))))))))))))))))))) & (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X2)))))))))))))))))))))))))))),
  inference(rectify,[],[f559])).
fof(f559,plain,(
  ? [X0,X1] : ((p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X2)))))))))))))))))))))))))) & (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X2)))))))))))))))))))))))))))),
  inference(nnf_transformation,[],[f542])).
fof(f542,plain,(
  ? [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <~> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X2))))))))))))))))))))))))))),
  inference(ennf_transformation,[],[f264])).
fof(f264,plain,(
  ~! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X2))))))))))))))))))))))))))),
  inference(flattening,[],[f263])).
fof(f263,plain,(
  ~! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X2))))))))))))))))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),X8))))))))))))))))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),X8))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|47','thm.quantHeuristics.LIST_LENGTH_|49|5|split|47')).
fof(f931,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X7,X5,X3,X13,X11,X9] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),X2))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(cnf_transformation,[],[f561])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 666
% Passive clauses: 11898
% Generated clauses: 56345
% Final active clauses: 582
% Final passive clauses: 7910
% Input formulas: 261
% Initial clauses: 412
% 
% Selected by SInE selection: 160
% SInE iterations: 1
% 
% Duplicate literals: 432
% Trivial inequalities: 490
% Fw subsumption resolutions: 1560
% Fw demodulations: 4085
% Bw demodulations: 26
% 
% Simple tautologies: 489
% Equational tautologies: 1
% Forward subsumptions: 34341
% 
% Binary resolution: 1379
% Forward superposition: 16796
% Backward superposition: 28913
% Equality resolution: 30
% 
% Split clauses: 1243
% Split components: 2486
% SAT solver clauses: 1270
% SAT solver unit clauses: 2
% SAT solver binary clauses: 25
% 
% Sat splits: 1243
% Sat splitting refutations: 26
% 
% Memory used [KB]: 84945
% Time elapsed: 2.975 s
% ------------------------------
% ------------------------------
% Success in time 14.82 s
