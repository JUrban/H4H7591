Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.int_arith
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.int_arith
% SZS output start Proof for thm.int_arith
fof(f7226,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f7224,f268,f484,f482,f7143,f267,f483,f481])).
fof(f481,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | $spl0),
  inference(cnf_transformation,[],[f481_D])).
fof(f481_D,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f483,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))))) | $spl2),
  inference(cnf_transformation,[],[f483_D])).
fof(f483_D,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f267,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))))) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK13)))),
  inference(cnf_transformation,[],[f169])).
fof(f169,plain,(
  (s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12)))))) & (s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14])],[f168])).
fof(f168,plain,(
  ? [X0,X1,X2] : ((s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) & (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))))),
  inference(nnf_transformation,[],[f125])).
fof(f125,plain,(
  ? [X0,X1,X2] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) <~> s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))))))),
  inference(ennf_transformation,[],[f54])).
fof(f54,plain,(
  ~! [X0,X1,X2] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) <=> s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))) <=> s('type.integer.int',X7) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))) <=> s('type.integer.int',X7) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))))))),
  file('thm.int_arith.eq_move_left_right','thm.int_arith.eq_move_left_right')).
fof(f7143,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f7121,f484])).
fof(f7121,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))))) | $spl0),
  inference(superposition,[],[f4217,f481])).
fof(f4217,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(equality_resolution,[],[f392])).
fof(f392,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f229])).
fof(f229,plain,(
  ! [X0,X1,X2] : ((s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) & (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2)))))),
  inference(nnf_transformation,[],[f115])).
fof(f115,plain,(
  ! [X0,X1,X2] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2))) <=> s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X6,X7,X8] : (s('type.integer.int',X6) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X8))) <=> s('type.integer.int',X8) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))))))),
  file('thm.int_arith.eq_move_left_right','thm.int_arith.eq_move_left_left')).
fof(f482,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | $spl1),
  inference(cnf_transformation,[],[f482_D])).
fof(f482_D,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f484,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))))) | $spl3),
  inference(cnf_transformation,[],[f484_D])).
fof(f484_D,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f268,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))))) | s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK13)))),
  inference(cnf_transformation,[],[f169])).
fof(f7224,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f7223,f482])).
fof(f7223,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | $spl2),
  inference(forward_demodulation,[],[f7221,f483])).
fof(f7221,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))))))) | $spl2),
  inference(trivial_inequality_removal,[],[f7219])).
fof(f7219,plain,(
  s('type.integer.int',sK13) != s('type.integer.int',sK13) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))))))) | $spl2),
  inference(superposition,[],[f7148,f483])).
fof(f7148,plain,(
  ( ! [X0] : (s('type.integer.int',sK13) != s('type.integer.int',X0) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',X0)))) ) | $spl2),
  inference(superposition,[],[f393,f483])).
fof(f393,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2)))) )),
  inference(cnf_transformation,[],[f229])).
% SZS output end Proof for thm.int_arith
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 444
% Passive clauses: 2134
% Generated clauses: 6965
% Final active clauses: 398
% Final passive clauses: 1414
% Input formulas: 52
% Initial clauses: 207
% 
% Duplicate literals: 217
% Trivial inequalities: 73
% Fw subsumption resolutions: 708
% Fw demodulations: 18
% Bw demodulations: 43
% 
% Simple tautologies: 199
% Equational tautologies: 55
% Forward subsumptions: 3439
% 
% Binary resolution: 3348
% Factoring: 833
% Forward superposition: 468
% Backward superposition: 854
% Self superposition: 31
% Equality factoring: 26
% Equality resolution: 35
% 
% Split clauses: 184
% Split components: 369
% SAT solver clauses: 357
% SAT solver unit clauses: 13
% SAT solver binary clauses: 96
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 184
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 352
% TWLsolver calls for satisfiability: 214
% 
% Memory used [KB]: 3070
% Time elapsed: 0.170 s
% ------------------------------
% ------------------------------
% Success in time 0.173 s
