Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.rat
% (66324)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 823
% Passive clauses: 7740
% Generated clauses: 22123
% Final active clauses: 798
% Final passive clauses: 5872
% Input formulas: 45
% Initial clauses: 185
% 
% Duplicate literals: 779
% Trivial inequalities: 216
% Fw subsumption resolutions: 2351
% Fw demodulations: 1051
% Bw demodulations: 12
% 
% Simple tautologies: 285
% Equational tautologies: 66
% Forward subsumptions: 8933
% 
% Binary resolution: 8914
% Factoring: 1440
% Forward superposition: 3300
% Backward superposition: 3353
% Self superposition: 57
% Equality factoring: 55
% Equality resolution: 29
% 
% Split clauses: 667
% Split components: 1345
% SAT solver clauses: 1117
% SAT solver unit clauses: 19
% SAT solver binary clauses: 192
% 
% Sat splits: 667
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1108
% TWLsolver calls for satisfiability: 428
% 
% Memory used [KB]: 8571
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rat
% (66334)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 545
% Passive clauses: 2387
% Generated clauses: 14016
% Final active clauses: 441
% Final passive clauses: 1568
% Input formulas: 45
% Initial clauses: 185
% 
% Duplicate literals: 197
% Trivial inequalities: 47
% Fw subsumption resolutions: 1302
% Fw demodulations: 794
% Bw demodulations: 247
% Condensations: 247
% Global subsumptions: 13
% 
% Simple tautologies: 245
% Equational tautologies: 19
% Forward subsumptions: 5316
% Fw demodulations to eq. taut.: 1
% Bw demodulations to eq. taut.: 4
% 
% Binary resolution: 4228
% Factoring: 382
% Forward superposition: 1064
% Backward superposition: 1812
% Self superposition: 66
% Equality factoring: 31
% Equality resolution: 16
% 
% Split clauses: 297
% Split components: 603
% SAT solver clauses: 3422
% SAT solver unit clauses: 190
% SAT solver binary clauses: 92
% SAT solver learnt clauses: 30
% SAT solver learnt literals: 15
% 
% Sat splits: 297
% Sat splitting refutations: 33
% 
% TWLsolver clauses: 3366
% TWLsolver calls for satisfiability: 1822
% 
% Memory used [KB]: 11257
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rat
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rat
% SZS output start Proof for thm.rat
fof(f34580,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1643,f1647,f1650,f1651,f1652,f1655,f1658,f1661,f1638,f1649,f1664,f1639,f1646,f1727,f1728,f1736,f1738,f1730,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2312,f2233,f2314,f2237,f2316,f2240,f2318,f2243,f2320,f2246,f2322,f2249,f2324,f2252,f2326,f2255,f2328,f2258,f2330,f2261,f2332,f2264,f2334,f2267,f2336,f2270,f2338,f2273,f2340,f2276,f2342,f2279,f2344,f2282,f2366,f2367,f2369,f2371,f2373,f3512,f3546,f3513,f3551,f3552,f3514,f3555,f1660,f3560,f1663,f3563,f1654,f3566,f1657,f3557,f3453,f3567,f3654,f3655,f3841,f3877,f3880,f3878,f3884,f3885,f3860,f3889,f3887,f3610,f4035,f4044,f4036,f4037,f4038,f4048,f4041,f4039,f4045,f4434,f4575,f4577,f4578,f4580,f4598,f4600,f4599,f4604,f4607,f4610,f4613,f4616,f4619,f4622,f4625,f4628,f4640,f3650,f4648,f5763,f5764,f6548,f6549,f6652,f6653,f6659,f6661,f6663,f6667,f6669,f6671,f6673,f6675,f6677,f6679,f6681,f6685,f6687,f6689,f6691,f6693,f6695,f6697,f6699,f6701,f6703,f6715,f6717,f6729,f6731,f6735,f6739,f6752,f6778,f6795,f6821,f6879,f6881,f6883,f6885,f6888,f6890,f6896,f6898,f6904,f6906,f6925,f6927,f6929,f6931,f6934,f6936,f6939,f6941,f6944,f6946,f6994,f7005,f7020,f7031,f7033,f7048,f7059,f7074,f7085,f7087,f7089,f7091,f7093,f7801,f7802,f7113,f7115,f7117,f7119,f7121,f7123,f7125,f7127,f7153,f7155,f7157,f7159,f7161,f7163,f7165,f7167,f7176,f7185,f7197,f7207,f7209,f7222,f7232,f7234,f7247,f7256,f7268,f7277,f7279,f7288,f7290,f7295,f7297,f7306,f7308,f7313,f7315,f7324,f7326,f7331,f7333,f7345,f7354,f7366,f7375,f7384,f7393,f7403,f7413,f7415,f7427,f7429,f7431,f7436,f7438,f7443,f7445,f7450,f7452,f7457,f7459,f7471,f7484,f7496,f7506,f7508,f7526,f7528,f7530,f7532,f7534,f7547,f7551,f7564,f7568,f7589,f7591,f7610,f7612,f7614,f7620,f7625,f7630,f7632,f7637,f7639,f7654,f7667,f7683,f7696,f7701,f7703,f7705,f7707,f7709,f7716,f7718,f7720,f7730,f7737,f7744,f7750,f7756,f7758,f7760,f7766,f7768,f7774,f7807,f7808,f7809,f7810,f7811,f7812,f7813,f7814,f7815,f7816,f7817,f7818,f7819,f7820,f7821,f7822,f7823,f7824,f7825,f7826,f7827,f7828,f7829,f7830,f7831,f7832,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7877,f7878,f7879,f7880,f7881,f7882,f7883,f7884,f7885,f7886,f7887,f7888,f7889,f7890,f7891,f7892,f7893,f7894,f7895,f7896,f7897,f7898,f7899,f7900,f7901,f7902,f7903,f7904,f7905,f7906,f7907,f7908,f7909,f7910,f7911,f7912,f7913,f7914,f7915,f7916,f7917,f7918,f7919,f7920,f7921,f7922,f7923,f7924,f7925,f7926,f7927,f7928,f7929,f7930,f7931,f7932,f7933,f7934,f7935,f7936,f7937,f7938,f7939,f7940,f7941,f7942,f7943,f7944,f7945,f7946,f7947,f7948,f7949,f7950,f7951,f7952,f7953,f7954,f7955,f7956,f7957,f7958,f7959,f7960,f7961,f7962,f7963,f7964,f7965,f7966,f7967,f7968,f7969,f7970,f7971,f7972,f7973,f7974,f7975,f7976,f7977,f7978,f7979,f7980,f7981,f7982,f7983,f7984,f7985,f7986,f7987,f7988,f7989,f7990,f7991,f7992,f7993,f7994,f7995,f7996,f7997,f7998,f7999,f8000,f8001,f8002,f8003,f8004,f8005,f8006,f8007,f8008,f8009,f8010,f8011,f8012,f8013,f8014,f8015,f8016,f8017,f8018,f8019,f8020,f8021,f8022,f8023,f8024,f8025,f8026,f8027,f8028,f8029,f8030,f8031,f8032,f8033,f8034,f8035,f8036,f8037,f8038,f8039,f8040,f8041,f8042,f8043,f8044,f8045,f8046,f8047,f8048,f8049,f8050,f8051,f8052,f8053,f8054,f8055,f8056,f8057,f8058,f8059,f8060,f8061,f8062,f8063,f8064,f8065,f8066,f8067,f8068,f8069,f8070,f14218,f14219,f14220,f14222,f14224,f14226,f14244,f14246,f14247,f14332,f14221,f14333,f14223,f14334,f14225,f14335,f14227,f14352,f14245,f15490,f15492,f15491,f15510,f15515,f15518,f15522,f15519,f15523,f4124,f4047,f4042,f15986,f16025,f16026,f16031,f17139,f17172,f17140,f17141,f17142,f17143,f17144,f17145,f17177,f17173,f17146,f17147,f17148,f17149,f17180,f17150,f17178,f17151,f17179,f17170,f17169,f17687,f17702,f17703,f17668,f17704,f17641,f17710,f17711,f17715,f17716,f17614,f17719,f17613,f17720,f17612,f17721,f17611,f17722,f17610,f17723,f17609,f17724,f17608,f17725,f17607,f17726,f17606,f17727,f17605,f17728,f17604,f17729,f17603,f17730,f17602,f17731,f17601,f17732,f17600,f17733,f17599,f17734,f17598,f17735,f17597,f17736,f17596,f17737,f17595,f17738,f17594,f17739,f17593,f17740,f17592,f17741,f17591,f17742,f17590,f17743,f17589,f17744,f17588,f17745,f17587,f17746,f17586,f17747,f17585,f17748,f17584,f17749,f17583,f17750,f17582,f17751,f17581,f17752,f17753,f17701,f17760,f17761,f17762,f17763,f17764,f17765,f17768,f17769,f17770,f17771,f18816,f18818,f18817,f18897,f19013,f19014,f19162,f19164,f19170,f19174,f19175,f3886,f19176,f19190,f19193,f20325,f16602,f20334,f17642,f20335,f16032,f3927,f17708,f19165,f20403,f20404,f20405,f20406,f3515,f21488,f21514,f22330,f22418,f22420,f22419,f22660,f22684,f22687,f22691,f22694,f4649,f22696,f22698,f22690,f22331,f22699,f22703,f22702,f22704,f22705,f22707,f22685,f22708,f1665,f22717,f22700,f22718,f22719,f22721,f22720,f22723,f22724,f3926,f22735,f22736,f22622,f22743,f22745,f22748,f22686,f22749,f22752,f22701,f22741,f23279,f23293,f23294,f23260,f23295,f23259,f23301,f23302,f23238,f23305,f23235,f23307,f23308,f23312,f23313,f23210,f23296,f23318,f23292,f23325,f23326,f23327,f23328,f23329,f23330,f23331,f23332,f23333,f23334,f23390,f23415,f23389,f23416,f23802,f23821,f23822,f23820,f23783,f23782,f23824,f23781,f23841,f23842,f23858,f23859,f23729,f23823,f23728,f23825,f23882,f23883,f23884,f23885,f23886,f23887,f23890,f23891,f23892,f23893,f24086,f24087,f24160,f24161,f17176,f24216,f24296,f24297,f17175,f24335,f24832,f24901,f25080,f25082,f25081,f25177,f25179,f25178,f25340,f25342,f25341,f25456,f25480,f25455,f25481,f24162,f24158,f25483,f25482,f27141,f27157,f27164,f27158,f27171,f27172,f27176,f27177,f27144,f3888,f6550,f27915,f27940,f29590,f29616,f29928,f29930,f29929,f30404,f30409,f30413,f30414,f30415,f30416,f30417,f30418,f30419,f30425,f30430,f30432,f30434,f30436,f30504,f30507,f30505,f31022,f31026,f31029,f31030,f31034,f31045,f31049,f31053,f31054,f31055,f31059,f31061,f31062,f31065,f31066,f31069,f31072,f31075,f31078,f31081,f31082,f31084,f31085,f31086,f31087,f31088,f31089,f31095,f31099,f31105,f31111,f31114,f31115,f31116,f31117,f31118,f31119,f31120,f31123,f31124,f31125,f31126,f31127,f31128,f31129,f31130,f31133,f31136,f31137,f31138,f31139,f31140,f31141,f31144,f31147,f31150,f31155,f31156,f31165,f31168,f31188,f31190,f31191,f31192,f31193,f31194,f31218,f31219,f31220,f31221,f31222,f31223,f31224,f31225,f31236,f31237,f31248,f31281,f31286,f31295,f31302,f31305,f31307,f31308,f31837,f31862,f32929,f32953,f2234,f33917,f22688,f33920,f33921,f33930,f33932,f33933,f1644,f33934,f33936,f22697,f33939,f33931,f33942,f33940,f33918,f33945,f33947,f33949,f33899,f33951,f33952,f33953,f33954,f33950,f33946,f34376,f34378,f34380,f34382,f34384,f34385,f34387,f34389,f34456,f34457,f34458,f34459,f34460,f34461,f34462,f34463,f34464,f34465,f34466,f34467,f34468,f34469,f34470,f34471,f34472,f34473,f34474,f34475,f34476,f34477,f34478,f34479,f34480,f34481,f34482,f34483,f34484,f34485,f34486,f34487,f34488,f34489,f34490,f34491,f34492,f34493,f34494,f34495,f34496,f34497])).
fof(f34497,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34453,f34400])).
fof(f34400,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))) ) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34399,f286])).
fof(f286,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0,X1] : s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))) = s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X6,X7] : s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X6))) = s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X7)))))),
  file('thm.rat.RAT_LES_TOTAL','thm.rat.RAT_AINV_SUB')).
fof(f34399,plain,(
  ( ! [X3] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3)))) ) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f33826,f34320])).
fof(f34320,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34281,f424])).
fof(f424,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f236,f233])).
fof(f233,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rat.RAT_LES_TOTAL',aHL_TRUTH)).
fof(f236,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f151])).
fof(f151,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f48])).
fof(f48,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f17])).
fof(f17,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.rat.RAT_LES_TOTAL','thm.bool.NOT_CLAUSES|split|1')).
fof(f34281,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34280,f263])).
fof(f263,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(cnf_transformation,[],[f159])).
fof(f159,plain,(
  ! [X0] : ((s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) & (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(nnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X6] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.rat.RAT_LES_TOTAL','thm.rat.RAT_SGN_CLAUSES|split|0')).
fof(f34280,plain,(
  ( ! [X103,X104] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X103),s('type.rat.rat',X104)))) ) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34279,f1730])).
fof(f34279,plain,(
  ( ! [X103,X104] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X103),s('type.rat.rat',X104)))) ) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(forward_demodulation,[],[f34169,f3038])).
fof(f3038,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(forward_demodulation,[],[f3024,f1470])).
fof(f1470,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(equality_resolution,[],[f260])).
fof(f260,plain,(
  ( ! [X0] : (s('type.rat.rat',X0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) )),
  inference(cnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.rat.rat',X0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))))),
  inference(nnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) <=> s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X6] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) <=> s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.rat.RAT_LES_TOTAL','thm.rat.RAT_SGN_CLAUSES|split|1')).
fof(f3024,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(superposition,[],[f1445,f1500])).
fof(f1500,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X0)))) )),
  inference(equality_resolution,[],[f296])).
fof(f296,plain,(
  ( ! [X0,X1] : (s('type.rat.rat',X0) != s('type.rat.rat',X1) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) )),
  inference(cnf_transformation,[],[f175])).
fof(f175,plain,(
  ! [X0,X1] : ((s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) | s('type.rat.rat',X0) = s('type.rat.rat',X1)) & (s('type.rat.rat',X0) != s('type.rat.rat',X1) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))),
  inference(nnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) <=> s('type.rat.rat',X0) = s('type.rat.rat',X1))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X6,X7] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))) <=> s('type.rat.rat',X6) = s('type.rat.rat',X7))),
  file('thm.rat.RAT_LES_TOTAL','thm.rat.RAT_EQ_SUB|48|')).
fof(f1445,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))))))) )),
  inference(superposition,[],[f240,f286])).
fof(f240,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0] : s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X6] : s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))))),
  file('thm.rat.RAT_LES_TOTAL','thm.rat.RAT_SGN_AINV')).
fof(f34169,plain,(
  ( ! [X103,X104] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X103),s('type.rat.rat',X104)))) ) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f33958,f23826])).
fof(f23826,plain,(
  ( ! [X103,X104] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X103),s('type.rat.rat',X104))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X104),s('type.rat.rat',X103)))))) )),
  inference(subsumption_resolution,[],[f23455,f465])).
fof(f465,plain,(
  s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))),
  inference(unit_resulting_resolution,[],[f230,f251])).
fof(f251,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.rat.RAT_LES_TOTAL','thm.bool.EQ_CLAUSES|split|0')).
fof(f230,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))),
  inference(cnf_transformation,[],[f150])).
fof(f150,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) & s('type.rat.rat',sK12) != s('type.rat.rat',sK13) & ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13])],[f109])).
fof(f109,plain,(
  ? [X0,X1] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) & s('type.rat.rat',X0) != s('type.rat.rat',X1) & ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))))),
  inference(ennf_transformation,[],[f47])).
fof(f47,plain,(
  ~! [X0,X1] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) | s('type.rat.rat',X0) = s('type.rat.rat',X1) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat',X7)))) | s('type.rat.rat',X6) = s('type.rat.rat',X7) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat',X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat',X7)))) | s('type.rat.rat',X6) = s('type.rat.rat',X7) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat',X6)))))),
  file('thm.rat.RAT_LES_TOTAL','thm.rat.RAT_LES_TOTAL')).
fof(f23455,plain,(
  ( ! [X103,X104] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X103),s('type.rat.rat',X104))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X104),s('type.rat.rat',X103))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) )),
  inference(superposition,[],[f2305,f474])).
fof(f474,plain,(
  s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))),
  inference(unit_resulting_resolution,[],[f230,f256])).
fof(f256,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f155])).
fof(f155,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f63])).
fof(f63,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X10] : (s(bool,'F_0') = s(bool,X10) <=> ~p(s(bool,X10)))),
  file('thm.rat.RAT_LES_TOTAL','thm.bool.EQ_CLAUSES|split|3')).
fof(f2305,plain,(
  ( ! [X116,X117,X115] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X116),s('type.rat.rat',X115))))) | s(bool,X117) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X115),s('type.rat.rat',X116))) | s(bool,'T_0') = s(bool,X117)) )),
  inference(subsumption_resolution,[],[f1994,f233])).
fof(f1994,plain,(
  ( ! [X116,X117,X115] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X116),s('type.rat.rat',X115))))) | s(bool,X117) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X115),s('type.rat.rat',X116))) | s(bool,'T_0') = s(bool,X117)) )),
  inference(superposition,[],[f291,f608])).
fof(f608,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f241,f241])).
fof(f241,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.rat.RAT_LES_TOTAL',aHL_BOOL_CASES)).
fof(f291,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))))) )),
  inference(cnf_transformation,[],[f173])).
fof(f173,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))))) & (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))))),
  inference(nnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0,X1] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X6,X7] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat',X7)))) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X6))))))),
  file('thm.rat.RAT_LES_TOTAL','thm.rat.rat_les_def')).
fof(f33958,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f33957,f240])).
fof(f33957,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f33956,f31310])).
fof(f31310,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f27323,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f27326,f15712,f27327,f15710,f15707,f15705,f15701,f27328,f15412,f15407,f27329,f15400,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f15401,f15413,f15711,f15714,f21780,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30467,f30260,f30468,f30470,f30472,f30473,f27316,f26254,f22061,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764])).
fof(f21764,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(superposition,[],[f240,f1618])).
fof(f31309,plain,(
  ( ! [X4,X2,X3] : (s(bool,X4) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s(bool,'T_0') = s(bool,X4) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f27323,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f27326,f15712,f27327,f15710,f15707,f15705,f15701,f27328,f15412,f15407,f27329,f15400,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f15401,f15413,f15711,f15714,f21764,f21780,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30467,f30260,f30468,f30470,f30472,f30473,f27316,f26254,f22061,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690])).
fof(f21690,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s(bool,X4) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1618,f2306])).
fof(f16910,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X15))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))))) | s('type.integer.int',X15) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14)))) )),
  inference(superposition,[],[f3036,f1617])).
fof(f15731,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X9)))))) )),
  inference(superposition,[],[f3193,f1617])).
fof(f5918,plain,(
  ( ! [X43,X42] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X42))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X42)))))) )),
  inference(superposition,[],[f240,f1617])).
fof(f31306,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int',X1) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f27323,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f27326,f15712,f27327,f15710,f15707,f15705,f15701,f27328,f15412,f15407,f27329,f15400,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30467,f30260,f30468,f30470,f30472,f30473,f27316,f26254,f22061,f5444,f3471,f3656])).
fof(f3656,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int',X1) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(forward_demodulation,[],[f3631,f240])).
fof(f3631,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))))) | s('type.integer.int',X1) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(superposition,[],[f1629,f1618])).
fof(f3471,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(superposition,[],[f242,f1618])).
fof(f5444,plain,(
  ( ! [X17,X16] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X17),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X17),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X16))))) )),
  inference(forward_demodulation,[],[f5443,f286])).
fof(f5443,plain,(
  ( ! [X17,X16] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X17),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X16)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17)))))))) )),
  inference(forward_demodulation,[],[f5330,f286])).
fof(f5330,plain,(
  ( ! [X17,X16] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X16)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17)))))))) )),
  inference(superposition,[],[f292,f1618])).
fof(f22061,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1629,f1445])).
fof(f26254,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3174,f242])).
fof(f27316,plain,(
  ( ! [X24,X23,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X23))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X23))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f27315,f286])).
fof(f27315,plain,(
  ( ! [X24,X23,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X23))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X23),s('type.rat.rat',X24)))))))) )),
  inference(forward_demodulation,[],[f27314,f286])).
fof(f27314,plain,(
  ( ! [X24,X23,X25] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X23),s('type.rat.rat',X24)))))))) )),
  inference(forward_demodulation,[],[f26283,f1445])).
fof(f26283,plain,(
  ( ! [X24,X23,X25] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X23))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X23),s('type.rat.rat',X24)))))))) )),
  inference(superposition,[],[f3174,f1618])).
fof(f30473,plain,(
  ( ! [X55] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X55))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X55)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f27323,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f27326,f15712,f27327,f15710,f15707,f15705,f15701,f27328,f15412,f15407,f27329,f15400,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30467,f30260,f30468,f30470,f30472])).
fof(f30472,plain,(
  ( ! [X55] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X55))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X55)))))) )),
  inference(subsumption_resolution,[],[f30105,f3338])).
fof(f30105,plain,(
  ( ! [X55] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X55))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X55)))))) )),
  inference(superposition,[],[f3238,f28786])).
fof(f30470,plain,(
  ( ! [X61,X62,X63] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X62),s('type.rat.rat',X61))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X62),s('type.rat.rat',X61))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,X63) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X62),s('type.rat.rat',X61))) | s(bool,'T_0') = s(bool,X63)) )),
  inference(forward_demodulation,[],[f30469,f286])).
fof(f30469,plain,(
  ( ! [X61,X62,X63] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X62),s('type.rat.rat',X61))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,X63) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X62),s('type.rat.rat',X61))) | s(bool,'T_0') = s(bool,X63) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X61),s('type.rat.rat',X62)))))))) )),
  inference(forward_demodulation,[],[f30109,f286])).
fof(f30109,plain,(
  ( ! [X61,X62,X63] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,X63) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X62),s('type.rat.rat',X61))) | s(bool,'T_0') = s(bool,X63) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X61),s('type.rat.rat',X62))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X61),s('type.rat.rat',X62)))))))) )),
  inference(superposition,[],[f2305,f28786])).
fof(f30468,plain,(
  ( ! [X3] : (p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f27323,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f27326,f15712,f27327,f15710,f15707,f15705,f15701,f27328,f15412,f15407,f27329,f15400,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30467,f30260])).
fof(f30260,plain,(
  ( ! [X3] : (p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3)))))) )),
  inference(trivial_inequality_removal,[],[f30174])).
fof(f30174,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3)))))) )),
  inference(superposition,[],[f261,f28786])).
fof(f30467,plain,(
  ( ! [X50,X51] : (s('type.integer.int',X51) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X51))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f27323,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f27326,f15712,f27327,f15710,f15707,f15705,f15701,f27328,f15412,f15407,f27329,f15400,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195])).
fof(f30195,plain,(
  ( ! [X50,X51] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X51))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X51) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) )),
  inference(superposition,[],[f3186,f28786])).
fof(f30466,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f27323,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f27326,f15712,f27327,f15710,f15707,f15705,f15701,f27328,f15412,f15407,f27329,f15400,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f30218,f30464,f30294,f30465,f30216])).
fof(f30216,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2)))))) )),
  inference(superposition,[],[f261,f28786])).
fof(f30465,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f27323,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f27326,f15712,f27327,f15710,f15707,f15705,f15701,f27328,f15412,f15407,f27329,f15400,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f30218,f30464,f30294])).
fof(f30294,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4)))))) )),
  inference(forward_demodulation,[],[f30217,f240])).
fof(f30217,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4)))))) )),
  inference(superposition,[],[f263,f28786])).
fof(f30464,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X8),s('type.rat.rat',X7)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f27323,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f27326,f15712,f27327,f15710,f15707,f15705,f15701,f27328,f15412,f15407,f27329,f15400,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f30218])).
fof(f30218,plain,(
  ( ! [X6,X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X8),s('type.rat.rat',X7)))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))) )),
  inference(superposition,[],[f292,f28786])).
fof(f3487,plain,(
  ( ! [X3] : (p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3)))))) )),
  inference(trivial_inequality_removal,[],[f3457])).
fof(f3457,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3)))))) )),
  inference(superposition,[],[f261,f1618])).
fof(f21780,plain,(
  ( ! [X30,X31,X32] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30)))))) )),
  inference(superposition,[],[f3030,f1618])).
fof(f15714,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) )),
  inference(superposition,[],[f3193,f1618])).
fof(f15711,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) )),
  inference(superposition,[],[f3193,f1618])).
fof(f15413,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) )),
  inference(superposition,[],[f2987,f1618])).
fof(f15401,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) )),
  inference(superposition,[],[f2987,f1618])).
fof(f14962,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X52),s('type.rat.rat',X51))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) )),
  inference(superposition,[],[f3031,f1618])).
fof(f9998,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) )),
  inference(superposition,[],[f2991,f1618])).
fof(f3469,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25)))))) )),
  inference(superposition,[],[f1246,f1618])).
fof(f3468,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) )),
  inference(superposition,[],[f1245,f1618])).
fof(f3466,plain,(
  ( ! [X19,X20] : (s('type.integer.int',X20) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) )),
  inference(superposition,[],[f294,f1618])).
fof(f3460,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X8) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7)))))) )),
  inference(superposition,[],[f1246,f1618])).
fof(f3459,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5)))))) )),
  inference(superposition,[],[f1245,f1618])).
fof(f3452,plain,(
  ( ! [X21,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20)))))) )),
  inference(superposition,[],[f1246,f1618])).
fof(f3451,plain,(
  ( ! [X19,X18] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18)))))) )),
  inference(superposition,[],[f1245,f1618])).
fof(f3447,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X10))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X10)))))) )),
  inference(superposition,[],[f293,f1618])).
fof(f3444,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4)))))) )),
  inference(superposition,[],[f1246,f1618])).
fof(f3443,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2)))))) )),
  inference(superposition,[],[f1245,f1618])).
fof(f3437,plain,(
  ( ! [X24,X23] : (s('type.integer.int',X24) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X24))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) )),
  inference(superposition,[],[f294,f1618])).
fof(f3414,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(superposition,[],[f1618,f1618])).
fof(f28773,plain,(
  ( ! [X50,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X50))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X50),s('type.rat.rat',X51)))))) )),
  inference(superposition,[],[f1445,f242])).
fof(f28775,plain,(
  ( ! [X57,X56,X55] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X57))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X56),s('type.rat.rat',X55))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X55),s('type.rat.rat',X56)))))) )),
  inference(superposition,[],[f3030,f242])).
fof(f28776,plain,(
  ( ! [X59,X60,X58] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X60))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X60) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X58))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X58),s('type.rat.rat',X59))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X58),s('type.rat.rat',X59)))))) )),
  inference(superposition,[],[f3031,f242])).
fof(f28777,plain,(
  ( ! [X61,X62,X63] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X63))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X63))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X62),s('type.rat.rat',X61))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X61),s('type.rat.rat',X62))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X61),s('type.rat.rat',X62)))))) )),
  inference(superposition,[],[f3033,f242])).
fof(f28778,plain,(
  ( ! [X66,X64,X65] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X66))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int',X66) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X65),s('type.rat.rat',X64))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X64),s('type.rat.rat',X65))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X64),s('type.rat.rat',X65)))))) )),
  inference(superposition,[],[f3036,f242])).
fof(f28779,plain,(
  ( ! [X68,X69,X67] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X69))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X69))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X68),s('type.rat.rat',X67))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X67),s('type.rat.rat',X68))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X67),s('type.rat.rat',X68)))))) )),
  inference(superposition,[],[f3174,f242])).
fof(f28780,plain,(
  ( ! [X70,X72,X71] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X72))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X72))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X71),s('type.rat.rat',X70))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X70),s('type.rat.rat',X71))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X70),s('type.rat.rat',X71)))))) )),
  inference(superposition,[],[f3179,f242])).
fof(f28781,plain,(
  ( ! [X74,X75,X73] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X75))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X75) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X73),s('type.rat.rat',X74)))))) )),
  inference(superposition,[],[f3193,f242])).
fof(f28786,plain,(
  ( ! [X76] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X76))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X76))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X76)))))) )),
  inference(superposition,[],[f240,f242])).
fof(f29483,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1636,f240])).
fof(f29484,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3)))))) )),
  inference(superposition,[],[f1636,f1445])).
fof(f23529,plain,(
  ( ! [X4,X5,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X3))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X5) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat',X3))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f1445,f2305])).
fof(f23526,plain,(
  ( ! [X134,X132,X130,X133,X131] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X132),s('type.rat.rat',X133))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X130),s('type.rat.rat',X131))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X132),s('type.rat.rat',X133))))))) | s(bool,X134) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X131),s('type.rat.rat',X130))) | s(bool,'T_0') = s(bool,X134)) )),
  inference(superposition,[],[f3193,f2305])).
fof(f23525,plain,(
  ( ! [X127,X128,X126,X129] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X128))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X126),s('type.rat.rat',X127))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X128))))))))) | s(bool,X129) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X127),s('type.rat.rat',X126))) | s(bool,'T_0') = s(bool,X129)) )),
  inference(superposition,[],[f3186,f2305])).
fof(f23524,plain,(
  ( ! [X125,X123,X121,X124,X122] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X121),s('type.rat.rat',X122))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X123),s('type.rat.rat',X124))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X124),s('type.rat.rat',X123))))))) | s(bool,X125) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X122),s('type.rat.rat',X121))) | s(bool,'T_0') = s(bool,X125)) )),
  inference(superposition,[],[f3036,f2305])).
fof(f23523,plain,(
  ( ! [X118,X116,X120,X119,X117] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X118),s('type.rat.rat',X119))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X116),s('type.rat.rat',X117))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X119),s('type.rat.rat',X118))))) | s(bool,X120) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X117),s('type.rat.rat',X116))) | s(bool,'T_0') = s(bool,X120)) )),
  inference(superposition,[],[f3031,f2305])).
fof(f23516,plain,(
  ( ! [X92,X90,X93,X91] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X92))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X90),s('type.rat.rat',X91))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X92))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X93) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X91),s('type.rat.rat',X90))) | s(bool,'T_0') = s(bool,X93)) )),
  inference(superposition,[],[f1246,f2305])).
fof(f23515,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X88))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X86),s('type.rat.rat',X87))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X88))))))) | s(bool,X89) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X87),s('type.rat.rat',X86))) | s(bool,'T_0') = s(bool,X89)) )),
  inference(superposition,[],[f1245,f2305])).
fof(f23513,plain,(
  ( ! [X80,X78,X81,X79] : (s('type.integer.int',X80) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X78),s('type.rat.rat',X79))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X80))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X81) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X79),s('type.rat.rat',X78))) | s(bool,'T_0') = s(bool,X81)) )),
  inference(superposition,[],[f294,f2305])).
fof(f23511,plain,(
  ( ! [X70,X72,X71,X73] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X72))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X70),s('type.rat.rat',X71))))))) | s('type.integer.int',X72) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X73) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X71),s('type.rat.rat',X70))) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f293,f2305])).
fof(f23418,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | s(bool,X9) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))) | s(bool,'T_0') = s(bool,X9) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))) )),
  inference(superposition,[],[f2305,f1618])).
fof(f23076,plain,(
  ( ! [X111,X109,X110,X108] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X109),s('type.rat.rat',X110))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X109),s('type.rat.rat',X110))))))) | s(bool,X111) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X108),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X111)) )),
  inference(superposition,[],[f3193,f2304])).
fof(f23075,plain,(
  ( ! [X107,X105,X106] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X106))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X105))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X106))))))))) | s(bool,X107) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X105),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X107)) )),
  inference(superposition,[],[f3186,f2304])).
fof(f23074,plain,(
  ( ! [X103,X101,X102,X104] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X101))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X102),s('type.rat.rat',X103))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X103),s('type.rat.rat',X102))))))) | s(bool,X104) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X101),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X104)) )),
  inference(superposition,[],[f3036,f2304])).
fof(f23073,plain,(
  ( ! [X99,X97,X100,X98] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X97))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X98),s('type.rat.rat',X99))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X99),s('type.rat.rat',X98))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X100) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X97),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X100)) )),
  inference(superposition,[],[f3031,f2304])).
fof(f23066,plain,(
  ( ! [X80,X81,X79] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X80))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X79))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X80))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X81) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X79),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X81)) )),
  inference(superposition,[],[f1246,f2304])).
fof(f23065,plain,(
  ( ! [X78,X76,X77] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X76))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X77))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X77))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X78) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X76),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X78)) )),
  inference(superposition,[],[f1245,f2304])).
fof(f23063,plain,(
  ( ! [X70,X72,X71] : (s('type.integer.int',X71) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X70))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X71))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,X72) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X72)) )),
  inference(superposition,[],[f294,f2304])).
fof(f23061,plain,(
  ( ! [X66,X64,X65] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X65))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X64))))) | s('type.integer.int',X65) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X66) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X64),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f293,f2304])).
fof(f23059,plain,(
  ( ! [X61,X59,X60,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))))) | s(bool,X61) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X61)) )),
  inference(superposition,[],[f3193,f2304])).
fof(f23058,plain,(
  ( ! [X57,X56,X55] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X56))))))))) | s(bool,X57) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X57)) )),
  inference(superposition,[],[f3186,f2304])).
fof(f23057,plain,(
  ( ! [X54,X52,X53,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X51))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X52),s('type.rat.rat',X53))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X53),s('type.rat.rat',X52))))))) | s(bool,X54) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f3036,f2304])).
fof(f23037,plain,(
  ( ! [X152,X151,X153,X150] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X151),s('type.rat.rat',X152))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X150))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X151),s('type.rat.rat',X152))))))) | s(bool,X153) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X150),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X153)) )),
  inference(superposition,[],[f3193,f2304])).
fof(f23036,plain,(
  ( ! [X149,X147,X148] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X148))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X147))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X148))))))))) | s(bool,X149) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X147),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X149)) )),
  inference(superposition,[],[f3186,f2304])).
fof(f23034,plain,(
  ( ! [X142,X140,X141,X139] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X140),s('type.rat.rat',X141))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X139))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X141),s('type.rat.rat',X140))))) | s(bool,X142) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X139),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X142)) )),
  inference(superposition,[],[f3031,f2304])).
fof(f23027,plain,(
  ( ! [X121,X120,X119] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X120))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X119))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X120))))) | s(bool,X121) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X119),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X121)) )),
  inference(superposition,[],[f1246,f2304])).
fof(f23026,plain,(
  ( ! [X118,X116,X117] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X117))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X116))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X117))))))) | s(bool,X118) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X116),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X118)) )),
  inference(superposition,[],[f1245,f2304])).
fof(f23024,plain,(
  ( ! [X111,X112,X110] : (s('type.integer.int',X111) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X111))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X110))))) | s(bool,X112) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X110),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X112)) )),
  inference(superposition,[],[f294,f2304])).
fof(f23022,plain,(
  ( ! [X105,X106,X104] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X105))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int',X105) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X104))) | s(bool,X106) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X104),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X106)) )),
  inference(superposition,[],[f293,f2304])).
fof(f23021,plain,(
  ( ! [X103,X102] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X102))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,X103) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X102))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X103)) )),
  inference(superposition,[],[f240,f2304])).
fof(f23013,plain,(
  ( ! [X87,X85,X86,X84] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X86))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X86) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X85),s('type.rat.rat',X84))))) | s(bool,X87) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X84),s('type.rat.rat',X85))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X87)) )),
  inference(superposition,[],[f3031,f2304])).
fof(f23012,plain,(
  ( ! [X80,X83,X81,X82] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X82))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X82))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X81),s('type.rat.rat',X80))))) | s(bool,X83) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X80),s('type.rat.rat',X81))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X83)) )),
  inference(superposition,[],[f3030,f2304])).
fof(f23011,plain,(
  ( ! [X78,X79,X77] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X78),s('type.rat.rat',X77))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,X79) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X77),s('type.rat.rat',X78))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X79)) )),
  inference(superposition,[],[f1445,f2304])).
fof(f23007,plain,(
  ( ! [X68,X69,X67] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X68))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X68) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X67))))))))) | s(bool,X69) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X67),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X69)) )),
  inference(superposition,[],[f3186,f2304])).
fof(f23005,plain,(
  ( ! [X61,X62,X63] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X61))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X62))))))) | s(bool,X63) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X63)) )),
  inference(superposition,[],[f3173,f2304])).
fof(f23004,plain,(
  ( ! [X59,X57,X60,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X58),s('type.rat.rat',X59))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X57))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X58))))) | s(bool,X60) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X57),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X60)) )),
  inference(superposition,[],[f3030,f2304])).
fof(f23002,plain,(
  ( ! [X52,X53,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X51))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X52))))) | s(bool,X53) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X53)) )),
  inference(superposition,[],[f2991,f2304])).
fof(f23001,plain,(
  ( ! [X50,X48,X49] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X49))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X48))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X49))))))) | s(bool,X50) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X50)) )),
  inference(superposition,[],[f2987,f2304])).
fof(f23000,plain,(
  ( ! [X47,X45,X46] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X46))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X45))))))) | s(bool,X47) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X47)) )),
  inference(superposition,[],[f2987,f2304])).
fof(f22988,plain,(
  ( ! [X12,X10,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X11) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X10))))) | s(bool,X12) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f1246,f2304])).
fof(f22987,plain,(
  ( ! [X8,X7,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))) | s(bool,X9) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f1245,f2304])).
fof(f22937,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) | s(bool,X2) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X2) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(superposition,[],[f2304,f1618])).
fof(f27748,plain,(
  ( ! [X2,X3] : (s(bool,X2) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(duplicate_literal_removal,[],[f27747])).
fof(f27747,plain,(
  ( ! [X2,X3] : (s(bool,X2) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(condensation,[],[f27746])).
fof(f27746,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X20) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X20) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(subsumption_resolution,[],[f27724,f668])).
fof(f27724,plain,(
  ( ! [X21,X19,X20,X18] : (~p(s(bool,X19)) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X20) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X20) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f264,f1799])).
fof(f28742,plain,(
  ( ! [X4,X2,X5,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X5) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f242,f2305])).
fof(f29101,plain,(
  ( ! [X6,X4,X7,X5,X3] : (s('type.integer.int',X5) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X7) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat',X3))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f1627,f2305])).
fof(f29847,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) | s(bool,'T_0') = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl108),
  inference(subsumption_resolution,[],[f29815,f424])).
fof(f29815,plain,(
  ( ! [X2] : (p(s(bool,'F_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) | s(bool,'T_0') = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl108),
  inference(superposition,[],[f27318,f241])).
fof(f29834,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl108),
  inference(forward_demodulation,[],[f29833,f286])).
fof(f29833,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl108),
  inference(forward_demodulation,[],[f29832,f286])).
fof(f29832,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))))) ) | $spl108),
  inference(forward_demodulation,[],[f29808,f286])).
fof(f29808,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))))) ) | $spl108),
  inference(superposition,[],[f27318,f286])).
fof(f24298,plain,(
  ( ! [X61,X66,X64,X62,X65,X63] : (s(bool,'T_0') != s(bool,f(s(bool,X63))) | s(fun(bool,bool),X61) = s(fun(bool,bool),X62) | s(bool,X64) = s(bool,g(s(bool,sK14(X61,X62,bool,bool)))) | s(bool,'T_0') = s(bool,X64) | s(bool,X65) = s(bool,sK14(X61,X62,bool,bool)) | s(bool,X65) = s(bool,X66) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,X63)) )),
  inference(superposition,[],[f1997,f1799])).
fof(f242,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X6] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  file('thm.rat.RAT_LES_TOTAL','thm.rat.RAT_SGN_TOTAL')).
fof(f261,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(cnf_transformation,[],[f158])).
fof(f158,plain,(
  ! [X0] : ((s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) & (~p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(nnf_transformation,[],[f68])).
fof(f68,plain,(
  ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X6] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.rat.RAT_LES_TOTAL','thm.rat.RAT_SGN_CLAUSES|split|2')).
fof(f262,plain,(
  ( ! [X0] : (~p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f158])).
fof(f264,plain,(
  ( ! [X0] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f159])).
fof(f292,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) )),
  inference(cnf_transformation,[],[f173])).
fof(f1627,plain,(
  ( ! [X6,X7] : (s('type.integer.int',X7) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f294,f242])).
fof(f1629,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int',X11) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f293,f242])).
fof(f1631,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f263,f242])).
fof(f1634,plain,(
  ( ! [X6,X7] : (s('type.integer.int',X7) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f294,f242])).
fof(f1636,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f293,f242])).
fof(f2988,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1246,f242])).
fof(f2989,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1246,f242])).
fof(f2995,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X1) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1246,f242])).
fof(f3175,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1245,f242])).
fof(f3176,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1245,f242])).
fof(f3184,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1245,f242])).
fof(f3356,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1632,f1445])).
fof(f3374,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) )),
  inference(duplicate_literal_removal,[],[f3373])).
fof(f3373,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) )),
  inference(condensation,[],[f3372])).
fof(f3372,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8)))) )),
  inference(duplicate_literal_removal,[],[f3359])).
fof(f3359,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1632,f242])).
fof(f27341,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3443,f3444,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f21764,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23529,f23320,f23215,f23135,f21817,f21794,f21781,f21780,f27323,f21690,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f27326,f15712,f15711,f27327,f15710,f15707,f15705,f15701,f15413,f27328,f15412,f15407,f15401,f27329,f15400,f14962,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9998,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3471,f27335,f3469,f27336,f3468,f27337,f3466,f27338,f3464,f3460,f27339,f3459,f27340,f3414])).
fof(f27340,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5)))))))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f21764,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23529,f23320,f23215,f23135,f21817,f21794,f21781,f21780,f27323,f21690,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f27326,f15712,f15711,f27327,f15710,f15707,f15705,f15701,f15413,f27328,f15412,f15407,f15401,f27329,f15400,f14962,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9998,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3471,f27335,f3469,f27336,f3468,f27337,f3466,f27338,f3464,f3460,f27339,f3459])).
fof(f27339,plain,(
  ( ! [X8,X7] : (s('type.integer.int',X8) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3474,f3547,f3568,f10119,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f21764,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23529,f23320,f23215,f23135,f21817,f21794,f21781,f21780,f27323,f21690,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f27326,f15712,f15711,f27327,f15710,f15707,f15705,f15701,f15413,f27328,f15412,f15407,f15401,f27329,f15400,f14962,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9998,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3471,f27335,f3469,f27336,f3468,f27337,f3466,f27338,f3464,f3460])).
fof(f3464,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X16) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) )),
  inference(superposition,[],[f293,f1618])).
fof(f27338,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int',X20) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3474,f3547,f3568,f10119,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f21764,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23529,f23320,f23215,f23135,f21817,f21794,f21781,f21780,f27323,f21690,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f27326,f15712,f15711,f27327,f15710,f15707,f15705,f15701,f15413,f27328,f15412,f15407,f15401,f27329,f15400,f14962,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9998,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3471,f27335,f3469,f27336,f3468,f27337,f3466])).
fof(f27337,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24)))))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3474,f3547,f3568,f10119,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f21764,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23529,f23320,f23215,f23135,f21817,f21794,f21781,f21780,f27323,f21690,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f27326,f15712,f15711,f27327,f15710,f15707,f15705,f15701,f15413,f27328,f15412,f15407,f15401,f27329,f15400,f14962,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9998,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3471,f27335,f3469,f27336,f3468])).
fof(f27336,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3474,f3547,f3568,f10119,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f21764,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23529,f23320,f23215,f23135,f21817,f21794,f21781,f21780,f27323,f21690,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f27326,f15712,f15711,f27327,f15710,f15707,f15705,f15701,f15413,f27328,f15412,f15407,f15401,f27329,f15400,f14962,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9998,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3471,f27335,f3469])).
fof(f27335,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3474,f3547,f3568,f10119,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f21764,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23529,f23320,f23215,f23135,f21817,f21794,f21781,f21780,f27323,f21690,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f27326,f15712,f15711,f27327,f15710,f15707,f15705,f15701,f15413,f27328,f15412,f15407,f15401,f27329,f15400,f14962,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9998,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3471])).
fof(f3477,plain,(
  ( ! [X12,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11)))))) )),
  inference(superposition,[],[f293,f1618])).
fof(f3479,plain,(
  ( ! [X15,X16] : (s('type.integer.int',X16) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) )),
  inference(superposition,[],[f294,f1618])).
fof(f3481,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) )),
  inference(superposition,[],[f1245,f1618])).
fof(f3482,plain,(
  ( ! [X21,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21)))))) )),
  inference(superposition,[],[f1246,f1618])).
fof(f3599,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(superposition,[],[f1627,f1618])).
fof(f3605,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(duplicate_literal_removal,[],[f3604])).
fof(f3604,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(condensation,[],[f3603])).
fof(f3603,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(trivial_inequality_removal,[],[f3593])).
fof(f3593,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1627,f242])).
fof(f3628,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1629,f1445])).
fof(f27334,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int',X1) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3474,f3477,f3479,f3481,f3482,f3547,f3568,f3599,f10119,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f21764,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23529,f23320,f23215,f23135,f21817,f21794,f21781,f21780,f27323,f21690,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f27326,f15712,f15711,f27327,f15710,f15707,f15705,f15701,f15413,f27328,f15412,f15407,f15401,f27329,f15400,f14962,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9998,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656])).
fof(f5737,plain,(
  ( ! [X6,X7,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1636,f1445])).
fof(f5747,plain,(
  ( ! [X6,X7,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1636,f1445])).
fof(f5821,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8)))))) )),
  inference(superposition,[],[f1617,f1618])).
fof(f5904,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8)))) )),
  inference(superposition,[],[f1245,f1617])).
fof(f5912,plain,(
  ( ! [X33,X31,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32)))))) )),
  inference(superposition,[],[f1445,f1617])).
fof(f5919,plain,(
  ( ! [X45,X46,X44] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X45))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X45) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44)))) )),
  inference(superposition,[],[f293,f1617])).
fof(f5923,plain,(
  ( ! [X57,X58,X56] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X57))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56)))) )),
  inference(superposition,[],[f1245,f1617])).
fof(f5924,plain,(
  ( ! [X61,X59,X60] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X60))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59)))) )),
  inference(superposition,[],[f1246,f1617])).
fof(f5931,plain,(
  ( ! [X4,X5,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) )),
  inference(superposition,[],[f261,f1617])).
fof(f5932,plain,(
  ( ! [X6,X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) )),
  inference(superposition,[],[f263,f1617])).
fof(f5933,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X11),s('type.rat.rat',X10)))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9)))) )),
  inference(superposition,[],[f292,f1617])).
fof(f5942,plain,(
  ( ! [X39,X37,X38] : (s('type.integer.int',X38) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X38))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37)))) )),
  inference(superposition,[],[f294,f1617])).
fof(f6049,plain,(
  ( ! [X35,X36,X34] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X35),s('type.rat.rat',X34)))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X34),s('type.rat.rat',X35))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X34),s('type.rat.rat',X35)))))) )),
  inference(trivial_inequality_removal,[],[f5913])).
fof(f5913,plain,(
  ( ! [X35,X36,X34] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X35),s('type.rat.rat',X34)))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X34),s('type.rat.rat',X35))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X34),s('type.rat.rat',X35)))))) )),
  inference(superposition,[],[f292,f1617])).
fof(f6054,plain,(
  ( ! [X4,X5] : (p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4)))) )),
  inference(trivial_inequality_removal,[],[f5902])).
fof(f5902,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4)))) )),
  inference(superposition,[],[f261,f1617])).
fof(f9997,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f2991,f242])).
fof(f27331,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3474,f3477,f3479,f3481,f3482,f3547,f3568,f3599,f3656,f5821,f10119,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f21764,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23529,f23320,f23215,f23135,f21817,f21794,f21781,f21780,f27323,f21690,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f27326,f15712,f15711,f27327,f15710,f15707,f15705,f15701,f15413,f27328,f15412,f15407,f15401,f27329,f15400,f14962,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9998])).
fof(f10088,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3186,f242])).
fof(f10093,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13)))) )),
  inference(superposition,[],[f3186,f1617])).
fof(f10095,plain,(
  ( ! [X19,X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17)))) )),
  inference(superposition,[],[f3186,f1617])).
fof(f10098,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3186,f242])).
fof(f10099,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X28))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27)))))) )),
  inference(superposition,[],[f3186,f1618])).
fof(f10100,plain,(
  ( ! [X30,X31,X29] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X31))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X31))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X31)))) )),
  inference(superposition,[],[f3186,f1617])).
fof(f10102,plain,(
  ( ! [X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X36))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) )),
  inference(superposition,[],[f3186,f1618])).
fof(f10104,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3186,f242])).
fof(f10113,plain,(
  ( ! [X2,X3,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) )),
  inference(superposition,[],[f3186,f1617])).
fof(f10115,plain,(
  ( ! [X8,X7,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7)))) )),
  inference(superposition,[],[f3186,f1617])).
fof(f10118,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X16) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3186,f242])).
fof(f14322,plain,(
  ( ! [X712,X710,X713,X711] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X710))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X711) = s(bool,X712) | s(bool,X712) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X710),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X711) = s(bool,X713) | s(bool,'T_0') = s(bool,X713)) )),
  inference(subsumption_resolution,[],[f11801,f233])).
fof(f11801,plain,(
  ( ! [X712,X710,X713,X711] : (~p(s(bool,'T_0')) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X710))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X711) = s(bool,X712) | s(bool,X712) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X710),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X711) = s(bool,X713) | s(bool,'T_0') = s(bool,X713)) )),
  inference(superposition,[],[f264,f1799])).
fof(f14953,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X18))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20)))) )),
  inference(superposition,[],[f3031,f1617])).
fof(f14959,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) )),
  inference(superposition,[],[f3031,f1618])).
fof(f27330,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X52),s('type.rat.rat',X51))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3474,f3477,f3479,f3481,f3482,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f21764,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23529,f23320,f23215,f23135,f21817,f21794,f21781,f21780,f27323,f21690,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f27326,f15712,f15711,f27327,f15710,f15707,f15705,f15701,f15413,f27328,f15412,f15407,f15401,f27329,f15400,f14962])).
fof(f15400,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X16))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f2987,f242])).
fof(f27329,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3474,f3477,f3479,f3481,f3482,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f21764,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23529,f23320,f23215,f23135,f21817,f21794,f21781,f21780,f27323,f21690,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f27326,f15712,f15711,f27327,f15710,f15707,f15705,f15701,f15413,f27328,f15412,f15407,f15401])).
fof(f15407,plain,(
  ( ! [X2,X3,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) )),
  inference(superposition,[],[f2987,f1617])).
fof(f15412,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X16))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f2987,f242])).
fof(f27328,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f15412,f15407,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3474,f3477,f3479,f3481,f3482,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f15401,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f21764,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23529,f23320,f23215,f23135,f21817,f21794,f21781,f21780,f27323,f21690,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f27326,f15712,f15711,f27327,f15710,f15707,f15705,f15701,f15413])).
fof(f15701,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3193,f242])).
fof(f15705,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20)))) )),
  inference(superposition,[],[f3193,f1617])).
fof(f15707,plain,(
  ( ! [X28,X26,X27,X25] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25)))) )),
  inference(superposition,[],[f3193,f1617])).
fof(f15710,plain,(
  ( ! [X37,X38,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3193,f242])).
fof(f27327,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3474,f3477,f3479,f3481,f3482,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f15401,f15413,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f21764,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23529,f23320,f23215,f23135,f21817,f21794,f21781,f21780,f27323,f21690,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f27326,f15712,f15711])).
fof(f15712,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45)))) )),
  inference(superposition,[],[f3193,f1617])).
fof(f27326,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3474,f3477,f3479,f3481,f3482,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f15401,f15413,f15711,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f21764,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23529,f23320,f23215,f23135,f21817,f21794,f21781,f21780,f27323,f21690,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714])).
fof(f15715,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3193,f242])).
fof(f15729,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) )),
  inference(superposition,[],[f3193,f1617])).
fof(f16731,plain,(
  ( ! [X19,X20,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3030,f242])).
fof(f16885,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17)))) )),
  inference(superposition,[],[f3036,f1617])).
fof(f16887,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X25),s('type.rat.rat',X24))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22)))) )),
  inference(superposition,[],[f3036,f1617])).
fof(f16892,plain,(
  ( ! [X39,X41,X42,X40] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42)))) )),
  inference(superposition,[],[f3036,f1617])).
fof(f16907,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) )),
  inference(superposition,[],[f3036,f1617])).
fof(f17304,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))))) | s(bool,X10) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f1245,f2306])).
fof(f17313,plain,(
  ( ! [X39,X37,X38] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X37))))))) | s(bool,X39) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X39)) )),
  inference(superposition,[],[f2987,f2306])).
fof(f17318,plain,(
  ( ! [X54,X55,X53] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X54))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X54) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X53))))))))) | s(bool,X55) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X55)) )),
  inference(superposition,[],[f3186,f2306])).
fof(f17321,plain,(
  ( ! [X64,X62,X65,X63] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X64))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X64))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X63),s('type.rat.rat',X62))))) | s(bool,X65) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X62),s('type.rat.rat',X63))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X65)) )),
  inference(superposition,[],[f3030,f2306])).
fof(f17324,plain,(
  ( ! [X76,X74,X75] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X75),s('type.rat.rat',X74))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X76) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X76)) )),
  inference(superposition,[],[f1445,f2306])).
fof(f17330,plain,(
  ( ! [X85,X86] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X85))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X86) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X85))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X86)) )),
  inference(superposition,[],[f240,f2306])).
fof(f17331,plain,(
  ( ! [X88,X87,X89] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X88))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X88) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X87))) | s(bool,X89) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X87),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X89)) )),
  inference(superposition,[],[f293,f2306])).
fof(f17335,plain,(
  ( ! [X101,X99,X100] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X100))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X99))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X100))))))) | s(bool,X101) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X99),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X101)) )),
  inference(superposition,[],[f1245,f2306])).
fof(f17336,plain,(
  ( ! [X103,X102,X104] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X103))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X102))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X103))))) | s(bool,X104) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X102),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X104)) )),
  inference(superposition,[],[f1246,f2306])).
fof(f17343,plain,(
  ( ! [X125,X123,X124,X122] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X123),s('type.rat.rat',X124))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X122))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X124),s('type.rat.rat',X123))))) | s(bool,X125) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X122),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X125)) )),
  inference(superposition,[],[f3031,f2306])).
fof(f17344,plain,(
  ( ! [X127,X128,X126,X129] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X127),s('type.rat.rat',X128))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X126))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X128),s('type.rat.rat',X127))))))) | s(bool,X129) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X126),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X129)) )),
  inference(superposition,[],[f3036,f2306])).
fof(f17345,plain,(
  ( ! [X132,X130,X131] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X131))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X130))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X131))))))))) | s(bool,X132) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X132)) )),
  inference(superposition,[],[f3186,f2306])).
fof(f17346,plain,(
  ( ! [X134,X136,X135,X133] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X134),s('type.rat.rat',X135))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X133))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X134),s('type.rat.rat',X135))))))) | s(bool,X136) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X133),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X136)) )),
  inference(superposition,[],[f3193,f2306])).
fof(f17365,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int',X51) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X51))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X52) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X52)) )),
  inference(superposition,[],[f294,f2306])).
fof(f17376,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X82))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X83),s('type.rat.rat',X84))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X84),s('type.rat.rat',X83))))))) | s(bool,X85) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X82),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X85)) )),
  inference(superposition,[],[f3036,f2306])).
fof(f17377,plain,(
  ( ! [X88,X87,X86] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X87))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X86))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X87))))))))) | s(bool,X88) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X86),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X88)) )),
  inference(superposition,[],[f3186,f2306])).
fof(f17378,plain,(
  ( ! [X92,X90,X91,X89] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X89))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X90),s('type.rat.rat',X91))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X90),s('type.rat.rat',X91))))))) | s(bool,X92) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X89),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X92)) )),
  inference(superposition,[],[f3193,f2306])).
fof(f17621,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,sK14(X0,X1,X2,bool)) | s(X2,f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) != s(X2,g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(condensation,[],[f17620])).
fof(f17620,plain,(
  ( ! [X154,X152,X151,X153,X150] : (s(X152,f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X151),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) != s(X152,g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X151),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(fun(bool,X152),X153) = s(fun(bool,X152),X154) | s(bool,'T_0') = s(bool,X150) | s(bool,'T_0') = s(bool,sK14(X153,X154,X152,bool)) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X151))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(duplicate_literal_removal,[],[f17422])).
fof(f17422,plain,(
  ( ! [X154,X152,X151,X153,X150] : (s(X152,f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X151),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) != s(X152,g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X151),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(fun(bool,X152),X153) = s(fun(bool,X152),X154) | s(bool,'T_0') = s(bool,X150) | s(bool,'T_0') = s(bool,sK14(X153,X154,X152,bool)) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X151))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X150)) )),
  inference(superposition,[],[f1875,f2306])).
fof(f17706,plain,(
  ( ! [X61,X59,X60,X58] : (s('type.integer.int',X60) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X58),s('type.rat.rat',X59))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X60))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X61) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X58),s('type.rat.rat',X59))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X61)) )),
  inference(forward_demodulation,[],[f17320,f1445])).
fof(f17320,plain,(
  ( ! [X61,X59,X60,X58] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X60))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X60) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X58))))))) | s(bool,X61) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X58),s('type.rat.rat',X59))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X61)) )),
  inference(superposition,[],[f3036,f2306])).
fof(f17707,plain,(
  ( ! [X68,X66,X69,X67] : (s('type.integer.int',X68) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X67),s('type.rat.rat',X66))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X68))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X69) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X67))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X69)) )),
  inference(forward_demodulation,[],[f17322,f1445])).
fof(f17322,plain,(
  ( ! [X68,X66,X69,X67] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X68))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X68) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X67))))))) | s(bool,X69) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X67))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X69)) )),
  inference(superposition,[],[f3193,f2306])).
fof(f17755,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | s(bool,X0) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(condensation,[],[f17754])).
fof(f17754,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(subsumption_resolution,[],[f17481,f251])).
fof(f17481,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f287,f2306])).
fof(f18365,plain,(
  ( ! [X2,X3,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))))) | s(bool,X3) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f3173,f2306])).
fof(f18366,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) )),
  inference(superposition,[],[f3173,f1617])).
fof(f18370,plain,(
  ( ! [X17,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X16))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3173,f242])).
fof(f21429,plain,(
  ( ! [X0] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(equality_resolution,[],[f1631])).
fof(f27324,plain,(
  ( ! [X4,X2,X3] : (s(bool,'T_0') = s(bool,X4) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s(bool,X4) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16891,f16890,f16887,f16885,f16731,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3474,f3477,f3479,f3481,f3482,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f15401,f15413,f15711,f15714,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f21764,f21429,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23529,f23320,f23215,f23135,f21817,f21794,f21781,f21780,f27323,f21690])).
fof(f27323,plain,(
  ( ! [X30,X31,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16891,f16890,f16887,f16885,f16731,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3474,f3477,f3479,f3481,f3482,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f15401,f15413,f15711,f15714,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21690,f21747,f21764,f21429,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23529,f23320,f23215,f23135,f21817,f21794,f21781,f21780])).
fof(f21781,plain,(
  ( ! [X33,X34] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X34))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33)))))) )),
  inference(superposition,[],[f3173,f1618])).
fof(f21794,plain,(
  ( ! [X59,X60,X58] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58)))))) )),
  inference(superposition,[],[f3036,f1618])).
fof(f21817,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) )),
  inference(superposition,[],[f3036,f1618])).
fof(f23135,plain,(
  ( ! [X273,X275,X272,X274] : (s(bool,f(s(X272,sK14(X273,X274,bool,X272)))) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X275),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(fun(X272,bool),X273) = s(fun(X272,bool),X274) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X275))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,g(s(X272,sK14(X273,X274,bool,X272))))) )),
  inference(superposition,[],[f334,f2304])).
fof(f23215,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,sK14(X0,X1,X2,bool)) | s(X2,f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) != s(X2,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(condensation,[],[f23214])).
fof(f23214,plain,(
  ( ! [X154,X152,X151,X153,X150] : (s(X152,f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X151),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) != s(X152,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X151),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(fun(bool,X152),X153) = s(fun(bool,X152),X154) | s(bool,'T_0') = s(bool,X150) | s(bool,'T_0') = s(bool,sK14(X153,X154,X152,bool)) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X151))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(duplicate_literal_removal,[],[f23120])).
fof(f23120,plain,(
  ( ! [X154,X152,X151,X153,X150] : (s(X152,f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X151),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) != s(X152,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X151),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(fun(bool,X152),X153) = s(fun(bool,X152),X154) | s(bool,'T_0') = s(bool,X150) | s(bool,'T_0') = s(bool,sK14(X153,X154,X152,bool)) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X151))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X150)) )),
  inference(superposition,[],[f1875,f2304])).
fof(f23320,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | s(bool,X0) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(condensation,[],[f23319])).
fof(f23319,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X16) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(subsumption_resolution,[],[f23144,f251])).
fof(f23144,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X16) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f287,f2304])).
fof(f23532,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X16) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))))))) | s(bool,X17) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))) | s(bool,'T_0') = s(bool,X17)) )),
  inference(superposition,[],[f3036,f2305])).
fof(f23533,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))))) | s(bool,X21) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X19),s('type.rat.rat',X18))) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f3193,f2305])).
fof(f23563,plain,(
  ( ! [X127,X128,X126,X129] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X128))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X128) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X126),s('type.rat.rat',X127))))) | s(bool,X129) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X127),s('type.rat.rat',X126))) | s(bool,'T_0') = s(bool,X129)) )),
  inference(superposition,[],[f293,f2305])).
fof(f23565,plain,(
  ( ! [X134,X136,X135,X137] : (s('type.integer.int',X136) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X136))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X134),s('type.rat.rat',X135))))))) | s(bool,X137) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X135),s('type.rat.rat',X134))) | s(bool,'T_0') = s(bool,X137)) )),
  inference(superposition,[],[f294,f2305])).
fof(f23567,plain,(
  ( ! [X144,X142,X145,X143] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X144))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X144))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X142),s('type.rat.rat',X143))))) | s(bool,X145) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X143),s('type.rat.rat',X142))) | s(bool,'T_0') = s(bool,X145)) )),
  inference(superposition,[],[f1245,f2305])).
fof(f23568,plain,(
  ( ! [X146,X149,X147,X148] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X148))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X148))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X146),s('type.rat.rat',X147))))) | s(bool,X149) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X147),s('type.rat.rat',X146))) | s(bool,'T_0') = s(bool,X149)) )),
  inference(superposition,[],[f1246,f2305])).
fof(f23575,plain,(
  ( ! [X177,X175,X173,X176,X174] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X175),s('type.rat.rat',X176))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X173),s('type.rat.rat',X174))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X176),s('type.rat.rat',X175))))) | s(bool,X177) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X174),s('type.rat.rat',X173))) | s(bool,'T_0') = s(bool,X177)) )),
  inference(superposition,[],[f3031,f2305])).
fof(f23576,plain,(
  ( ! [X182,X180,X178,X181,X179] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X180),s('type.rat.rat',X181))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X178),s('type.rat.rat',X179))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X181),s('type.rat.rat',X180))))))) | s(bool,X182) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X179),s('type.rat.rat',X178))) | s(bool,'T_0') = s(bool,X182)) )),
  inference(superposition,[],[f3036,f2305])).
fof(f23577,plain,(
  ( ! [X185,X186,X184,X183] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X185))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X185))))))))) | s(bool,X186) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X184),s('type.rat.rat',X183))) | s(bool,'T_0') = s(bool,X186)) )),
  inference(superposition,[],[f3186,f2305])).
fof(f23578,plain,(
  ( ! [X191,X189,X187,X190,X188] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X189),s('type.rat.rat',X190))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X187),s('type.rat.rat',X188))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X189),s('type.rat.rat',X190))))))) | s(bool,X191) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X188),s('type.rat.rat',X187))) | s(bool,'T_0') = s(bool,X191)) )),
  inference(superposition,[],[f3193,f2305])).
fof(f23837,plain,(
  ( ! [X43,X41,X44,X42,X40] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X42))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))))) | s('type.integer.int',X42) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X44) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))) | s(bool,'T_0') = s(bool,X44)) )),
  inference(forward_demodulation,[],[f23503,f1445])).
fof(f23503,plain,(
  ( ! [X43,X41,X44,X42,X40] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X42))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))))) | s('type.integer.int',X42) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X44) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))) | s(bool,'T_0') = s(bool,X44)) )),
  inference(superposition,[],[f1629,f2305])).
fof(f23847,plain,(
  ( ! [X90,X88,X87,X89] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X89))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X88),s('type.rat.rat',X87))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X89))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X90) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X88),s('type.rat.rat',X87))) | s(bool,'T_0') = s(bool,X90)) )),
  inference(forward_demodulation,[],[f23553,f286])).
fof(f23553,plain,(
  ( ! [X90,X88,X87,X89] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X89))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X89))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X87),s('type.rat.rat',X88))))))))) | s(bool,X90) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X88),s('type.rat.rat',X87))) | s(bool,'T_0') = s(bool,X90)) )),
  inference(superposition,[],[f2987,f2305])).
fof(f23852,plain,(
  ( ! [X111,X109,X110,X108] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X110))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X109),s('type.rat.rat',X108))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X110))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X111) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X109),s('type.rat.rat',X108))) | s(bool,'T_0') = s(bool,X111)) )),
  inference(forward_demodulation,[],[f23558,f286])).
fof(f23558,plain,(
  ( ! [X111,X109,X110,X108] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X110))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X110))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X108),s('type.rat.rat',X109))))))))) | s(bool,X111) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X109),s('type.rat.rat',X108))) | s(bool,'T_0') = s(bool,X111)) )),
  inference(superposition,[],[f3173,f2305])).
fof(f23877,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | s(bool,X0) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1)))))) )),
  inference(condensation,[],[f23876])).
fof(f23876,plain,(
  ( ! [X33,X31,X34,X32] : (p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X34) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31)))))) )),
  inference(subsumption_resolution,[],[f23661,f251])).
fof(f23661,plain,(
  ( ! [X33,X31,X34,X32] : (p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X34) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f287,f2305])).
fof(f24403,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3033,f242])).
fof(f24404,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) )),
  inference(superposition,[],[f3033,f1617])).
fof(f24406,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X14),s('type.rat.rat',X13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12)))) )),
  inference(superposition,[],[f3033,f1617])).
fof(f24409,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X23))))))) | s(bool,X25) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X25)) )),
  inference(superposition,[],[f3033,f2304])).
fof(f24410,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))))))) | s(bool,X29) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29)) )),
  inference(superposition,[],[f3033,f2306])).
fof(f24412,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) )),
  inference(superposition,[],[f3033,f1618])).
fof(f24425,plain,(
  ( ! [X10,X8,X7,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10)))) )),
  inference(superposition,[],[f3033,f1617])).
fof(f24444,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X30))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X33),s('type.rat.rat',X32))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))))))) | s(bool,X34) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X31),s('type.rat.rat',X30))) | s(bool,'T_0') = s(bool,X34)) )),
  inference(forward_demodulation,[],[f24411,f286])).
fof(f24411,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X33),s('type.rat.rat',X32))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X30),s('type.rat.rat',X31))))))) | s(bool,X34) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X31),s('type.rat.rat',X30))) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f3033,f2305])).
fof(f24527,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3179,f242])).
fof(f24528,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) )),
  inference(superposition,[],[f3179,f1617])).
fof(f24533,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X23))))) | s(bool,X25) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X25)) )),
  inference(superposition,[],[f3179,f2304])).
fof(f24534,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))))) | s(bool,X29) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29)) )),
  inference(superposition,[],[f3179,f2306])).
fof(f24536,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) )),
  inference(superposition,[],[f3179,f1618])).
fof(f24556,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X28))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X26))))) | s(bool,X29) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29)) )),
  inference(superposition,[],[f3179,f2304])).
fof(f24557,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X32))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X32))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X30))))) | s(bool,X33) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X30),s('type.rat.rat',X31))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f3179,f2306])).
fof(f24578,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X33),s('type.rat.rat',X32))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X30))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X34) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X31),s('type.rat.rat',X30))) | s(bool,'T_0') = s(bool,X34)) )),
  inference(forward_demodulation,[],[f24535,f286])).
fof(f24535,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X33),s('type.rat.rat',X32))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X30),s('type.rat.rat',X31))))))))) | s(bool,X34) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X31),s('type.rat.rat',X30))) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f3179,f2305])).
fof(f24639,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))) )),
  inference(superposition,[],[f3238,f1618])).
fof(f24667,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4)))) )),
  inference(superposition,[],[f1245,f3238])).
fof(f24678,plain,(
  ( ! [X28,X29] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X29))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X28))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28)))) )),
  inference(superposition,[],[f2987,f3238])).
fof(f24683,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39)))) )),
  inference(superposition,[],[f3033,f3238])).
fof(f24684,plain,(
  ( ! [X43,X42] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X42))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X43))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42)))) )),
  inference(superposition,[],[f3173,f3238])).
fof(f24686,plain,(
  ( ! [X47,X48,X46] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X47),s('type.rat.rat',X48))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X46))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X48),s('type.rat.rat',X47))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46)))) )),
  inference(superposition,[],[f3179,f3238])).
fof(f24687,plain,(
  ( ! [X50,X49] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X50))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X50) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X49))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X49)))) )),
  inference(superposition,[],[f3186,f3238])).
fof(f24691,plain,(
  ( ! [X56,X55] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X56),s('type.rat.rat',X55))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X55),s('type.rat.rat',X56)))))) )),
  inference(superposition,[],[f1445,f3238])).
fof(f24692,plain,(
  ( ! [X61,X59,X60] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X61))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60)))))) )),
  inference(superposition,[],[f3030,f3238])).
fof(f24693,plain,(
  ( ! [X64,X62,X63] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X64))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X64) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X63),s('type.rat.rat',X62))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X62),s('type.rat.rat',X63))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X62),s('type.rat.rat',X63)))))) )),
  inference(superposition,[],[f3031,f3238])).
fof(f24696,plain,(
  ( ! [X72,X71,X73] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X73))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X73))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X72),s('type.rat.rat',X71))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X71),s('type.rat.rat',X72)))))) )),
  inference(superposition,[],[f3179,f3238])).
fof(f27321,plain,(
  ( ! [X78] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X78))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X78)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16891,f16890,f16887,f16885,f16731,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3474,f3477,f3479,f3481,f3482,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f15401,f15413,f15711,f15714,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21690,f21747,f21780,f21781,f21794,f21817,f21764,f21429,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23215,f23210,f23135,f23318,f23320,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23837,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23529,f23530,f23531,f23532,f23533,f23761,f23847,f23848,f23851,f23852,f23563,f23565,f23567,f23568,f23575,f23576,f23577,f23578,f23858,f23734,f23729,f23728,f23867,f23645,f23877,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24403,f24404,f24406,f24409,f24410,f24444,f24412,f24424,f24425,f24427,f24527,f24528,f24530,f24533,f24534,f24578,f24536,f24550,f24551,f24553,f24556,f24557,f24637,f24638,f24639,f24640,f24641,f24845,f24667,f24668,f24678,f24679,f24680,f24682,f24683,f24684,f24686,f24687,f24833,f24691,f24692,f24693,f24696,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702])).
fof(f24702,plain,(
  ( ! [X78] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X78))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X78))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X78)))))) )),
  inference(superposition,[],[f240,f3238])).
fof(f24703,plain,(
  ( ! [X80,X79] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X80))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X80) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X79))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X79),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X79)))) )),
  inference(superposition,[],[f293,f3238])).
fof(f24707,plain,(
  ( ! [X88,X87] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X88))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X87))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X88))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X87),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X87)))) )),
  inference(superposition,[],[f1245,f3238])).
fof(f24708,plain,(
  ( ! [X90,X89] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X90))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X89))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X90))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X89),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X89)))) )),
  inference(superposition,[],[f1246,f3238])).
fof(f24715,plain,(
  ( ! [X103,X102,X104] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X103),s('type.rat.rat',X104))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X102))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X104),s('type.rat.rat',X103))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X102),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X102)))) )),
  inference(superposition,[],[f3031,f3238])).
fof(f24716,plain,(
  ( ! [X107,X105,X106] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X106),s('type.rat.rat',X107))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X105))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X107),s('type.rat.rat',X106))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X105),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X105)))) )),
  inference(superposition,[],[f3036,f3238])).
fof(f24717,plain,(
  ( ! [X109,X108] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X109))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X109))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X108),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108)))) )),
  inference(superposition,[],[f3186,f3238])).
fof(f24718,plain,(
  ( ! [X111,X112,X110] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X111),s('type.rat.rat',X112))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X110))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X111),s('type.rat.rat',X112))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X110),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X110)))) )),
  inference(superposition,[],[f3193,f3238])).
fof(f24740,plain,(
  ( ! [X45,X44] : (s('type.integer.int',X45) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X45))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44)))) )),
  inference(superposition,[],[f294,f3238])).
fof(f24751,plain,(
  ( ! [X68,X66,X67] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X67),s('type.rat.rat',X68))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X68),s('type.rat.rat',X67))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X66),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66)))) )),
  inference(superposition,[],[f3036,f3238])).
fof(f24752,plain,(
  ( ! [X70,X69] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X70))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X69))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X70))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X69),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X69)))) )),
  inference(superposition,[],[f3186,f3238])).
fof(f24753,plain,(
  ( ! [X72,X71,X73] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X71))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X72),s('type.rat.rat',X73))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X72),s('type.rat.rat',X73))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X71)))) )),
  inference(superposition,[],[f3193,f3238])).
fof(f24896,plain,(
  ( ! [X66,X67,X65] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X67))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X65),s('type.rat.rat',X66))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X67))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X65),s('type.rat.rat',X66))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X65),s('type.rat.rat',X66)))))) )),
  inference(forward_demodulation,[],[f24694,f1445])).
fof(f24694,plain,(
  ( ! [X66,X67,X65] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X67))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X67))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X65))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X65),s('type.rat.rat',X66))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X65),s('type.rat.rat',X66)))))) )),
  inference(superposition,[],[f3033,f3238])).
fof(f24897,plain,(
  ( ! [X70,X68,X69] : (s('type.integer.int',X70) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X68),s('type.rat.rat',X69))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X70))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X68),s('type.rat.rat',X69))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X68),s('type.rat.rat',X69)))))) )),
  inference(forward_demodulation,[],[f24695,f1445])).
fof(f24695,plain,(
  ( ! [X70,X68,X69] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X70))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X70) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X69),s('type.rat.rat',X68))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X68),s('type.rat.rat',X69))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X68),s('type.rat.rat',X69)))))) )),
  inference(superposition,[],[f3036,f3238])).
fof(f24905,plain,(
  ( ! [X17,X16] : (~p(s(bool,X17)) | s(bool,X17) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16)))) )),
  inference(subsumption_resolution,[],[f24767,f233])).
fof(f24767,plain,(
  ( ! [X17,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X17)) | s(bool,X17) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16)))) )),
  inference(superposition,[],[f290,f3238])).
fof(f24906,plain,(
  ( ! [X19,X18] : (sP0(X19,'const.rat.rat_les_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18)))) )),
  inference(subsumption_resolution,[],[f24768,f233])).
fof(f24768,plain,(
  ( ! [X19,X18] : (~p(s(bool,'T_0')) | sP0(X19,'const.rat.rat_les_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18)))) )),
  inference(superposition,[],[f302,f3238])).
fof(f24907,plain,(
  ( ! [X21,X20] : (sP0('const.rat.rat_les_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X21) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20)))) )),
  inference(subsumption_resolution,[],[f24769,f233])).
fof(f24769,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | sP0('const.rat.rat_les_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X21) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20)))) )),
  inference(superposition,[],[f303,f3238])).
fof(f24908,plain,(
  ( ! [X23,X22] : (p(s(bool,X23)) | sP1('const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X23) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22)))) )),
  inference(subsumption_resolution,[],[f24770,f233])).
fof(f24770,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | p(s(bool,X23)) | sP1('const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X23) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22)))) )),
  inference(superposition,[],[f318,f3238])).
fof(f24909,plain,(
  ( ! [X24,X25] : (p(s(bool,X25)) | sP1(X25,'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24)))) )),
  inference(subsumption_resolution,[],[f24771,f233])).
fof(f24771,plain,(
  ( ! [X24,X25] : (~p(s(bool,'T_0')) | p(s(bool,X25)) | sP1(X25,'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24)))) )),
  inference(superposition,[],[f321,f3238])).
fof(f24910,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,X27)) | p(s(bool,X28)) | ~sP5(X27,'const.rat.rat_les_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X28) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26)))) )),
  inference(subsumption_resolution,[],[f24772,f233])).
fof(f24772,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,'T_0')) | ~p(s(bool,X27)) | p(s(bool,X28)) | ~sP5(X27,'const.rat.rat_les_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X28) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26)))) )),
  inference(superposition,[],[f344,f3238])).
fof(f24911,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP4(X30,'const.rat.rat_les_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X31) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29)))) )),
  inference(subsumption_resolution,[],[f24773,f233])).
fof(f24773,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'T_0')) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP4(X30,'const.rat.rat_les_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X31) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29)))) )),
  inference(superposition,[],[f348,f3238])).
fof(f24912,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,X33)) | p(s(bool,X34)) | ~sP3(X33,'const.rat.rat_les_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X34) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X32))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X32)))) )),
  inference(subsumption_resolution,[],[f24774,f233])).
fof(f24774,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP3(X33,'const.rat.rat_les_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X34) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X32))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X32)))) )),
  inference(superposition,[],[f352,f3238])).
fof(f24913,plain,(
  ( ! [X37,X35,X36] : (~p(s(bool,X36)) | p(s(bool,X37)) | ~sP6(X36,'const.rat.rat_les_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X37) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35)))) )),
  inference(subsumption_resolution,[],[f24775,f233])).
fof(f24775,plain,(
  ( ! [X37,X35,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X36)) | p(s(bool,X37)) | ~sP6(X36,'const.rat.rat_les_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X37) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35)))) )),
  inference(superposition,[],[f371,f3238])).
fof(f24914,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X39)) | p(s(bool,X40)) | ~sP7(X40,X39,'const.rat.rat_les_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38)))) )),
  inference(subsumption_resolution,[],[f24776,f233])).
fof(f24776,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X39)) | p(s(bool,X40)) | ~sP7(X40,X39,'const.rat.rat_les_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38)))) )),
  inference(superposition,[],[f380,f3238])).
fof(f24915,plain,(
  ( ! [X43,X41,X42] : (p(s(bool,X42)) | p(s(bool,X43)) | ~sP8('const.rat.rat_les_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X42,X43) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X41))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X41)))) )),
  inference(subsumption_resolution,[],[f24777,f233])).
fof(f24777,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | p(s(bool,X42)) | p(s(bool,X43)) | ~sP8('const.rat.rat_les_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X42,X43) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X41))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X41)))) )),
  inference(superposition,[],[f388,f3238])).
fof(f24916,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,X45)) | sP9('const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X46,X45) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44)))) )),
  inference(subsumption_resolution,[],[f24778,f233])).
fof(f24778,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X45)) | sP9('const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X46,X45) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44)))) )),
  inference(superposition,[],[f393,f3238])).
fof(f24917,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,X48)) | sP9('const.rat.rat_les_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X48,X49) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X47))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X47)))) )),
  inference(subsumption_resolution,[],[f24779,f233])).
fof(f24779,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X48)) | sP9('const.rat.rat_les_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X48,X49) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X47))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X47)))) )),
  inference(superposition,[],[f394,f3238])).
fof(f24918,plain,(
  ( ! [X52,X50,X51] : (p(s(bool,X51)) | p(s(bool,X52)) | ~sP9('const.rat.rat_les_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X52,X51) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50)))) )),
  inference(subsumption_resolution,[],[f24780,f233])).
fof(f24780,plain,(
  ( ! [X52,X50,X51] : (~p(s(bool,'T_0')) | p(s(bool,X51)) | p(s(bool,X52)) | ~sP9('const.rat.rat_les_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X52,X51) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50)))) )),
  inference(superposition,[],[f395,f3238])).
fof(f24919,plain,(
  ( ! [X54,X55,X53] : (p(s(bool,X54)) | ~p(s(bool,X55)) | ~sP10(X55,X54,'const.rat.rat_les_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53)))) )),
  inference(subsumption_resolution,[],[f24781,f233])).
fof(f24781,plain,(
  ( ! [X54,X55,X53] : (~p(s(bool,'T_0')) | p(s(bool,X54)) | ~p(s(bool,X55)) | ~sP10(X55,X54,'const.rat.rat_les_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53)))) )),
  inference(superposition,[],[f405,f3238])).
fof(f24920,plain,(
  ( ! [X57,X58,X56] : (p(s(bool,X57)) | sP11('const.rat.rat_les_2'(s('type.rat.rat',X56),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X58,X57) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56)))) )),
  inference(subsumption_resolution,[],[f24782,f233])).
fof(f24782,plain,(
  ( ! [X57,X58,X56] : (~p(s(bool,'T_0')) | p(s(bool,X57)) | sP11('const.rat.rat_les_2'(s('type.rat.rat',X56),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X58,X57) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56)))) )),
  inference(superposition,[],[f410,f3238])).
fof(f24921,plain,(
  ( ! [X61,X59,X60] : (~p(s(bool,X60)) | sP11('const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X60,X61) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59)))) )),
  inference(subsumption_resolution,[],[f24783,f233])).
fof(f24783,plain,(
  ( ! [X61,X59,X60] : (~p(s(bool,'T_0')) | ~p(s(bool,X60)) | sP11('const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X60,X61) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59)))) )),
  inference(superposition,[],[f411,f3238])).
fof(f24922,plain,(
  ( ! [X64,X62,X63] : (~p(s(bool,X63)) | p(s(bool,X64)) | ~sP11('const.rat.rat_les_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X64,X63) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62)))) )),
  inference(subsumption_resolution,[],[f24784,f233])).
fof(f24784,plain,(
  ( ! [X64,X62,X63] : (~p(s(bool,'T_0')) | ~p(s(bool,X63)) | p(s(bool,X64)) | ~sP11('const.rat.rat_les_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X64,X63) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62)))) )),
  inference(superposition,[],[f412,f3238])).
fof(f24923,plain,(
  ( ! [X66,X67,X65] : (~sP10('const.rat.rat_les_2'(s('type.rat.rat',X65),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X66,X67) | sP11('const.rat.rat_les_2'(s('type.rat.rat',X65),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X66,X67) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65)))) )),
  inference(subsumption_resolution,[],[f24785,f233])).
fof(f24785,plain,(
  ( ! [X66,X67,X65] : (~p(s(bool,'T_0')) | ~sP10('const.rat.rat_les_2'(s('type.rat.rat',X65),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X66,X67) | sP11('const.rat.rat_les_2'(s('type.rat.rat',X65),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X66,X67) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65)))) )),
  inference(superposition,[],[f415,f3238])).
fof(f24924,plain,(
  ( ! [X70,X68,X69] : (~sP8('const.rat.rat_les_2'(s('type.rat.rat',X68),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X69,X70) | sP9('const.rat.rat_les_2'(s('type.rat.rat',X68),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X69,X70) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X68))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X68)))) )),
  inference(subsumption_resolution,[],[f24786,f233])).
fof(f24786,plain,(
  ( ! [X70,X68,X69] : (~p(s(bool,'T_0')) | ~sP8('const.rat.rat_les_2'(s('type.rat.rat',X68),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X69,X70) | sP9('const.rat.rat_les_2'(s('type.rat.rat',X68),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X69,X70) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X68))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X68)))) )),
  inference(superposition,[],[f416,f3238])).
fof(f24926,plain,(
  ( ! [X134,X132,X133,X131] : (p(s(bool,X132)) | ~sP5('const.rat.rat_les_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X133,X132) | s(bool,X133) = s(bool,X134) | s(bool,'T_0') = s(bool,X134) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X131))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X131)))) )),
  inference(subsumption_resolution,[],[f24807,f233])).
fof(f24807,plain,(
  ( ! [X134,X132,X133,X131] : (~p(s(bool,'T_0')) | p(s(bool,X132)) | ~sP5('const.rat.rat_les_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X133,X132) | s(bool,X133) = s(bool,X134) | s(bool,'T_0') = s(bool,X134) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X131))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X131)))) )),
  inference(superposition,[],[f2289,f3238])).
fof(f26255,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) )),
  inference(superposition,[],[f3174,f1617])).
fof(f26257,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X14),s('type.rat.rat',X13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12)))) )),
  inference(superposition,[],[f3174,f1617])).
fof(f26261,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))))))) | s(bool,X29) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29)) )),
  inference(superposition,[],[f3174,f2306])).
fof(f26262,plain,(
  ( ! [X30,X31,X32] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30)))) )),
  inference(superposition,[],[f3174,f3238])).
fof(f26264,plain,(
  ( ! [X39,X38,X40] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X39))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38)))))) )),
  inference(superposition,[],[f3174,f1618])).
fof(f26279,plain,(
  ( ! [X10,X8,X7,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10)))) )),
  inference(superposition,[],[f3174,f1617])).
fof(f26310,plain,(
  ( ! [X37,X35,X33,X36,X34] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X34),s('type.rat.rat',X33))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X35))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X35),s('type.rat.rat',X36))))))) | s(bool,X37) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X34),s('type.rat.rat',X33))) | s(bool,'T_0') = s(bool,X37)) )),
  inference(forward_demodulation,[],[f26263,f286])).
fof(f26263,plain,(
  ( ! [X37,X35,X33,X36,X34] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X35),s('type.rat.rat',X36))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X35))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X33),s('type.rat.rat',X34))))))))) | s(bool,X37) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X34),s('type.rat.rat',X33))) | s(bool,'T_0') = s(bool,X37)) )),
  inference(superposition,[],[f3174,f2305])).
fof(f3040,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))),
  inference(backward_demodulation,[],[f3038,f1539])).
fof(f27319,plain,(
  ( ! [X14,X15] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X14)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3040,f3044,f3046,f3043,f3045,f18371,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16891,f16890,f16887,f16885,f16731,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3474,f3477,f3479,f3481,f3482,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f15401,f15413,f15711,f15714,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21690,f21747,f21780,f21781,f21794,f21817,f21764,f21429,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23215,f23210,f23135,f23318,f23320,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23837,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23529,f23530,f23531,f23532,f23533,f23761,f23847,f23848,f23851,f23852,f23563,f23565,f23567,f23568,f23575,f23576,f23577,f23578,f23858,f23734,f23729,f23728,f23867,f23645,f23877,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24403,f24404,f24406,f24409,f24410,f24444,f24412,f24424,f24425,f24427,f24527,f24528,f24530,f24533,f24534,f24578,f24536,f24550,f24551,f24553,f24556,f24557,f24637,f24638,f24639,f24640,f24641,f24845,f24667,f24668,f24678,f24679,f24680,f24682,f24683,f24684,f24686,f24687,f24833,f24691,f24692,f24693,f24896,f24897,f24696,f24702,f24703,f24705,f24707,f24708,f24715,f24716,f24717,f24718,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24740,f24742,f24743,f24832,f24750,f24751,f24752,f24753,f24904,f24905,f24906,f24907,f24908,f24909,f24910,f24911,f24912,f24913,f24914,f24915,f24916,f24917,f24918,f24919,f24920,f24921,f24922,f24923,f24924,f24926,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26255,f26257,f26261,f26262,f26310,f26264,f26278,f26279,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f23035,f22061,f21947,f21801,f21783,f3549])).
fof(f3549,plain,(
  ( ! [X14,X15] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) )),
  inference(forward_demodulation,[],[f3548,f286])).
fof(f3548,plain,(
  ( ! [X14,X15] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X14),s('type.rat.rat',X15)))))))) )),
  inference(forward_demodulation,[],[f3424,f286])).
fof(f3424,plain,(
  ( ! [X14,X15] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X14),s('type.rat.rat',X15)))))))) )),
  inference(superposition,[],[f1445,f1618])).
fof(f21783,plain,(
  ( ! [X37,X38] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X38))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X38) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X37))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X37)))))) )),
  inference(superposition,[],[f3186,f1618])).
fof(f21801,plain,(
  ( ! [X6,X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X8),s('type.rat.rat',X7)))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))) )),
  inference(superposition,[],[f292,f1618])).
fof(f21947,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4)))))) )),
  inference(forward_demodulation,[],[f21800,f240])).
fof(f21800,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4)))))) )),
  inference(superposition,[],[f263,f1618])).
fof(f23035,plain,(
  ( ! [X146,X144,X145,X143] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X144),s('type.rat.rat',X145))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X143))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X145),s('type.rat.rat',X144))))))) | s(bool,X146) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X143),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X146)) )),
  inference(superposition,[],[f3036,f2304])).
fof(f27318,plain,(
  ( ! [X3] : (p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3040,f3044,f3046,f3043,f3045,f18371,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16891,f16890,f16887,f16885,f16731,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3474,f3477,f3479,f3481,f3482,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f15401,f15413,f15711,f15714,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21690,f21747,f21780,f21781,f21794,f21817,f21764,f21429,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23215,f23210,f23135,f23318,f23320,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23837,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23529,f23530,f23531,f23532,f23533,f23761,f23847,f23848,f23851,f23852,f23563,f23565,f23567,f23568,f23575,f23576,f23577,f23578,f23858,f23734,f23729,f23728,f23867,f23645,f23877,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24403,f24404,f24406,f24409,f24410,f24444,f24412,f24424,f24425,f24427,f24527,f24528,f24530,f24533,f24534,f24578,f24536,f24550,f24551,f24553,f24556,f24557,f24637,f24638,f24639,f24640,f24641,f24845,f24667,f24668,f24678,f24679,f24680,f24682,f24683,f24684,f24686,f24687,f24833,f24691,f24692,f24693,f24896,f24897,f24696,f24702,f24703,f24705,f24707,f24708,f24715,f24716,f24717,f24718,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24740,f24742,f24743,f24832,f24750,f24751,f24752,f24753,f24904,f24905,f24906,f24907,f24908,f24909,f24910,f24911,f24912,f24913,f24914,f24915,f24916,f24917,f24918,f24919,f24920,f24921,f24922,f24923,f24924,f24926,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f23035,f22061,f21801,f21947,f25189,f21783,f25190,f3549,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26255,f26257,f26261,f26262,f26310,f26264,f26278,f26279,f26281,f24979,f24978,f27316,f26260,f26259,f27317,f26254,f21799,f21830])).
fof(f21830,plain,(
  ( ! [X3] : (p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3)))))) )),
  inference(trivial_inequality_removal,[],[f21767])).
fof(f21767,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3)))))) )),
  inference(superposition,[],[f261,f1618])).
fof(f21799,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2)))))) )),
  inference(superposition,[],[f261,f1618])).
fof(f27317,plain,(
  ( ! [X19] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3040,f3044,f3046,f3043,f3045,f18371,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16891,f16890,f16887,f16885,f16731,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3474,f3477,f3479,f3481,f3482,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f15401,f15413,f15711,f15714,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21690,f21747,f21780,f21781,f21794,f21817,f21764,f21429,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23215,f23210,f23135,f23318,f23320,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23837,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23529,f23530,f23531,f23532,f23533,f23761,f23847,f23848,f23851,f23852,f23563,f23565,f23567,f23568,f23575,f23576,f23577,f23578,f23858,f23734,f23729,f23728,f23867,f23645,f23877,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24403,f24404,f24406,f24409,f24410,f24444,f24412,f24424,f24425,f24427,f24527,f24528,f24530,f24533,f24534,f24578,f24536,f24550,f24551,f24553,f24556,f24557,f24637,f24638,f24639,f24640,f24641,f24845,f24667,f24668,f24678,f24679,f24680,f24682,f24683,f24684,f24686,f24687,f24833,f24691,f24692,f24693,f24896,f24897,f24696,f24702,f24703,f24705,f24707,f24708,f24715,f24716,f24717,f24718,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24740,f24742,f24743,f24832,f24750,f24751,f24752,f24753,f24904,f24905,f24906,f24907,f24908,f24909,f24910,f24911,f24912,f24913,f24914,f24915,f24916,f24917,f24918,f24919,f24920,f24921,f24922,f24923,f24924,f24926,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f23035,f22061,f21801,f21947,f21799,f25189,f21783,f21830,f25190,f3549,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26255,f26257,f26261,f26262,f26310,f26264,f26278,f26279,f26281,f24979,f24978,f27316,f26260,f26259])).
fof(f26259,plain,(
  ( ! [X21,X19,X20] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) )),
  inference(superposition,[],[f3174,f1618])).
fof(f26260,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X23))))))) | s(bool,X25) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X25)) )),
  inference(superposition,[],[f3174,f2304])).
fof(f24978,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(superposition,[],[f3638,f240])).
fof(f24979,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2)))))) )),
  inference(superposition,[],[f3638,f1445])).
fof(f26281,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17)))) )),
  inference(superposition,[],[f3174,f1617])).
fof(f26278,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))) )),
  inference(superposition,[],[f3174,f242])).
fof(f25355,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(subsumption_resolution,[],[f25209,f3338])).
fof(f25209,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) )),
  inference(duplicate_literal_removal,[],[f25208])).
fof(f25208,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(condensation,[],[f25207])).
fof(f25207,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) )),
  inference(subsumption_resolution,[],[f21668,f2992])).
fof(f21668,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) )),
  inference(superposition,[],[f1618,f1617])).
fof(f15709,plain,(
  ( ! [X35,X33,X34] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X34),s('type.rat.rat',X35))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X34),s('type.rat.rat',X35))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33)))))) )),
  inference(superposition,[],[f3193,f1618])).
fof(f15704,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12)))))) )),
  inference(superposition,[],[f3193,f1618])).
fof(f15411,plain,(
  ( ! [X14,X13] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X13))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X13)))))) )),
  inference(superposition,[],[f2987,f1618])).
fof(f14957,plain,(
  ( ! [X35,X33,X34] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X34),s('type.rat.rat',X35))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X35),s('type.rat.rat',X34))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33)))))) )),
  inference(superposition,[],[f3031,f1618])).
fof(f10097,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) )),
  inference(superposition,[],[f3186,f1618])).
fof(f10091,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8)))))) )),
  inference(superposition,[],[f3186,f1618])).
fof(f3472,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2)))))) )),
  inference(superposition,[],[f261,f1618])).
fof(f3449,plain,(
  ( ! [X14,X15] : (s('type.integer.int',X15) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14)))))) )),
  inference(superposition,[],[f294,f1618])).
fof(f3440,plain,(
  ( ! [X30,X29] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X29))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X29)))))) )),
  inference(superposition,[],[f1246,f1618])).
fof(f3439,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X28))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27)))))) )),
  inference(superposition,[],[f1245,f1618])).
fof(f3435,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int',X20) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) )),
  inference(superposition,[],[f293,f1618])).
fof(f3434,plain,(
  ( ! [X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18)))))))) )),
  inference(superposition,[],[f240,f1618])).
fof(f3419,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4)))))) )),
  inference(superposition,[],[f1245,f1618])).
fof(f25337,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) | s(bool,'T_0') = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl108),
  inference(subsumption_resolution,[],[f25304,f424])).
fof(f25304,plain,(
  ( ! [X2] : (p(s(bool,'F_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) | s(bool,'T_0') = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl108),
  inference(superposition,[],[f25190,f241])).
fof(f25324,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl108),
  inference(forward_demodulation,[],[f25323,f286])).
fof(f25323,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl108),
  inference(forward_demodulation,[],[f25322,f286])).
fof(f25322,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))))) ) | $spl108),
  inference(forward_demodulation,[],[f25297,f286])).
fof(f25297,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))))) ) | $spl108),
  inference(superposition,[],[f25190,f286])).
fof(f25190,plain,(
  ( ! [X3] : (p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3040,f3044,f3046,f3043,f3045,f18371,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16891,f16890,f16887,f16885,f16731,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f3549,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3472,f3474,f3477,f3479,f3481,f3482,f3487,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f15401,f15413,f15711,f15714,f20328,f1618,f3419,f3434,f3435,f3437,f3439,f3440,f3447,f3449,f3451,f3452,f3516,f15718,f15709,f15704,f15411,f14966,f14957,f14952,f10107,f10097,f10091,f5985,f20403,f20404,f20405,f20406,f21675,f21690,f21747,f21780,f21781,f21794,f21817,f21764,f21429,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23215,f23210,f23135,f23318,f23320,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23837,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23529,f23530,f23531,f23532,f23533,f23761,f23847,f23848,f23851,f23852,f23563,f23565,f23567,f23568,f23575,f23576,f23577,f23578,f23858,f23734,f23729,f23728,f23867,f23645,f23877,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24403,f24404,f24406,f24409,f24410,f24444,f24412,f24424,f24425,f24427,f24527,f24528,f24530,f24533,f24534,f24578,f24536,f24550,f24551,f24553,f24556,f24557,f24637,f24638,f24639,f24640,f24641,f24845,f24667,f24668,f24678,f24679,f24680,f24682,f24683,f24684,f24686,f24687,f24833,f24691,f24692,f24693,f24896,f24897,f24696,f24702,f24703,f24705,f24707,f24708,f24715,f24716,f24717,f24718,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24740,f24742,f24743,f24832,f24750,f24751,f24752,f24753,f24904,f24905,f24906,f24907,f24908,f24909,f24910,f24911,f24912,f24913,f24914,f24915,f24916,f24917,f24918,f24919,f24920,f24921,f24922,f24923,f24924,f24926,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f23035,f22061,f21801,f21947,f21799,f25189,f21783,f21830])).
fof(f25189,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3040,f3044,f3046,f3043,f3045,f18371,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16891,f16890,f16887,f16885,f16731,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f3549,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3472,f3474,f3477,f3479,f3481,f3482,f3487,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f15401,f15413,f15711,f15714,f20328,f1618,f3419,f3434,f3435,f3437,f3439,f3440,f3447,f3449,f3451,f3452,f3516,f15718,f15709,f15704,f15411,f14966,f14957,f14952,f10107,f10097,f10091,f5985,f20403,f20404,f20405,f20406,f21675,f21690,f21747,f21780,f21781,f21794,f21817,f21764,f21429,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23215,f23210,f23135,f23318,f23320,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23837,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23529,f23530,f23531,f23532,f23533,f23761,f23847,f23848,f23851,f23852,f23563,f23565,f23567,f23568,f23575,f23576,f23577,f23578,f23858,f23734,f23729,f23728,f23867,f23645,f23877,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24403,f24404,f24406,f24409,f24410,f24444,f24412,f24424,f24425,f24427,f24527,f24528,f24530,f24533,f24534,f24578,f24536,f24550,f24551,f24553,f24556,f24557,f24637,f24638,f24639,f24640,f24641,f24845,f24667,f24668,f24678,f24679,f24680,f24682,f24683,f24684,f24686,f24687,f24833,f24691,f24692,f24693,f24896,f24897,f24696,f24702,f24703,f24705,f24707,f24708,f24715,f24716,f24717,f24718,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24740,f24742,f24743,f24832,f24750,f24751,f24752,f24753,f24904,f24905,f24906,f24907,f24908,f24909,f24910,f24911,f24912,f24913,f24914,f24915,f24916,f24917,f24918,f24919,f24920,f24921,f24922,f24923,f24924,f24926,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f23035,f22061,f21801,f21947,f21799])).
fof(f25183,plain,(
  ( ! [X14] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3040,f3044,f3046,f3043,f3045,f18371,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16891,f16890,f16887,f16885,f16731,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f3549,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3472,f3474,f3477,f3479,f3481,f3482,f3487,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f15401,f15413,f15711,f15714,f20328,f1618,f3419,f3434,f3435,f3437,f3439,f3440,f3447,f3449,f3451,f3452,f3516,f15718,f15709,f15704,f15411,f14966,f14957,f14952,f10107,f10097,f10091,f5985,f20403,f20404,f20405,f20406,f21675,f21690,f21747,f21780,f21781,f21794,f21817,f21764,f21429,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23215,f23210,f23135,f23318,f23320,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23837,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23529,f23530,f23531,f23532,f23533,f23761,f23847,f23848,f23851,f23852,f23563,f23565,f23567,f23568,f23575,f23576,f23577,f23578,f23858,f23734,f23729,f23728,f23867,f23645,f23877,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24403,f24404,f24406,f24409,f24410,f24444,f24412,f24424,f24425,f24427,f24527,f24528,f24530,f24533,f24534,f24578,f24536,f24550,f24551,f24553,f24556,f24557,f24637,f24638,f24639,f24640,f24641,f24845,f24667,f24668,f24678,f24679,f24680,f24682,f24683,f24684,f24686,f24687,f24833,f24691,f24692,f24693,f24896,f24897,f24696,f24702,f24703,f24705,f24707,f24708,f24715,f24716,f24717,f24718,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24740,f24742,f24743,f24832,f24750,f24751,f24752,f24753,f24904,f24905,f24906,f24907,f24908,f24909,f24910,f24911,f24912,f24913,f24914,f24915,f24916,f24917,f24918,f24919,f24920,f24921,f24922,f24923,f24924,f24926,f25069,f25077,f25080,f25082,f24990,f25182])).
fof(f25182,plain,(
  ( ! [X14] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(subsumption_resolution,[],[f24671,f3338])).
fof(f24671,plain,(
  ( ! [X14] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X14),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14)))) )),
  inference(superposition,[],[f1618,f3238])).
fof(f24990,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) )),
  inference(duplicate_literal_removal,[],[f24966])).
fof(f24966,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f3638,f242])).
fof(f25077,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(subsumption_resolution,[],[f25048,f424])).
fof(f25048,plain,(
  ( ! [X2] : (p(s(bool,'F_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f3547,f241])).
fof(f25069,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f25068,f286])).
fof(f25068,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f25067,f286])).
fof(f25067,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))))) )),
  inference(forward_demodulation,[],[f25066,f286])).
fof(f25066,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))))) )),
  inference(forward_demodulation,[],[f25043,f286])).
fof(f25043,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))))) )),
  inference(superposition,[],[f3547,f286])).
fof(f24904,plain,(
  ( ! [X10] : (s(bool,'F_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10)))) )),
  inference(subsumption_resolution,[],[f24763,f233])).
fof(f24763,plain,(
  ( ! [X10] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10)))) )),
  inference(superposition,[],[f255,f3238])).
fof(f24750,plain,(
  ( ! [X64,X65,X63] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X63))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X64),s('type.rat.rat',X65))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X65),s('type.rat.rat',X64))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X63),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X63)))) )),
  inference(superposition,[],[f3031,f3238])).
fof(f24743,plain,(
  ( ! [X50,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X51))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X51))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50)))) )),
  inference(superposition,[],[f1246,f3238])).
fof(f24742,plain,(
  ( ! [X48,X49] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X48))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X49))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X49))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X48)))) )),
  inference(superposition,[],[f1245,f3238])).
fof(f24738,plain,(
  ( ! [X41,X40] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X41))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X40))))) | s('type.integer.int',X41) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X40)))) )),
  inference(superposition,[],[f293,f3238])).
fof(f24732,plain,(
  ( ! [X28,X29,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))))) | s(bool,X29) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X27),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27)))) )),
  inference(superposition,[],[f2304,f3238])).
fof(f24729,plain,(
  ( ! [X24,X23,X22] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X23))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))))))) | s('type.integer.int',X23) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22)))) )),
  inference(superposition,[],[f1629,f3238])).
fof(f24728,plain,(
  ( ! [X21,X19,X20] : (s('type.integer.int',X20) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19)))) )),
  inference(superposition,[],[f1627,f3238])).
fof(f24726,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X16))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X16))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15)))) )),
  inference(superposition,[],[f1618,f3238])).
fof(f24723,plain,(
  ( ! [X6,X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X8),s('type.rat.rat',X7)))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) )),
  inference(superposition,[],[f292,f3238])).
fof(f24722,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4)))) )),
  inference(superposition,[],[f263,f3238])).
fof(f24721,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) )),
  inference(superposition,[],[f261,f3238])).
fof(f24720,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) )),
  inference(superposition,[],[f242,f3238])).
fof(f24705,plain,(
  ( ! [X83,X84] : (s('type.integer.int',X84) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X84))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X83))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X83),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X83)))) )),
  inference(superposition,[],[f294,f3238])).
fof(f24833,plain,(
  ( ! [X54,X53] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X54),s('type.rat.rat',X53)))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X53),s('type.rat.rat',X54)))))) )),
  inference(trivial_inequality_removal,[],[f24690])).
fof(f24690,plain,(
  ( ! [X54,X53] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X54),s('type.rat.rat',X53)))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X53),s('type.rat.rat',X54))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X53),s('type.rat.rat',X54)))))) )),
  inference(superposition,[],[f292,f3238])).
fof(f24682,plain,(
  ( ! [X37,X38,X36] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X36))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X38),s('type.rat.rat',X37))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X36),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36)))) )),
  inference(superposition,[],[f3030,f3238])).
fof(f24680,plain,(
  ( ! [X33,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X32))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X32)))) )),
  inference(superposition,[],[f2991,f3238])).
fof(f24679,plain,(
  ( ! [X30,X31] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X31))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X31))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30)))) )),
  inference(superposition,[],[f2987,f3238])).
fof(f24668,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X7) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) )),
  inference(superposition,[],[f1246,f3238])).
fof(f24845,plain,(
  ( ! [X2] : (p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) )),
  inference(trivial_inequality_removal,[],[f24665])).
fof(f24665,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) )),
  inference(superposition,[],[f261,f3238])).
fof(f24641,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13)))) )),
  inference(superposition,[],[f3238,f1617])).
fof(f24640,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s(bool,X10) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f3238,f2306])).
fof(f24638,plain,(
  ( ! [X4,X2,X5,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s(bool,X5) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f3238,f2305])).
fof(f24637,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) )),
  inference(superposition,[],[f3238,f3238])).
fof(f24553,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17)))) )),
  inference(superposition,[],[f3179,f1617])).
fof(f24551,plain,(
  ( ! [X10,X8,X7,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10)))) )),
  inference(superposition,[],[f3179,f1617])).
fof(f24550,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))) )),
  inference(superposition,[],[f3179,f242])).
fof(f24530,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X14),s('type.rat.rat',X13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12)))) )),
  inference(superposition,[],[f3179,f1617])).
fof(f24427,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17)))) )),
  inference(superposition,[],[f3033,f1617])).
fof(f24424,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))) )),
  inference(superposition,[],[f3033,f242])).
fof(f24322,plain,(
  ( ! [X61,X66,X64,X62,X60,X65,X63] : (s(fun(X60,bool),X61) = s(fun(X60,bool),X62) | s(bool,X63) = s(bool,g(s(X60,sK14(X61,X62,bool,X60)))) | s(bool,'T_0') = s(bool,X63) | s(bool,X64) = s(bool,X65) | s(bool,X65) = s(bool,f(s(X60,sK14(X61,X62,bool,X60)))) | s(bool,X64) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(trivial_inequality_removal,[],[f24314])).
fof(f24314,plain,(
  ( ! [X61,X66,X64,X62,X60,X65,X63] : (s(bool,'T_0') != s(bool,'T_0') | s(fun(X60,bool),X61) = s(fun(X60,bool),X62) | s(bool,X63) = s(bool,g(s(X60,sK14(X61,X62,bool,X60)))) | s(bool,'T_0') = s(bool,X63) | s(bool,X64) = s(bool,X65) | s(bool,X65) = s(bool,f(s(X60,sK14(X61,X62,bool,X60)))) | s(bool,X64) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f1997,f1799])).
fof(f24324,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s(fun(X4,bool),X5) = s(fun(X4,bool),X6) | s(bool,X7) = s(bool,g(s(X4,sK14(X5,X6,bool,X4)))) | s(bool,'T_0') = s(bool,X7) | s(bool,X8) = s(bool,f(s(X4,sK14(X5,X6,bool,X4)))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(trivial_inequality_removal,[],[f24304])).
fof(f24304,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s(bool,'T_0') != s(bool,'T_0') | s(fun(X4,bool),X5) = s(fun(X4,bool),X6) | s(bool,X7) = s(bool,g(s(X4,sK14(X5,X6,bool,X4)))) | s(bool,'T_0') = s(bool,X7) | s(bool,X8) = s(bool,f(s(X4,sK14(X5,X6,bool,X4)))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f1997,f608])).
fof(f24231,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,g(s(X0,sK14(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,X3) = s(bool,f(s(X0,sK14(X1,X2,bool,X0)))) | s(bool,X3) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(condensation,[],[f24230])).
fof(f24230,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,g(s(X0,sK14(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,X3) = s(bool,f(s(X0,sK14(X1,X2,bool,X0)))) | s(bool,'T_0') = s(bool,X4) | s(bool,X3) = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(condensation,[],[f24229])).
fof(f24229,plain,(
  ( ! [X47,X52,X50,X48,X46,X51,X49] : (s(fun(X46,bool),X47) = s(fun(X46,bool),X48) | s(bool,'T_0') = s(bool,X50) | s(bool,'T_0') = s(bool,g(s(X46,sK14(X47,X48,bool,X46)))) | s(bool,X51) = s(bool,f(s(X46,sK14(X47,X48,bool,X46)))) | s(bool,'T_0') = s(bool,X49) | s(bool,X51) = s(bool,X52) | s(bool,'T_0') = s(bool,X52)) )),
  inference(subsumption_resolution,[],[f24176,f608])).
fof(f24176,plain,(
  ( ! [X47,X52,X50,X48,X46,X51,X49] : (s(bool,X49) != s(bool,X50) | s(fun(X46,bool),X47) = s(fun(X46,bool),X48) | s(bool,'T_0') = s(bool,X50) | s(bool,'T_0') = s(bool,g(s(X46,sK14(X47,X48,bool,X46)))) | s(bool,X51) = s(bool,f(s(X46,sK14(X47,X48,bool,X46)))) | s(bool,'T_0') = s(bool,X49) | s(bool,X51) = s(bool,X52) | s(bool,'T_0') = s(bool,X52)) )),
  inference(superposition,[],[f1876,f1799])).
fof(f24218,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,g(s(X0,sK14(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,f(s(X0,sK14(X1,X2,bool,X0))))) )),
  inference(condensation,[],[f24217])).
fof(f24217,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,X3) | s(bool,'T_0') = s(bool,g(s(X0,sK14(X1,X2,bool,X0)))) | s(bool,'T_0') = s(bool,f(s(X0,sK14(X1,X2,bool,X0))))) )),
  inference(subsumption_resolution,[],[f24167,f241])).
fof(f24167,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,X3) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,X3) | s(bool,'T_0') = s(bool,g(s(X0,sK14(X1,X2,bool,X0)))) | s(bool,'T_0') = s(bool,f(s(X0,sK14(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f1876,f241])).
fof(f23645,plain,(
  ( ! [X368,X370,X367,X369,X371] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X370),s('type.rat.rat',X371))) != s(bool,f(s(X367,sK14(X368,X369,bool,X367)))) | s(fun(X367,bool),X368) = s(fun(X367,bool),X369) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X371),s('type.rat.rat',X370))))) | s(bool,'T_0') = s(bool,g(s(X367,sK14(X368,X369,bool,X367))))) )),
  inference(superposition,[],[f334,f2305])).
fof(f23867,plain,(
  ( ! [X323,X324] : (s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X323),s('type.rat.rat',X324))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X324),s('type.rat.rat',X323)))))) )),
  inference(subsumption_resolution,[],[f23635,f465])).
fof(f23635,plain,(
  ( ! [X323,X324] : (s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X323),s('type.rat.rat',X324))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X324),s('type.rat.rat',X323))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) )),
  inference(superposition,[],[f465,f2305])).
fof(f23734,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,sK14(X0,X1,X2,bool)) | s(X2,f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))))) != s(X2,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X3)))))) )),
  inference(condensation,[],[f23733])).
fof(f23733,plain,(
  ( ! [X196,X194,X192,X197,X195,X193] : (s(X195,f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X193),s('type.rat.rat',X194))))) != s(X195,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X193),s('type.rat.rat',X194))))) | s(fun(bool,X195),X196) = s(fun(bool,X195),X197) | s(bool,'T_0') = s(bool,X192) | s(bool,'T_0') = s(bool,sK14(X196,X197,X195,bool)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X194),s('type.rat.rat',X193)))))) )),
  inference(duplicate_literal_removal,[],[f23622])).
fof(f23622,plain,(
  ( ! [X196,X194,X192,X197,X195,X193] : (s(X195,f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X193),s('type.rat.rat',X194))))) != s(X195,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X193),s('type.rat.rat',X194))))) | s(fun(bool,X195),X196) = s(fun(bool,X195),X197) | s(bool,'T_0') = s(bool,X192) | s(bool,'T_0') = s(bool,sK14(X196,X197,X195,bool)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X194),s('type.rat.rat',X193))))) | s(bool,'T_0') = s(bool,X192)) )),
  inference(superposition,[],[f1875,f2305])).
fof(f23851,plain,(
  ( ! [X103,X107,X105,X106,X104] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X104),s('type.rat.rat',X103))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X106),s('type.rat.rat',X105))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X105),s('type.rat.rat',X106))))) | s(bool,X107) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X104),s('type.rat.rat',X103))) | s(bool,'T_0') = s(bool,X107)) )),
  inference(forward_demodulation,[],[f23557,f286])).
fof(f23557,plain,(
  ( ! [X103,X107,X105,X106,X104] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X105),s('type.rat.rat',X106))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X106),s('type.rat.rat',X105))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X103),s('type.rat.rat',X104))))))) | s(bool,X107) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X104),s('type.rat.rat',X103))) | s(bool,'T_0') = s(bool,X107)) )),
  inference(superposition,[],[f3030,f2305])).
fof(f23848,plain,(
  ( ! [X94,X92,X93,X91] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X93))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X92),s('type.rat.rat',X91))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X93))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X94) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X92),s('type.rat.rat',X91))) | s(bool,'T_0') = s(bool,X94)) )),
  inference(forward_demodulation,[],[f23554,f286])).
fof(f23554,plain,(
  ( ! [X94,X92,X93,X91] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X93))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X93))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X91),s('type.rat.rat',X92))))))) | s(bool,X94) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X92),s('type.rat.rat',X91))) | s(bool,'T_0') = s(bool,X94)) )),
  inference(superposition,[],[f2987,f2305])).
fof(f23761,plain,(
  ( ! [X33,X34,X32] : (p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,X34) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X33),s('type.rat.rat',X32))) | s(bool,'T_0') = s(bool,X34)) )),
  inference(trivial_inequality_removal,[],[f23540])).
fof(f23540,plain,(
  ( ! [X33,X34,X32] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,X34) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X33),s('type.rat.rat',X32))) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f261,f2305])).
fof(f23531,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X12) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X11),s('type.rat.rat',X10))))) | s(bool,X13) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X11),s('type.rat.rat',X10))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f3031,f2305])).
fof(f23530,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X6))))) | s(bool,X9) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat',X6))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f3030,f2305])).
fof(f23506,plain,(
  ( ! [X54,X52,X55,X53,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))) | s(bool,X54) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X54) | s(bool,X55) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X52),s('type.rat.rat',X51))) | s(bool,'T_0') = s(bool,X55)) )),
  inference(superposition,[],[f2304,f2305])).
fof(f23502,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s('type.integer.int',X37) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X35),s('type.rat.rat',X36))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X37))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X39) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X36),s('type.rat.rat',X35))) | s(bool,'T_0') = s(bool,X39)) )),
  inference(superposition,[],[f1627,f2305])).
fof(f23836,plain,(
  ( ! [X30,X28,X29,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X29))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X29))))) | s(bool,X30) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))) | s(bool,'T_0') = s(bool,X30)) )),
  inference(forward_demodulation,[],[f23500,f1445])).
fof(f23500,plain,(
  ( ! [X30,X28,X29,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X29))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X29))))) | s(bool,X30) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))) | s(bool,'T_0') = s(bool,X30)) )),
  inference(superposition,[],[f1618,f2305])).
fof(f23497,plain,(
  ( ! [X14,X12,X15,X13,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X14),s('type.rat.rat',X15))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X15),s('type.rat.rat',X14)))) | s(bool,X16) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X13),s('type.rat.rat',X12))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f292,f2305])).
fof(f23835,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,X11) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(forward_demodulation,[],[f23496,f1445])).
fof(f23496,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,X11) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f263,f2305])).
fof(f23495,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,X7) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f261,f2305])).
fof(f23494,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X3) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f242,f2305])).
fof(f23420,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))) | s(bool,X18) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X16))) | s(bool,'T_0') = s(bool,X18) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19)))) )),
  inference(superposition,[],[f2305,f1617])).
fof(f23419,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X11),s('type.rat.rat',X12))))) | s(bool,X13) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X12),s('type.rat.rat',X11))) | s(bool,'T_0') = s(bool,X13) | s(bool,X14) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f2305,f2306])).
fof(f23417,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))))) | s(bool,X4) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))) | s(bool,'T_0') = s(bool,X4) | s(bool,X5) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f2305,f2305])).
fof(f23191,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X0) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(equality_factoring,[],[f2304])).
fof(f23056,plain,(
  ( ! [X47,X50,X48,X49] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X47))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X48),s('type.rat.rat',X49))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X49),s('type.rat.rat',X48))))) | s(bool,X50) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X50)) )),
  inference(superposition,[],[f3031,f2304])).
fof(f23051,plain,(
  ( ! [X35,X36,X34] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X36) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X34),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X36)) )),
  inference(superposition,[],[f1246,f2304])).
fof(f23050,plain,(
  ( ! [X33,X31,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X31))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X32))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X32))))))) | s(bool,X33) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1245,f2304])).
fof(f23048,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X26))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X27) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X27)) )),
  inference(superposition,[],[f293,f2304])).
fof(f23043,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X14))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))))) | s('type.integer.int',X14) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X16) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X13),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f1629,f2304])).
fof(f23042,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.integer.int',X10) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X10))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X12) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f1627,f2304])).
fof(f23041,plain,(
  ( ! [X6,X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))) | s(bool,X8) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f1618,f2304])).
fof(f23040,plain,(
  ( ! [X4,X5,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,X5) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f263,f2304])).
fof(f23240,plain,(
  ( ! [X123,X124,X122] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X122))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X123))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X123))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X123))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X124) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X122),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X124)) )),
  inference(trivial_inequality_removal,[],[f23028])).
fof(f23028,plain,(
  ( ! [X123,X124,X122] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X122))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X123))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X123))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X123))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X124) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X122),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X124)) )),
  inference(superposition,[],[f1627,f2304])).
fof(f23299,plain,(
  ( ! [X90,X88,X91,X89] : (s('type.integer.int',X90) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X88),s('type.rat.rat',X89))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X90))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,X91) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X88),s('type.rat.rat',X89))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X91)) )),
  inference(forward_demodulation,[],[f23014,f1445])).
fof(f23014,plain,(
  ( ! [X90,X88,X91,X89] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X90))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int',X90) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X89),s('type.rat.rat',X88))))))) | s(bool,X91) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X88),s('type.rat.rat',X89))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X91)) )),
  inference(superposition,[],[f3036,f2304])).
fof(f22942,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s(bool,X6) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X6) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f2304,f242])).
fof(f22941,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s(bool,X2) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X2) | s(bool,X3) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f2304,f2304])).
fof(f22939,plain,(
  ( ! [X10,X8,X7,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))))) | s(bool,X9) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X9) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10)))) )),
  inference(superposition,[],[f2304,f1617])).
fof(f22938,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))))) | s(bool,X5) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X5) | s(bool,X6) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f2304,f2306])).
fof(f21747,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14)))))) )),
  inference(superposition,[],[f3036,f1618])).
fof(f21675,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s(bool,X4) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1618,f2306])).
fof(f5985,plain,(
  ( ! [X14,X15,X13] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15)))) )),
  inference(superposition,[],[f1618,f1617])).
fof(f10107,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8)))))) )),
  inference(superposition,[],[f3186,f1618])).
fof(f14952,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X14),s('type.rat.rat',X13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12)))))) )),
  inference(superposition,[],[f3031,f1618])).
fof(f14966,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X14),s('type.rat.rat',X13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12)))))) )),
  inference(superposition,[],[f3031,f1618])).
fof(f15718,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12)))))) )),
  inference(superposition,[],[f3193,f1618])).
fof(f3516,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(forward_demodulation,[],[f3404,f240])).
fof(f3404,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(superposition,[],[f1618,f1618])).
fof(f1618,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(superposition,[],[f240,f242])).
fof(f20328,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(duplicate_literal_removal,[],[f20327])).
fof(f20327,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(condensation,[],[f20326])).
fof(f20326,plain,(
  ( ! [X10,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9)))))) )),
  inference(subsumption_resolution,[],[f5551,f2992])).
fof(f5551,plain,(
  ( ! [X10,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9)))))) )),
  inference(superposition,[],[f1629,f1618])).
fof(f10119,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X18))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) )),
  inference(superposition,[],[f3186,f1618])).
fof(f3568,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4)))))) )),
  inference(forward_demodulation,[],[f3473,f240])).
fof(f3473,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4)))))) )),
  inference(superposition,[],[f263,f1618])).
fof(f3547,plain,(
  ( ! [X2] : (p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(global_subsumption,[],[f232,f231,f230,f233,f240,f241,f242,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1245,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1445,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1618,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1627,f1629,f1632,f1634,f1636,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2304,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f262,f261,f292,f291,f2305,f264,f263,f1640,f1631,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f2987,f2988,f2989,f2991,f2992,f3001,f2995,f3038,f3039,f3040,f3043,f3044,f3045,f3046,f3025,f3030,f3031,f3033,f3036,f3173,f3174,f3175,f3176,f3190,f3179,f3180,f3193,f3198,f3184,f3186,f3238,f3338,f3339,f3345,f3356,f3374,f3362,f3512,f3516,f3405,f3406,f3546,f3414,f3417])).
fof(f3474,plain,(
  ( ! [X6,X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X8),s('type.rat.rat',X7)))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))) )),
  inference(superposition,[],[f292,f1618])).
fof(f3454,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(superposition,[],[f240,f1618])).
fof(f3445,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))) )),
  inference(superposition,[],[f293,f1618])).
fof(f15734,plain,(
  ( ! [X21,X19,X20] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X21))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X21) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X20)))))) )),
  inference(superposition,[],[f3193,f242])).
fof(f14982,plain,(
  ( ! [X21,X19,X20] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X21))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X21) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X20)))))) )),
  inference(superposition,[],[f3031,f242])).
fof(f14979,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int',X11) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X9)))))) )),
  inference(superposition,[],[f3031,f1617])).
fof(f5844,plain,(
  ( ! [X33,X31,X32] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33)))) )),
  inference(superposition,[],[f1445,f1617])).
fof(f5758,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3)))))) )),
  inference(superposition,[],[f1636,f1445])).
fof(f3025,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))) )),
  inference(superposition,[],[f1445,f242])).
fof(f16594,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))))) ) | $spl108),
  inference(forward_demodulation,[],[f16483,f286])).
fof(f16483,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))) ) | $spl108),
  inference(superposition,[],[f4649,f286])).
fof(f16746,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14)))) )),
  inference(superposition,[],[f3030,f1617])).
fof(f16747,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X17),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17)))))) )),
  inference(superposition,[],[f3030,f242])).
fof(f16911,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X17),s('type.rat.rat',X16))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17)))))) )),
  inference(superposition,[],[f3036,f242])).
fof(f2304,plain,(
  ( ! [X114,X113] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X113))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X114) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X114)) )),
  inference(subsumption_resolution,[],[f1993,f233])).
fof(f1993,plain,(
  ( ! [X114,X113] : (~p(s(bool,'T_0')) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X113))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X114) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X114)) )),
  inference(superposition,[],[f264,f608])).
fof(f3620,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1629,f1445])).
fof(f16490,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl108),
  inference(superposition,[],[f240,f4649])).
fof(f16495,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5)))))) ) | $spl108),
  inference(superposition,[],[f1245,f4649])).
fof(f16504,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25)))))) ) | $spl108),
  inference(superposition,[],[f2987,f4649])).
fof(f16508,plain,(
  ( ! [X33,X34] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X34))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X34) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33)))))) ) | $spl108),
  inference(superposition,[],[f3186,f4649])).
fof(f16510,plain,(
  ( ! [X37,X36] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X37))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X37) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X36))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X36)))))) ) | $spl108),
  inference(superposition,[],[f293,f4649])).
fof(f16514,plain,(
  ( ! [X45,X44] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X44))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X45))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X44)))))) ) | $spl108),
  inference(superposition,[],[f1245,f4649])).
fof(f16515,plain,(
  ( ! [X47,X46] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X47))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X46))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X47))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X46)))))) ) | $spl108),
  inference(superposition,[],[f1246,f4649])).
fof(f16522,plain,(
  ( ! [X61,X59,X60] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X61))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X59))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X61),s('type.rat.rat',X60))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X59)))))) ) | $spl108),
  inference(superposition,[],[f3031,f4649])).
fof(f16523,plain,(
  ( ! [X62,X63] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X63))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X62))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X63))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X62)))))) ) | $spl108),
  inference(superposition,[],[f3186,f4649])).
fof(f16524,plain,(
  ( ! [X66,X64,X65] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X65),s('type.rat.rat',X66))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X64))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X65),s('type.rat.rat',X66))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X64)))))) ) | $spl108),
  inference(superposition,[],[f3193,f4649])).
fof(f16541,plain,(
  ( ! [X30,X31] : (s('type.integer.int',X31) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X31))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30)))))) ) | $spl108),
  inference(superposition,[],[f294,f4649])).
fof(f16552,plain,(
  ( ! [X52,X53] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X52))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X53))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X52)))))) ) | $spl108),
  inference(superposition,[],[f3186,f4649])).
fof(f16553,plain,(
  ( ! [X54,X56,X55] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X54))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X54)))))) ) | $spl108),
  inference(superposition,[],[f3193,f4649])).
fof(f16890,plain,(
  ( ! [X35,X33,X34] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X34),s('type.rat.rat',X35))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X35),s('type.rat.rat',X34))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33)))))) ) | $spl108),
  inference(superposition,[],[f3036,f4649])).
fof(f16891,plain,(
  ( ! [X37,X38,X36] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X36))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X38),s('type.rat.rat',X37))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X36)))))) ) | $spl108),
  inference(superposition,[],[f3036,f4649])).
fof(f18371,plain,(
  ( ! [X19,X18] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18)))))) ) | $spl108),
  inference(superposition,[],[f3173,f4649])).
fof(f3045,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))))),
  inference(backward_demodulation,[],[f3038,f1612])).
fof(f3043,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))))))),
  inference(backward_demodulation,[],[f3038,f1602])).
fof(f3046,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(backward_demodulation,[],[f3038,f1615])).
fof(f3044,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(backward_demodulation,[],[f3038,f1605])).
fof(f3652,plain,(
  ( ! [X14,X13] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X13))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X13)))))) )),
  inference(subsumption_resolution,[],[f3625,f2989])).
fof(f3625,plain,(
  ( ! [X14,X13] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X13))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X13)))))) )),
  inference(superposition,[],[f1629,f1618])).
fof(f2849,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f261,f242])).
fof(f18368,plain,(
  ( ! [X12,X10,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X10))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10)))) )),
  inference(superposition,[],[f3173,f1617])).
fof(f17562,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X0) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(equality_factoring,[],[f2306])).
fof(f17473,plain,(
  ( ! [X383,X385,X384,X386] : (s(bool,f(s(X383,sK14(X384,X385,bool,X383)))) != s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X386),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(fun(X383,bool),X384) = s(fun(X383,bool),X385) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X386))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,g(s(X383,sK14(X384,X385,bool,X383))))) )),
  inference(superposition,[],[f334,f2306])).
fof(f17375,plain,(
  ( ! [X80,X78,X81,X79] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X78))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X79),s('type.rat.rat',X80))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X80),s('type.rat.rat',X79))))) | s(bool,X81) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X78),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X81)) )),
  inference(superposition,[],[f3031,f2306])).
fof(f17368,plain,(
  ( ! [X61,X59,X60] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X60))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X61) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X61)) )),
  inference(superposition,[],[f1246,f2306])).
fof(f17367,plain,(
  ( ! [X57,X58,X56] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X57))))))) | s(bool,X58) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X56),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X58)) )),
  inference(superposition,[],[f1245,f2306])).
fof(f17363,plain,(
  ( ! [X45,X46,X44] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X45))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))))) | s('type.integer.int',X45) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X46) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X46)) )),
  inference(superposition,[],[f293,f2306])).
fof(f17355,plain,(
  ( ! [X28,X26,X27,X25] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X26))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))))))) | s('type.integer.int',X26) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X28) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1629,f2306])).
fof(f17354,plain,(
  ( ! [X24,X23,X21,X22] : (s('type.integer.int',X22) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X22))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X24) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f1627,f2306])).
fof(f17351,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X11),s('type.rat.rat',X10)))) | s(bool,X12) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f292,f2306])).
fof(f17350,plain,(
  ( ! [X6,X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,X8) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f263,f2306])).
fof(f17349,plain,(
  ( ! [X4,X5,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s(bool,X5) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f261,f2306])).
fof(f17348,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X2) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f242,f2306])).
fof(f17333,plain,(
  ( ! [X94,X95,X93] : (s('type.integer.int',X94) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X94))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X93))))) | s(bool,X95) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X93),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X95)) )),
  inference(superposition,[],[f294,f2306])).
fof(f17643,plain,(
  ( ! [X78,X79,X77] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X78),s('type.rat.rat',X77)))) | s(bool,X79) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X77),s('type.rat.rat',X78))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X79)) )),
  inference(trivial_inequality_removal,[],[f17325])).
fof(f17325,plain,(
  ( ! [X78,X79,X77] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X78),s('type.rat.rat',X77)))) | s(bool,X79) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X77),s('type.rat.rat',X78))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X79)) )),
  inference(superposition,[],[f292,f2306])).
fof(f17317,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X49))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X50))))) | s(bool,X52) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X52)) )),
  inference(superposition,[],[f3030,f2306])).
fof(f17315,plain,(
  ( ! [X45,X43,X44] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X43))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X44))))) | s(bool,X45) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X43),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f2991,f2306])).
fof(f17314,plain,(
  ( ! [X41,X42,X40] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X41))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X40))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X41))))))) | s(bool,X42) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X40),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X42)) )),
  inference(superposition,[],[f2987,f2306])).
fof(f17305,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X12) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))) | s(bool,X13) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f1246,f2306])).
fof(f17259,plain,(
  ( ! [X10,X8,X7,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s(bool,X9) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X9) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10)))) )),
  inference(superposition,[],[f2306,f1617])).
fof(f17258,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))) | s(bool,X6) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X6) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4)))))) ) | $spl108),
  inference(superposition,[],[f2306,f4649])).
fof(f17257,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s(bool,X2) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X2) | s(bool,X3) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f2306,f2306])).
fof(f17122,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(X1,f(s(bool,X0))) != s(X1,g(s(bool,X0))) | s(fun(bool,X1),X2) = s(fun(bool,X1),X3) | s(bool,X4) = s(bool,sK14(X2,X3,X1,bool)) | s(bool,'T_0') = s(bool,X4) | s(bool,X5) = s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7) | s(bool,X0) = s(bool,X5)) )),
  inference(superposition,[],[f1996,f1799])).
fof(f16884,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X11),s('type.rat.rat',X10)))))))) )),
  inference(superposition,[],[f3036,f1445])).
fof(f16743,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) )),
  inference(superposition,[],[f3030,f1617])).
fof(f16732,plain,(
  ( ! [X23,X21,X22] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X22),s('type.rat.rat',X23))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X23),s('type.rat.rat',X22))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21)))))) ) | $spl108),
  inference(superposition,[],[f3030,f4649])).
fof(f16729,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X10))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10)))) )),
  inference(superposition,[],[f3030,f1617])).
fof(f16727,plain,(
  ( ! [X4,X2,X5,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X3))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5)))) )),
  inference(superposition,[],[f3030,f1617])).
fof(f16551,plain,(
  ( ! [X50,X51,X49] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X49))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X50))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X49)))))) ) | $spl108),
  inference(superposition,[],[f3031,f4649])).
fof(f16544,plain,(
  ( ! [X37,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X36))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X37))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X36)))))) ) | $spl108),
  inference(superposition,[],[f1246,f4649])).
fof(f16543,plain,(
  ( ! [X35,X34] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X34))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X34)))))) ) | $spl108),
  inference(superposition,[],[f1245,f4649])).
fof(f16539,plain,(
  ( ! [X26,X27] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X27))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))))) | s('type.integer.int',X27) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26)))))) ) | $spl108),
  inference(superposition,[],[f293,f4649])).
fof(f16596,plain,(
  ( ! [X19,X20,X18] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X19))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) | s('type.integer.int',X19) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18)))))) ) | $spl108),
  inference(forward_demodulation,[],[f16533,f240])).
fof(f16533,plain,(
  ( ! [X19,X20,X18] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X19))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))))))) | s('type.integer.int',X19) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18)))))) ) | $spl108),
  inference(superposition,[],[f1629,f4649])).
fof(f16532,plain,(
  ( ! [X17,X15,X16] : (s('type.integer.int',X16) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) ) | $spl108),
  inference(superposition,[],[f1627,f4649])).
fof(f16529,plain,(
  ( ! [X6,X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X8),s('type.rat.rat',X7)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))) ) | $spl108),
  inference(superposition,[],[f292,f4649])).
fof(f16595,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4)))))) ) | $spl108),
  inference(forward_demodulation,[],[f16528,f240])).
fof(f16528,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4)))))) ) | $spl108),
  inference(superposition,[],[f263,f4649])).
fof(f16527,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2)))))) ) | $spl108),
  inference(superposition,[],[f261,f4649])).
fof(f16526,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl108),
  inference(superposition,[],[f242,f4649])).
fof(f16512,plain,(
  ( ! [X41,X40] : (s('type.integer.int',X41) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X41))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X40)))))) ) | $spl108),
  inference(superposition,[],[f294,f4649])).
fof(f16506,plain,(
  ( ! [X30,X29] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X29))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X29)))))) ) | $spl108),
  inference(superposition,[],[f2991,f4649])).
fof(f16505,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X28))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27)))))) ) | $spl108),
  inference(superposition,[],[f2987,f4649])).
fof(f16496,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X8) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7)))))) ) | $spl108),
  inference(superposition,[],[f1246,f4649])).
fof(f16567,plain,(
  ( ! [X3] : (p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3)))))) ) | $spl108),
  inference(trivial_inequality_removal,[],[f16493])).
fof(f16493,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3)))))) ) | $spl108),
  inference(superposition,[],[f261,f4649])).
fof(f16488,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4)))) ) | $spl108),
  inference(superposition,[],[f4649,f1617])).
fof(f16487,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl108),
  inference(superposition,[],[f4649,f4649])).
fof(f15717,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X10),s('type.rat.rat',X11)))))))) )),
  inference(superposition,[],[f3193,f1445])).
fof(f15703,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X10),s('type.rat.rat',X11)))))))) )),
  inference(superposition,[],[f3193,f1445])).
fof(f15702,plain,(
  ( ! [X6,X7,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X7)))))))) )),
  inference(superposition,[],[f3193,f240])).
fof(f15455,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2)))))) )),
  inference(forward_demodulation,[],[f15415,f286])).
fof(f15415,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3)))))))))) )),
  inference(superposition,[],[f2987,f1445])).
fof(f15409,plain,(
  ( ! [X8,X7,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7)))) )),
  inference(superposition,[],[f2987,f1617])).
fof(f15397,plain,(
  ( ! [X8,X7,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7)))) )),
  inference(superposition,[],[f2987,f1617])).
fof(f15395,plain,(
  ( ! [X2,X3,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) )),
  inference(superposition,[],[f2987,f1617])).
fof(f15303,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1)))))) )),
  inference(forward_demodulation,[],[f15282,f286])).
fof(f15282,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2)))))))))) )),
  inference(superposition,[],[f3190,f1445])).
fof(f14977,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X2) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) )),
  inference(superposition,[],[f3031,f1617])).
fof(f14965,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X11),s('type.rat.rat',X10)))))) )),
  inference(superposition,[],[f3031,f1445])).
fof(f14960,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X44),s('type.rat.rat',X43))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45)))) )),
  inference(superposition,[],[f3031,f1617])).
fof(f14955,plain,(
  ( ! [X28,X26,X27,X25] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25)))) )),
  inference(superposition,[],[f3031,f1617])).
fof(f14951,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X9),s('type.rat.rat',X8))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X11),s('type.rat.rat',X10))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X9)))))))) )),
  inference(superposition,[],[f3031,f1445])).
fof(f12463,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X2) = s(bool,X3) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,X2)) )),
  inference(equality_factoring,[],[f1799])).
fof(f14385,plain,(
  ( ! [X2,X0,X1] : (s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0) | s(bool,X0) = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f12456,f608])).
fof(f12456,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0) | s(bool,X0) = s(bool,X2)) )),
  inference(equality_factoring,[],[f1799])).
fof(f11805,plain,(
  ( ! [X736,X732,X734,X737,X733,X735] : (s(bool,'T_0') != s(bool,f(s(X732,sK14(X733,X734,bool,X732)))) | s(fun(X732,bool),X733) = s(fun(X732,bool),X734) | s(bool,X735) = s(bool,X736) | s(bool,X736) = s(bool,g(s(X732,sK14(X733,X734,bool,X732)))) | s(bool,X735) = s(bool,X737) | s(bool,'T_0') = s(bool,X737)) )),
  inference(superposition,[],[f334,f1799])).
fof(f11804,plain,(
  ( ! [X728,X730,X726,X729,X731,X727] : (s(X728,f(s(bool,'T_0'))) != s(X728,g(s(bool,'T_0'))) | s(fun(bool,X728),X726) = s(fun(bool,X728),X727) | s(bool,X729) = s(bool,X730) | s(bool,X730) = s(bool,sK14(X726,X727,X728,bool)) | s(bool,X729) = s(bool,X731) | s(bool,'T_0') = s(bool,X731)) )),
  inference(superposition,[],[f334,f1799])).
fof(f14324,plain,(
  ( ! [X720,X722,X721,X719] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X719))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X720) = s(bool,X721) | s(bool,X721) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X719),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X720) = s(bool,X722) | s(bool,'T_0') = s(bool,X722)) )),
  inference(subsumption_resolution,[],[f11803,f233])).
fof(f11803,plain,(
  ( ! [X720,X722,X721,X719] : (~p(s(bool,'T_0')) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X719))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X720) = s(bool,X721) | s(bool,X721) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X719),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X720) = s(bool,X722) | s(bool,'T_0') = s(bool,X722)) )),
  inference(superposition,[],[f262,f1799])).
fof(f14323,plain,(
  ( ! [X716,X718,X714,X717,X715] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X715),s('type.rat.rat',X714))))) | s(bool,X716) = s(bool,X717) | s(bool,X717) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X714),s('type.rat.rat',X715))) | s(bool,X716) = s(bool,X718) | s(bool,'T_0') = s(bool,X718)) )),
  inference(subsumption_resolution,[],[f11802,f233])).
fof(f11802,plain,(
  ( ! [X716,X718,X714,X717,X715] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X715),s('type.rat.rat',X714))))) | s(bool,X716) = s(bool,X717) | s(bool,X717) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X714),s('type.rat.rat',X715))) | s(bool,X716) = s(bool,X718) | s(bool,'T_0') = s(bool,X718)) )),
  inference(superposition,[],[f291,f1799])).
fof(f14318,plain,(
  ( ! [X212,X210,X208,X213,X211,X209,X207] : (p(s(bool,X208)) | ~sP5(X207,X209,X208) | s(bool,X209) = s(bool,X210) | s(bool,'T_0') = s(bool,X210) | s(bool,X211) = s(bool,X212) | s(bool,X207) = s(bool,X212) | s(bool,X211) = s(bool,X213) | s(bool,'T_0') = s(bool,X213)) )),
  inference(subsumption_resolution,[],[f11671,f233])).
fof(f11671,plain,(
  ( ! [X212,X210,X208,X213,X211,X209,X207] : (~p(s(bool,'T_0')) | p(s(bool,X208)) | ~sP5(X207,X209,X208) | s(bool,X209) = s(bool,X210) | s(bool,'T_0') = s(bool,X210) | s(bool,X211) = s(bool,X212) | s(bool,X207) = s(bool,X212) | s(bool,X211) = s(bool,X213) | s(bool,'T_0') = s(bool,X213)) )),
  inference(superposition,[],[f2289,f1799])).
fof(f14317,plain,(
  ( ! [X144,X142,X140,X143,X141,X139] : (~sP8(X139,X140,X141) | sP9(X139,X140,X141) | s(bool,X142) = s(bool,X143) | s(bool,X139) = s(bool,X143) | s(bool,X142) = s(bool,X144) | s(bool,'T_0') = s(bool,X144)) )),
  inference(subsumption_resolution,[],[f11658,f233])).
fof(f11658,plain,(
  ( ! [X144,X142,X140,X143,X141,X139] : (~p(s(bool,'T_0')) | ~sP8(X139,X140,X141) | sP9(X139,X140,X141) | s(bool,X142) = s(bool,X143) | s(bool,X139) = s(bool,X143) | s(bool,X142) = s(bool,X144) | s(bool,'T_0') = s(bool,X144)) )),
  inference(superposition,[],[f416,f1799])).
fof(f14316,plain,(
  ( ! [X134,X138,X136,X135,X133,X137] : (~sP10(X133,X134,X135) | sP11(X133,X134,X135) | s(bool,X136) = s(bool,X137) | s(bool,X133) = s(bool,X137) | s(bool,X136) = s(bool,X138) | s(bool,'T_0') = s(bool,X138)) )),
  inference(subsumption_resolution,[],[f11657,f233])).
fof(f11657,plain,(
  ( ! [X134,X138,X136,X135,X133,X137] : (~p(s(bool,'T_0')) | ~sP10(X133,X134,X135) | sP11(X133,X134,X135) | s(bool,X136) = s(bool,X137) | s(bool,X133) = s(bool,X137) | s(bool,X136) = s(bool,X138) | s(bool,'T_0') = s(bool,X138)) )),
  inference(superposition,[],[f415,f1799])).
fof(f14315,plain,(
  ( ! [X127,X132,X130,X128,X131,X129] : (~p(s(bool,X128)) | p(s(bool,X129)) | ~sP11(X127,X129,X128) | s(bool,X130) = s(bool,X131) | s(bool,X127) = s(bool,X131) | s(bool,X130) = s(bool,X132) | s(bool,'T_0') = s(bool,X132)) )),
  inference(subsumption_resolution,[],[f11656,f233])).
fof(f11656,plain,(
  ( ! [X127,X132,X130,X128,X131,X129] : (~p(s(bool,'T_0')) | ~p(s(bool,X128)) | p(s(bool,X129)) | ~sP11(X127,X129,X128) | s(bool,X130) = s(bool,X131) | s(bool,X127) = s(bool,X131) | s(bool,X130) = s(bool,X132) | s(bool,'T_0') = s(bool,X132)) )),
  inference(superposition,[],[f412,f1799])).
fof(f14314,plain,(
  ( ! [X125,X123,X121,X126,X124,X122] : (~p(s(bool,X122)) | sP11(X121,X122,X123) | s(bool,X124) = s(bool,X125) | s(bool,X121) = s(bool,X125) | s(bool,X124) = s(bool,X126) | s(bool,'T_0') = s(bool,X126)) )),
  inference(subsumption_resolution,[],[f11655,f233])).
fof(f11655,plain,(
  ( ! [X125,X123,X121,X126,X124,X122] : (~p(s(bool,'T_0')) | ~p(s(bool,X122)) | sP11(X121,X122,X123) | s(bool,X124) = s(bool,X125) | s(bool,X121) = s(bool,X125) | s(bool,X124) = s(bool,X126) | s(bool,'T_0') = s(bool,X126)) )),
  inference(superposition,[],[f411,f1799])).
fof(f14313,plain,(
  ( ! [X118,X116,X120,X119,X117,X115] : (p(s(bool,X116)) | sP11(X115,X117,X116) | s(bool,X118) = s(bool,X119) | s(bool,X115) = s(bool,X119) | s(bool,X118) = s(bool,X120) | s(bool,'T_0') = s(bool,X120)) )),
  inference(subsumption_resolution,[],[f11654,f233])).
fof(f11654,plain,(
  ( ! [X118,X116,X120,X119,X117,X115] : (~p(s(bool,'T_0')) | p(s(bool,X116)) | sP11(X115,X117,X116) | s(bool,X118) = s(bool,X119) | s(bool,X115) = s(bool,X119) | s(bool,X118) = s(bool,X120) | s(bool,'T_0') = s(bool,X120)) )),
  inference(superposition,[],[f410,f1799])).
fof(f14312,plain,(
  ( ! [X111,X109,X114,X112,X110,X113] : (p(s(bool,X110)) | ~p(s(bool,X111)) | ~sP10(X111,X110,X109) | s(bool,X112) = s(bool,X113) | s(bool,X109) = s(bool,X113) | s(bool,X112) = s(bool,X114) | s(bool,'T_0') = s(bool,X114)) )),
  inference(subsumption_resolution,[],[f11653,f233])).
fof(f11653,plain,(
  ( ! [X111,X109,X114,X112,X110,X113] : (~p(s(bool,'T_0')) | p(s(bool,X110)) | ~p(s(bool,X111)) | ~sP10(X111,X110,X109) | s(bool,X112) = s(bool,X113) | s(bool,X109) = s(bool,X113) | s(bool,X112) = s(bool,X114) | s(bool,'T_0') = s(bool,X114)) )),
  inference(superposition,[],[f405,f1799])).
fof(f14311,plain,(
  ( ! [X103,X107,X105,X108,X106,X104] : (p(s(bool,X104)) | p(s(bool,X105)) | ~sP9(X103,X105,X104) | s(bool,X106) = s(bool,X107) | s(bool,X103) = s(bool,X107) | s(bool,X106) = s(bool,X108) | s(bool,'T_0') = s(bool,X108)) )),
  inference(subsumption_resolution,[],[f11652,f233])).
fof(f11652,plain,(
  ( ! [X103,X107,X105,X108,X106,X104] : (~p(s(bool,'T_0')) | p(s(bool,X104)) | p(s(bool,X105)) | ~sP9(X103,X105,X104) | s(bool,X106) = s(bool,X107) | s(bool,X103) = s(bool,X107) | s(bool,X106) = s(bool,X108) | s(bool,'T_0') = s(bool,X108)) )),
  inference(superposition,[],[f395,f1799])).
fof(f14310,plain,(
  ( ! [X101,X99,X97,X102,X100,X98] : (~p(s(bool,X98)) | sP9(X97,X98,X99) | s(bool,X100) = s(bool,X101) | s(bool,X97) = s(bool,X101) | s(bool,X100) = s(bool,X102) | s(bool,'T_0') = s(bool,X102)) )),
  inference(subsumption_resolution,[],[f11651,f233])).
fof(f11651,plain,(
  ( ! [X101,X99,X97,X102,X100,X98] : (~p(s(bool,'T_0')) | ~p(s(bool,X98)) | sP9(X97,X98,X99) | s(bool,X100) = s(bool,X101) | s(bool,X97) = s(bool,X101) | s(bool,X100) = s(bool,X102) | s(bool,'T_0') = s(bool,X102)) )),
  inference(superposition,[],[f394,f1799])).
fof(f14309,plain,(
  ( ! [X94,X92,X95,X93,X91,X96] : (~p(s(bool,X92)) | sP9(X91,X93,X92) | s(bool,X94) = s(bool,X95) | s(bool,X91) = s(bool,X95) | s(bool,X94) = s(bool,X96) | s(bool,'T_0') = s(bool,X96)) )),
  inference(subsumption_resolution,[],[f11650,f233])).
fof(f11650,plain,(
  ( ! [X94,X92,X95,X93,X91,X96] : (~p(s(bool,'T_0')) | ~p(s(bool,X92)) | sP9(X91,X93,X92) | s(bool,X94) = s(bool,X95) | s(bool,X91) = s(bool,X95) | s(bool,X94) = s(bool,X96) | s(bool,'T_0') = s(bool,X96)) )),
  inference(superposition,[],[f393,f1799])).
fof(f14308,plain,(
  ( ! [X90,X88,X87,X85,X89,X86] : (p(s(bool,X86)) | p(s(bool,X87)) | ~sP8(X85,X86,X87) | s(bool,X88) = s(bool,X89) | s(bool,X85) = s(bool,X89) | s(bool,X88) = s(bool,X90) | s(bool,'T_0') = s(bool,X90)) )),
  inference(subsumption_resolution,[],[f11649,f233])).
fof(f11649,plain,(
  ( ! [X90,X88,X87,X85,X89,X86] : (~p(s(bool,'T_0')) | p(s(bool,X86)) | p(s(bool,X87)) | ~sP8(X85,X86,X87) | s(bool,X88) = s(bool,X89) | s(bool,X85) = s(bool,X89) | s(bool,X88) = s(bool,X90) | s(bool,'T_0') = s(bool,X90)) )),
  inference(superposition,[],[f388,f1799])).
fof(f14307,plain,(
  ( ! [X80,X83,X81,X79,X84,X82] : (~p(s(bool,X80)) | p(s(bool,X81)) | ~sP7(X81,X80,X79) | s(bool,X82) = s(bool,X83) | s(bool,X79) = s(bool,X83) | s(bool,X82) = s(bool,X84) | s(bool,'T_0') = s(bool,X84)) )),
  inference(subsumption_resolution,[],[f11648,f233])).
fof(f11648,plain,(
  ( ! [X80,X83,X81,X79,X84,X82] : (~p(s(bool,'T_0')) | ~p(s(bool,X80)) | p(s(bool,X81)) | ~sP7(X81,X80,X79) | s(bool,X82) = s(bool,X83) | s(bool,X79) = s(bool,X83) | s(bool,X82) = s(bool,X84) | s(bool,'T_0') = s(bool,X84)) )),
  inference(superposition,[],[f380,f1799])).
fof(f14306,plain,(
  ( ! [X78,X76,X74,X77,X75,X73] : (~p(s(bool,X74)) | p(s(bool,X75)) | ~sP6(X74,X73,X75) | s(bool,X76) = s(bool,X77) | s(bool,X73) = s(bool,X77) | s(bool,X76) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(subsumption_resolution,[],[f11647,f233])).
fof(f11647,plain,(
  ( ! [X78,X76,X74,X77,X75,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X74)) | p(s(bool,X75)) | ~sP6(X74,X73,X75) | s(bool,X76) = s(bool,X77) | s(bool,X73) = s(bool,X77) | s(bool,X76) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(superposition,[],[f371,f1799])).
fof(f14305,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,X68)) | p(s(bool,X69)) | ~sP3(X68,X67,X69) | s(bool,X70) = s(bool,X71) | s(bool,X67) = s(bool,X71) | s(bool,X70) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(subsumption_resolution,[],[f11646,f233])).
fof(f11646,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,'T_0')) | ~p(s(bool,X68)) | p(s(bool,X69)) | ~sP3(X68,X67,X69) | s(bool,X70) = s(bool,X71) | s(bool,X67) = s(bool,X71) | s(bool,X70) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(superposition,[],[f352,f1799])).
fof(f14304,plain,(
  ( ! [X61,X66,X64,X62,X65,X63] : (~p(s(bool,X62)) | p(s(bool,X63)) | ~sP4(X62,X61,X63) | s(bool,X64) = s(bool,X65) | s(bool,X61) = s(bool,X65) | s(bool,X64) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(subsumption_resolution,[],[f11645,f233])).
fof(f11645,plain,(
  ( ! [X61,X66,X64,X62,X65,X63] : (~p(s(bool,'T_0')) | ~p(s(bool,X62)) | p(s(bool,X63)) | ~sP4(X62,X61,X63) | s(bool,X64) = s(bool,X65) | s(bool,X61) = s(bool,X65) | s(bool,X64) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f348,f1799])).
fof(f14303,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (~p(s(bool,X56)) | p(s(bool,X57)) | ~sP5(X56,X55,X57) | s(bool,X58) = s(bool,X59) | s(bool,X55) = s(bool,X59) | s(bool,X58) = s(bool,X60) | s(bool,'T_0') = s(bool,X60)) )),
  inference(subsumption_resolution,[],[f11644,f233])).
fof(f11644,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,X56)) | p(s(bool,X57)) | ~sP5(X56,X55,X57) | s(bool,X58) = s(bool,X59) | s(bool,X55) = s(bool,X59) | s(bool,X58) = s(bool,X60) | s(bool,'T_0') = s(bool,X60)) )),
  inference(superposition,[],[f344,f1799])).
fof(f14302,plain,(
  ( ! [X54,X52,X50,X53,X51] : (p(s(bool,X51)) | sP1(X51,X50) | s(bool,X52) = s(bool,X53) | s(bool,X50) = s(bool,X53) | s(bool,X52) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(subsumption_resolution,[],[f11643,f233])).
fof(f11643,plain,(
  ( ! [X54,X52,X50,X53,X51] : (~p(s(bool,'T_0')) | p(s(bool,X51)) | sP1(X51,X50) | s(bool,X52) = s(bool,X53) | s(bool,X50) = s(bool,X53) | s(bool,X52) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f321,f1799])).
fof(f14301,plain,(
  ( ! [X47,X45,X48,X46,X49] : (p(s(bool,X46)) | sP1(X45,X46) | s(bool,X47) = s(bool,X48) | s(bool,X45) = s(bool,X48) | s(bool,X47) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) )),
  inference(subsumption_resolution,[],[f11642,f233])).
fof(f11642,plain,(
  ( ! [X47,X45,X48,X46,X49] : (~p(s(bool,'T_0')) | p(s(bool,X46)) | sP1(X45,X46) | s(bool,X47) = s(bool,X48) | s(bool,X45) = s(bool,X48) | s(bool,X47) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) )),
  inference(superposition,[],[f318,f1799])).
fof(f14300,plain,(
  ( ! [X43,X41,X44,X42,X40] : (sP0(X40,X41) | s(bool,X42) = s(bool,X43) | s(bool,X40) = s(bool,X43) | s(bool,X42) = s(bool,X44) | s(bool,'T_0') = s(bool,X44)) )),
  inference(subsumption_resolution,[],[f11641,f233])).
fof(f11641,plain,(
  ( ! [X43,X41,X44,X42,X40] : (~p(s(bool,'T_0')) | sP0(X40,X41) | s(bool,X42) = s(bool,X43) | s(bool,X40) = s(bool,X43) | s(bool,X42) = s(bool,X44) | s(bool,'T_0') = s(bool,X44)) )),
  inference(superposition,[],[f303,f1799])).
fof(f14299,plain,(
  ( ! [X39,X37,X35,X38,X36] : (sP0(X36,X35) | s(bool,X37) = s(bool,X38) | s(bool,X35) = s(bool,X38) | s(bool,X37) = s(bool,X39) | s(bool,'T_0') = s(bool,X39)) )),
  inference(subsumption_resolution,[],[f11640,f233])).
fof(f11640,plain,(
  ( ! [X39,X37,X35,X38,X36] : (~p(s(bool,'T_0')) | sP0(X36,X35) | s(bool,X37) = s(bool,X38) | s(bool,X35) = s(bool,X38) | s(bool,X37) = s(bool,X39) | s(bool,'T_0') = s(bool,X39)) )),
  inference(superposition,[],[f302,f1799])).
fof(f14298,plain,(
  ( ! [X30,X33,X31,X34,X32] : (~p(s(bool,X31)) | s(bool,X30) = s(bool,X31) | s(bool,X32) = s(bool,X33) | s(bool,X30) = s(bool,X33) | s(bool,X32) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(subsumption_resolution,[],[f11639,f233])).
fof(f11639,plain,(
  ( ! [X30,X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X31)) | s(bool,X30) = s(bool,X31) | s(bool,X32) = s(bool,X33) | s(bool,X30) = s(bool,X33) | s(bool,X32) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f290,f1799])).
fof(f14297,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,X12) | s(bool,X13) = s(bool,X14) | s(bool,X12) = s(bool,X14) | s(bool,X13) = s(bool,X15) | s(bool,'T_0') = s(bool,X15)) )),
  inference(subsumption_resolution,[],[f11635,f233])).
fof(f11635,plain,(
  ( ! [X14,X12,X15,X13] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,X12) | s(bool,X13) = s(bool,X14) | s(bool,X12) = s(bool,X14) | s(bool,X13) = s(bool,X15) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f255,f1799])).
fof(f11548,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s(bool,X4) != s(bool,X5) | p(s(bool,X5)) | s(bool,X6) = s(bool,X7) | s(bool,X4) = s(bool,X7) | s(bool,X6) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f251,f1799])).
fof(f11545,plain,(
  ( ! [X753,X749,X751,X752,X754,X750] : (s(bool,X752) != s(bool,f(s(X749,sK14(X750,X751,bool,X749)))) | s(fun(X749,bool),X750) = s(fun(X749,bool),X751) | s(bool,X752) = s(bool,X753) | s(bool,'T_0') = s(bool,g(s(X749,sK14(X750,X751,bool,X749)))) | s(bool,X753) = s(bool,X754) | s(bool,'T_0') = s(bool,X754)) )),
  inference(superposition,[],[f334,f1799])).
fof(f14262,plain,(
  ( ! [X445,X447,X443,X444,X446] : (s(bool,X443) != s(bool,X444) | s(bool,X444) = s(bool,X445) | s(bool,'T_0') = s(bool,X445) | s(bool,X443) = s(bool,X446) | s(bool,X446) = s(bool,X447) | s(bool,'T_0') = s(bool,X447)) )),
  inference(subsumption_resolution,[],[f11463,f464])).
fof(f11463,plain,(
  ( ! [X445,X447,X443,X444,X446] : (s(bool,X443) != s(bool,X444) | s(bool,X444) = s(bool,X445) | s(bool,'T_0') = s(bool,X445) | s(bool,X443) = s(bool,X446) | s(bool,'T_0') = s(bool,'F_0') | s(bool,X446) = s(bool,X447) | s(bool,'T_0') = s(bool,X447)) )),
  inference(superposition,[],[f2283,f1799])).
fof(f14261,plain,(
  ( ! [X441,X438,X440,X442,X437,X439] : (s(X438,f(s(bool,X437))) != s(X438,g(s(bool,X437))) | s(fun(bool,X438),X439) = s(fun(bool,X438),X440) | s(bool,'T_0') = s(bool,sK14(X439,X440,X438,bool)) | s(bool,X437) = s(bool,X441) | s(bool,X441) = s(bool,X442) | s(bool,'T_0') = s(bool,X442)) )),
  inference(subsumption_resolution,[],[f11462,f464])).
fof(f11462,plain,(
  ( ! [X441,X438,X440,X442,X437,X439] : (s(X438,f(s(bool,X437))) != s(X438,g(s(bool,X437))) | s(fun(bool,X438),X439) = s(fun(bool,X438),X440) | s(bool,'T_0') = s(bool,sK14(X439,X440,X438,bool)) | s(bool,X437) = s(bool,X441) | s(bool,'T_0') = s(bool,'F_0') | s(bool,X441) = s(bool,X442) | s(bool,'T_0') = s(bool,X442)) )),
  inference(superposition,[],[f1546,f1799])).
fof(f14260,plain,(
  ( ! [X436,X434,X435] : (s(bool,'T_0') != s(bool,X434) | s(bool,X434) = s(bool,X435) | s(bool,X435) = s(bool,X436) | s(bool,'T_0') = s(bool,X436)) )),
  inference(subsumption_resolution,[],[f11461,f464])).
fof(f11461,plain,(
  ( ! [X436,X434,X435] : (s(bool,'T_0') != s(bool,X434) | s(bool,X434) = s(bool,X435) | s(bool,'T_0') = s(bool,'F_0') | s(bool,X435) = s(bool,X436) | s(bool,'T_0') = s(bool,X436)) )),
  inference(superposition,[],[f464,f1799])).
fof(f11366,plain,(
  ( ! [X757,X753,X755,X756,X758,X754] : (s(bool,X756) != s(bool,f(s(X753,sK14(X754,X755,bool,X753)))) | s(fun(X753,bool),X754) = s(fun(X753,bool),X755) | s(bool,X757) = s(bool,g(s(X753,sK14(X754,X755,bool,X753)))) | s(bool,'T_0') = s(bool,X756) | s(bool,X757) = s(bool,X758) | s(bool,'T_0') = s(bool,X758)) )),
  inference(superposition,[],[f334,f1799])).
fof(f11365,plain,(
  ( ! [X749,X751,X747,X752,X748,X750] : (s(X749,f(s(bool,X750))) != s(X749,g(s(bool,X750))) | s(fun(bool,X749),X747) = s(fun(bool,X749),X748) | s(bool,X751) = s(bool,sK14(X747,X748,X749,bool)) | s(bool,'T_0') = s(bool,X750) | s(bool,X751) = s(bool,X752) | s(bool,'T_0') = s(bool,X752)) )),
  inference(superposition,[],[f334,f1799])).
fof(f14214,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X0)) | s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(condensation,[],[f14213])).
fof(f14213,plain,(
  ( ! [X24,X23,X21,X22,X20] : (p(s(bool,X21)) | p(s(bool,X22)) | s(bool,X20) = s(bool,X22) | s(bool,X20) = s(bool,X23) | s(bool,X23) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(subsumption_resolution,[],[f11194,f251])).
fof(f11194,plain,(
  ( ! [X24,X23,X21,X22,X20] : (p(s(bool,X21)) | p(s(bool,X22)) | s(bool,X20) = s(bool,X22) | s(bool,X20) = s(bool,X23) | s(bool,'T_0') = s(bool,X21) | s(bool,X23) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f287,f1799])).
fof(f11008,plain,(
  ( ! [X757,X753,X755,X756,X758,X754] : (s(bool,X756) != s(bool,f(s(X753,sK14(X754,X755,bool,X753)))) | s(fun(X753,bool),X754) = s(fun(X753,bool),X755) | s(bool,X756) = s(bool,X757) | s(bool,'T_0') = s(bool,X757) | s(bool,X758) = s(bool,g(s(X753,sK14(X754,X755,bool,X753)))) | s(bool,'T_0') = s(bool,X758)) )),
  inference(superposition,[],[f334,f1799])).
fof(f11007,plain,(
  ( ! [X749,X751,X747,X752,X748,X750] : (s(X749,f(s(bool,X750))) != s(X749,g(s(bool,X750))) | s(fun(bool,X749),X747) = s(fun(bool,X749),X748) | s(bool,X750) = s(bool,X751) | s(bool,'T_0') = s(bool,X751) | s(bool,X752) = s(bool,sK14(X747,X748,X749,bool)) | s(bool,'T_0') = s(bool,X752)) )),
  inference(superposition,[],[f334,f1799])).
fof(f10711,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X2) = s(bool,X3) | s(bool,X1) = s(bool,X3) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4) | s(bool,X5) = s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7) | s(bool,X0) = s(bool,X5)) )),
  inference(superposition,[],[f1799,f1799])).
fof(f13706,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) )),
  inference(condensation,[],[f13705])).
fof(f13705,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,X29) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) | s(bool,X29) = s(bool,X30) | s(bool,'T_0') = s(bool,X28) | s(bool,X30) = s(bool,X31) | s(bool,'T_0') = s(bool,X31)) )),
  inference(duplicate_literal_removal,[],[f10690])).
fof(f10690,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,X29) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) | s(bool,X29) = s(bool,X30) | s(bool,'T_0') = s(bool,X28) | s(bool,X30) = s(bool,X31) | s(bool,'T_0') = s(bool,X31) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1799,f1018])).
fof(f13708,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) )),
  inference(condensation,[],[f13707])).
fof(f13707,plain,(
  ( ! [X26,X24,X27,X25] : (s(bool,X25) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | s(bool,X25) = s(bool,X26) | s(bool,'T_0') = s(bool,X24) | s(bool,X26) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(duplicate_literal_removal,[],[f10689])).
fof(f10689,plain,(
  ( ! [X26,X24,X27,X25] : (s(bool,X25) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | s(bool,X25) = s(bool,X26) | s(bool,'T_0') = s(bool,X24) | s(bool,X26) = s(bool,X27) | s(bool,'T_0') = s(bool,X27) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f1799,f1017])).
fof(f13722,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) )),
  inference(condensation,[],[f13721])).
fof(f13721,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X0) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(duplicate_literal_removal,[],[f10684])).
fof(f10684,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X0) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1799,f241])).
fof(f13890,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2) | s(bool,X3) = s(bool,X4) | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,X5) | s(bool,X1) = s(bool,X3)) )),
  inference(condensation,[],[f13889])).
fof(f13889,plain,(
  ( ! [X94,X92,X90,X88,X93,X91,X89] : (s(bool,X88) = s(bool,X89) | s(bool,X89) = s(bool,X90) | s(bool,'T_0') = s(bool,X90) | s(bool,'T_0') = s(bool,X91) | s(bool,X92) = s(bool,X93) | s(bool,X93) = s(bool,X94) | s(bool,'T_0') = s(bool,X94) | s(bool,X88) = s(bool,X92)) )),
  inference(duplicate_literal_removal,[],[f10618])).
fof(f10618,plain,(
  ( ! [X94,X92,X90,X88,X93,X91,X89] : (s(bool,X88) = s(bool,X89) | s(bool,X89) = s(bool,X90) | s(bool,'T_0') = s(bool,X90) | s(bool,'T_0') = s(bool,X91) | s(bool,'T_0') = s(bool,X91) | s(bool,X92) = s(bool,X93) | s(bool,X93) = s(bool,X94) | s(bool,'T_0') = s(bool,X94) | s(bool,X88) = s(bool,X92)) )),
  inference(superposition,[],[f1799,f1799])).
fof(f10106,plain,(
  ( ! [X6,X7,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7)))))))))) )),
  inference(superposition,[],[f3186,f1445])).
fof(f10105,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4)))))))))) )),
  inference(superposition,[],[f3186,f240])).
fof(f10090,plain,(
  ( ! [X6,X7,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6)))))))) )),
  inference(superposition,[],[f3186,f1445])).
fof(f10089,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4)))))))))) )),
  inference(superposition,[],[f3186,f240])).
fof(f10122,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) )),
  inference(forward_demodulation,[],[f10121,f3038])).
fof(f10121,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))))))) )),
  inference(forward_demodulation,[],[f10087,f3038])).
fof(f10087,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))))))) )),
  inference(superposition,[],[f3186,f3038])).
fof(f9994,plain,(
  ( ! [X8,X7,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7)))) )),
  inference(superposition,[],[f2991,f1617])).
fof(f9992,plain,(
  ( ! [X2,X3,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) )),
  inference(superposition,[],[f2991,f1617])).
fof(f9776,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2)))))) )),
  inference(forward_demodulation,[],[f9768,f1470])).
fof(f9768,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3)))))) )),
  inference(superposition,[],[f3001,f1445])).
fof(f9774,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2)))))))) )),
  inference(forward_demodulation,[],[f9752,f1470])).
fof(f9752,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3)))))))) )),
  inference(superposition,[],[f3001,f1445])).
fof(f9021,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) = s(bool,X1) | p(s(bool,X2)) | ~sP5('T_0',X0,X2) | s(bool,'T_0') = s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f9020])).
fof(f9020,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) = s(bool,X1) | p(s(bool,X2)) | ~sP5('T_0',X0,X2) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) )),
  inference(condensation,[],[f9019])).
fof(f9019,plain,(
  ( ! [X35,X33,X36,X34,X32] : (p(s(bool,X33)) | ~sP5('T_0',X34,X33) | s(bool,X34) = s(bool,X35) | s(bool,'T_0') = s(bool,X35) | s(bool,X32) = s(bool,X36) | s(bool,'T_0') = s(bool,X36)) )),
  inference(subsumption_resolution,[],[f8997,f668])).
fof(f8997,plain,(
  ( ! [X35,X33,X36,X34,X32] : (~p(s(bool,X32)) | p(s(bool,X33)) | ~sP5('T_0',X34,X33) | s(bool,X34) = s(bool,X35) | s(bool,'T_0') = s(bool,X35) | s(bool,X32) = s(bool,X36) | s(bool,'T_0') = s(bool,X36)) )),
  inference(superposition,[],[f2289,f608])).
fof(f9016,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,X5)) | ~sP5(X4,X6,X5) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7) | s(bool,X4) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) )),
  inference(subsumption_resolution,[],[f8991,f233])).
fof(f8991,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,'T_0')) | p(s(bool,X5)) | ~sP5(X4,X6,X5) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7) | s(bool,X4) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f2289,f608])).
fof(f8700,plain,(
  ( ! [X45,X46] : (s(bool,X45) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) | s(bool,X45) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(subsumption_resolution,[],[f8682,f424])).
fof(f8682,plain,(
  ( ! [X45,X46] : (p(s(bool,'F_0')) | s(bool,X45) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) | s(bool,X45) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(superposition,[],[f1924,f475])).
fof(f8698,plain,(
  ( ! [X41,X40] : (s(bool,X40) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | s(bool,X40) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(subsumption_resolution,[],[f8680,f424])).
fof(f8680,plain,(
  ( ! [X41,X40] : (p(s(bool,'F_0')) | s(bool,X40) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | s(bool,X40) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(superposition,[],[f1924,f474])).
fof(f6657,plain,(
  ( ! [X45,X46] : (sP1('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),X45) | s(bool,X45) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(subsumption_resolution,[],[f6647,f424])).
fof(f6647,plain,(
  ( ! [X45,X46] : (p(s(bool,'F_0')) | sP1('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),X45) | s(bool,X45) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(superposition,[],[f2288,f475])).
fof(f6655,plain,(
  ( ! [X41,X40] : (sP1('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),X40) | s(bool,X40) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(subsumption_resolution,[],[f6645,f424])).
fof(f6645,plain,(
  ( ! [X41,X40] : (p(s(bool,'F_0')) | sP1('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),X40) | s(bool,X40) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(superposition,[],[f2288,f474])).
fof(f6649,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f6633,f424])).
fof(f6633,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | sP1(X0,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f2288,f241])).
fof(f6554,plain,(
  ( ! [X45,X46] : (sP1(X45,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) | s(bool,X45) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(subsumption_resolution,[],[f6543,f424])).
fof(f6543,plain,(
  ( ! [X45,X46] : (p(s(bool,'F_0')) | sP1(X45,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) | s(bool,X45) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(superposition,[],[f2287,f475])).
fof(f6552,plain,(
  ( ! [X41,X40] : (sP1(X40,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | s(bool,X40) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(subsumption_resolution,[],[f6541,f424])).
fof(f6541,plain,(
  ( ! [X41,X40] : (p(s(bool,'F_0')) | sP1(X40,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | s(bool,X40) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(superposition,[],[f2287,f474])).
fof(f6545,plain,(
  ( ! [X2,X0,X1] : (sP1(X1,X0) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f6529,f424])).
fof(f6529,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | sP1(X1,X0) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f2287,f241])).
fof(f6407,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f2283,f241])).
fof(f6046,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1)))) )),
  inference(duplicate_literal_removal,[],[f6045])).
fof(f6045,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1)))) )),
  inference(condensation,[],[f6044])).
fof(f6044,plain,(
  ( ! [X54,X52,X53] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X54))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X54))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X54))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52)))) )),
  inference(duplicate_literal_removal,[],[f5947])).
fof(f5947,plain,(
  ( ! [X54,X52,X53] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X54))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X54))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X54))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52)))) )),
  inference(superposition,[],[f1629,f1617])).
fof(f5945,plain,(
  ( ! [X47,X48,X46] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X47))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X47))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X48))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X48))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X48))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46)))) )),
  inference(superposition,[],[f1246,f1617])).
fof(f5944,plain,(
  ( ! [X45,X43,X44] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X44))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43)))) )),
  inference(superposition,[],[f1245,f1617])).
fof(f5940,plain,(
  ( ! [X33,X31,X32] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X32))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X31))))) | s('type.integer.int',X32) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X31))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X31)))) )),
  inference(superposition,[],[f293,f1617])).
fof(f5937,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X24))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))))))) | s('type.integer.int',X24) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23)))) )),
  inference(superposition,[],[f1629,f1617])).
fof(f5936,plain,(
  ( ! [X21,X19,X22,X20] : (s('type.integer.int',X20) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19)))) )),
  inference(superposition,[],[f1627,f1617])).
fof(f5930,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) )),
  inference(superposition,[],[f242,f1617])).
fof(f5921,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int',X51) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X51))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50)))) )),
  inference(superposition,[],[f294,f1617])).
fof(f5905,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X12) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11)))) )),
  inference(superposition,[],[f1246,f1617])).
fof(f5860,plain,(
  ( ! [X64,X65,X63] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X64))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X63))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X65))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X64))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X63))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X63))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X64)))) )),
  inference(superposition,[],[f1246,f1617])).
fof(f5859,plain,(
  ( ! [X61,X62,X60] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X62))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61)))) )),
  inference(superposition,[],[f1245,f1617])).
fof(f5837,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X13))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) | s('type.integer.int',X13) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12)))) )),
  inference(superposition,[],[f1246,f1617])).
fof(f5836,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X10))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))))) | s('type.integer.int',X10) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9)))) )),
  inference(superposition,[],[f1245,f1617])).
fof(f5819,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) )),
  inference(superposition,[],[f1617,f1617])).
fof(f1245,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))))) )),
  inference(superposition,[],[f293,f240])).
fof(f2987,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))))) )),
  inference(superposition,[],[f1246,f240])).
fof(f2991,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1)))))) )),
  inference(superposition,[],[f1246,f240])).
fof(f2992,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1246,f242])).
fof(f3030,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))) )),
  inference(superposition,[],[f1246,f1445])).
fof(f3033,plain,(
  ( ! [X10,X11,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X10),s('type.rat.rat',X9))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X9),s('type.rat.rat',X10)))))))) )),
  inference(superposition,[],[f1246,f1445])).
fof(f3173,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1)))))))) )),
  inference(superposition,[],[f1245,f240])).
fof(f3174,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3)))))))) )),
  inference(superposition,[],[f1245,f1445])).
fof(f3179,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3)))))) )),
  inference(superposition,[],[f1245,f1445])).
fof(f3180,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1245,f242])).
fof(f3190,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9)))))))) )),
  inference(forward_demodulation,[],[f3189,f1470])).
fof(f3189,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9)))))))) )),
  inference(forward_demodulation,[],[f3177,f3038])).
fof(f3177,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9)))))))) )),
  inference(superposition,[],[f1245,f1470])).
fof(f3405,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1618,f242])).
fof(f3406,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(superposition,[],[f1618,f1618])).
fof(f3633,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int',X1) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(superposition,[],[f1629,f1618])).
fof(f3647,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(duplicate_literal_removal,[],[f3646])).
fof(f3646,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(condensation,[],[f3645])).
fof(f3645,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7)))))) )),
  inference(subsumption_resolution,[],[f3622,f3374])).
fof(f3622,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7)))))) )),
  inference(superposition,[],[f1629,f1618])).
fof(f3924,plain,(
  ( ! [X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(global_subsumption,[],[f232,f231,f230,f233,f240,f241,f242,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1245,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1445,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1618,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1627,f1629,f1632,f1634,f1636,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2304,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f262,f261,f292,f291,f2305,f264,f263,f1640,f1631,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f2987,f2988,f2989,f2991,f2992,f3001,f2995,f3038,f3039,f3040,f3043,f3044,f3045,f3046,f3025,f3030,f3031,f3033,f3036,f3173,f3174,f3175,f3176,f3190,f3179,f3180,f3193,f3198,f3184,f3186,f3238,f3338,f3339,f3345,f3356,f3374,f3362,f3512,f3516,f3405,f3406,f3546,f3414,f3417,f3547,f3419,f3549,f3551,f3555,f3560,f3563,f3566,f3434,f3435,f3437,f3439,f3440,f3443,f3444,f3445,f3447,f3449,f3451,f3452,f3453,f3454,f3487,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3472,f3568,f3474,f3477,f3479,f3481,f3482,f3586,f3585,f3584,f3590,f3589,f3588,f3605,f3602,f3599,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3647,f3654,f3628,f3638,f3656,f3632,f3633,f3660,f3659,f3658,f3664,f3663,f3662,f2849,f3923])).
fof(f3186,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))))))) )),
  inference(superposition,[],[f1245,f240])).
fof(f3036,plain,(
  ( ! [X19,X20,X18] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X18))))))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X18),s('type.rat.rat',X19)))))))) )),
  inference(superposition,[],[f293,f1445])).
fof(f3193,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))) )),
  inference(forward_demodulation,[],[f3192,f286])).
fof(f3192,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))) )),
  inference(forward_demodulation,[],[f3191,f286])).
fof(f3191,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))))))) )),
  inference(forward_demodulation,[],[f3181,f1445])).
fof(f3181,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))))))) )),
  inference(superposition,[],[f1245,f286])).
fof(f3362,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1632,f1445])).
fof(f3039,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))))),
  inference(backward_demodulation,[],[f3038,f1536])).
fof(f1640,plain,(
  ( ! [X1] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(trivial_inequality_removal,[],[f1619])).
fof(f1619,plain,(
  ( ! [X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f263,f242])).
fof(f4026,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1567,f295])).
fof(f4027,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1567,f259])).
fof(f4028,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f1567,f295])).
fof(f4005,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(unit_resulting_resolution,[],[f1565,f295])).
fof(f4006,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(unit_resulting_resolution,[],[f1565,f259])).
fof(f4007,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f1565,f295])).
fof(f3418,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3)))))) )),
  inference(superposition,[],[f263,f1618])).
fof(f3923,plain,(
  ( ! [X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(subsumption_resolution,[],[f3402,f3338])).
fof(f3402,plain,(
  ( ! [X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1618,f242])).
fof(f3662,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1563,f295])).
fof(f3663,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1563,f259])).
fof(f3664,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f1563,f295])).
fof(f3658,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))))),
  inference(unit_resulting_resolution,[],[f1561,f295])).
fof(f3659,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))))),
  inference(unit_resulting_resolution,[],[f1561,f259])).
fof(f3660,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f1561,f295])).
fof(f3632,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int',X1) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1629,f242])).
fof(f3638,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) )),
  inference(duplicate_literal_removal,[],[f3637])).
fof(f3637,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) )),
  inference(condensation,[],[f3636])).
fof(f3636,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(duplicate_literal_removal,[],[f3629])).
fof(f3629,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1629,f242])).
fof(f3616,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1557,f295])).
fof(f3617,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1557,f259])).
fof(f3618,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f1557,f295])).
fof(f3612,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(unit_resulting_resolution,[],[f1555,f295])).
fof(f3613,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(unit_resulting_resolution,[],[f1555,f259])).
fof(f3614,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f1555,f295])).
fof(f3600,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1627,f242])).
fof(f3602,plain,(
  ( ! [X12,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(trivial_inequality_removal,[],[f3596])).
fof(f3596,plain,(
  ( ! [X12,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1627,f242])).
fof(f3588,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1553,f295])).
fof(f3589,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1553,f259])).
fof(f3590,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f1553,f295])).
fof(f3584,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))))))),
  inference(unit_resulting_resolution,[],[f1551,f295])).
fof(f3585,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))))))),
  inference(unit_resulting_resolution,[],[f1551,f259])).
fof(f3586,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f1551,f295])).
fof(f3417,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2)))))) )),
  inference(superposition,[],[f261,f1618])).
fof(f3345,plain,(
  ( ! [X8] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f293,f3038])).
fof(f3339,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f293,f3038])).
fof(f3338,plain,(
  ( ! [X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1)))))) )),
  inference(superposition,[],[f1246,f3038])).
fof(f3238,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) )),
  inference(subsumption_resolution,[],[f3227,f424])).
fof(f3227,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f1640,f241])).
fof(f3198,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f3197,f1470])).
fof(f3197,plain,(
  ( ! [X4] : (s('type.integer.int',X4) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4)))) )),
  inference(forward_demodulation,[],[f3196,f1500])).
fof(f3196,plain,(
  ( ! [X4,X3] : (s('type.integer.int',X4) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X3))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4)))) )),
  inference(forward_demodulation,[],[f3195,f286])).
fof(f3195,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X3)))))))))) )),
  inference(forward_demodulation,[],[f3194,f3038])).
fof(f3194,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X3)))))))))) )),
  inference(forward_demodulation,[],[f3182,f1470])).
fof(f3182,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X3)))))))))) )),
  inference(superposition,[],[f1245,f1500])).
fof(f3031,plain,(
  ( ! [X4,X5,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X3))))) | s('type.integer.int',X5) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X4)))))) )),
  inference(superposition,[],[f293,f1445])).
fof(f3001,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))) | s('type.integer.int',X4) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f3000,f1500])).
fof(f3000,plain,(
  ( ! [X4,X3] : (s('type.integer.int',X4) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4)))) )),
  inference(forward_demodulation,[],[f2999,f286])).
fof(f2999,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))) | s('type.integer.int',X4) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X3)))))))) )),
  inference(forward_demodulation,[],[f2994,f1470])).
fof(f2994,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int',X4) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X3)))))))) )),
  inference(superposition,[],[f1246,f1500])).
fof(f255,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f155])).
fof(f475,plain,(
  s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))),
  inference(unit_resulting_resolution,[],[f232,f256])).
fof(f1546,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK14(X0,X1,X2,bool))) )),
  inference(forward_demodulation,[],[f1540,f475])).
fof(f1540,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s(X2,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK14(X0,X1,X2,bool))) )),
  inference(superposition,[],[f334,f1018])).
fof(f1548,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(X0,sK14(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK14(X1,X2,bool,X0))))) )),
  inference(forward_demodulation,[],[f1543,f475])).
fof(f1543,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) != s(bool,f(s(X0,sK14(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK14(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f334,f1018])).
fof(f1997,plain,(
  ( ! [X127,X130,X128,X129] : (s(bool,'T_0') != s(bool,f(s(X127,sK14(X128,X129,bool,X127)))) | s(fun(X127,bool),X128) = s(fun(X127,bool),X129) | s(bool,X130) = s(bool,g(s(X127,sK14(X128,X129,bool,X127)))) | s(bool,'T_0') = s(bool,X130)) )),
  inference(superposition,[],[f334,f608])).
fof(f1876,plain,(
  ( ! [X134,X132,X133,X131] : (s(bool,X134) != s(bool,f(s(X131,sK14(X132,X133,bool,X131)))) | s(fun(X131,bool),X132) = s(fun(X131,bool),X133) | s(bool,'T_0') = s(bool,X134) | s(bool,'T_0') = s(bool,g(s(X131,sK14(X132,X133,bool,X131))))) )),
  inference(superposition,[],[f334,f608])).
fof(f1996,plain,(
  ( ! [X125,X123,X126,X124] : (s(X125,f(s(bool,'T_0'))) != s(X125,g(s(bool,'T_0'))) | s(fun(bool,X125),X123) = s(fun(bool,X125),X124) | s(bool,X126) = s(bool,sK14(X123,X124,X125,bool)) | s(bool,'T_0') = s(bool,X126)) )),
  inference(superposition,[],[f334,f608])).
fof(f2306,plain,(
  ( ! [X118,X119] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X118))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X119) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X118),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X119)) )),
  inference(subsumption_resolution,[],[f1995,f233])).
fof(f1995,plain,(
  ( ! [X118,X119] : (~p(s(bool,'T_0')) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X118))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X119) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X118),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X119)) )),
  inference(superposition,[],[f262,f608])).
fof(f2303,plain,(
  ( ! [X90,X88,X87,X89] : (sP9(X87,X88,X89) | ~sP8(X87,X88,X89) | s(bool,X87) = s(bool,X90) | s(bool,'T_0') = s(bool,X90)) )),
  inference(subsumption_resolution,[],[f1978,f233])).
fof(f1978,plain,(
  ( ! [X90,X88,X87,X89] : (~p(s(bool,'T_0')) | ~sP8(X87,X88,X89) | sP9(X87,X88,X89) | s(bool,X87) = s(bool,X90) | s(bool,'T_0') = s(bool,X90)) )),
  inference(superposition,[],[f416,f608])).
fof(f2302,plain,(
  ( ! [X85,X83,X86,X84] : (sP11(X83,X84,X85) | ~sP10(X83,X84,X85) | s(bool,X83) = s(bool,X86) | s(bool,'T_0') = s(bool,X86)) )),
  inference(subsumption_resolution,[],[f1977,f233])).
fof(f1977,plain,(
  ( ! [X85,X83,X86,X84] : (~p(s(bool,'T_0')) | ~sP10(X83,X84,X85) | sP11(X83,X84,X85) | s(bool,X83) = s(bool,X86) | s(bool,'T_0') = s(bool,X86)) )),
  inference(superposition,[],[f415,f608])).
fof(f2301,plain,(
  ( ! [X80,X81,X79,X82] : (~sP11(X79,X81,X80) | p(s(bool,X81)) | ~p(s(bool,X80)) | s(bool,X79) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(subsumption_resolution,[],[f1976,f233])).
fof(f1976,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,'T_0')) | ~p(s(bool,X80)) | p(s(bool,X81)) | ~sP11(X79,X81,X80) | s(bool,X79) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(superposition,[],[f412,f608])).
fof(f2300,plain,(
  ( ! [X78,X76,X77,X75] : (sP11(X75,X76,X77) | ~p(s(bool,X76)) | s(bool,X75) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(subsumption_resolution,[],[f1975,f233])).
fof(f1975,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,'T_0')) | ~p(s(bool,X76)) | sP11(X75,X76,X77) | s(bool,X75) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(superposition,[],[f411,f608])).
fof(f2299,plain,(
  ( ! [X74,X72,X71,X73] : (sP11(X71,X73,X72) | p(s(bool,X72)) | s(bool,X71) = s(bool,X74) | s(bool,'T_0') = s(bool,X74)) )),
  inference(subsumption_resolution,[],[f1974,f233])).
fof(f1974,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,'T_0')) | p(s(bool,X72)) | sP11(X71,X73,X72) | s(bool,X71) = s(bool,X74) | s(bool,'T_0') = s(bool,X74)) )),
  inference(superposition,[],[f410,f608])).
fof(f2298,plain,(
  ( ! [X70,X68,X69,X67] : (~sP10(X69,X68,X67) | ~p(s(bool,X69)) | p(s(bool,X68)) | s(bool,X67) = s(bool,X70) | s(bool,'T_0') = s(bool,X70)) )),
  inference(subsumption_resolution,[],[f1973,f233])).
fof(f1973,plain,(
  ( ! [X70,X68,X69,X67] : (~p(s(bool,'T_0')) | p(s(bool,X68)) | ~p(s(bool,X69)) | ~sP10(X69,X68,X67) | s(bool,X67) = s(bool,X70) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f405,f608])).
fof(f2297,plain,(
  ( ! [X66,X64,X65,X63] : (~sP9(X63,X65,X64) | p(s(bool,X65)) | p(s(bool,X64)) | s(bool,X63) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(subsumption_resolution,[],[f1972,f233])).
fof(f1972,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,'T_0')) | p(s(bool,X64)) | p(s(bool,X65)) | ~sP9(X63,X65,X64) | s(bool,X63) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f395,f608])).
fof(f2296,plain,(
  ( ! [X61,X59,X62,X60] : (sP9(X59,X60,X61) | ~p(s(bool,X60)) | s(bool,X59) = s(bool,X62) | s(bool,'T_0') = s(bool,X62)) )),
  inference(subsumption_resolution,[],[f1971,f233])).
fof(f1971,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'T_0')) | ~p(s(bool,X60)) | sP9(X59,X60,X61) | s(bool,X59) = s(bool,X62) | s(bool,'T_0') = s(bool,X62)) )),
  inference(superposition,[],[f394,f608])).
fof(f2295,plain,(
  ( ! [X57,X58,X56,X55] : (sP9(X55,X57,X56) | ~p(s(bool,X56)) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) )),
  inference(subsumption_resolution,[],[f1970,f233])).
fof(f1970,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,X56)) | sP9(X55,X57,X56) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) )),
  inference(superposition,[],[f393,f608])).
fof(f2294,plain,(
  ( ! [X54,X52,X53,X51] : (~sP8(X51,X52,X53) | p(s(bool,X53)) | p(s(bool,X52)) | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(subsumption_resolution,[],[f1969,f233])).
fof(f1969,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,'T_0')) | p(s(bool,X52)) | p(s(bool,X53)) | ~sP8(X51,X52,X53) | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f388,f608])).
fof(f2293,plain,(
  ( ! [X47,X50,X48,X49] : (~sP7(X49,X48,X47) | p(s(bool,X49)) | ~p(s(bool,X48)) | s(bool,X47) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(subsumption_resolution,[],[f1968,f233])).
fof(f1968,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X48)) | p(s(bool,X49)) | ~sP7(X49,X48,X47) | s(bool,X47) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(superposition,[],[f380,f608])).
fof(f2292,plain,(
  ( ! [X45,X43,X46,X44] : (~sP6(X44,X43,X45) | p(s(bool,X45)) | ~p(s(bool,X44)) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(subsumption_resolution,[],[f1967,f233])).
fof(f1967,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X44)) | p(s(bool,X45)) | ~sP6(X44,X43,X45) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(superposition,[],[f371,f608])).
fof(f2291,plain,(
  ( ! [X39,X41,X42,X40] : (~sP3(X40,X39,X41) | p(s(bool,X41)) | ~p(s(bool,X40)) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(subsumption_resolution,[],[f1966,f233])).
fof(f1966,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X40)) | p(s(bool,X41)) | ~sP3(X40,X39,X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(superposition,[],[f352,f608])).
fof(f2290,plain,(
  ( ! [X37,X35,X38,X36] : (~sP4(X36,X35,X37) | p(s(bool,X37)) | ~p(s(bool,X36)) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(subsumption_resolution,[],[f1965,f233])).
fof(f1965,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X36)) | p(s(bool,X37)) | ~sP4(X36,X35,X37) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f348,f608])).
fof(f2289,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X32)) | p(s(bool,X33)) | ~sP5(X32,X31,X33) | s(bool,X31) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(subsumption_resolution,[],[f1964,f233])).
fof(f1964,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X32)) | p(s(bool,X33)) | ~sP5(X32,X31,X33) | s(bool,X31) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f344,f608])).
fof(f2288,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X29)) | sP1(X29,X28) | s(bool,X28) = s(bool,X30) | s(bool,'T_0') = s(bool,X30)) )),
  inference(subsumption_resolution,[],[f1963,f233])).
fof(f1963,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X29)) | sP1(X29,X28) | s(bool,X28) = s(bool,X30) | s(bool,'T_0') = s(bool,X30)) )),
  inference(superposition,[],[f321,f608])).
fof(f2287,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X26)) | sP1(X25,X26) | s(bool,X25) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(subsumption_resolution,[],[f1962,f233])).
fof(f1962,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X26)) | sP1(X25,X26) | s(bool,X25) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(superposition,[],[f318,f608])).
fof(f2286,plain,(
  ( ! [X24,X23,X22] : (sP0(X22,X23) | s(bool,X22) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(subsumption_resolution,[],[f1961,f233])).
fof(f1961,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0(X22,X23) | s(bool,X22) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f303,f608])).
fof(f2285,plain,(
  ( ! [X21,X19,X20] : (sP0(X20,X19) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(subsumption_resolution,[],[f1960,f233])).
fof(f1960,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | sP0(X20,X19) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f302,f608])).
fof(f2284,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,X17)) | s(bool,X16) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(subsumption_resolution,[],[f1959,f233])).
fof(f1959,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X17)) | s(bool,X16) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f290,f608])).
fof(f2283,plain,(
  ( ! [X6,X7] : (s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f1955,f233])).
fof(f1955,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f255,f608])).
fof(f1924,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X3)) | s(bool,X2) != s(bool,X3) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f251,f608])).
fof(f1875,plain,(
  ( ! [X127,X130,X128,X129] : (s(X129,f(s(bool,X130))) != s(X129,g(s(bool,X130))) | s(fun(bool,X129),X127) = s(fun(bool,X129),X128) | s(bool,'T_0') = s(bool,X130) | s(bool,'T_0') = s(bool,sK14(X127,X128,X129,bool))) )),
  inference(superposition,[],[f334,f608])).
fof(f1799,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f608,f608])).
fof(f1754,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))))),
  inference(forward_demodulation,[],[f1753,f1445])).
fof(f1753,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))))),
  inference(unit_resulting_resolution,[],[f1691,f293])).
fof(f1750,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))))),
  inference(forward_demodulation,[],[f1749,f1445])).
fof(f1749,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))))),
  inference(unit_resulting_resolution,[],[f1671,f293])).
fof(f1720,plain,(
  ( ! [X26,X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X26))) | s('type.rat.rat',X26) = s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X25),s('type.rat.rat',X25)))) )),
  inference(superposition,[],[f295,f1500])).
fof(f1719,plain,(
  ( ! [X24,X23] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.rat.rat',X24) = s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X23),s('type.rat.rat',X23)))) )),
  inference(superposition,[],[f295,f1500])).
fof(f1704,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f286,f1500])).
fof(f1688,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))),
  inference(unit_resulting_resolution,[],[f1585,f294])).
fof(f1691,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(forward_demodulation,[],[f1690,f1445])).
fof(f1690,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))),
  inference(forward_demodulation,[],[f1689,f1445])).
fof(f1689,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))))))),
  inference(unit_resulting_resolution,[],[f1585,f293])).
fof(f1682,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int',X2) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f293,f1470])).
fof(f1668,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))),
  inference(unit_resulting_resolution,[],[f1579,f294])).
fof(f1671,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(forward_demodulation,[],[f1670,f1445])).
fof(f1670,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))))),
  inference(forward_demodulation,[],[f1669,f1445])).
fof(f1669,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))))),
  inference(unit_resulting_resolution,[],[f1579,f293])).
fof(f1632,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X3))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int',X3) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f293,f242])).
fof(f1617,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1)))) )),
  inference(superposition,[],[f242,f242])).
fof(f1615,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(unit_resulting_resolution,[],[f1566,f293])).
fof(f1612,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))))),
  inference(unit_resulting_resolution,[],[f1562,f293])).
fof(f1605,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(unit_resulting_resolution,[],[f1556,f293])).
fof(f1602,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))))))),
  inference(unit_resulting_resolution,[],[f1552,f293])).
fof(f1585,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))))),
  inference(forward_demodulation,[],[f1584,f1445])).
fof(f1584,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))))),
  inference(unit_resulting_resolution,[],[f1539,f293])).
fof(f1579,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))),
  inference(forward_demodulation,[],[f1578,f1445])).
fof(f1578,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))))))),
  inference(unit_resulting_resolution,[],[f1536,f293])).
fof(f1565,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1493,f295])).
fof(f1566,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1493,f259])).
fof(f1567,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f1493,f295])).
fof(f1561,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))),
  inference(unit_resulting_resolution,[],[f1491,f295])).
fof(f1562,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))),
  inference(unit_resulting_resolution,[],[f1491,f259])).
fof(f1563,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f1491,f295])).
fof(f1555,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1490,f295])).
fof(f1556,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1490,f259])).
fof(f1557,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f1490,f295])).
fof(f1551,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))))),
  inference(unit_resulting_resolution,[],[f1488,f295])).
fof(f1552,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))))),
  inference(unit_resulting_resolution,[],[f1488,f259])).
fof(f1553,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f1488,f295])).
fof(f1539,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))),
  inference(unit_resulting_resolution,[],[f1492,f293])).
fof(f1536,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))))),
  inference(unit_resulting_resolution,[],[f1489,f293])).
fof(f1501,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))))) )),
  inference(forward_demodulation,[],[f1495,f286])).
fof(f1495,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))))) )),
  inference(unit_resulting_resolution,[],[f286,f296])).
fof(f1491,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))),
  inference(unit_resulting_resolution,[],[f1483,f295])).
fof(f1492,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))),
  inference(unit_resulting_resolution,[],[f1483,f259])).
fof(f1493,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f1483,f295])).
fof(f1488,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))),
  inference(unit_resulting_resolution,[],[f1482,f295])).
fof(f1489,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))),
  inference(unit_resulting_resolution,[],[f1482,f259])).
fof(f1490,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f1482,f295])).
fof(f1482,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))),
  inference(unit_resulting_resolution,[],[f231,f295])).
fof(f1483,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))),
  inference(unit_resulting_resolution,[],[f231,f295])).
fof(f1411,plain,(
  ~sP2('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'F_0')),
  inference(unit_resulting_resolution,[],[f732,f440,f429,f424,f347])).
fof(f1412,plain,(
  ~sP2('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'F_0')),
  inference(unit_resulting_resolution,[],[f733,f441,f429,f424,f347])).
fof(f1355,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'F_0','F_0')),
  inference(unit_resulting_resolution,[],[f734,f437,f432,f424,f346])).
fof(f1356,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'F_0','F_0')),
  inference(unit_resulting_resolution,[],[f735,f438,f432,f424,f346])).
fof(f1359,plain,(
  sP5('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f439,f429,f442,f424,f346])).
fof(f1293,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'F_0','T_0')),
  inference(unit_resulting_resolution,[],[f439,f433,f444,f233,f345])).
fof(f1294,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0')),
  inference(unit_resulting_resolution,[],[f440,f433,f444,f233,f345])).
fof(f1295,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0')),
  inference(unit_resulting_resolution,[],[f441,f433,f444,f233,f345])).
fof(f1296,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'F_0','T_0')),
  inference(unit_resulting_resolution,[],[f439,f434,f444,f233,f345])).
fof(f1297,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0')),
  inference(unit_resulting_resolution,[],[f440,f434,f444,f233,f345])).
fof(f1298,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0')),
  inference(unit_resulting_resolution,[],[f441,f434,f444,f233,f345])).
fof(f1303,plain,(
  ~sP4('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))),
  inference(unit_resulting_resolution,[],[f714,f440,f442,f233,f345])).
fof(f1304,plain,(
  ~sP4('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))),
  inference(unit_resulting_resolution,[],[f716,f441,f442,f233,f345])).
fof(f1307,plain,(
  sP5('T_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f435,f428,f443,f233,f345])).
fof(f1246,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int',X1) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(superposition,[],[f293,f240])).
fof(f1018,plain,(
  ( ! [X1] : (s(bool,X1) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(subsumption_resolution,[],[f1014,f424])).
fof(f1014,plain,(
  ( ! [X1] : (p(s(bool,'F_0')) | s(bool,X1) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f668,f475])).
fof(f1017,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f1013,f424])).
fof(f1013,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s(bool,X0) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f668,f474])).
fof(f974,plain,(
  ~sP11('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f962,f400])).
fof(f962,plain,(
  ~sP10('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f233,f424,f233,f405])).
fof(f952,plain,(
  sP11('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f461,f233,f424,f404])).
fof(f953,plain,(
  sP11('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'F_0','T_0')),
  inference(unit_resulting_resolution,[],[f462,f233,f424,f404])).
fof(f954,plain,(
  sP11('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'F_0','T_0')),
  inference(unit_resulting_resolution,[],[f463,f233,f424,f404])).
fof(f920,plain,(
  ~sP9('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f910,f383])).
fof(f910,plain,(
  ~sP8('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f424,f424,f233,f388])).
fof(f898,plain,(
  sP9('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f454,f424,f424,f387])).
fof(f899,plain,(
  sP9('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'F_0','F_0')),
  inference(unit_resulting_resolution,[],[f455,f424,f424,f387])).
fof(f900,plain,(
  sP9('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'F_0','F_0')),
  inference(unit_resulting_resolution,[],[f456,f424,f424,f387])).
fof(f851,plain,(
  ~sP7('F_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f839,f364])).
fof(f839,plain,(
  ~sP6('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f424,f233,f233,f371])).
fof(f823,plain,(
  sP7('T_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f445,f233,f233,f367])).
fof(f819,plain,(
  ~sP5('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f814,f341])).
fof(f814,plain,(
  ~sP2('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f424,f424,f424,f356])).
fof(f810,plain,(
  ~sP5('F_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f798,f342])).
fof(f798,plain,(
  ~sP3('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f424,f233,f233,f352])).
fof(f773,plain,(
  ~sP4('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f424,f233,f233,f348])).
fof(f732,plain,(
  ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'F_0')),
  inference(unit_resulting_resolution,[],[f424,f474,f363])).
fof(f733,plain,(
  ~sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'F_0')),
  inference(unit_resulting_resolution,[],[f424,f475,f363])).
fof(f734,plain,(
  ~sP5('F_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))),
  inference(unit_resulting_resolution,[],[f424,f474,f363])).
fof(f735,plain,(
  ~sP5('F_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))),
  inference(unit_resulting_resolution,[],[f424,f475,f363])).
fof(f714,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0')),
  inference(unit_resulting_resolution,[],[f233,f465,f362])).
fof(f716,plain,(
  ~sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0')),
  inference(unit_resulting_resolution,[],[f233,f466,f362])).
fof(f719,plain,(
  ~sP5('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f233,f464,f362])).
fof(f720,plain,(
  ~sP5('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))),
  inference(unit_resulting_resolution,[],[f233,f465,f362])).
fof(f721,plain,(
  ~sP5('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))),
  inference(unit_resulting_resolution,[],[f233,f466,f362])).
fof(f723,plain,(
  ~sP5('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f233,f464,f362])).
fof(f704,plain,(
  sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'F_0')),
  inference(unit_resulting_resolution,[],[f233,f474,f361])).
fof(f705,plain,(
  sP5('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'F_0')),
  inference(unit_resulting_resolution,[],[f233,f475,f361])).
fof(f706,plain,(
  sP5('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))),
  inference(unit_resulting_resolution,[],[f233,f474,f361])).
fof(f707,plain,(
  sP5('T_0','F_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))),
  inference(unit_resulting_resolution,[],[f233,f475,f361])).
fof(f692,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0')),
  inference(unit_resulting_resolution,[],[f424,f465,f360])).
fof(f693,plain,(
  sP5('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0')),
  inference(unit_resulting_resolution,[],[f424,f466,f360])).
fof(f694,plain,(
  sP5('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f424,f464,f360])).
fof(f695,plain,(
  sP5('F_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))),
  inference(unit_resulting_resolution,[],[f424,f465,f360])).
fof(f696,plain,(
  sP5('F_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))),
  inference(unit_resulting_resolution,[],[f424,f466,f360])).
fof(f697,plain,(
  sP5('F_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f424,f464,f360])).
fof(f668,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f659,f424])).
fof(f659,plain,(
  ( ! [X4,X5] : (p(s(bool,'F_0')) | p(s(bool,X5)) | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f287,f241])).
fof(f597,plain,(
  ( ! [X0] : (sP7('F_0',X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) )),
  inference(unit_resulting_resolution,[],[f447,f424,f417])).
fof(f598,plain,(
  ( ! [X0] : (sP7('F_0',X0,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) )),
  inference(unit_resulting_resolution,[],[f448,f424,f417])).
fof(f600,plain,(
  ( ! [X0] : (sP7('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),X0)) )),
  inference(unit_resulting_resolution,[],[f450,f424,f417])).
fof(f601,plain,(
  ( ! [X0] : (sP7('F_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),X0)) )),
  inference(unit_resulting_resolution,[],[f451,f424,f417])).
fof(f576,plain,(
  ( ! [X0] : (sP11('T_0',X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) )),
  inference(unit_resulting_resolution,[],[f458,f233,f415])).
fof(f577,plain,(
  ( ! [X0] : (sP11('T_0',X0,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) )),
  inference(unit_resulting_resolution,[],[f459,f233,f415])).
fof(f559,plain,(
  ( ! [X0] : (sP11('T_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f233,f233,f411])).
fof(f554,plain,(
  ( ! [X0] : (sP11('T_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f424,f233,f410])).
fof(f551,plain,(
  ( ! [X0] : (~sP11('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f233,f424,f399])).
fof(f547,plain,(
  ( ! [X0] : (~sP11('F_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f424,f424,f398])).
fof(f544,plain,(
  ( ! [X0] : (sP9('T_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f233,f233,f394])).
fof(f536,plain,(
  ( ! [X0] : (sP9('T_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f233,f233,f393])).
fof(f533,plain,(
  ( ! [X0] : (~sP9('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f233,f424,f382])).
fof(f532,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f233,f424,f381])).
fof(f528,plain,(
  ( ! [X0] : (sP7('F_0','F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f424,f424,f376])).
fof(f521,plain,(
  ( ! [X0] : (sP7('F_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f424,f424,f375])).
fof(f519,plain,(
  ( ! [X0] : (~sP7('T_0','F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f233,f424,f366])).
fof(f518,plain,(
  ( ! [X0] : (~sP7('T_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f233,f424,f365])).
fof(f513,plain,(
  ~sP0('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f424,f424,f425])).
fof(f508,plain,(
  sP1('F_0','T_0')),
  inference(unit_resulting_resolution,[],[f424,f233,f321])).
fof(f501,plain,(
  sP1('T_0','F_0')),
  inference(unit_resulting_resolution,[],[f424,f233,f318])).
fof(f489,plain,(
  ~sP1('T_0','T_0')),
  inference(unit_resulting_resolution,[],[f233,f233,f317])).
fof(f479,plain,(
  ~sP1('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f424,f424,f316])).
fof(f464,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f424,f251])).
fof(f466,plain,(
  s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))),
  inference(unit_resulting_resolution,[],[f232,f251])).
fof(f461,plain,(
  ( ! [X0,X1] : (sP10('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f424,f408])).
fof(f462,plain,(
  ( ! [X0,X1] : (sP10('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f230,f408])).
fof(f463,plain,(
  ( ! [X0,X1] : (sP10('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f232,f408])).
fof(f460,plain,(
  ( ! [X0,X1] : (sP10(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f233,f407])).
fof(f457,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f424,f406])).
fof(f458,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) )),
  inference(unit_resulting_resolution,[],[f230,f406])).
fof(f459,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) )),
  inference(unit_resulting_resolution,[],[f232,f406])).
fof(f454,plain,(
  ( ! [X0,X1] : (sP8('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f424,f391])).
fof(f455,plain,(
  ( ! [X0,X1] : (sP8('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f230,f391])).
fof(f456,plain,(
  ( ! [X0,X1] : (sP8('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f232,f391])).
fof(f453,plain,(
  ( ! [X0,X1] : (sP8(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f233,f390])).
fof(f452,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f233,f389])).
fof(f449,plain,(
  ( ! [X0,X1] : (sP6('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f424,f374])).
fof(f450,plain,(
  ( ! [X0,X1] : (sP6('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f230,f374])).
fof(f451,plain,(
  ( ! [X0,X1] : (sP6('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f232,f374])).
fof(f446,plain,(
  ( ! [X0,X1] : (sP6(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f424,f373])).
fof(f447,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),X1)) )),
  inference(unit_resulting_resolution,[],[f230,f373])).
fof(f448,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),X1)) )),
  inference(unit_resulting_resolution,[],[f232,f373])).
fof(f445,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f233,f372])).
fof(f444,plain,(
  ( ! [X0,X1] : (sP2('T_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f233,f359])).
fof(f443,plain,(
  ( ! [X0,X1] : (sP2(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f233,f358])).
fof(f442,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f233,f357])).
fof(f439,plain,(
  ( ! [X0,X1] : (sP3('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f424,f355])).
fof(f440,plain,(
  ( ! [X0,X1] : (sP3('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f230,f355])).
fof(f441,plain,(
  ( ! [X0,X1] : (sP3('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f232,f355])).
fof(f436,plain,(
  ( ! [X0,X1] : (sP3(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f424,f354])).
fof(f437,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),X1)) )),
  inference(unit_resulting_resolution,[],[f230,f354])).
fof(f438,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),X1)) )),
  inference(unit_resulting_resolution,[],[f232,f354])).
fof(f435,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f233,f353])).
fof(f432,plain,(
  ( ! [X0,X1] : (sP4('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f424,f351])).
fof(f433,plain,(
  ( ! [X0,X1] : (sP4('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f230,f351])).
fof(f434,plain,(
  ( ! [X0,X1] : (sP4('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f232,f351])).
fof(f429,plain,(
  ( ! [X0,X1] : (sP4(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f424,f350])).
fof(f430,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),X1)) )),
  inference(unit_resulting_resolution,[],[f230,f350])).
fof(f431,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),X1)) )),
  inference(unit_resulting_resolution,[],[f232,f350])).
fof(f428,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f233,f349])).
fof(f427,plain,(
  ( ! [X0] : (sP0('T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f233,f303])).
fof(f426,plain,(
  ( ! [X0] : (sP0(X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f233,f302])).
fof(f409,plain,(
  ( ! [X2,X0,X1] : (sP11(X2,X0,X1) | p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f229])).
fof(f229,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP11(X2,X0,X1)) & (~sP11(X2,X0,X1) | ((~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f228])).
fof(f228,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP11(X2,X0,X1)) & (~sP11(X2,X0,X1) | ((~p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f149])).
fof(f149,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> sP11(X2,X0,X1))),
  inference(definition_folding,[],[f131,f148,f147])).
fof(f147,plain,(
  ! [X2,X0,X1] : (sP10(X2,X0,X1) <=> (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP10])])).
fof(f148,plain,(
  ! [X2,X0,X1] : (sP11(X2,X0,X1) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP10(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP11])])).
fof(f131,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(ennf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f107])).
fof(f107,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X16,X17,X18] : ((p(s(bool,X18)) <=> (p(s(bool,X17)) => p(s(bool,X16)))) <=> ((p(s(bool,X18)) | p(s(bool,X17))) & (p(s(bool,X18)) | ~p(s(bool,X16))) & (~p(s(bool,X17)) | p(s(bool,X16)) | ~p(s(bool,X18)))))),
  file('thm.rat.RAT_LES_TOTAL','thm.sat.sat_27_prove_ltb')).
fof(f410,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | sP11(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f229])).
fof(f411,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X0)) | sP11(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f229])).
fof(f412,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~sP11(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f229])).
fof(f405,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~sP10(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f227])).
fof(f227,plain,(
  ! [X0,X1,X2] : ((~sP10(X0,X1,X2) | ~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP10(X0,X1,X2)))),
  inference(rectify,[],[f226])).
fof(f226,plain,(
  ! [X2,X0,X1] : ((~sP10(X2,X0,X1) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP10(X2,X0,X1)))),
  inference(flattening,[],[f225])).
fof(f225,plain,(
  ! [X2,X0,X1] : ((~sP10(X2,X0,X1) | (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP10(X2,X0,X1)))),
  inference(nnf_transformation,[],[f147])).
fof(f406,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f227])).
fof(f407,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f227])).
fof(f408,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f227])).
fof(f398,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f224])).
fof(f224,plain,(
  ! [X0,X1,X2] : ((~sP11(X0,X1,X2) | ((p(s(bool,X0)) | p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP10(X0,X1,X2))) & ((~p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP10(X0,X1,X2) | sP11(X0,X1,X2)))),
  inference(rectify,[],[f223])).
fof(f223,plain,(
  ! [X2,X0,X1] : ((~sP11(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP10(X2,X0,X1))) & ((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP10(X2,X0,X1) | sP11(X2,X0,X1)))),
  inference(flattening,[],[f222])).
fof(f222,plain,(
  ! [X2,X0,X1] : ((~sP11(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP10(X2,X0,X1))) & (((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP10(X2,X0,X1)) | sP11(X2,X0,X1)))),
  inference(nnf_transformation,[],[f148])).
fof(f399,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f224])).
fof(f400,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | sP10(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f224])).
fof(f415,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~sP10(X0,X1,X2) | sP11(X0,X1,X2)) )),
  inference(duplicate_literal_removal,[],[f401])).
fof(f401,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f224])).
fof(f402,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f224])).
fof(f403,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f224])).
fof(f404,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f224])).
fof(f392,plain,(
  ( ! [X2,X0,X1] : (sP9(X2,X0,X1) | p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f221])).
fof(f221,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP9(X2,X0,X1)) & (~sP9(X2,X0,X1) | ((~p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f220])).
fof(f220,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP9(X2,X0,X1)) & (~sP9(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f146])).
fof(f146,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> sP9(X2,X0,X1))),
  inference(definition_folding,[],[f106,f145,f144])).
fof(f144,plain,(
  ! [X2,X0,X1] : (sP8(X2,X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP8])])).
fof(f145,plain,(
  ! [X2,X0,X1] : (sP9(X2,X0,X1) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP9])])).
fof(f106,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f105])).
fof(f105,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X16,X17,X18] : ((p(s(bool,X18)) <=> (p(s(bool,X17)) | p(s(bool,X16)))) <=> ((p(s(bool,X18)) | ~p(s(bool,X17))) & (p(s(bool,X18)) | ~p(s(bool,X16))) & (p(s(bool,X17)) | p(s(bool,X16)) | ~p(s(bool,X18)))))),
  file('thm.rat.RAT_LES_TOTAL','thm.sat.sat_25_prove_ltb')).
fof(f393,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X1)) | sP9(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f221])).
fof(f394,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X0)) | sP9(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f221])).
fof(f395,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)) | ~sP9(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f221])).
fof(f388,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f219])).
fof(f219,plain,(
  ! [X0,X1,X2] : ((~sP8(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP8(X0,X1,X2)))),
  inference(rectify,[],[f218])).
fof(f218,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP8(X2,X0,X1)))),
  inference(flattening,[],[f217])).
fof(f217,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP8(X2,X0,X1)))),
  inference(nnf_transformation,[],[f144])).
fof(f389,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f219])).
fof(f390,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f219])).
fof(f391,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f219])).
fof(f381,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f216])).
fof(f216,plain,(
  ! [X0,X1,X2] : ((~sP9(X0,X1,X2) | ((p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP8(X0,X1,X2))) & ((~p(s(bool,X0)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP8(X0,X1,X2) | sP9(X0,X1,X2)))),
  inference(rectify,[],[f215])).
fof(f215,plain,(
  ! [X2,X0,X1] : ((~sP9(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1))) & ((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP8(X2,X0,X1) | sP9(X2,X0,X1)))),
  inference(flattening,[],[f214])).
fof(f214,plain,(
  ! [X2,X0,X1] : ((~sP9(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1))) & (((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP8(X2,X0,X1)) | sP9(X2,X0,X1)))),
  inference(nnf_transformation,[],[f145])).
fof(f382,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f216])).
fof(f383,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | sP8(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f216])).
fof(f416,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~sP8(X0,X1,X2) | sP9(X0,X1,X2)) )),
  inference(duplicate_literal_removal,[],[f384])).
fof(f384,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f216])).
fof(f385,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | ~p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f216])).
fof(f386,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f216])).
fof(f387,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f216])).
fof(f375,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f213])).
fof(f213,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) | sP7(X2,X0,X1)) & (~sP7(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(flattening,[],[f212])).
fof(f212,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) | ~p(s(bool,X0))))) | sP7(X2,X0,X1)) & (~sP7(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & ((~p(s(bool,X1)) | ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f143])).
fof(f143,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> sP7(X2,X0,X1))),
  inference(definition_folding,[],[f104,f142,f141])).
fof(f141,plain,(
  ! [X0,X1,X2] : (sP6(X0,X1,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f142,plain,(
  ! [X2,X0,X1] : (sP7(X2,X0,X1) <=> (sP6(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP7])])).
fof(f104,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f103])).
fof(f103,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X16,X17,X18] : ((p(s(bool,X18)) <=> (p(s(bool,X17)) & p(s(bool,X16)))) <=> ((p(s(bool,X18)) | ~p(s(bool,X17)) | ~p(s(bool,X16))) & (p(s(bool,X17)) | ~p(s(bool,X18))) & (p(s(bool,X16)) | ~p(s(bool,X18)))))),
  file('thm.rat.RAT_LES_TOTAL','thm.sat.sat_23_prove_ltb')).
fof(f376,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X0,X1) | p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f213])).
fof(f377,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X0,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f213])).
fof(f380,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP7(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f213])).
fof(f371,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP6(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f211])).
fof(f211,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(flattening,[],[f210])).
fof(f210,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(nnf_transformation,[],[f141])).
fof(f372,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f211])).
fof(f373,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f211])).
fof(f374,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f211])).
fof(f364,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | sP6(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f209])).
fof(f209,plain,(
  ! [X0,X1,X2] : ((~sP7(X0,X1,X2) | (sP6(X1,X2,X0) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP6(X1,X2,X0) | (~p(s(bool,X2)) & p(s(bool,X0))) | (~p(s(bool,X1)) & p(s(bool,X0))) | sP7(X0,X1,X2)))),
  inference(rectify,[],[f208])).
fof(f208,plain,(
  ! [X2,X0,X1] : ((~sP7(X2,X0,X1) | (sP6(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2))))) & (~sP6(X0,X1,X2) | (~p(s(bool,X1)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X2))) | sP7(X2,X0,X1)))),
  inference(flattening,[],[f207])).
fof(f207,plain,(
  ! [X2,X0,X1] : ((~sP7(X2,X0,X1) | (sP6(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2))))) & ((~sP6(X0,X1,X2) | (~p(s(bool,X1)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X2)))) | sP7(X2,X0,X1)))),
  inference(nnf_transformation,[],[f142])).
fof(f365,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f209])).
fof(f366,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f209])).
fof(f367,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP6(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f209])).
fof(f417,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X0)) | ~sP6(X1,X2,X0)) )),
  inference(duplicate_literal_removal,[],[f370])).
fof(f370,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X0)) | p(s(bool,X0)) | ~sP6(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f209])).
fof(f360,plain,(
  ( ! [X2,X0,X1] : (sP5(X2,X1,X0) | s(bool,X0) = s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f206])).
fof(f206,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (~p(s(bool,X2)) | s(bool,X0) != s(bool,X1))) | sP5(X2,X1,X0)) & (~sP5(X2,X1,X0) | ((~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (s(bool,X0) != s(bool,X1) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> sP5(X2,X1,X0))),
  inference(definition_folding,[],[f102,f139,f138,f137,f136])).
fof(f136,plain,(
  ! [X0,X1,X2] : (sP2(X0,X1,X2) <=> (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f137,plain,(
  ! [X1,X0,X2] : (sP3(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f138,plain,(
  ! [X2,X0,X1] : (sP4(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f139,plain,(
  ! [X2,X1,X0] : (sP5(X2,X1,X0) <=> (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP5])])).
fof(f102,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f101])).
fof(f101,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X16,X17,X18] : ((p(s(bool,X18)) <=> s(bool,X16) = s(bool,X17)) <=> ((p(s(bool,X18)) | p(s(bool,X17)) | p(s(bool,X16))) & (p(s(bool,X18)) | ~p(s(bool,X16)) | ~p(s(bool,X17))) & (p(s(bool,X17)) | ~p(s(bool,X16)) | ~p(s(bool,X18))) & (p(s(bool,X16)) | ~p(s(bool,X17)) | ~p(s(bool,X18)))))),
  file('thm.rat.RAT_LES_TOTAL','thm.sat.sat_2|49|_prove_ltb')).
fof(f361,plain,(
  ( ! [X2,X0,X1] : (sP5(X2,X1,X0) | s(bool,X0) != s(bool,X1) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f206])).
fof(f362,plain,(
  ( ! [X2,X0,X1] : (~sP5(X2,X1,X0) | ~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f206])).
fof(f363,plain,(
  ( ! [X2,X0,X1] : (~sP5(X2,X1,X0) | s(bool,X0) != s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f206])).
fof(f356,plain,(
  ( ! [X2,X0,X1] : (~sP2(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f205])).
fof(f205,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(flattening,[],[f204])).
fof(f204,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(nnf_transformation,[],[f136])).
fof(f357,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f205])).
fof(f358,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f205])).
fof(f359,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f205])).
fof(f352,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP3(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f203])).
fof(f203,plain,(
  ! [X0,X1,X2] : ((~sP3(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP3(X0,X1,X2)))),
  inference(rectify,[],[f202])).
fof(f202,plain,(
  ! [X1,X0,X2] : ((~sP3(X1,X0,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP3(X1,X0,X2)))),
  inference(flattening,[],[f201])).
fof(f201,plain,(
  ! [X1,X0,X2] : ((~sP3(X1,X0,X2) | (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP3(X1,X0,X2)))),
  inference(nnf_transformation,[],[f137])).
fof(f353,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f203])).
fof(f354,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f203])).
fof(f355,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f203])).
fof(f348,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP4(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f200])).
fof(f200,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(rectify,[],[f199])).
fof(f199,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(flattening,[],[f198])).
fof(f198,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(nnf_transformation,[],[f138])).
fof(f349,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f200])).
fof(f350,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f200])).
fof(f351,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f200])).
fof(f341,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f197])).
fof(f197,plain,(
  ! [X0,X1,X2] : ((~sP5(X0,X1,X2) | (sP2(X2,X1,X0) & sP3(X1,X2,X0) & sP4(X0,X2,X1) & (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP2(X2,X1,X0) | ~sP3(X1,X2,X0) | ~sP4(X0,X2,X1) | (~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP5(X0,X1,X2)))),
  inference(rectify,[],[f196])).
fof(f196,plain,(
  ! [X2,X1,X0] : ((~sP5(X2,X1,X0) | (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & (~sP2(X0,X1,X2) | ~sP3(X1,X0,X2) | ~sP4(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2))) | sP5(X2,X1,X0)))),
  inference(flattening,[],[f195])).
fof(f195,plain,(
  ! [X2,X1,X0] : ((~sP5(X2,X1,X0) | (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & ((~sP2(X0,X1,X2) | ~sP3(X1,X0,X2) | ~sP4(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2)))) | sP5(X2,X1,X0)))),
  inference(nnf_transformation,[],[f139])).
fof(f342,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP3(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f197])).
fof(f343,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP4(X0,X2,X1)) )),
  inference(cnf_transformation,[],[f197])).
fof(f344,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP5(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f197])).
fof(f345,plain,(
  ( ! [X2,X0,X1] : (~sP2(X2,X1,X0) | ~p(s(bool,X2)) | ~sP4(X0,X2,X1) | ~sP3(X1,X2,X0) | sP5(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f197])).
fof(f346,plain,(
  ( ! [X2,X0,X1] : (~sP2(X2,X1,X0) | p(s(bool,X1)) | ~sP4(X0,X2,X1) | ~sP3(X1,X2,X0) | sP5(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f197])).
fof(f347,plain,(
  ( ! [X2,X0,X1] : (~sP2(X2,X1,X0) | p(s(bool,X0)) | ~sP4(X0,X2,X1) | ~sP3(X1,X2,X0) | sP5(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f197])).
fof(f334,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK14(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK14(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f192])).
fof(f192,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK14(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK14(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14])],[f130])).
fof(f130,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f98])).
fof(f98,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.rat.RAT_LES_TOTAL',aHL_EXT)).
fof(f316,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | p(s(bool,X0)) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f186])).
fof(f186,plain,(
  ! [X0,X1] : ((~sP1(X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | ~p(s(bool,X0))))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & p(s(bool,X0))) | sP1(X0,X1)))),
  inference(rectify,[],[f185])).
fof(f185,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1))) | sP1(X1,X0)))),
  inference(flattening,[],[f184])).
fof(f184,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & (((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1)))) | sP1(X1,X0)))),
  inference(nnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X1,X0] : (sP1(X1,X0) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f317,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | ~p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f186])).
fof(f318,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f186])).
fof(f321,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f186])).
fof(f425,plain,(
  ( ! [X0,X1] : (~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f301,f424])).
fof(f301,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f179])).
fof(f179,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(flattening,[],[f178])).
fof(f178,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0')))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(nnf_transformation,[],[f132])).
fof(f132,plain,(
  ! [X0,X1] : (sP0(X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f302,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f179])).
fof(f303,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f179])).
fof(f295,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) | s('type.rat.rat',X0) = s('type.rat.rat',X1)) )),
  inference(cnf_transformation,[],[f175])).
fof(f293,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int',X1)) )),
  inference(cnf_transformation,[],[f174])).
fof(f174,plain,(
  ! [X0,X1] : ((s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int',X1)) & (s('type.integer.int',X0) != s('type.integer.int',X1) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))),
  inference(nnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) <=> s('type.integer.int',X0) = s('type.integer.int',X1))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X12,X13] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X13))) <=> s('type.integer.int',X12) = s('type.integer.int',X13))),
  file('thm.rat.RAT_LES_TOTAL','thm.integer.INT_EQ_NEG')).
fof(f294,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) != s('type.integer.int',X1) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))) )),
  inference(cnf_transformation,[],[f174])).
fof(f287,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f122])).
fof(f122,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X8,X9] : ((p(s(bool,X8)) => p(s(bool,X9))) => ((p(s(bool,X9)) => p(s(bool,X8))) => s(bool,X8) = s(bool,X9)))),
  file('thm.rat.RAT_LES_TOTAL','thm.bool.IMP_ANTISYM_AX')).
fof(f290,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f123])).
fof(f259,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f157])).
fof(f252,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f153])).
fof(f231,plain,(
  s('type.rat.rat',sK12) != s('type.rat.rat',sK13)),
  inference(cnf_transformation,[],[f150])).
fof(f232,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))),
  inference(cnf_transformation,[],[f150])).
fof(f33956,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(condensation,[],[f33955])).
fof(f33955,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(forward_demodulation,[],[f33902,f3038])).
fof(f33902,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f33875,f31327])).
fof(f31327,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl372),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f24702,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f15401,f3487,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f5444,f29929,f3471,f3656,f5918,f15731,f16910,f21690,f21764,f24427,f25069,f30075,f30205,f30221,f30240,f31317,f26279,f26264,f31318,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f31319,f24534,f24528,f24527,f24425,f24412,f31320,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f21794,f31322,f21781,f21780,f31324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f15712,f15711,f15710,f15707,f15705,f15701,f15413])).
fof(f31324,plain,(
  ( ! [X30,X31,X32] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32)))))) ) | $spl372),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f24702,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f15401,f15413,f15711,f15714,f3487,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f5444,f29929,f3471,f3656,f5918,f15731,f16910,f21690,f21764,f24427,f25069,f30075,f30205,f30221,f30240,f31317,f26279,f26264,f31318,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f31319,f24534,f24528,f24527,f24425,f24412,f31320,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f21794,f31322,f21781,f21780])).
fof(f31322,plain,(
  ( ! [X59,X60,X58] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59)))))))) ) | $spl372),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f24702,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f15401,f15413,f15711,f15714,f21780,f3487,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f5444,f29929,f3471,f3656,f5918,f15731,f16910,f21690,f21764,f24427,f25069,f30075,f30205,f30221,f30240,f31317,f26279,f26264,f31318,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f31319,f24534,f24528,f24527,f24425,f24412,f31320,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f21794])).
fof(f31320,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37)))))))) ) | $spl372),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f24702,f24578,f24556,f24533,f24444,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f15401,f15413,f15711,f15714,f21780,f3487,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f22061,f5444,f29929,f3471,f3656,f5918,f15731,f16910,f21690,f21764,f24427,f25069,f30075,f30205,f30221,f30240,f31317,f26279,f26264,f31318,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f31319,f24534,f24528,f24527,f24425,f24412])).
fof(f31319,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))))))) ) | $spl372),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f24702,f24578,f24556,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f15401,f15413,f15711,f15714,f21780,f3487,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f22061,f5444,f29929,f3471,f3656,f5918,f15731,f16910,f21690,f21764,f24427,f25069,f30075,f30205,f30221,f30240,f31317,f26279,f26264,f31318,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536])).
fof(f31318,plain,(
  ( ! [X39,X38,X40] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X39))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38)))))) ) | $spl372),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f15401,f15413,f15711,f15714,f21780,f3487,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f5444,f29929,f3471,f3656,f5918,f15731,f16910,f21690,f21764,f24427,f25069,f30075,f30205,f30221,f30240,f31317,f26279,f26264])).
fof(f31317,plain,(
  ( ! [X54,X55] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X54))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X54))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X54))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f15401,f15413,f15711,f15714,f21780,f3487,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f5444,f3471,f3656,f5918,f15731,f16910,f21690,f21764,f24427,f25069,f30075,f30205,f30221,f30240])).
fof(f30240,plain,(
  ( ! [X54,X55] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X54))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X54))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X54)))))) )),
  inference(superposition,[],[f1636,f28786])).
fof(f30221,plain,(
  ( ! [X17,X15,X16] : (s('type.integer.int',X16) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) )),
  inference(superposition,[],[f1627,f28786])).
fof(f30205,plain,(
  ( ! [X70,X69] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X70))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X69))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X70))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X70))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X69))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X69)))))) )),
  inference(superposition,[],[f1629,f28786])).
fof(f30075,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13)))) )),
  inference(superposition,[],[f28786,f1617])).
fof(f33875,plain,(
  ( ! [X86] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X86)))))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(subsumption_resolution,[],[f33874,f3338])).
fof(f33874,plain,(
  ( ! [X86] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X86))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X86)))))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(subsumption_resolution,[],[f33713,f31310])).
fof(f33713,plain,(
  ( ! [X86] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X86))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X86))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X86)))))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(superposition,[],[f31335,f31310])).
fof(f31335,plain,(
  ( ! [X15] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(global_subsumption,[],[f3927,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16598,f16599,f16539,f16543,f16544,f16603,f16604,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f20330,f20332,f20333,f16602,f17642,f20336,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20389,f20331,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f23287,f23290,f23291,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23306,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23510,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25181,f25182,f25183,f25184,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f24737,f21356,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f27310,f27320,f3040,f26310,f24702,f27321,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f27323,f27324,f27325,f27326,f27327,f27328,f27329,f27330,f27331,f5821,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29913,f29928,f29930,f29904,f29933,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f20390,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30260,f30468,f30470,f30472,f30473,f27316,f25180,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069,f31311,f30075,f31312,f30205,f31313,f30221,f31314,f31315,f31316,f30240,f31317,f30467,f26279,f26264,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f24534,f24528,f24527,f24425,f24412,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f31321,f21794,f21781,f31323,f21780,f21429,f20329,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f31325,f15712,f15711,f31326,f15710,f15707,f15705,f15701,f15413,f15412,f15407,f15401,f31328,f15400,f14962,f31329,f14959,f31330,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f31332,f10098,f10095,f10093,f10088,f9998,f31333,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737])).
fof(f31333,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f24702,f27321,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f27323,f27324,f27326,f27327,f27328,f27329,f27330,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30260,f30468,f30470,f30472,f30473,f27316,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069,f31311,f30075,f31312,f30205,f30221,f31314,f30240,f31317,f30467,f26279,f26264,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f24534,f24528,f24527,f24425,f24412,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f31321,f21794,f21781,f31323,f21780,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f31325,f15712,f15711,f31326,f15710,f15707,f15705,f15701,f15413,f15412,f15407,f15401,f31328,f15400,f14962,f31329,f14959,f31330,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f31332,f10098,f10095,f10093,f10088,f9998])).
fof(f31332,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X28))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f24702,f27321,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f27323,f27324,f27326,f27327,f27328,f27329,f27330,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30260,f30468,f30470,f30472,f30473,f27316,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069,f31311,f30075,f31312,f30205,f30221,f31314,f30240,f31317,f30467,f26279,f26264,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f24534,f24528,f24527,f24425,f24412,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f31321,f21794,f21781,f31323,f21780,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f31325,f15712,f15711,f31326,f15710,f15707,f15705,f15701,f15413,f15412,f15407,f15401,f31328,f15400,f14962,f31329,f14959,f31330,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099])).
fof(f31330,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f24702,f27321,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f27323,f27324,f27326,f27327,f27328,f27329,f27330,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30260,f30468,f30470,f30472,f30473,f27316,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069,f31311,f30075,f31312,f30205,f30221,f31314,f30240,f31317,f30467,f26279,f26264,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f24534,f24528,f24527,f24425,f24412,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f31321,f21794,f21781,f31323,f21780,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f31325,f15712,f15711,f31326,f15710,f15707,f15705,f15701,f15413,f15412,f15407,f15401,f31328,f15400,f14962,f31329,f14959])).
fof(f31329,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X52),s('type.rat.rat',X51))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f24702,f27321,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f27323,f27324,f27326,f27327,f27328,f27329,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30260,f30468,f30470,f30472,f30473,f27316,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069,f31311,f30075,f31312,f30205,f30221,f31314,f30240,f31317,f30467,f26279,f26264,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f24534,f24528,f24527,f24425,f24412,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f31321,f21794,f21781,f31323,f21780,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f31325,f15712,f15711,f31326,f15710,f15707,f15705,f15701,f15413,f15412,f15407,f15401,f31328,f15400,f14962])).
fof(f31328,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f24702,f27321,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f27323,f27324,f27326,f27327,f27328,f27329,f15400,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30260,f30468,f30470,f30472,f30473,f27316,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069,f31311,f30075,f31312,f30205,f30221,f31314,f30240,f31317,f30467,f26279,f26264,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f24534,f24528,f24527,f24425,f24412,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f31321,f21794,f21781,f31323,f21780,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f31325,f15712,f15711,f31326,f15710,f15707,f15705,f15701,f15413,f15412,f15407,f15401])).
fof(f31326,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f24702,f27321,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f27323,f27324,f27326,f27327,f15710,f15707,f15705,f15701,f27328,f15412,f15407,f27329,f15400,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f15401,f15413,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30260,f30468,f30470,f30472,f30473,f27316,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069,f31311,f30075,f31312,f30205,f30221,f31314,f30240,f31317,f30467,f26279,f26264,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f24534,f24528,f24527,f24425,f24412,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f31321,f21794,f21781,f31323,f21780,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f31325,f15712,f15711])).
fof(f31325,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f24702,f27321,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f27323,f27324,f27326,f15712,f27327,f15710,f15707,f15705,f15701,f27328,f15412,f15407,f27329,f15400,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f15401,f15413,f15711,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30260,f30468,f30470,f30472,f30473,f27316,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069,f31311,f30075,f31312,f30205,f30221,f31314,f30240,f31317,f30467,f26279,f26264,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f24534,f24528,f24527,f24425,f24412,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f31321,f21794,f21781,f31323,f21780,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714])).
fof(f20329,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl3),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3025,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f262,f261,f3419,f3434,f3435,f3439,f3440,f3449,f3549,f3650,f291,f292,f1627,f1631,f1636,f1640,f2304,f2988,f2995,f3175,f3356,f3443,f3444,f3445,f3547,f3040,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f3516,f3452,f3451,f3447,f3437,f1618,f242,f5664,f5762,f5763,f5747,f5819,f5836,f5837,f5859,f5860,f6054,f5904,f5905,f5912,f6049,f5918,f5919,f5921,f5923,f5924,f5930,f5931,f5932,f5933,f5936,f5937,f5939,f5940,f5942,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f3045,f3043,f3046,f3044,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f9997,f10122,f10089,f10090,f10093,f10095,f10100,f10104,f10105,f10106,f10113,f10115,f10118,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14322,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14953,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15400,f15407,f15409,f15455,f15702,f15703,f15705,f15707,f15712,f15715,f15717,f15729,f15714,f15711,f15710,f15701,f15413,f15412,f15401,f14962,f14959,f10119,f10102,f10099,f10098,f10088,f9998,f5821,f5737,f5665,f5446,f4229,f3922,f3656,f3628,f3620,f3605,f3599,f3568,f3487,f3482,f3481,f3479,f3477,f3474,f3472,f3471,f3469,f3468,f3466,f3464,f3460,f3459,f3454,f3414,f3374,f3184,f3176,f2989,f1634,f1629,f264,f263,f16727,f16729,f16731,f16743,f16884,f16885,f16887,f16892,f16907,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17304,f17305,f17313,f17314,f17315,f17317,f17318,f17706,f17321,f17707,f17324,f17643,f17330,f17331,f17333,f17335,f17336,f17343,f17344,f17345,f17346,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17365,f17367,f17368,f17709,f17375,f17376,f17377,f17378,f17641,f17710,f17715,f17716,f17621,f17473,f17753,f17755,f17760,f17768,f17770,f17562,f18365,f18366,f18368,f18370,f2849])).
fof(f31323,plain,(
  ( ! [X33,X34] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X34))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f24702,f27321,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f27323,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f27326,f15712,f27327,f15710,f15707,f15705,f15701,f27328,f15412,f15407,f27329,f15400,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f15401,f15413,f15711,f15714,f21780,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30260,f30468,f30470,f30472,f30473,f27316,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069,f31311,f30075,f31312,f30205,f30221,f31314,f30240,f31317,f30467,f26279,f26264,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f24534,f24528,f24527,f24425,f24412,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f31321,f21794,f21781])).
fof(f31321,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f24702,f27321,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f21794,f21781,f27323,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f27326,f15712,f27327,f15710,f15707,f15705,f15701,f27328,f15412,f15407,f27329,f15400,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f15401,f15413,f15711,f15714,f21780,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30260,f30468,f30470,f30472,f30473,f27316,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069,f31311,f30075,f31312,f30205,f30221,f31314,f30240,f31317,f30467,f26279,f26264,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f24534,f24528,f24527,f24425,f24412,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817])).
fof(f31316,plain,(
  ( ! [X52,X53] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X52))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X52))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl3 | $spl108)),
  inference(global_subsumption,[],[f31315,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f27323,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f27326,f15712,f27327,f15710,f15707,f15705,f15701,f27328,f15412,f15407,f27329,f15400,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f15401,f15413,f15711,f15714,f21780,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30467,f30260,f30468,f30470,f30472,f30473,f27316,f26254,f22061,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069,f31311,f30075,f31312,f30205,f30221,f31314])).
fof(f31315,plain,(
  ( ! [X52,X53] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X52))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X52)))))) ) | $spl3),
  inference(subsumption_resolution,[],[f30239,f31313])).
fof(f30239,plain,(
  ( ! [X52,X53] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X52))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X52)))))) )),
  inference(superposition,[],[f1634,f28786])).
fof(f31314,plain,(
  ( ! [X17,X15,X16] : (s('type.integer.int',X16) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f27323,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f27326,f15712,f27327,f15710,f15707,f15705,f15701,f27328,f15412,f15407,f27329,f15400,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f15401,f15413,f15711,f15714,f21780,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30467,f30260,f30468,f30470,f30472,f30473,f27316,f26254,f22061,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069,f31311,f30075,f31312,f30205,f30221])).
fof(f31313,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl3),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f20330,f20333,f17642,f20336,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20389,f20331,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f23287,f23290,f23291,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23306,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23510,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25181,f25182,f25184,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f24737,f21356,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f27310,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f20329,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29933,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f15401,f15413,f15711,f15714,f20390,f21780,f3487,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f25180,f22061,f5444,f3471,f3656,f5918,f15731,f16910,f21690,f21764,f24427,f25069,f30075,f30205])).
fof(f31312,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f27323,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f27326,f15712,f27327,f15710,f15707,f15705,f15701,f27328,f15412,f15407,f27329,f15400,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f15401,f15413,f15711,f15714,f21780,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30467,f30260,f30468,f30470,f30472,f30473,f27316,f26254,f22061,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069,f31311,f30075])).
fof(f31311,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f27323,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f27326,f15712,f27327,f15710,f15707,f15705,f15701,f27328,f15412,f15407,f27329,f15400,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f15401,f15413,f15711,f15714,f21780,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30467,f30260,f30468,f30470,f30472,f30473,f27316,f26254,f22061,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069])).
fof(f25180,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl3),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f20329,f3652,f20330,f20333,f17642,f20336,f16032,f17708,f3040,f3044,f3046,f3043,f3045,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f3025,f3549,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3472,f3474,f3477,f3479,f3481,f3482,f3487,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f15401,f15413,f15711,f15714,f20389,f20331,f20390,f20328,f1618,f3419,f3434,f3435,f3437,f3439,f3440,f3447,f3449,f3451,f3452,f3516,f15718,f15709,f15704,f15411,f14966,f14957,f14952,f10107,f10097,f10091,f5985,f20403,f20404,f20405,f20406,f21675,f21690,f21747,f21780,f21781,f21794,f21817,f21764,f21429,f5918,f23287,f23290,f23291,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23306,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23215,f23210,f23135,f23318,f23320,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23837,f23506,f23510,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23529,f23530,f23531,f23532,f23533,f23761,f23847,f23848,f23851,f23852,f23563,f23565,f23567,f23568,f23575,f23576,f23577,f23578,f23858,f23734,f23729,f23728,f23867,f23645,f23877,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24403,f24404,f24406,f24409,f24410,f24444,f24412,f24424,f24425,f24427,f24527,f24528,f24530,f24533,f24534,f24578,f24536,f24550,f24551,f24553,f24556,f24557,f24637,f24638,f24639,f24640,f24641,f24845,f24667,f24668,f24678,f24679,f24680,f24682,f24683,f24684,f24686,f24687,f24833,f24691,f24692,f24693,f24896,f24897,f24696,f24702,f24703,f24705,f24707,f24708,f24715,f24716,f24717,f24718,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24740,f24742,f24743,f24832,f24750,f24751,f24752,f24753,f24904,f24905,f24906,f24907,f24908,f24909,f24910,f24911,f24912,f24913,f24914,f24915,f24916,f24917,f24918,f24919,f24920,f24921,f24922,f24923,f24924,f24926,f25069,f25077,f25080,f25082,f24990])).
fof(f20390,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | $spl3),
  inference(global_subsumption,[],[f20331,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3419,f3434,f3435,f3439,f3440,f3449,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f3516,f3452,f3451,f3447,f3437,f1618,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5918,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3040,f3044,f3046,f3043,f3045,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f3025,f3549,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3472,f3474,f3477,f3479,f3481,f3482,f3487,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f15401,f15413,f15711,f15714])).
fof(f29933,plain,(
  ( ! [X37,X35,X36,X34] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X34),s('type.rat.rat',X35))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X37) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X35),s('type.rat.rat',X34))) | s(bool,'T_0') = s(bool,X37)) ) | $spl3),
  inference(subsumption_resolution,[],[f29462,f20329])).
fof(f29462,plain,(
  ( ! [X37,X35,X36,X34] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X34),s('type.rat.rat',X35))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X37) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X35),s('type.rat.rat',X34))) | s(bool,'T_0') = s(bool,X37)) )),
  inference(superposition,[],[f1636,f2305])).
fof(f29904,plain,(
  ( ! [X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl3 | $spl108)),
  inference(duplicate_literal_removal,[],[f29903])).
fof(f29903,plain,(
  ( ! [X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11)))))) ) | ($spl3 | $spl108)),
  inference(superposition,[],[f27320,f3238])).
fof(f29913,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))))) ) | ($spl3 | $spl108)),
  inference(forward_demodulation,[],[f29912,f286])).
fof(f29912,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))))) ) | ($spl3 | $spl108)),
  inference(forward_demodulation,[],[f29911,f286])).
fof(f29911,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))))) ) | ($spl3 | $spl108)),
  inference(forward_demodulation,[],[f29891,f286])).
fof(f29891,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))))) ) | ($spl3 | $spl108)),
  inference(superposition,[],[f27320,f286])).
fof(f27325,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | ($spl3 | $spl108)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16598,f16599,f16539,f16543,f16544,f16603,f16604,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f20329,f3652,f20330,f20332,f20333,f16602,f17642,f20336,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16891,f16890,f16887,f16885,f16731,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3474,f3477,f3479,f3481,f3482,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f15401,f15413,f15711,f15714,f20389,f20331,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f21764,f5918,f23287,f23290,f23291,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23306,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23510,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25181,f25182,f25183,f25184,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f24737,f21356,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f25180,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f27310,f27320,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23529,f23320,f23215,f23135,f21817,f21794,f21781,f21780,f27323,f21690,f27324,f21429,f20390])).
fof(f27320,plain,(
  ( ! [X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20)))))) ) | ($spl3 | $spl108)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16598,f16599,f16539,f16543,f16544,f16603,f16604,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f20329,f3652,f20330,f20332,f20333,f16602,f17642,f20336,f16032,f17708,f3040,f3044,f3046,f3043,f3045,f18371,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16891,f16890,f16887,f16885,f16731,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3474,f3477,f3479,f3481,f3482,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f15401,f15413,f15711,f15714,f20389,f20331,f20390,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21690,f21747,f21780,f21781,f21794,f21817,f21764,f21429,f5918,f23287,f23290,f23291,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23306,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23215,f23210,f23135,f23318,f23320,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23837,f23506,f23510,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23529,f23530,f23531,f23532,f23533,f23761,f23847,f23848,f23851,f23852,f23563,f23565,f23567,f23568,f23575,f23576,f23577,f23578,f23858,f23734,f23729,f23728,f23867,f23645,f23877,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24403,f24404,f24406,f24409,f24410,f24444,f24412,f24424,f24425,f24427,f24527,f24528,f24530,f24533,f24534,f24578,f24536,f24550,f24551,f24553,f24556,f24557,f24637,f24638,f24639,f24640,f24641,f24845,f24667,f24668,f24678,f24679,f24680,f24682,f24683,f24684,f24686,f24687,f24833,f24691,f24692,f24693,f24896,f24897,f24696,f24702,f24703,f24705,f24707,f24708,f24715,f24716,f24717,f24718,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24740,f24742,f24743,f24832,f24750,f24751,f24752,f24753,f24904,f24905,f24906,f24907,f24908,f24909,f24910,f24911,f24912,f24913,f24914,f24915,f24916,f24917,f24918,f24919,f24920,f24921,f24922,f24923,f24924,f24926,f25069,f25077,f25080,f25082,f24990,f25181,f25182,f25183,f25184,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26255,f26257,f26261,f26262,f26310,f26264,f26278,f26279,f26281,f24979,f24978,f24737,f21356,f27316,f26260,f26259,f27317,f26254,f21799,f21830,f27318,f25180,f23035,f22061,f21947,f21801,f21783,f3549,f27319,f27310])).
fof(f27310,plain,(
  ( ! [X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20)))))) ) | $spl3),
  inference(forward_demodulation,[],[f21807,f240])).
fof(f21807,plain,(
  ( ! [X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20)))))) ) | $spl3),
  inference(superposition,[],[f20329,f1618])).
fof(f21356,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4)))) ) | $spl3),
  inference(superposition,[],[f20329,f1617])).
fof(f24737,plain,(
  ( ! [X39] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39)))) ) | $spl3),
  inference(superposition,[],[f20329,f3238])).
fof(f25184,plain,(
  ( ! [X107,X105,X108,X106] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X107))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X105),s('type.rat.rat',X106))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X107))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X107))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X108) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X106),s('type.rat.rat',X105))) | s(bool,'T_0') = s(bool,X108)) ) | $spl3),
  inference(subsumption_resolution,[],[f23520,f25180])).
fof(f23520,plain,(
  ( ! [X107,X105,X108,X106] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X107))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X105),s('type.rat.rat',X106))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X107))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X107))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X108) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X106),s('type.rat.rat',X105))) | s(bool,'T_0') = s(bool,X108)) )),
  inference(superposition,[],[f1634,f2305])).
fof(f25181,plain,(
  ( ! [X59,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58)))) ) | $spl3),
  inference(subsumption_resolution,[],[f24747,f25180])).
fof(f24747,plain,(
  ( ! [X59,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58)))) )),
  inference(superposition,[],[f1634,f3238])).
fof(f23510,plain,(
  ( ! [X68,X69,X67] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X67),s('type.rat.rat',X68))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X67),s('type.rat.rat',X68))))))) | s(bool,X69) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X68),s('type.rat.rat',X67))) | s(bool,'T_0') = s(bool,X69)) ) | $spl3),
  inference(superposition,[],[f20329,f2305])).
fof(f23819,plain,(
  ( ! [X23,X21,X22,X20] : (s(bool,X22) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))) | s(bool,'T_0') = s(bool,X22) | s(bool,X23) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X23)) ) | $spl3),
  inference(subsumption_resolution,[],[f23436,f20329])).
fof(f23436,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X22) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))) | s(bool,'T_0') = s(bool,X22) | s(bool,X23) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X23)) )),
  inference(superposition,[],[f2305,f2304])).
fof(f23306,plain,(
  ( ! [X90,X88,X89] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X89))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X88))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X89))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X89))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X90) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X88),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X90)) ) | $spl3),
  inference(subsumption_resolution,[],[f23069,f20329])).
fof(f23069,plain,(
  ( ! [X90,X88,X89] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X89))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X88))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X89))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X89))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X90) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X88),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X90)) )),
  inference(superposition,[],[f1632,f2304])).
fof(f23047,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X24) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X24)) ) | $spl3),
  inference(superposition,[],[f20329,f2304])).
fof(f23291,plain,(
  ( ! [X19,X20] : (s(bool,X20) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X20) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) ) | $spl3),
  inference(subsumption_resolution,[],[f22936,f20329])).
fof(f22936,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X20) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X20) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) )),
  inference(superposition,[],[f2304,f1618])).
fof(f23290,plain,(
  ( ! [X17,X18,X16] : (s(bool,X17) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X17) | s(bool,X18) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X18)) ) | $spl3),
  inference(subsumption_resolution,[],[f22935,f20329])).
fof(f22935,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X17) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X17) | s(bool,X18) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f2304,f2306])).
fof(f23287,plain,(
  ( ! [X2,X3,X1] : (s(bool,X2) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X2) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | $spl3),
  inference(subsumption_resolution,[],[f22930,f20329])).
fof(f22930,plain,(
  ( ! [X2,X3,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X2) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X2) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) )),
  inference(superposition,[],[f2304,f1617])).
fof(f20331,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl3),
  inference(subsumption_resolution,[],[f5650,f20330])).
fof(f5650,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) )),
  inference(superposition,[],[f1634,f1618])).
fof(f20389,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8)))))) ) | $spl3),
  inference(subsumption_resolution,[],[f5738,f20330])).
fof(f5738,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8)))))) )),
  inference(superposition,[],[f1636,f1618])).
fof(f20336,plain,(
  ( ! [X70,X72,X71] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X70))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X71))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X71))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X71))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X72) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X72)) ) | $spl3),
  inference(subsumption_resolution,[],[f17372,f20330])).
fof(f17372,plain,(
  ( ! [X70,X72,X71] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X70))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X71))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X71))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X71))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X72) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X72)) )),
  inference(superposition,[],[f1634,f2306])).
fof(f20333,plain,(
  ( ! [X59,X57,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57)))) ) | $spl3),
  inference(subsumption_resolution,[],[f5949,f20330])).
fof(f5949,plain,(
  ( ! [X59,X57,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57)))) )),
  inference(superposition,[],[f1634,f1617])).
fof(f20332,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | ($spl3 | $spl108)),
  inference(global_subsumption,[],[f20331,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3025,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f262,f261,f3419,f3434,f3435,f3439,f3440,f3449,f3549,f3650,f291,f292,f1627,f1631,f1636,f1640,f2304,f2988,f2995,f3175,f3356,f3443,f3444,f3445,f3547,f3040,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f3516,f3452,f3451,f3447,f3437,f1618,f242,f5763,f5747,f4649,f5819,f5836,f5837,f5859,f5860,f6054,f5904,f5905,f5912,f6049,f5918,f5919,f5921,f5923,f5924,f5930,f5931,f5932,f5933,f5936,f5937,f5940,f5942,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f3045,f3043,f3046,f3044,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f9997,f10122,f10089,f10090,f10093,f10095,f10100,f10104,f10105,f10106,f10113,f10115,f10118,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14322,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14953,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15400,f15407,f15409,f15455,f15702,f15703,f15705,f15707,f15712,f15715,f15717,f15729,f15714,f15711,f15710,f15701,f15413,f15412,f15401,f14962,f14959,f10119,f10102,f10099,f10098,f10088,f9998,f5821,f5737,f3656,f3628,f3620,f3605,f3599,f3568,f3487,f3482,f3481,f3479,f3477,f3474,f3472,f3471,f3469,f3468,f3466,f3464,f3460,f3459,f3454,f3414,f3374,f3184,f3176,f2989,f1634,f1629,f264,f263,f16487,f16488,f16490,f16567,f16495,f16496,f16504,f16505,f16506,f16508,f16510,f16512,f16514,f16515,f16522,f16523,f16524,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16541,f16543,f16544,f16551,f16552,f16553,f16727,f16729,f16731,f16732,f16743,f16884,f16885,f16887,f16890,f16891,f16892,f16907,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17304,f17305,f17313,f17314,f17315,f17317,f17318,f17706,f17321,f17707,f17324,f17643,f17330,f17331,f17333,f17335,f17336,f17343,f17344,f17345,f17346,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17365,f17367,f17368,f17375,f17376,f17377,f17378,f17641,f17710,f17715,f17716,f17621,f17473,f17753,f17755,f17760,f17768,f17770,f17562,f18365,f18366,f18368,f18370,f18371,f2849,f3652])).
fof(f20330,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl3),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3025,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f262,f261,f3419,f3434,f3435,f3439,f3440,f3449,f3549,f3650,f291,f292,f1627,f1631,f1636,f1640,f2304,f2988,f2995,f3175,f3356,f3443,f3444,f3445,f3547,f3040,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f3516,f3452,f3451,f3447,f3437,f1618,f242,f5664,f5762,f5763,f5747,f5819,f5836,f5837,f5859,f5860,f6054,f5904,f5905,f5912,f6049,f5918,f5919,f5921,f5923,f5924,f5930,f5931,f5932,f5933,f5936,f5937,f5939,f5940,f5942,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f3045,f3043,f3046,f3044,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f9997,f10122,f10089,f10090,f10093,f10095,f10100,f10104,f10105,f10106,f10113,f10115,f10118,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14322,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14953,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15400,f15407,f15409,f15455,f15702,f15703,f15705,f15707,f15712,f15715,f15717,f15729,f15714,f15711,f15710,f15701,f15413,f15412,f15401,f14962,f14959,f10119,f10102,f10099,f10098,f10088,f9998,f5821,f5737,f5665,f5446,f4229,f3922,f3656,f3628,f3620,f3605,f3599,f3568,f3487,f3482,f3481,f3479,f3477,f3474,f3472,f3471,f3469,f3468,f3466,f3464,f3460,f3459,f3454,f3414,f3374,f3184,f3176,f2989,f1634,f1629,f264,f263,f16727,f16729,f16731,f16743,f16884,f16885,f16887,f16892,f16907,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17304,f17305,f17313,f17314,f17315,f17317,f17318,f17706,f17321,f17707,f17324,f17643,f17330,f17331,f17333,f17335,f17336,f17343,f17344,f17345,f17346,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17365,f17367,f17368,f17709,f17375,f17376,f17377,f17378,f17641,f17710,f17715,f17716,f17621,f17473,f17753,f17755,f17760,f17768,f17770,f17562,f18365,f18366,f18368,f18370,f2849,f20329,f3652])).
fof(f17709,plain,(
  ( ! [X70,X72,X71] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X70))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X71))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X71))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X71))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X72) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X72)) ) | $spl3),
  inference(subsumption_resolution,[],[f17372,f4229])).
fof(f17360,plain,(
  ( ! [X37,X38] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37))))))) | s(bool,X38) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X38)) ) | $spl3),
  inference(superposition,[],[f4229,f2306])).
fof(f17359,plain,(
  ( ! [X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))))) | s(bool,X36) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X36)) ) | $spl3),
  inference(superposition,[],[f3922,f2306])).
fof(f16604,plain,(
  ( ! [X45,X44] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X44))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X44))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl3 | $spl108)),
  inference(global_subsumption,[],[f16603,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3025,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f2849,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f262,f261,f3419,f3434,f3435,f3439,f3440,f3449,f3549,f3650,f291,f292,f1627,f1631,f1636,f1640,f2304,f2988,f2995,f3175,f3356,f3443,f3444,f3445,f3547,f3040,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f3516,f3452,f3451,f3447,f3437,f1618,f242,f5763,f5747,f4649,f5819,f5836,f5837,f5859,f5860,f6054,f5904,f5905,f5912,f6049,f5918,f5919,f5921,f5923,f5924,f5930,f5931,f5932,f5933,f5936,f5937,f5940,f5942,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f3045,f3043,f3046,f3044,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f9997,f10122,f10089,f10090,f10093,f10095,f10100,f10104,f10105,f10106,f10113,f10115,f10118,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14322,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14953,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15400,f15407,f15409,f15455,f15702,f15703,f15705,f15707,f15712,f15715,f15717,f15729,f15714,f15711,f15710,f15701,f15413,f15412,f15401,f14962,f14959,f10119,f10102,f10099,f10098,f10088,f9998,f5821,f5737,f3656,f3628,f3620,f3605,f3599,f3568,f3487,f3482,f3481,f3479,f3477,f3474,f3472,f3471,f3469,f3468,f3466,f3464,f3460,f3459,f3454,f3414,f3374,f3184,f3176,f2989,f1634,f1629,f264,f263,f16487,f16488,f16490,f16567,f16495,f16496,f16504,f16505,f16506,f16508,f16510,f16512,f16514,f16515,f16522,f16523,f16524,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16541,f16543,f16544])).
fof(f16603,plain,(
  ( ! [X45,X44] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X44))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X44)))))) ) | ($spl3 | $spl108)),
  inference(subsumption_resolution,[],[f16548,f4229])).
fof(f16548,plain,(
  ( ! [X45,X44] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X44))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X44)))))) ) | $spl108),
  inference(superposition,[],[f1634,f4649])).
fof(f16599,plain,(
  ( ! [X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25)))))) ) | ($spl3 | $spl108)),
  inference(forward_demodulation,[],[f16538,f240])).
fof(f16538,plain,(
  ( ! [X25] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25)))))) ) | ($spl3 | $spl108)),
  inference(superposition,[],[f4229,f4649])).
fof(f16598,plain,(
  ( ! [X24] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24)))))) ) | ($spl3 | $spl108)),
  inference(forward_demodulation,[],[f16537,f240])).
fof(f16537,plain,(
  ( ! [X24] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24)))))) ) | ($spl3 | $spl108)),
  inference(superposition,[],[f3922,f4649])).
fof(f3922,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl3),
  inference(global_subsumption,[],[f232,f231,f230,f233,f240,f241,f242,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1245,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1445,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1618,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1627,f1629,f1632,f1634,f1636,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2304,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f262,f261,f292,f291,f2305,f264,f263,f1640,f1631,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f2987,f2988,f2989,f2991,f2992,f3001,f2995,f3038,f3039,f3040,f3043,f3044,f3045,f3046,f3025,f3030,f3031,f3033,f3036,f3157,f3173,f3174,f3175,f3176,f3190,f3179,f3180,f3193,f3198,f3184,f3186,f3238,f3338,f3339,f3345,f3356,f3374,f3362,f3511,f3512,f3516,f3405,f3406,f3546,f3414,f3417,f3547,f3419,f3549,f3551,f3555,f3560,f3563,f3566,f3434,f3435,f3437,f3439,f3440,f3443,f3444,f3445,f3447,f3449,f3451,f3452,f3453,f3454,f3487,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3472,f3568,f3474,f3569,f3477,f3479,f3481,f3482,f3586,f3585,f3584,f3590,f3589,f3588,f3605,f3602,f3599,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3647,f3654,f3628,f3638,f3656,f3632,f3633,f3660,f3659,f3658,f3664,f3663,f3662,f2849])).
fof(f4229,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f3922,f293])).
fof(f5446,plain,(
  ( ! [X10] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X10))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X10)))))) ) | $spl3),
  inference(forward_demodulation,[],[f5377,f240])).
fof(f5377,plain,(
  ( ! [X10] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X10))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X10))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X10)))))) ) | $spl3),
  inference(superposition,[],[f3922,f1618])).
fof(f5665,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | $spl3),
  inference(global_subsumption,[],[f5664,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3025,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f2849,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f262,f261,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3474,f3487,f3549,f3568,f3620,f3650,f291,f292,f1627,f1631,f1636,f1640,f2304,f2988,f2995,f3175,f3356,f3443,f3444,f3445,f3547,f3045,f3043,f3046,f3044,f3040,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f3656,f3628,f3605,f3599,f3516,f3482,f3481,f3479,f3477,f3471,f3469,f3468,f3466,f3464,f3460,f3459,f3452,f3451,f3447,f3437,f3414,f3374,f3184,f3176,f2989,f1634,f1629,f1618,f264,f263,f242,f3454])).
fof(f6222,plain,(
  ( ! [X59,X57,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57)))) ) | $spl3),
  inference(subsumption_resolution,[],[f5949,f4229])).
fof(f5939,plain,(
  ( ! [X30,X29] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29)))) ) | $spl3),
  inference(superposition,[],[f3922,f1617])).
fof(f5762,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8)))))) ) | $spl3),
  inference(subsumption_resolution,[],[f5738,f4229])).
fof(f5664,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl3),
  inference(subsumption_resolution,[],[f5650,f4229])).
fof(f3569,plain,(
  ( ! [X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9)))))) ) | $spl3),
  inference(forward_demodulation,[],[f3475,f240])).
fof(f3475,plain,(
  ( ! [X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9)))))) ) | $spl3),
  inference(superposition,[],[f1646,f1618])).
fof(f3511,plain,(
  ( ! [X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl3),
  inference(subsumption_resolution,[],[f3510,f3338])).
fof(f3510,plain,(
  ( ! [X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl3),
  inference(subsumption_resolution,[],[f3402,f3157])).
fof(f3157,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl3),
  inference(unit_resulting_resolution,[],[f1646,f293])).
fof(f33826,plain,(
  ( ! [X3] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl108),
  inference(trivial_inequality_removal,[],[f33774])).
fof(f33774,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl108),
  inference(superposition,[],[f259,f31310])).
fof(f34453,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f1493])).
fof(f34496,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34452,f34361])).
fof(f34361,plain,(
  ( ! [X6] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34360,f424])).
fof(f34360,plain,(
  ( ! [X6] : (p(s(bool,'F_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(forward_demodulation,[],[f34359,f34280])).
fof(f34359,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X8),s('type.rat.rat',X7)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34358,f34333])).
fof(f34333,plain,(
  ( ! [X323,X324] : (s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X323),s('type.rat.rat',X324)))) ) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34332,f1730])).
fof(f34332,plain,(
  ( ! [X323,X324] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X323),s('type.rat.rat',X324)))) ) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(forward_demodulation,[],[f34174,f3038])).
fof(f34174,plain,(
  ( ! [X323,X324] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X323),s('type.rat.rat',X324)))) ) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f33958,f23867])).
fof(f34358,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X8),s('type.rat.rat',X7)))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34186,f33958])).
fof(f34186,plain,(
  ( ! [X6,X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X8),s('type.rat.rat',X7)))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f33958,f24723])).
fof(f34452,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f1492])).
fof(f34495,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34451,f34400])).
fof(f34451,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f1491])).
fof(f34494,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34450,f34400])).
fof(f34450,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f1490])).
fof(f34493,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34449,f34361])).
fof(f34449,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f1489])).
fof(f34492,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34448,f34400])).
fof(f34448,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f1488])).
fof(f34491,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34447,f34400])).
fof(f34447,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f1563])).
fof(f34490,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34446,f34361])).
fof(f34446,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f1562])).
fof(f34489,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34445,f34400])).
fof(f34445,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f1561])).
fof(f34488,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34444,f34400])).
fof(f34444,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f1553])).
fof(f34487,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34443,f34361])).
fof(f34443,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f1552])).
fof(f34486,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34442,f34400])).
fof(f34442,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f1551])).
fof(f34485,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34441,f34400])).
fof(f34441,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f3660])).
fof(f34484,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34440,f34361])).
fof(f34440,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f3659])).
fof(f34483,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34439,f34400])).
fof(f34439,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f3658])).
fof(f34482,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34438,f34400])).
fof(f34438,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f3586])).
fof(f34481,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34437,f34361])).
fof(f34437,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f3585])).
fof(f34480,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34436,f34400])).
fof(f34436,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f3584])).
fof(f34479,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34435,f34400])).
fof(f34435,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f4007])).
fof(f34478,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34434,f34361])).
fof(f34434,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f4006])).
fof(f34477,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34433,f34400])).
fof(f34433,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f4005])).
fof(f34476,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34432,f34400])).
fof(f34432,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f1567])).
fof(f34475,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34431,f34361])).
fof(f34431,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f1566])).
fof(f34474,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34430,f34400])).
fof(f34430,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f1565])).
fof(f34473,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34429,f34400])).
fof(f34429,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f3614])).
fof(f34472,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34428,f34361])).
fof(f34428,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f3613])).
fof(f34471,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34427,f34400])).
fof(f34427,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f3612])).
fof(f34470,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34426,f34400])).
fof(f34426,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f1557])).
fof(f34469,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34425,f34361])).
fof(f34425,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f1556])).
fof(f34468,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34424,f34400])).
fof(f34424,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f1555])).
fof(f34467,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34423,f34400])).
fof(f34423,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f3664])).
fof(f34466,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34422,f34361])).
fof(f34422,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f3663])).
fof(f34465,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34421,f34400])).
fof(f34421,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f3662])).
fof(f34464,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34420,f34400])).
fof(f34420,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f3590])).
fof(f34463,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34419,f34361])).
fof(f34419,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f3589])).
fof(f34462,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34418,f34400])).
fof(f34418,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f3588])).
fof(f34461,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34417,f34400])).
fof(f34417,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f4028])).
fof(f34460,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34416,f34361])).
fof(f34416,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f4027])).
fof(f34459,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34415,f34400])).
fof(f34415,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f4026])).
fof(f34458,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34414,f34400])).
fof(f34414,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f3618])).
fof(f34457,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34413,f34361])).
fof(f34413,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f3617])).
fof(f34456,plain,(
  $false | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34412,f34400])).
fof(f34412,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl23 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f34400,f3616])).
fof(f34389,plain,(
  $false | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34388,f3038])).
fof(f34388,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(forward_demodulation,[],[f34213,f3038])).
fof(f34213,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f33958,f3040])).
fof(f34387,plain,(
  $false | ($spl3 | $spl85 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34386,f3038])).
fof(f34386,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl85 | $spl88 | $spl108 | $spl372)),
  inference(forward_demodulation,[],[f34212,f3038])).
fof(f34212,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl85 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f33958,f32662])).
fof(f32662,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | $spl85),
  inference(forward_demodulation,[],[f32659,f1445])).
fof(f32659,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | $spl85),
  inference(unit_resulting_resolution,[],[f3889,f293])).
fof(f34385,plain,(
  $false | ($spl3 | $spl85 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34211,f33958])).
fof(f34211,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | ($spl3 | $spl85 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f33958,f3889])).
fof(f34384,plain,(
  $false | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34383,f3038])).
fof(f34383,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(forward_demodulation,[],[f34210,f3038])).
fof(f34210,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f33958,f3039])).
fof(f34382,plain,(
  $false | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34381,f3038])).
fof(f34381,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(forward_demodulation,[],[f34208,f3038])).
fof(f34208,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f33958,f3045])).
fof(f34380,plain,(
  $false | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34379,f3038])).
fof(f34379,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(forward_demodulation,[],[f34207,f3038])).
fof(f34207,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f33958,f3043])).
fof(f34378,plain,(
  $false | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34377,f3038])).
fof(f34377,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(forward_demodulation,[],[f34206,f3038])).
fof(f34206,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f33958,f3046])).
fof(f34376,plain,(
  $false | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f34375,f3038])).
fof(f34375,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(forward_demodulation,[],[f34205,f3038])).
fof(f34205,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f33958,f3044])).
fof(f33946,plain,(
  ( ! [X38] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38)))))) ) | $spl394),
  inference(cnf_transformation,[],[f33946_D])).
fof(f33946_D,plain,(
  ( ! [X38] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38)))))) ) <=> ~$spl394),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl394])])).
fof(f33950,plain,(
  ( ! [X37,X36] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36)))))) ) | $spl398),
  inference(cnf_transformation,[],[f33950_D])).
fof(f33950_D,plain,(
  ( ! [X37,X36] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36)))))) ) <=> ~$spl398),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl398])])).
fof(f33954,plain,(
  ( ! [X30,X31,X32] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30)))))) ) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16598,f16599,f16539,f16543,f16544,f16603,f16604,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f20330,f20332,f20333,f16602,f17642,f20336,f16032,f20337,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20389,f20331,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f23287,f23290,f23291,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23306,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23510,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25181,f25182,f25183,f25184,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f24737,f21356,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f27310,f27320,f26310,f24702,f27321,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f27323,f27324,f27325,f27326,f27327,f27328,f27329,f27330,f27331,f5821,f27334,f3599,f27335,f27336,f27337,f27338,f27339,f27340,f27341,f24298,f29834,f29847,f29913,f29928,f29930,f29904,f29933,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3437,f3443,f3444,f3447,f3451,f3452,f20390,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30260,f30468,f30470,f30472,f30473,f27316,f25180,f5444,f29929,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069,f31311,f30075,f31312,f30205,f31313,f30221,f31314,f31315,f31316,f30240,f31317,f30467,f26279,f26264,f31318,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f31319,f24534,f24528,f24527,f24425,f24412,f31320,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f31321,f21794,f31322,f21781,f31323,f21780,f31324,f21429,f20329,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f31325,f15712,f15711,f31326,f15710,f15707,f15705,f15701,f15413,f31327,f15412,f15407,f15401,f31328,f15400,f14962,f31329,f14959,f31330,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f31331,f10100,f10099,f31332,f10098,f10095,f10093,f10088,f9998,f31333,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3927,f31335,f3628,f3605,f3482,f31336,f3481,f31337,f3479,f31338,f3477,f3469,f31339,f3468,f31340,f3466,f31341,f3464,f31342,f3460,f31343,f3459,f31344,f3414,f31345,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f3040,f24294,f32817,f32830,f32976,f33849,f33850,f33852,f33649,f33651,f33652,f33654,f33855,f33832,f33673,f33685,f33691,f33693,f33694,f33862,f33863,f33864,f33866,f33868,f33870,f33871,f33875,f33876,f33914,f33915,f33917,f33920,f33926,f33927,f33932,f33934,f33939,f33942,f33945,f33949,f33899,f33952,f33901])).
fof(f33901,plain,(
  ( ! [X30,X31,X32] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32)))))) ) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f33875,f31324])).
fof(f33927,plain,(
  ( ! [X6,X7,X5] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X5)))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(forward_demodulation,[],[f33886,f3038])).
fof(f33886,plain,(
  ( ! [X6,X7,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X5)))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(backward_demodulation,[],[f33875,f10106])).
fof(f33926,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4)))) ) | ($spl3 | $spl88 | $spl108)),
  inference(forward_demodulation,[],[f33885,f3038])).
fof(f33885,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4)))) ) | ($spl3 | $spl88 | $spl108)),
  inference(backward_demodulation,[],[f33875,f10105])).
fof(f33915,plain,(
  ( ! [X6,X7,X5] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X5)))))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(forward_demodulation,[],[f33879,f3038])).
fof(f33879,plain,(
  ( ! [X6,X7,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X5)))))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(backward_demodulation,[],[f33875,f10090])).
fof(f33914,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(forward_demodulation,[],[f33878,f3038])).
fof(f33878,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(backward_demodulation,[],[f33875,f10089])).
fof(f33876,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | ($spl3 | $spl88 | $spl108)),
  inference(backward_demodulation,[],[f33875,f3186])).
fof(f33871,plain,(
  ( ! [X80,X81,X82] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X81),s('type.rat.rat',X80))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X82))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X82))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X81),s('type.rat.rat',X80)))))) ) | $spl108),
  inference(forward_demodulation,[],[f33707,f286])).
fof(f33707,plain,(
  ( ! [X80,X81,X82] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X82))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X82))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X81),s('type.rat.rat',X80))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X80),s('type.rat.rat',X81)))))))) ) | $spl108),
  inference(superposition,[],[f3179,f31310])).
fof(f33870,plain,(
  ( ! [X78,X79,X77] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X78),s('type.rat.rat',X77))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X79))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X77),s('type.rat.rat',X78))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X79))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | $spl108),
  inference(forward_demodulation,[],[f33869,f286])).
fof(f33869,plain,(
  ( ! [X78,X79,X77] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X79))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X77),s('type.rat.rat',X78))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X79))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X77),s('type.rat.rat',X78)))))))) ) | $spl108),
  inference(forward_demodulation,[],[f33706,f1445])).
fof(f33706,plain,(
  ( ! [X78,X79,X77] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X79))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X79))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X78),s('type.rat.rat',X77))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X77),s('type.rat.rat',X78)))))))) ) | $spl108),
  inference(superposition,[],[f3174,f31310])).
fof(f33868,plain,(
  ( ! [X76,X74,X75] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X75),s('type.rat.rat',X74))))) | s('type.integer.int',X76) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X76))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | $spl108),
  inference(forward_demodulation,[],[f33867,f286])).
fof(f33867,plain,(
  ( ! [X76,X74,X75] : (s('type.integer.int',X76) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X76))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X74),s('type.rat.rat',X75)))))))) ) | $spl108),
  inference(forward_demodulation,[],[f33705,f1445])).
fof(f33705,plain,(
  ( ! [X76,X74,X75] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X76))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int',X76) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X75),s('type.rat.rat',X74))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X74),s('type.rat.rat',X75)))))))) ) | $spl108),
  inference(superposition,[],[f3036,f31310])).
fof(f33866,plain,(
  ( ! [X72,X71,X73] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X72),s('type.rat.rat',X71))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X73))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X73))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | $spl108),
  inference(forward_demodulation,[],[f33865,f286])).
fof(f33865,plain,(
  ( ! [X72,X71,X73] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X73))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X73))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X71),s('type.rat.rat',X72)))))))) ) | $spl108),
  inference(forward_demodulation,[],[f33704,f1445])).
fof(f33704,plain,(
  ( ! [X72,X71,X73] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X73))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X73))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X72),s('type.rat.rat',X71))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X71),s('type.rat.rat',X72)))))))) ) | $spl108),
  inference(superposition,[],[f3033,f31310])).
fof(f33864,plain,(
  ( ! [X70,X68,X69] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X69),s('type.rat.rat',X68))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X70))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X70) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X69),s('type.rat.rat',X68)))))) ) | $spl108),
  inference(forward_demodulation,[],[f33703,f286])).
fof(f33703,plain,(
  ( ! [X70,X68,X69] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X70))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X70) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X69),s('type.rat.rat',X68))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X68),s('type.rat.rat',X69)))))))) ) | $spl108),
  inference(superposition,[],[f3031,f31310])).
fof(f33863,plain,(
  ( ! [X66,X67,X65] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X65))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X67))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X67))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X65)))))) ) | $spl108),
  inference(forward_demodulation,[],[f33702,f286])).
fof(f33702,plain,(
  ( ! [X66,X67,X65] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X67))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X67))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X65))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X65),s('type.rat.rat',X66)))))))) ) | $spl108),
  inference(superposition,[],[f3030,f31310])).
fof(f33862,plain,(
  ( ! [X61,X60] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X61),s('type.rat.rat',X60))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X61),s('type.rat.rat',X60))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | $spl108),
  inference(forward_demodulation,[],[f33700,f286])).
fof(f33700,plain,(
  ( ! [X61,X60] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X61),s('type.rat.rat',X60))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X61)))))))) ) | $spl108),
  inference(superposition,[],[f1445,f31310])).
fof(f33694,plain,(
  ( ! [X50,X51,X49] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X50),s('type.rat.rat',X51))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X49))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X50))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X49)))))) ) | $spl108),
  inference(superposition,[],[f3179,f31310])).
fof(f33693,plain,(
  ( ! [X47,X48,X46] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X47),s('type.rat.rat',X48))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X46))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X48),s('type.rat.rat',X47))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X46)))))) ) | $spl108),
  inference(superposition,[],[f3174,f31310])).
fof(f33691,plain,(
  ( ! [X43,X42] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X42))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X43))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X42)))))) ) | $spl108),
  inference(superposition,[],[f3173,f31310])).
fof(f33685,plain,(
  ( ! [X28,X29] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X29))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X28))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X28)))))) ) | $spl108),
  inference(superposition,[],[f2987,f31310])).
fof(f33673,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4)))))) ) | $spl108),
  inference(superposition,[],[f1245,f31310])).
fof(f33832,plain,(
  ( ! [X3] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3)))))) ) | $spl108),
  inference(trivial_inequality_removal,[],[f33672])).
fof(f33672,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3)))))) ) | $spl108),
  inference(superposition,[],[f263,f31310])).
fof(f33855,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))) ) | $spl108),
  inference(forward_demodulation,[],[f33854,f286])).
fof(f33854,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))) ) | $spl108),
  inference(forward_demodulation,[],[f33656,f286])).
fof(f33656,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))) ) | $spl108),
  inference(superposition,[],[f31310,f286])).
fof(f33654,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl108),
  inference(superposition,[],[f31310,f31310])).
fof(f33652,plain,(
  ( ! [X10,X11,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X10))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11)))) ) | $spl108),
  inference(superposition,[],[f31310,f1617])).
fof(f33651,plain,(
  ( ! [X6,X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))) | s(bool,X8) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X8)) ) | $spl108),
  inference(superposition,[],[f31310,f2306])).
fof(f33649,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl108),
  inference(superposition,[],[f31310,f3238])).
fof(f33852,plain,(
  ( ! [X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl3 | $spl108)),
  inference(subsumption_resolution,[],[f33851,f3338])).
fof(f33851,plain,(
  ( ! [X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11)))) ) | ($spl3 | $spl108)),
  inference(subsumption_resolution,[],[f33646,f20329])).
fof(f33646,plain,(
  ( ! [X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X11),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11)))) ) | $spl108),
  inference(superposition,[],[f31310,f3238])).
fof(f33850,plain,(
  ( ! [X10,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) | s(bool,X10) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X10)) ) | ($spl3 | $spl108)),
  inference(subsumption_resolution,[],[f33645,f20329])).
fof(f33645,plain,(
  ( ! [X10,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) | s(bool,X10) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X10)) ) | $spl108),
  inference(superposition,[],[f31310,f2306])).
fof(f33849,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) ) | ($spl3 | $spl108)),
  inference(subsumption_resolution,[],[f33848,f3338])).
fof(f33848,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) ) | ($spl3 | $spl108)),
  inference(subsumption_resolution,[],[f33641,f20329])).
fof(f33641,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) ) | $spl108),
  inference(superposition,[],[f31310,f1617])).
fof(f32976,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(forward_demodulation,[],[f32975,f286])).
fof(f32975,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(forward_demodulation,[],[f32974,f286])).
fof(f32974,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(forward_demodulation,[],[f32954,f286])).
fof(f32954,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(superposition,[],[f31335,f286])).
fof(f32830,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) | s(bool,'T_0') = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl108),
  inference(subsumption_resolution,[],[f32798,f424])).
fof(f32798,plain,(
  ( ! [X2] : (p(s(bool,'F_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) | s(bool,'T_0') = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl108),
  inference(superposition,[],[f30468,f241])).
fof(f32817,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl108),
  inference(forward_demodulation,[],[f32816,f286])).
fof(f32816,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl108),
  inference(forward_demodulation,[],[f32815,f286])).
fof(f32815,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))))) ) | $spl108),
  inference(forward_demodulation,[],[f32791,f286])).
fof(f32791,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))))))) ) | $spl108),
  inference(superposition,[],[f30468,f286])).
fof(f24294,plain,(
  ( ! [X39,X37,X41,X38,X42,X40] : (s(bool,'T_0') != s(bool,f(s(bool,X39))) | s(fun(bool,bool),X37) = s(fun(bool,bool),X38) | s(bool,X40) = s(bool,g(s(bool,sK14(X37,X38,bool,bool)))) | s(bool,'T_0') = s(bool,X40) | s(bool,X41) = s(bool,sK14(X37,X38,bool,bool)) | s(bool,'T_0') = s(bool,X39) | s(bool,X41) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(superposition,[],[f1997,f1799])).
fof(f31345,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f24702,f27321,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f27323,f27324,f27326,f27327,f27328,f27329,f27330,f27331,f5821,f27334,f3599,f27335,f27336,f27337,f27338,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3437,f3443,f3444,f3447,f3451,f3452,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30260,f30468,f30470,f30472,f30473,f27316,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069,f31311,f30075,f31312,f30205,f30221,f31314,f30240,f31317,f30467,f26279,f26264,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f24534,f24528,f24527,f24425,f24412,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f31321,f21794,f21781,f31323,f21780,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f31325,f15712,f15711,f31326,f15710,f15707,f15705,f15701,f15413,f15412,f15407,f15401,f31328,f15400,f14962,f31329,f14959,f31330,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f31332,f10098,f10095,f10093,f10088,f9998,f31333,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3605,f3482,f3481,f3479,f3477,f3469,f31339,f3468,f31340,f3466,f31341,f3464,f3460,f31343,f3459,f31344,f3414])).
fof(f31344,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5)))))))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f24702,f27321,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f27323,f27324,f27326,f27327,f27328,f27329,f27330,f27331,f5821,f27334,f3599,f27335,f27336,f27337,f27338,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30260,f30468,f30470,f30472,f30473,f27316,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069,f31311,f30075,f31312,f30205,f30221,f31314,f30240,f31317,f30467,f26279,f26264,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f24534,f24528,f24527,f24425,f24412,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f31321,f21794,f21781,f31323,f21780,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f31325,f15712,f15711,f31326,f15710,f15707,f15705,f15701,f15413,f15412,f15407,f15401,f31328,f15400,f14962,f31329,f14959,f31330,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f31332,f10098,f10095,f10093,f10088,f9998,f31333,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3605,f3482,f3481,f3479,f3477,f3469,f31339,f3468,f31340,f3466,f31341,f3464,f3460,f31343,f3459])).
fof(f31343,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))) | s('type.integer.int',X8) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7)))))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f24702,f27321,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f27323,f27324,f27326,f27327,f27328,f27329,f27330,f27331,f5821,f27334,f3599,f27335,f27336,f27337,f27338,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30260,f30468,f30470,f30472,f30473,f27316,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069,f31311,f30075,f31312,f30205,f30221,f31314,f30240,f31317,f30467,f26279,f26264,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f24534,f24528,f24527,f24425,f24412,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f31321,f21794,f21781,f31323,f21780,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f31325,f15712,f15711,f31326,f15710,f15707,f15705,f15701,f15413,f15412,f15407,f15401,f31328,f15400,f14962,f31329,f14959,f31330,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f31332,f10098,f10095,f10093,f10088,f9998,f31333,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3605,f3482,f3481,f3479,f3477,f3469,f31339,f3468,f31340,f3466,f31341,f3464,f3460])).
fof(f31342,plain,(
  ( ! [X15,X16] : (s('type.integer.int',X16) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) ) | $spl372),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f24702,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f5821,f3599,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3487,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f5444,f29929,f3471,f3656,f5918,f15731,f16910,f21690,f21764,f24427,f25069,f30075,f30205,f30221,f30240,f31317,f26279,f26264,f31318,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f31319,f24534,f24528,f24527,f24425,f24412,f31320,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f21794,f31322,f21781,f21780,f31324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f15712,f15711,f15710,f15707,f15705,f15701,f15413,f31327,f15412,f15407,f15401,f15400,f14962,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f31331,f10100,f10099,f10098,f10095,f10093,f10088,f9998,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3605,f3482,f31336,f3481,f31337,f3479,f31338,f3477,f3469,f3468,f3466,f3464])).
fof(f31341,plain,(
  ( ! [X19,X20] : (s('type.integer.int',X20) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f24702,f27321,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f27323,f27324,f27326,f27327,f27328,f27329,f27330,f27331,f5821,f27334,f3599,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30260,f30468,f30470,f30472,f30473,f27316,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069,f31311,f30075,f31312,f30205,f30221,f31314,f30240,f31317,f30467,f26279,f26264,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f24534,f24528,f24527,f24425,f24412,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f31321,f21794,f21781,f31323,f21780,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f31325,f15712,f15711,f31326,f15710,f15707,f15705,f15701,f15413,f15412,f15407,f15401,f31328,f15400,f14962,f31329,f14959,f31330,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f31332,f10098,f10095,f10093,f10088,f9998,f31333,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3605,f3482,f3481,f3479,f3477,f3469,f31339,f3468,f31340,f3466])).
fof(f31340,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f24702,f27321,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f27323,f27324,f27326,f27327,f27328,f27329,f27330,f27331,f5821,f27334,f3599,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30260,f30468,f30470,f30472,f30473,f27316,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069,f31311,f30075,f31312,f30205,f30221,f31314,f30240,f31317,f30467,f26279,f26264,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f24534,f24528,f24527,f24425,f24412,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f31321,f21794,f21781,f31323,f21780,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f31325,f15712,f15711,f31326,f15710,f15707,f15705,f15701,f15413,f15412,f15407,f15401,f31328,f15400,f14962,f31329,f14959,f31330,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f31332,f10098,f10095,f10093,f10088,f9998,f31333,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3605,f3482,f3481,f3479,f3477,f3469,f31339,f3468])).
fof(f31339,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26)))))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f24702,f27321,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f27323,f27324,f27326,f27327,f27328,f27329,f27330,f27331,f5821,f27334,f3599,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30260,f30468,f30470,f30472,f30473,f27316,f5444,f3471,f3656,f31306,f5918,f31307,f15731,f16910,f21690,f31309,f21764,f31310,f24427,f25069,f31311,f30075,f31312,f30205,f30221,f31314,f30240,f31317,f30467,f26279,f26264,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f24534,f24528,f24527,f24425,f24412,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f31321,f21794,f21781,f31323,f21780,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f31325,f15712,f15711,f31326,f15710,f15707,f15705,f15701,f15413,f15412,f15407,f15401,f31328,f15400,f14962,f31329,f14959,f31330,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f31332,f10098,f10095,f10093,f10088,f9998,f31333,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3605,f3482,f3481,f3479,f3477,f3469])).
fof(f31338,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int',X16) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) ) | $spl372),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f24702,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f5821,f3599,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3487,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f5444,f29929,f3471,f3656,f5918,f15731,f16910,f21690,f21764,f24427,f25069,f30075,f30205,f30221,f30240,f31317,f26279,f26264,f31318,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f31319,f24534,f24528,f24527,f24425,f24412,f31320,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f21794,f31322,f21781,f21780,f31324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f15712,f15711,f15710,f15707,f15705,f15701,f15413,f31327,f15412,f15407,f15401,f15400,f14962,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f31331,f10100,f10099,f10098,f10095,f10093,f10088,f9998,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3605,f3482,f31336,f3481,f31337,f3479])).
fof(f31337,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20)))))))) ) | $spl372),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f24702,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f5821,f3599,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3487,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f5444,f29929,f3471,f3656,f5918,f15731,f16910,f21690,f21764,f24427,f25069,f30075,f30205,f30221,f30240,f31317,f26279,f26264,f31318,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f31319,f24534,f24528,f24527,f24425,f24412,f31320,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f21794,f31322,f21781,f21780,f31324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f15712,f15711,f15710,f15707,f15705,f15701,f15413,f31327,f15412,f15407,f15401,f15400,f14962,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f31331,f10100,f10099,f10098,f10095,f10093,f10088,f9998,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3605,f3482,f31336,f3481])).
fof(f31336,plain,(
  ( ! [X21,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl372),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f24702,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f5821,f3599,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3487,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f5444,f29929,f3471,f3656,f5918,f15731,f16910,f21690,f21764,f24427,f25069,f30075,f30205,f30221,f30240,f31317,f26279,f26264,f31318,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f31319,f24534,f24528,f24527,f24425,f24412,f31320,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f21794,f31322,f21781,f21780,f31324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f15712,f15711,f15710,f15707,f15705,f15701,f15413,f31327,f15412,f15407,f15401,f15400,f14962,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f31331,f10100,f10099,f10098,f10095,f10093,f10088,f9998,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3605,f3482])).
fof(f31331,plain,(
  ( ! [X35,X36] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X36))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))))) ) | $spl372),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f24702,f24578,f24556,f24533,f24444,f24409,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f3487,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f5444,f29929,f3471,f3656,f5918,f15731,f16910,f21690,f21764,f24427,f25069,f30075,f30205,f30221,f30240,f31317,f26279,f26264,f31318,f26262,f26261,f26257,f26255,f26254,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24557,f24536,f31319,f24534,f24528,f24527,f24425,f24412,f31320,f24410,f24406,f24404,f24403,f23877,f23320,f23215,f23135,f22061,f21817,f21794,f31322,f21781,f21780,f31324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f15712,f15711,f15710,f15707,f15705,f15701,f15413,f31327,f15412,f15407,f15401,f15400,f14962,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102])).
fof(f20337,plain,(
  ( ! [X15] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(global_subsumption,[],[f3927,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3025,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f262,f261,f3419,f3434,f3435,f3439,f3440,f3449,f3549,f3650,f291,f292,f1627,f1631,f1636,f1640,f2304,f2988,f2995,f3175,f3356,f3443,f3444,f3445,f3547,f3040,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f3516,f3452,f3451,f3447,f3437,f1618,f242,f5664,f5762,f5763,f5747,f4649,f5819,f5836,f5837,f5859,f5860,f6054,f5904,f5905,f5912,f6049,f5918,f5919,f5921,f5923,f5924,f5930,f5931,f5932,f5933,f5936,f5937,f5939,f5940,f5942,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f3045,f3043,f3046,f3044,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f9997,f10122,f10089,f10090,f10093,f10095,f10100,f10104,f10105,f10106,f10113,f10115,f10118,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14322,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14953,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15400,f15407,f15409,f15455,f15702,f15703,f15705,f15707,f15712,f15715,f15717,f15729,f15714,f15711,f15710,f15701,f15413,f15412,f15401,f14962,f14959,f10119,f10102,f10099,f10098,f10088,f9998,f5821,f5737,f5665,f5446,f4229,f3922,f3656,f3628,f3620,f3605,f3599,f3568,f3487,f3482,f3481,f3479,f3477,f3474,f3472,f3471,f3469,f3468,f3466,f3464,f3460,f3459,f3454,f3414,f3374,f3184,f3176,f2989,f1634,f1629,f264,f263,f16487,f16488,f16490,f16567,f16495,f16496,f16504,f16505,f16506,f16508,f16510,f16512,f16514,f16515,f16522,f16523,f16524,f16526,f16527,f16595,f16529,f16532,f16596,f16598,f16599,f16539,f16541,f16543,f16544,f16603,f16604,f16551,f16552,f16553,f16727,f16729,f16731,f16732,f16743,f16884,f16885,f16887,f16890,f16891,f16892,f16907,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17304,f17305,f17313,f17314,f17315,f17317,f17318,f17706,f17321,f17707,f17324,f17643,f17330,f17331,f17333,f17335,f17336,f17343,f17344,f17345,f17346,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17365,f17367,f17368,f17709,f17375,f17376,f17377,f17378,f17641,f17710,f17715,f17716,f17621,f17473,f17753,f17755,f17760,f17768,f17770,f17562,f18365,f18366,f18368,f18370,f18371,f2849,f20329,f3652,f20330,f20331,f20332,f20333,f16602,f17642,f20336,f16032])).
fof(f33953,plain,(
  ( ! [X34] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X34))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl402),
  inference(cnf_transformation,[],[f33953_D])).
fof(f33953_D,plain,(
  ( ! [X34] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X34))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl402),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl402])])).
fof(f33952,plain,(
  ( ! [X33,X34] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X34))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33)))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(forward_demodulation,[],[f33900,f3038])).
fof(f33900,plain,(
  ( ! [X33,X34] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X34))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33)))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(backward_demodulation,[],[f33875,f31323])).
fof(f33951,plain,(
  ( ! [X37,X36] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37)))))))) ) | $spl400),
  inference(cnf_transformation,[],[f33951_D])).
fof(f33951_D,plain,(
  ( ! [X37,X36] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37)))))))) ) <=> ~$spl400),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl400])])).
fof(f33899,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37)))))))) ) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f33875,f31320])).
fof(f33949,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) ) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(subsumption_resolution,[],[f33948,f33855])).
fof(f33948,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) ) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(forward_demodulation,[],[f33898,f3038])).
fof(f33898,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) ) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f33875,f31319])).
fof(f33947,plain,(
  ( ! [X39,X40] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X39))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X39),s('type.rat.rat',X40)))))))) ) | $spl396),
  inference(cnf_transformation,[],[f33947_D])).
fof(f33947_D,plain,(
  ( ! [X39,X40] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X39))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X39),s('type.rat.rat',X40)))))))) ) <=> ~$spl396),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl396])])).
fof(f33945,plain,(
  ( ! [X39,X38,X40] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X39))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38)))))) ) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(forward_demodulation,[],[f33897,f3038])).
fof(f33897,plain,(
  ( ! [X39,X38,X40] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X39))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38)))))) ) | ($spl3 | $spl88 | $spl108 | $spl372)),
  inference(backward_demodulation,[],[f33875,f31318])).
fof(f33918,plain,(
  ( ! [X12] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl384),
  inference(cnf_transformation,[],[f33918_D])).
fof(f33918_D,plain,(
  ( ! [X12] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl384),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl384])])).
fof(f33940,plain,(
  ( ! [X49] : (s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X49)))) ) | $spl392),
  inference(cnf_transformation,[],[f33940_D])).
fof(f33940_D,plain,(
  ( ! [X49] : (s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X49)))) ) <=> ~$spl392),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl392])])).
fof(f33942,plain,(
  ( ! [X109,X108] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X109))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X108),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(duplicate_literal_removal,[],[f33941])).
fof(f33941,plain,(
  ( ! [X109,X108] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X109))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X108),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108)))) ) | ($spl3 | $spl88 | $spl108)),
  inference(forward_demodulation,[],[f33895,f3038])).
fof(f33895,plain,(
  ( ! [X109,X108] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X109))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X108),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108)))) ) | ($spl3 | $spl88 | $spl108)),
  inference(backward_demodulation,[],[f33875,f24717])).
fof(f33931,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl388),
  inference(cnf_transformation,[],[f33931_D])).
fof(f33931_D,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl388),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl388])])).
fof(f33939,plain,(
  ( ! [X50,X49] : (s('type.integer.int',X50) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X50))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X49)))) ) | ($spl3 | $spl88 | $spl108)),
  inference(forward_demodulation,[],[f33894,f3038])).
fof(f33894,plain,(
  ( ! [X50,X49] : (s('type.integer.int',X50) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X50))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X49)))) ) | ($spl3 | $spl88 | $spl108)),
  inference(backward_demodulation,[],[f33875,f24687])).
fof(f22697,plain,(
  ( ! [X10,X11] : (s(bool,X11) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X11)) ) | $spl268),
  inference(cnf_transformation,[],[f22697_D])).
fof(f22697_D,plain,(
  ( ! [X10,X11] : (s(bool,X11) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X11)) ) <=> ~$spl268),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl268])])).
fof(f33936,plain,(
  ( ! [X132,X130,X131] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X131))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X132) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X132)) ) | ($spl3 | $spl23 | $spl88 | $spl108)),
  inference(subsumption_resolution,[],[f33935,f17357])).
fof(f17357,plain,(
  ( ! [X31,X32] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X31))) | s(bool,X32) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X31),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X32)) ) | $spl23),
  inference(superposition,[],[f1730,f2306])).
fof(f33935,plain,(
  ( ! [X132,X130,X131] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X130))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X131))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X132) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X132)) ) | ($spl3 | $spl88 | $spl108)),
  inference(forward_demodulation,[],[f33892,f3038])).
fof(f33892,plain,(
  ( ! [X132,X130,X131] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X130))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X131))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X132) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X132)) ) | ($spl3 | $spl88 | $spl108)),
  inference(backward_demodulation,[],[f33875,f17345])).
fof(f33934,plain,(
  ( ! [X54,X55,X53] : (s('type.integer.int',X54) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X54))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X55) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X55)) ) | ($spl3 | $spl88 | $spl108)),
  inference(forward_demodulation,[],[f33891,f3038])).
fof(f33891,plain,(
  ( ! [X54,X55,X53] : (s('type.integer.int',X54) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X54))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X55) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X55)) ) | ($spl3 | $spl88 | $spl108)),
  inference(backward_demodulation,[],[f33875,f17318])).
fof(f1644,plain,(
  ( ! [X2] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) ) | $spl0),
  inference(cnf_transformation,[],[f1644_D])).
fof(f1644_D,plain,(
  ( ! [X2] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f33933,plain,(
  ( ! [X16] : (s('type.integer.int',X16) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl390),
  inference(cnf_transformation,[],[f33933_D])).
fof(f33933_D,plain,(
  ( ! [X16] : (s('type.integer.int',X16) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl390),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl390])])).
fof(f33932,plain,(
  ( ! [X15,X16] : (s('type.integer.int',X16) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(forward_demodulation,[],[f33889,f3038])).
fof(f33889,plain,(
  ( ! [X15,X16] : (s('type.integer.int',X16) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(backward_demodulation,[],[f33875,f10118])).
fof(f33930,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl3 | $spl23 | $spl88 | $spl108)),
  inference(forward_demodulation,[],[f33929,f3038])).
fof(f33929,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl3 | $spl23 | $spl88 | $spl108)),
  inference(condensation,[],[f33928])).
fof(f33928,plain,(
  ( ! [X2,X3,X1] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | ($spl3 | $spl23 | $spl88 | $spl108)),
  inference(subsumption_resolution,[],[f33887,f33925])).
fof(f33925,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl3 | $spl23 | $spl88 | $spl108)),
  inference(subsumption_resolution,[],[f33924,f1730])).
fof(f33924,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(forward_demodulation,[],[f33884,f3038])).
fof(f33884,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(backward_demodulation,[],[f33875,f10104])).
fof(f33887,plain,(
  ( ! [X2,X3,X1] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | ($spl3 | $spl88 | $spl108)),
  inference(backward_demodulation,[],[f33875,f10113])).
fof(f33921,plain,(
  ( ! [X26] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | $spl386),
  inference(cnf_transformation,[],[f33921_D])).
fof(f33921_D,plain,(
  ( ! [X26] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) <=> ~$spl386),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl386])])).
fof(f33920,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(duplicate_literal_removal,[],[f33919])).
fof(f33919,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(forward_demodulation,[],[f33882,f3038])).
fof(f33882,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl3 | $spl88 | $spl108)),
  inference(backward_demodulation,[],[f33875,f10098])).
fof(f22688,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) ) | $spl264),
  inference(cnf_transformation,[],[f22688_D])).
fof(f22688_D,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) ) <=> ~$spl264),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl264])])).
fof(f33917,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13)))) ) | ($spl3 | $spl88 | $spl108)),
  inference(duplicate_literal_removal,[],[f33916])).
fof(f33916,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13)))) ) | ($spl3 | $spl88 | $spl108)),
  inference(forward_demodulation,[],[f33880,f3038])).
fof(f33880,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13)))) ) | ($spl3 | $spl88 | $spl108)),
  inference(backward_demodulation,[],[f33875,f10093])).
fof(f2234,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl28),
  inference(cnf_transformation,[],[f2234_D])).
fof(f2234_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f32953,plain,(
  ( ! [X61,X59,X60] : (sP0(g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat',X60)))),X61) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59)))))) ) | $spl382),
  inference(cnf_transformation,[],[f32953_D])).
fof(f32953_D,plain,(
  ( ! [X61,X59,X60] : (sP0(g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat',X60)))),X61) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59)))))) ) <=> ~$spl382),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl382])])).
fof(f32929,plain,(
  ( ! [X61,X59,X60,X58] : (sP0(g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat',X60)))),X61) | s(bool,'T_0') = s(bool,X58) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59)))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f32912])).
fof(f32912,plain,(
  ( ! [X61,X59,X60,X58] : (sP0(g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat',X60)))),X61) | s(bool,'T_0') = s(bool,X58) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59))))) | s(bool,'T_0') = s(bool,X58)) ) | $spl90),
  inference(superposition,[],[f29792,f2305])).
fof(f29792,plain,(
  ( ! [X0,X1] : (sP0(g(s(bool,X0)),X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f29747,f241])).
fof(f29747,plain,(
  ( ! [X4] : (sP0(g(s(bool,'F_0')),X4)) ) | $spl90),
  inference(subsumption_resolution,[],[f29658,f233])).
fof(f29658,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | sP0(g(s(bool,'F_0')),X4)) ) | $spl90),
  inference(superposition,[],[f303,f4041])).
fof(f31862,plain,(
  ( ! [X45,X44] : (sP1('T_0',f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat',X45))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X45),s('type.rat.rat',X44)))))) ) | $spl380),
  inference(cnf_transformation,[],[f31862_D])).
fof(f31862_D,plain,(
  ( ! [X45,X44] : (sP1('T_0',f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat',X45))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X45),s('type.rat.rat',X44)))))) ) <=> ~$spl380),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl380])])).
fof(f31837,plain,(
  ( ! [X45,X43,X44] : (sP1('T_0',f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat',X45))))) | s(bool,'T_0') = s(bool,X43) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X45),s('type.rat.rat',X44)))))) ) | ($spl26 | $spl99)),
  inference(duplicate_literal_removal,[],[f31820])).
fof(f31820,plain,(
  ( ! [X45,X43,X44] : (sP1('T_0',f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat',X45))))) | s(bool,'T_0') = s(bool,X43) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X45),s('type.rat.rat',X44))))) | s(bool,'T_0') = s(bool,X43)) ) | ($spl26 | $spl99)),
  inference(superposition,[],[f28715,f2305])).
fof(f28715,plain,(
  ( ! [X0] : (sP1('T_0',f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl26 | $spl99)),
  inference(superposition,[],[f28252,f241])).
fof(f28252,plain,(
  sP1('T_0',f(s(bool,'F_0'))) | ($spl26 | $spl99)),
  inference(unit_resulting_resolution,[],[f4047,f2820])).
fof(f2820,plain,(
  ( ! [X0] : (sP1('T_0',X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl26),
  inference(subsumption_resolution,[],[f2806,f424])).
fof(f2806,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | sP1('T_0',X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl26),
  inference(superposition,[],[f2233,f241])).
fof(f31308,plain,(
  ( ! [X42] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X42)))))) ) | $spl378),
  inference(cnf_transformation,[],[f31308_D])).
fof(f31308_D,plain,(
  ( ! [X42] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X42)))))) ) <=> ~$spl378),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl378])])).
fof(f31307,plain,(
  ( ! [X43,X42] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X42))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43)))) ) | $spl108),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f4649,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16487,f16488,f16567,f16496,f16505,f16506,f16512,f16526,f16527,f16595,f16529,f16532,f16596,f16539,f16543,f16544,f16551,f16727,f16729,f16732,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17258,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f16602,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18371,f16891,f16890,f16553,f16552,f16541,f16524,f16523,f16522,f16515,f16514,f16510,f16508,f16504,f16495,f16490,f3620,f2304,f16911,f16910,f16747,f16746,f16594,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25183,f25189,f25190,f25324,f25337,f25340,f25342,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f27317,f21799,f21830,f27318,f23035,f21947,f21801,f21783,f3549,f27319,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f27321,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f27323,f27324,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f27326,f15712,f27327,f15710,f15707,f15705,f15701,f27328,f15412,f15407,f27329,f15400,f27330,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f27331,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f27334,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f27335,f27336,f27337,f27338,f3464,f27339,f27340,f27341,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29834,f29847,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f30218,f30464,f30294,f30465,f30216,f30466,f30195,f30467,f30260,f30468,f30470,f30472,f30473,f27316,f26254,f22061,f5444,f3471,f3656,f31306,f5918])).
fof(f31305,plain,(
  $false | ($spl65 | $spl84)),
  inference(subsumption_resolution,[],[f31304,f1445])).
fof(f31304,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | ($spl65 | $spl84)),
  inference(forward_demodulation,[],[f31303,f1445])).
fof(f31303,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | ($spl65 | $spl84)),
  inference(forward_demodulation,[],[f3514,f30511])).
fof(f30511,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl84),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f5444,f30504,f30510])).
fof(f30510,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | $spl84),
  inference(forward_demodulation,[],[f30509,f3888])).
fof(f30509,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl84),
  inference(subsumption_resolution,[],[f30387,f1492])).
fof(f30387,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | $spl84),
  inference(superposition,[],[f3638,f3888])).
fof(f30435,plain,(
  ( ! [X21,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X20),s('type.rat.rat',X21)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30380,f286])).
fof(f30380,plain,(
  ( ! [X21,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))) ) | $spl84),
  inference(superposition,[],[f3030,f3888])).
fof(f30433,plain,(
  ( ! [X19] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30379,f286])).
fof(f30379,plain,(
  ( ! [X19] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))) ) | $spl84),
  inference(superposition,[],[f2991,f3888])).
fof(f30431,plain,(
  ( ! [X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30378,f286])).
fof(f30378,plain,(
  ( ! [X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))) ) | $spl84),
  inference(superposition,[],[f2991,f3888])).
fof(f30429,plain,(
  ( ! [X17] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30377,f286])).
fof(f30377,plain,(
  ( ! [X17] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))) ) | $spl84),
  inference(superposition,[],[f2987,f3888])).
fof(f30424,plain,(
  ( ! [X8] : (s('type.integer.int',X8) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30368,f286])).
fof(f30368,plain,(
  ( ! [X8] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X8) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))) ) | $spl84),
  inference(superposition,[],[f1246,f3888])).
fof(f30364,plain,(
  ( ! [X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5)))))))) ) | $spl84),
  inference(superposition,[],[f3179,f3888])).
fof(f30363,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))))) ) | $spl84),
  inference(superposition,[],[f3174,f3888])).
fof(f30362,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X3))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X3) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))))) ) | $spl84),
  inference(superposition,[],[f3036,f3888])).
fof(f30361,plain,(
  ( ! [X2] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))))) ) | $spl84),
  inference(superposition,[],[f3033,f3888])).
fof(f30360,plain,(
  ( ! [X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X1) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))) ) | $spl84),
  inference(superposition,[],[f3031,f3888])).
fof(f30359,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))) ) | $spl84),
  inference(superposition,[],[f3030,f3888])).
fof(f30358,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | $spl84),
  inference(superposition,[],[f1445,f3888])).
fof(f30408,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | $spl84),
  inference(forward_demodulation,[],[f30351,f1445])).
fof(f30351,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | $spl84),
  inference(unit_resulting_resolution,[],[f3888,f294])).
fof(f30403,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | $spl84),
  inference(forward_demodulation,[],[f30354,f1445])).
fof(f30354,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | $spl84),
  inference(unit_resulting_resolution,[],[f3888,f294])).
fof(f31302,plain,(
  $false | ($spl84 | $spl107 | $spl372)),
  inference(global_subsumption,[],[f29929,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167,f30435,f30433,f30431,f30429,f30424,f30364,f30363,f30362,f30361,f30360,f30359,f30358,f30408,f30403,f31247,f31280,f31285,f31294])).
fof(f31294,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s(bool,X4) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl84),
  inference(subsumption_resolution,[],[f31293,f30615])).
fof(f31293,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s(bool,X4) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl84),
  inference(forward_demodulation,[],[f31292,f3888])).
fof(f31292,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s(bool,X4) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl84),
  inference(forward_demodulation,[],[f31291,f1445])).
fof(f31291,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s(bool,X4) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl84),
  inference(forward_demodulation,[],[f21690,f30511])).
fof(f31285,plain,(
  ( ! [X78] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X78))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X78))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X78)))))) ) | $spl84),
  inference(forward_demodulation,[],[f24702,f30511])).
fof(f31280,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) | s(bool,X10) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X10)) ) | $spl84),
  inference(subsumption_resolution,[],[f31279,f30615])).
fof(f31279,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) | s(bool,X10) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X10)) ) | $spl84),
  inference(forward_demodulation,[],[f31278,f3888])).
fof(f31278,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) | s(bool,X10) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X10)) ) | $spl84),
  inference(forward_demodulation,[],[f31277,f1445])).
fof(f31277,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) | s(bool,X10) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X10)) ) | $spl84),
  inference(forward_demodulation,[],[f30074,f30511])).
fof(f30074,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) | s(bool,X10) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f28786,f2306])).
fof(f31247,plain,(
  ( ! [X28,X29,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27))))) | s(bool,X29) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27)))))) ) | $spl84),
  inference(subsumption_resolution,[],[f31246,f30615])).
fof(f31246,plain,(
  ( ! [X28,X29,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27))))) | s(bool,X29) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27)))))) ) | $spl84),
  inference(forward_demodulation,[],[f31245,f3888])).
fof(f31245,plain,(
  ( ! [X28,X29,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27))))) | s(bool,X29) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27)))))) ) | $spl84),
  inference(forward_demodulation,[],[f31244,f1445])).
fof(f31244,plain,(
  ( ! [X28,X29,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27))))) | s(bool,X29) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30226,f30511])).
fof(f30226,plain,(
  ( ! [X28,X29,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27))))) | s(bool,X29) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27)))))) )),
  inference(superposition,[],[f2306,f28786])).
fof(f31167,plain,(
  ( ! [X30,X31,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30)))) ) | $spl84),
  inference(forward_demodulation,[],[f31166,f3888])).
fof(f31166,plain,(
  ( ! [X30,X31,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30)))) ) | $spl84),
  inference(forward_demodulation,[],[f30825,f1445])).
fof(f30825,plain,(
  ( ! [X30,X31,X32] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30)))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f26262])).
fof(f31164,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))))))) | s(bool,X29) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29)) ) | $spl84),
  inference(forward_demodulation,[],[f31163,f3888])).
fof(f31163,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))))))) | s(bool,X29) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29)) ) | $spl84),
  inference(forward_demodulation,[],[f30824,f1445])).
fof(f30824,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))))))) | s(bool,X29) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f26261])).
fof(f31146,plain,(
  ( ! [X70,X68,X69] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X70))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X70) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X68),s('type.rat.rat',X69))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X68),s('type.rat.rat',X69))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X68),s('type.rat.rat',X69)))))) ) | $spl84),
  inference(forward_demodulation,[],[f31145,f3888])).
fof(f31145,plain,(
  ( ! [X70,X68,X69] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X70))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int',X70) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X68),s('type.rat.rat',X69))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X68),s('type.rat.rat',X69))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X68),s('type.rat.rat',X69)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30794,f1445])).
fof(f30794,plain,(
  ( ! [X70,X68,X69] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X70))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X70) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X68),s('type.rat.rat',X69))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X68),s('type.rat.rat',X69))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X68),s('type.rat.rat',X69)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24897])).
fof(f31143,plain,(
  ( ! [X66,X67,X65] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X67))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X67))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X65),s('type.rat.rat',X66))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X65),s('type.rat.rat',X66))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X65),s('type.rat.rat',X66)))))) ) | $spl84),
  inference(forward_demodulation,[],[f31142,f3888])).
fof(f31142,plain,(
  ( ! [X66,X67,X65] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X67))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X67))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X65),s('type.rat.rat',X66))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X65),s('type.rat.rat',X66))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X65),s('type.rat.rat',X66)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30793,f1445])).
fof(f30793,plain,(
  ( ! [X66,X67,X65] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X67))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X67))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X65),s('type.rat.rat',X66))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X65),s('type.rat.rat',X66))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X65),s('type.rat.rat',X66)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24896])).
fof(f30792,plain,(
  ( ! [X72,X71,X73] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X72),s('type.rat.rat',X73))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X71))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X72),s('type.rat.rat',X73))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X71)))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24753])).
fof(f30791,plain,(
  ( ! [X70,X69] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X70))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X70))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X69))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X69),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X69)))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24752])).
fof(f30790,plain,(
  ( ! [X68,X66,X67] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X68),s('type.rat.rat',X67))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X67),s('type.rat.rat',X68))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X66),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66)))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24751])).
fof(f30789,plain,(
  ( ! [X45,X44] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X45))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X45) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44)))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24740])).
fof(f30788,plain,(
  ( ! [X111,X112,X110] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X111),s('type.rat.rat',X112))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X110))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X111),s('type.rat.rat',X112))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X110),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X110)))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24718])).
fof(f31135,plain,(
  ( ! [X109,X108] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X109))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X109))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X108),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108)))) ) | $spl84),
  inference(forward_demodulation,[],[f31134,f3888])).
fof(f31134,plain,(
  ( ! [X109,X108] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X109))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X109))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X108),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108)))) ) | $spl84),
  inference(forward_demodulation,[],[f30787,f1445])).
fof(f30787,plain,(
  ( ! [X109,X108] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X109))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X109))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X108),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108)))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24717])).
fof(f31132,plain,(
  ( ! [X107,X105,X106] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X106),s('type.rat.rat',X107))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X105))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X107),s('type.rat.rat',X106))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X105),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X105)))) ) | $spl84),
  inference(forward_demodulation,[],[f31131,f3888])).
fof(f31131,plain,(
  ( ! [X107,X105,X106] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X106),s('type.rat.rat',X107))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X105))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X107),s('type.rat.rat',X106))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X105),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X105)))) ) | $spl84),
  inference(forward_demodulation,[],[f30786,f1445])).
fof(f30786,plain,(
  ( ! [X107,X105,X106] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X106),s('type.rat.rat',X107))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X105))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X107),s('type.rat.rat',X106))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X105),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X105)))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24716])).
fof(f30785,plain,(
  ( ! [X103,X102,X104] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X103),s('type.rat.rat',X104))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X102))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X104),s('type.rat.rat',X103))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X102),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X102)))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24715])).
fof(f30784,plain,(
  ( ! [X90,X89] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X90))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X89))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X90))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X89),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X89)))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24708])).
fof(f30783,plain,(
  ( ! [X88,X87] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X88))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X87))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X88))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X87),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X87)))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24707])).
fof(f30782,plain,(
  ( ! [X80,X79] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X80))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X80) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X79))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X79),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X79)))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24703])).
fof(f30781,plain,(
  ( ! [X72,X71,X73] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X73))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X73))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X72),s('type.rat.rat',X71))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X71),s('type.rat.rat',X72)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24696])).
fof(f30780,plain,(
  ( ! [X64,X62,X63] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X64))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X64) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X63),s('type.rat.rat',X62))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X62),s('type.rat.rat',X63))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X62),s('type.rat.rat',X63)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24693])).
fof(f30779,plain,(
  ( ! [X61,X59,X60] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X61))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24692])).
fof(f31122,plain,(
  ( ! [X56,X55] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X56),s('type.rat.rat',X55))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X55),s('type.rat.rat',X56)))))) ) | $spl84),
  inference(forward_demodulation,[],[f31121,f3888])).
fof(f31121,plain,(
  ( ! [X56,X55] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X56),s('type.rat.rat',X55))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X55),s('type.rat.rat',X56)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30778,f1445])).
fof(f30778,plain,(
  ( ! [X56,X55] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X56),s('type.rat.rat',X55))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X55),s('type.rat.rat',X56)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24691])).
fof(f30777,plain,(
  ( ! [X50,X49] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X50))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X50) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X49))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X49)))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24687])).
fof(f30776,plain,(
  ( ! [X47,X48,X46] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X47),s('type.rat.rat',X48))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X46))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X48),s('type.rat.rat',X47))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46)))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24686])).
fof(f30775,plain,(
  ( ! [X43,X42] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X42))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X43))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42)))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24684])).
fof(f30774,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39)))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24683])).
fof(f30773,plain,(
  ( ! [X28,X29] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X29))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X28))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28)))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24678])).
fof(f30772,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4)))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24667])).
fof(f31113,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))) ) | $spl84),
  inference(forward_demodulation,[],[f31112,f3888])).
fof(f31112,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30771,f1445])).
fof(f30771,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24639])).
fof(f30769,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X32))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X32))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X30))))) | s(bool,X33) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X30),s('type.rat.rat',X31))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X33)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24557])).
fof(f30766,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))))) | s(bool,X29) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24534])).
fof(f31098,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) ) | $spl84),
  inference(forward_demodulation,[],[f31097,f3888])).
fof(f31097,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) ) | $spl84),
  inference(forward_demodulation,[],[f31096,f1445])).
fof(f31096,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30760,f30511])).
fof(f30760,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24412])).
fof(f30759,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))))))) | s(bool,X29) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f24410])).
fof(f30749,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))) | p(s(bool,X0)) | s(bool,X0) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X2)))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f23877])).
fof(f31064,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | p(s(bool,X0)) | s(bool,X0) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl84),
  inference(forward_demodulation,[],[f31063,f3888])).
fof(f31063,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | p(s(bool,X0)) | s(bool,X0) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl84),
  inference(forward_demodulation,[],[f30717,f1445])).
fof(f30717,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | p(s(bool,X0)) | s(bool,X0) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f23320])).
fof(f30711,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,'T_0') = s(bool,sK14(X0,X1,X2,bool)) | s(X2,f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) != s(X2,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f23215])).
fof(f30710,plain,(
  ( ! [X273,X275,X272,X274] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X275))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,f(s(X272,sK14(X273,X274,bool,X272)))) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X275),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(fun(X272,bool),X273) = s(fun(X272,bool),X274) | s(bool,'T_0') = s(bool,g(s(X272,sK14(X273,X274,bool,X272))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f23135])).
fof(f31048,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl84),
  inference(forward_demodulation,[],[f31047,f3888])).
fof(f31047,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl84),
  inference(forward_demodulation,[],[f31046,f1445])).
fof(f31046,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30677,f30511])).
fof(f30677,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f21817])).
fof(f31044,plain,(
  ( ! [X59,X60,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58)))))) ) | $spl84),
  inference(forward_demodulation,[],[f31043,f3888])).
fof(f31043,plain,(
  ( ! [X59,X60,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58)))))) ) | $spl84),
  inference(forward_demodulation,[],[f31042,f1445])).
fof(f31042,plain,(
  ( ! [X59,X60,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58)))))) ) | $spl84),
  inference(forward_demodulation,[],[f31041,f30511])).
fof(f31041,plain,(
  ( ! [X59,X60,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58)))))) ) | $spl84),
  inference(forward_demodulation,[],[f31040,f3888])).
fof(f31040,plain,(
  ( ! [X59,X60,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30676,f1445])).
fof(f30676,plain,(
  ( ! [X59,X60,X58] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f21794])).
fof(f31033,plain,(
  ( ! [X30,X31,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30)))))) ) | $spl84),
  inference(forward_demodulation,[],[f31032,f3888])).
fof(f31032,plain,(
  ( ! [X30,X31,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30)))))) ) | $spl84),
  inference(forward_demodulation,[],[f31031,f1445])).
fof(f31031,plain,(
  ( ! [X30,X31,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30674,f30511])).
fof(f30674,plain,(
  ( ! [X30,X31,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f21780])).
fof(f31028,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | ($spl84 | $spl107)),
  inference(forward_demodulation,[],[f31027,f1445])).
fof(f31027,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))))) | ($spl84 | $spl107)),
  inference(forward_demodulation,[],[f30671,f1445])).
fof(f30671,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))))) | ($spl84 | $spl107)),
  inference(backward_demodulation,[],[f30511,f20391])).
fof(f30666,plain,(
  ( ! [X2,X3,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))))) | s(bool,X3) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X3)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f18365])).
fof(f30661,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | p(s(bool,X0)) | s(bool,X0) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f17755])).
fof(f30626,plain,(
  ( ! [X68,X66,X69,X67] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X68))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X68) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X67),s('type.rat.rat',X66))))) | s(bool,X69) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X67))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X69)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f17707])).
fof(f30624,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s(bool,'T_0') = s(bool,sK14(X0,X1,X2,bool)) | s(X2,f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) != s(X2,g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f17621])).
fof(f30623,plain,(
  ( ! [X92,X90,X91,X89] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X90),s('type.rat.rat',X91))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X89))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X90),s('type.rat.rat',X91))))) | s(bool,X92) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X89),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X92)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f17378])).
fof(f30622,plain,(
  ( ! [X88,X87,X86] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X87))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X87))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X86))))) | s(bool,X88) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X86),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X88)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f17377])).
fof(f30621,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X84),s('type.rat.rat',X83))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X82))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X83),s('type.rat.rat',X84))))))) | s(bool,X85) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X82),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X85)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f17376])).
fof(f30620,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X51))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X51) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) | s(bool,X52) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X52)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f17365])).
fof(f30619,plain,(
  ( ! [X134,X136,X135,X133] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X134),s('type.rat.rat',X135))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X133))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X134),s('type.rat.rat',X135))))))) | s(bool,X136) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X133),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X136)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f17346])).
fof(f31017,plain,(
  ( ! [X132,X130,X131] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X131))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X130))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X131))))))))) | s(bool,X132) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X132)) ) | $spl84),
  inference(forward_demodulation,[],[f31016,f3888])).
fof(f31016,plain,(
  ( ! [X132,X130,X131] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X131))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X130))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X131))))))))) | s(bool,X132) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X132)) ) | $spl84),
  inference(forward_demodulation,[],[f30618,f1445])).
fof(f30618,plain,(
  ( ! [X132,X130,X131] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X131))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X130))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X131))))))))) | s(bool,X132) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X132)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f17345])).
fof(f31015,plain,(
  ( ! [X127,X128,X126,X129] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X127),s('type.rat.rat',X128))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X126))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X128),s('type.rat.rat',X127))))))) | s(bool,X129) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X126),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X129)) ) | $spl84),
  inference(forward_demodulation,[],[f31014,f3888])).
fof(f31014,plain,(
  ( ! [X127,X128,X126,X129] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X127),s('type.rat.rat',X128))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X126))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X128),s('type.rat.rat',X127))))))) | s(bool,X129) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X126),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X129)) ) | $spl84),
  inference(forward_demodulation,[],[f30617,f1445])).
fof(f30617,plain,(
  ( ! [X127,X128,X126,X129] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X127),s('type.rat.rat',X128))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X126))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X128),s('type.rat.rat',X127))))))) | s(bool,X129) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X126),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X129)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f17344])).
fof(f30616,plain,(
  ( ! [X125,X123,X124,X122] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X123),s('type.rat.rat',X124))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X122))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X124),s('type.rat.rat',X123))))) | s(bool,X125) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X122),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X125)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f17343])).
fof(f30615,plain,(
  ( ! [X103,X102,X104] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X103))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X102))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X103))))) | s(bool,X104) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X102),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X104)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f17336])).
fof(f30614,plain,(
  ( ! [X101,X99,X100] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X100))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X99))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X100))))))) | s(bool,X101) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X99),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X101)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f17335])).
fof(f30613,plain,(
  ( ! [X88,X87,X89] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X88))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X88) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X87))) | s(bool,X89) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X87),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X89)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f17331])).
fof(f30612,plain,(
  ( ! [X85,X86] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X85))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,X86) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X85))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X86)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f17330])).
fof(f31013,plain,(
  ( ! [X76,X74,X75] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X75),s('type.rat.rat',X74))))) | s(bool,X76) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X76)) ) | $spl84),
  inference(forward_demodulation,[],[f31012,f3888])).
fof(f31012,plain,(
  ( ! [X76,X74,X75] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X75),s('type.rat.rat',X74))))) | s(bool,X76) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X76)) ) | $spl84),
  inference(forward_demodulation,[],[f30611,f1445])).
fof(f30611,plain,(
  ( ! [X76,X74,X75] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X75),s('type.rat.rat',X74))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,X76) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X76)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f17324])).
fof(f30610,plain,(
  ( ! [X64,X62,X65,X63] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X64))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X64))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X63),s('type.rat.rat',X62))))) | s(bool,X65) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X62),s('type.rat.rat',X63))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X65)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f17321])).
fof(f30609,plain,(
  ( ! [X54,X55,X53] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X54))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X54) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X53))))))))) | s(bool,X55) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X55)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f17318])).
fof(f30608,plain,(
  ( ! [X39,X37,X38] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X37))))))) | s(bool,X39) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X39)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f17313])).
fof(f30607,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))))) | s(bool,X10) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X10)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f17304])).
fof(f31004,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) ) | $spl84),
  inference(forward_demodulation,[],[f31003,f3888])).
fof(f31003,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) ) | $spl84),
  inference(forward_demodulation,[],[f31002,f1445])).
fof(f31002,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30599,f30511])).
fof(f30599,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f15714])).
fof(f31000,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30999,f3888])).
fof(f30999,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30998,f1445])).
fof(f30998,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30997,f30511])).
fof(f30997,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30996,f3888])).
fof(f30996,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30597,f1445])).
fof(f30597,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f15711])).
fof(f30982,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30981,f30511])).
fof(f30981,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30980,f3888])).
fof(f30980,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30589,f1445])).
fof(f30589,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f15401])).
fof(f30978,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X52),s('type.rat.rat',X51))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30977,f3888])).
fof(f30977,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X52),s('type.rat.rat',X51))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30976,f1445])).
fof(f30976,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X52),s('type.rat.rat',X51))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30587,f30511])).
fof(f30587,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X52),s('type.rat.rat',X51))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f14962])).
fof(f30975,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30974,f3888])).
fof(f30974,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30973,f1445])).
fof(f30973,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30972,f30511])).
fof(f30972,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30971,f3888])).
fof(f30971,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30586,f1445])).
fof(f30586,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f14959])).
fof(f30584,plain,(
  ( ! [X712,X710,X713,X711] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X710))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,X711) = s(bool,X712) | s(bool,X712) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X710),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X711) = s(bool,X713) | s(bool,'T_0') = s(bool,X713)) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f14322])).
fof(f30950,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30949,f30511])).
fof(f30949,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30948,f3888])).
fof(f30948,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30572,f1445])).
fof(f30572,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f9998])).
fof(f30915,plain,(
  ( ! [X21,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30914,f30511])).
fof(f30914,plain,(
  ( ! [X21,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30913,f3888])).
fof(f30913,plain,(
  ( ! [X21,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30550,f1445])).
fof(f30550,plain,(
  ( ! [X21,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f3482])).
fof(f30912,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30911,f30511])).
fof(f30911,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30910,f3888])).
fof(f30910,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30549,f1445])).
fof(f30549,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f3481])).
fof(f30907,plain,(
  ( ! [X12,X11] : (s('type.integer.int',X12) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30906,f30511])).
fof(f30906,plain,(
  ( ! [X12,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30905,f3888])).
fof(f30905,plain,(
  ( ! [X12,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30547,f1445])).
fof(f30547,plain,(
  ( ! [X12,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f3477])).
fof(f30902,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30901,f3888])).
fof(f30901,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30900,f1445])).
fof(f30900,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30899,f30511])).
fof(f30899,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30898,f3888])).
fof(f30898,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30545,f1445])).
fof(f30545,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f3468])).
fof(f30897,plain,(
  ( ! [X19,X20] : (s('type.integer.int',X20) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30896,f30511])).
fof(f30896,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X20) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30895,f3888])).
fof(f30895,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X20) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30544,f1445])).
fof(f30544,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int',X20) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f3466])).
fof(f30892,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X8) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30891,f30511])).
fof(f30891,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X8) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30890,f3888])).
fof(f30890,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X8) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30542,f1445])).
fof(f30542,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X8) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f3460])).
fof(f30889,plain,(
  ( ! [X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5)))))) ) | $spl84),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888])).
fof(f30888,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30887,f3888])).
fof(f30887,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30886,f1445])).
fof(f30886,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30885,f30511])).
fof(f30885,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30884,f1445])).
fof(f30884,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30541,f1445])).
fof(f30541,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f3459])).
fof(f30882,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30881,f3888])).
fof(f30881,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30880,f1445])).
fof(f30880,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30879,f30511])).
fof(f30879,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30878,f1445])).
fof(f30878,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl84),
  inference(forward_demodulation,[],[f30534,f1445])).
fof(f30534,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f3414])).
fof(f30853,plain,(
  ( ! [X6] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | $spl84),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852])).
fof(f30852,plain,(
  ( ! [X6,X7] : (s('type.integer.int',X7) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | $spl84),
  inference(forward_demodulation,[],[f30519,f30511])).
fof(f30519,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X7) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f1627])).
fof(f30518,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f292])).
fof(f30517,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f291])).
fof(f30851,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl84),
  inference(forward_demodulation,[],[f30850,f3888])).
fof(f30850,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl84),
  inference(forward_demodulation,[],[f30516,f1445])).
fof(f30516,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f264])).
fof(f30849,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl84),
  inference(forward_demodulation,[],[f30848,f3888])).
fof(f30848,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl84),
  inference(forward_demodulation,[],[f30515,f1445])).
fof(f30515,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f263])).
fof(f30514,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | ~p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f262])).
fof(f30513,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f261])).
fof(f30847,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl84),
  inference(forward_demodulation,[],[f30512,f30511])).
fof(f30512,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl84),
  inference(backward_demodulation,[],[f30511,f242])).
fof(f20391,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl107),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3419,f3434,f3435,f3439,f3440,f3449,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f3516,f3452,f3451,f3447,f3437,f1618,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5918,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3040,f3044,f3046,f3043,f3045,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f3025,f3549,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3472,f3474,f3477,f3479,f3481,f3482,f3487,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f15401,f15413,f15711,f15714,f20328])).
fof(f17361,plain,(
  ( ! [X39,X40] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))))))))) | s(bool,X40) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X40)) ) | $spl107),
  inference(superposition,[],[f4648,f2306])).
fof(f16648,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl107),
  inference(superposition,[],[f4648,f242])).
fof(f16646,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) ) | $spl107),
  inference(superposition,[],[f4648,f1617])).
fof(f16644,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | $spl107),
  inference(unit_resulting_resolution,[],[f4648,f293])).
fof(f31295,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167,f30435,f30433,f30431,f30429,f30424,f30364,f30363,f30362,f30361,f30360,f30359,f30358,f30408,f30403,f31247,f31280,f31285,f31294])).
fof(f31286,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167,f30435,f30433,f30431,f30429,f30424,f30364,f30363,f30362,f30361,f30360,f30359,f30358,f30408,f30403,f31247,f31280,f31285])).
fof(f31281,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167,f30435,f30433,f30431,f30429,f30424,f30364,f30363,f30362,f30361,f30360,f30359,f30358,f30408,f30403,f31247,f31280])).
fof(f31248,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167,f30435,f30433,f30431,f30429,f30424,f30364,f30363,f30362,f30361,f30360,f30359,f30358,f30408,f30403,f31247])).
fof(f31237,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167,f30435,f30433,f30431,f30429,f30424,f30364,f30363,f30362,f30361,f30360,f30359,f30358,f30408,f30403])).
fof(f31236,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167,f30435,f30433,f30431,f30429,f30424,f30364,f30363,f30362,f30361,f30360,f30359,f30358,f30408])).
fof(f31225,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167,f30435,f30433,f30431,f30429,f30424,f30364,f30363,f30362,f30361,f30360,f30359,f30358])).
fof(f31224,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167,f30435,f30433,f30431,f30429,f30424,f30364,f30363,f30362,f30361,f30360,f30359])).
fof(f31223,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167,f30435,f30433,f30431,f30429,f30424,f30364,f30363,f30362,f30361,f30360])).
fof(f31222,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167,f30435,f30433,f30431,f30429,f30424,f30364,f30363,f30362,f30361])).
fof(f31221,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167,f30435,f30433,f30431,f30429,f30424,f30364,f30363,f30362])).
fof(f31220,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167,f30435,f30433,f30431,f30429,f30424,f30364,f30363])).
fof(f31219,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167,f30435,f30433,f30431,f30429,f30424,f30364])).
fof(f31218,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167,f30435,f30433,f30431,f30429,f30424])).
fof(f31194,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167,f30435,f30433,f30431,f30429])).
fof(f31193,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167,f30435,f30433,f30431])).
fof(f31192,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167,f30435,f30433])).
fof(f31191,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167,f30435])).
fof(f31190,plain,(
  $false | ($spl65 | $spl84)),
  inference(subsumption_resolution,[],[f31189,f1445])).
fof(f31189,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | ($spl65 | $spl84)),
  inference(forward_demodulation,[],[f30846,f1445])).
fof(f30846,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | ($spl65 | $spl84)),
  inference(backward_demodulation,[],[f30511,f30501])).
fof(f30501,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl65),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25247,f25248,f25258,f25259,f25251,f25252,f25255,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f27322,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f3514,f24298,f29767,f29768,f29770,f29771,f29773,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f30218,f30294,f30216,f30195,f30260,f30470,f30471,f30472,f27316,f26254,f22061,f5444])).
fof(f30471,plain,(
  ( ! [X61,X62,X63] : (s(bool,'T_0') = s(bool,X63) | s(bool,X63) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X62),s('type.rat.rat',X61)))) ) | $spl65),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f25247,f25248,f25258,f25259,f25251,f25252,f25255,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f26254,f21799,f21830,f23035,f22061,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f27322,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f3514,f24298,f29767,f29768,f29770,f29771,f29773,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f30218,f30294,f30216,f30195,f30260,f30470])).
fof(f29773,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl65),
  inference(superposition,[],[f3514,f242])).
fof(f29771,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7)))) ) | $spl65),
  inference(superposition,[],[f3514,f1617])).
fof(f29770,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))))))) | s(bool,X5) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X5)) ) | $spl65),
  inference(superposition,[],[f3514,f2306])).
fof(f29768,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl65),
  inference(superposition,[],[f3514,f3238])).
fof(f29767,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl65),
  inference(unit_resulting_resolution,[],[f3514,f293])).
fof(f27322,plain,(
  ( ! [X4,X5,X3] : (s(bool,X5) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat',X3))) | s(bool,'T_0') = s(bool,X5)) ) | $spl65),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3474,f3477,f3479,f3481,f3482,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f15401,f15413,f15711,f15714,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21690,f21747,f21780,f21781,f21794,f21817,f21764,f21429,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23215,f23210,f23135,f23318,f23320,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3514,f25247,f25248,f25258,f25259,f25251,f25252,f25255,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f27316,f26260,f26259,f26254,f21799,f21830,f23035,f22061,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23529])).
fof(f25255,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl65),
  inference(superposition,[],[f3514,f242])).
fof(f25252,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8)))) ) | $spl65),
  inference(superposition,[],[f3514,f1617])).
fof(f25251,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))))))) | s(bool,X6) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X5),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X6)) ) | $spl65),
  inference(superposition,[],[f3514,f2306])).
fof(f25259,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4)))))) ) | $spl65),
  inference(forward_demodulation,[],[f25250,f240])).
fof(f25250,plain,(
  ( ! [X4] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4)))))) ) | $spl65),
  inference(superposition,[],[f3514,f1618])).
fof(f25258,plain,(
  ( ! [X2,X3,X1] : (s(bool,X3) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))) | s(bool,'T_0') = s(bool,X3)) ) | $spl65),
  inference(subsumption_resolution,[],[f25257,f1445])).
fof(f25257,plain,(
  ( ! [X2,X3,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))))) | s(bool,X3) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))) | s(bool,'T_0') = s(bool,X3)) ) | $spl65),
  inference(forward_demodulation,[],[f25249,f1445])).
fof(f25249,plain,(
  ( ! [X2,X3,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))))))) | s(bool,X3) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))) | s(bool,'T_0') = s(bool,X3)) ) | $spl65),
  inference(superposition,[],[f3514,f2305])).
fof(f25248,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl65),
  inference(superposition,[],[f3514,f3238])).
fof(f25247,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl65),
  inference(unit_resulting_resolution,[],[f3514,f293])).
fof(f31188,plain,(
  $false | ($spl84 | $spl107 | $spl108)),
  inference(global_subsumption,[],[f30845,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167])).
fof(f30845,plain,(
  ( ! [X50,X51] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X51))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X51) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) ) | ($spl84 | $spl108)),
  inference(backward_demodulation,[],[f30511,f30467])).
fof(f31168,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164,f31167])).
fof(f31165,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146,f31164])).
fof(f31156,plain,(
  $false | ($spl84 | $spl107 | $spl356)),
  inference(global_subsumption,[],[f30820,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146])).
fof(f30820,plain,(
  ( ! [X64,X62,X63] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X63),s('type.rat.rat',X62))))) | sP0(X64,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X62),s('type.rat.rat',X63)))))) ) | ($spl84 | $spl356)),
  inference(backward_demodulation,[],[f30511,f25481])).
fof(f31155,plain,(
  $false | ($spl84 | $spl107 | $spl354)),
  inference(global_subsumption,[],[f31154,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146])).
fof(f31154,plain,(
  ( ! [X59,X60] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | sP0(X60,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl84 | $spl354)),
  inference(forward_demodulation,[],[f31153,f3888])).
fof(f31153,plain,(
  ( ! [X59,X60] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | sP0(X60,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl84 | $spl354)),
  inference(forward_demodulation,[],[f30819,f1445])).
fof(f30819,plain,(
  ( ! [X59,X60] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | sP0(X60,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl84 | $spl354)),
  inference(backward_demodulation,[],[f30511,f25480])).
fof(f31150,plain,(
  $false | ($spl3 | $spl84)),
  inference(subsumption_resolution,[],[f31149,f3888])).
fof(f31149,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | ($spl3 | $spl84)),
  inference(forward_demodulation,[],[f31148,f1445])).
fof(f31148,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | ($spl3 | $spl84)),
  inference(forward_demodulation,[],[f30817,f1445])).
fof(f30817,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | ($spl3 | $spl84)),
  inference(backward_demodulation,[],[f30511,f25180])).
fof(f31147,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143,f31146])).
fof(f31144,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792,f31143])).
fof(f31141,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791,f30792])).
fof(f31140,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790,f30791])).
fof(f31139,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789,f30790])).
fof(f31138,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788,f30789])).
fof(f31137,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135,f30788])).
fof(f31136,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132,f31135])).
fof(f31133,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785,f31132])).
fof(f31130,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784,f30785])).
fof(f31129,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783,f30784])).
fof(f31128,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782,f30783])).
fof(f31127,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781,f30782])).
fof(f31126,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780,f30781])).
fof(f31125,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779,f30780])).
fof(f31124,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122,f30779])).
fof(f31123,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777,f31122])).
fof(f31120,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776,f30777])).
fof(f31119,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775,f30776])).
fof(f31118,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774,f30775])).
fof(f31117,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773,f30774])).
fof(f31116,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772,f30773])).
fof(f31115,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113,f30772])).
fof(f31114,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769,f31113])).
fof(f31111,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766,f30769])).
fof(f31105,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098,f30766])).
fof(f31099,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759,f31098])).
fof(f31095,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749,f30759])).
fof(f31089,plain,(
  $false | ($spl84 | $spl107 | $spl338)),
  inference(global_subsumption,[],[f30753,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749])).
fof(f30753,plain,(
  ( ! [X243,X239,X242,X240] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X240),s('type.rat.rat',X239))))) | sP1('const.rat.rat_les_2'(s('type.rat.rat',X239),s('type.rat.rat',X240)),X242) | s(bool,'T_0') = s(bool,X243) | s(bool,X242) = s(bool,X243)) ) | ($spl84 | $spl338)),
  inference(backward_demodulation,[],[f30511,f23893])).
fof(f31088,plain,(
  $false | ($spl84 | $spl107 | $spl336)),
  inference(global_subsumption,[],[f30752,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749])).
fof(f30752,plain,(
  ( ! [X237,X235,X238,X234] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X235),s('type.rat.rat',X234))))) | sP1(X237,'const.rat.rat_les_2'(s('type.rat.rat',X234),s('type.rat.rat',X235))) | s(bool,'T_0') = s(bool,X238) | s(bool,X237) = s(bool,X238)) ) | ($spl84 | $spl336)),
  inference(backward_demodulation,[],[f30511,f23891])).
fof(f31087,plain,(
  $false | ($spl84 | $spl107 | $spl334)),
  inference(global_subsumption,[],[f30751,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749])).
fof(f30751,plain,(
  ( ! [X222,X223] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X223),s('type.rat.rat',X222))))) | sP1('const.rat.rat_les_2'(s('type.rat.rat',X222),s('type.rat.rat',X223)),'T_0')) ) | ($spl84 | $spl334)),
  inference(backward_demodulation,[],[f30511,f23887])).
fof(f31086,plain,(
  $false | ($spl84 | $spl107 | $spl332)),
  inference(global_subsumption,[],[f30750,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749])).
fof(f30750,plain,(
  ( ! [X220,X219] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X220),s('type.rat.rat',X219))))) | sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',X219),s('type.rat.rat',X220)))) ) | ($spl84 | $spl332)),
  inference(backward_demodulation,[],[f30511,f23885])).
fof(f31085,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064,f30749])).
fof(f31084,plain,(
  $false | ($spl84 | $spl107 | $spl320)),
  inference(global_subsumption,[],[f31083,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064])).
fof(f31083,plain,(
  ( ! [X76,X74,X75] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X74))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X76),s('type.rat.rat',X75))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X75),s('type.rat.rat',X76))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl84 | $spl320)),
  inference(forward_demodulation,[],[f30745,f30511])).
fof(f30745,plain,(
  ( ! [X76,X74,X75] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X76),s('type.rat.rat',X75))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X75),s('type.rat.rat',X76))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X74))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | ($spl84 | $spl320)),
  inference(backward_demodulation,[],[f30511,f23823])).
fof(f31082,plain,(
  $false | ($spl84 | $spl107 | $spl316)),
  inference(global_subsumption,[],[f30724,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064])).
fof(f30724,plain,(
  ( ! [X46] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | sP1('T_0',f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl84 | $spl316)),
  inference(backward_demodulation,[],[f30511,f23416])).
fof(f31081,plain,(
  $false | ($spl84 | $spl107 | $spl314)),
  inference(global_subsumption,[],[f31080,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064])).
fof(f31080,plain,(
  ( ! [X44] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | sP1('T_0',f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl84 | $spl314)),
  inference(forward_demodulation,[],[f31079,f3888])).
fof(f31079,plain,(
  ( ! [X44] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | sP1('T_0',f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl84 | $spl314)),
  inference(forward_demodulation,[],[f30723,f1445])).
fof(f30723,plain,(
  ( ! [X44] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | sP1('T_0',f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl84 | $spl314)),
  inference(backward_demodulation,[],[f30511,f23415])).
fof(f31078,plain,(
  $false | ($spl84 | $spl107 | $spl312)),
  inference(global_subsumption,[],[f31077,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064])).
fof(f31077,plain,(
  ( ! [X180,X178,X181] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X178))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | sP1('const.rat.rat_les_2'(s('type.rat.rat',X178),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X180) | s(bool,'T_0') = s(bool,X181) | s(bool,X180) = s(bool,X181)) ) | ($spl84 | $spl312)),
  inference(forward_demodulation,[],[f31076,f3888])).
fof(f31076,plain,(
  ( ! [X180,X178,X181] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X178))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | sP1('const.rat.rat_les_2'(s('type.rat.rat',X178),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X180) | s(bool,'T_0') = s(bool,X181) | s(bool,X180) = s(bool,X181)) ) | ($spl84 | $spl312)),
  inference(forward_demodulation,[],[f30722,f1445])).
fof(f30722,plain,(
  ( ! [X180,X178,X181] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X178))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | sP1('const.rat.rat_les_2'(s('type.rat.rat',X178),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X180) | s(bool,'T_0') = s(bool,X181) | s(bool,X180) = s(bool,X181)) ) | ($spl84 | $spl312)),
  inference(backward_demodulation,[],[f30511,f23334])).
fof(f31075,plain,(
  $false | ($spl84 | $spl107 | $spl310)),
  inference(global_subsumption,[],[f31074,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064])).
fof(f31074,plain,(
  ( ! [X177,X176,X174] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X174))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | sP1(X176,'const.rat.rat_les_2'(s('type.rat.rat',X174),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X177) | s(bool,X176) = s(bool,X177)) ) | ($spl84 | $spl310)),
  inference(forward_demodulation,[],[f31073,f3888])).
fof(f31073,plain,(
  ( ! [X177,X176,X174] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X174))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | sP1(X176,'const.rat.rat_les_2'(s('type.rat.rat',X174),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X177) | s(bool,X176) = s(bool,X177)) ) | ($spl84 | $spl310)),
  inference(forward_demodulation,[],[f30721,f1445])).
fof(f30721,plain,(
  ( ! [X177,X176,X174] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X174))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | sP1(X176,'const.rat.rat_les_2'(s('type.rat.rat',X174),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X177) | s(bool,X176) = s(bool,X177)) ) | ($spl84 | $spl310)),
  inference(backward_demodulation,[],[f30511,f23332])).
fof(f31072,plain,(
  $false | ($spl84 | $spl107 | $spl308)),
  inference(global_subsumption,[],[f31071,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064])).
fof(f31071,plain,(
  ( ! [X165] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X165))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | sP1('const.rat.rat_les_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0')) ) | ($spl84 | $spl308)),
  inference(forward_demodulation,[],[f31070,f3888])).
fof(f31070,plain,(
  ( ! [X165] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X165))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | sP1('const.rat.rat_les_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0')) ) | ($spl84 | $spl308)),
  inference(forward_demodulation,[],[f30720,f1445])).
fof(f30720,plain,(
  ( ! [X165] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X165))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | sP1('const.rat.rat_les_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0')) ) | ($spl84 | $spl308)),
  inference(backward_demodulation,[],[f30511,f23330])).
fof(f31069,plain,(
  $false | ($spl84 | $spl107 | $spl306)),
  inference(global_subsumption,[],[f31068,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064])).
fof(f31068,plain,(
  ( ! [X163] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X163))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',X163),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl84 | $spl306)),
  inference(forward_demodulation,[],[f31067,f3888])).
fof(f31067,plain,(
  ( ! [X163] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X163))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',X163),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl84 | $spl306)),
  inference(forward_demodulation,[],[f30719,f1445])).
fof(f30719,plain,(
  ( ! [X163] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X163))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',X163),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl84 | $spl306)),
  inference(backward_demodulation,[],[f30511,f23328])).
fof(f31066,plain,(
  $false | ($spl84 | $spl107 | $spl304)),
  inference(global_subsumption,[],[f30718,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064])).
fof(f30718,plain,(
  ( ! [X161,X159,X162] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X159))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,X161) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X159),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X162) | s(bool,X161) = s(bool,X162)) ) | ($spl84 | $spl304)),
  inference(backward_demodulation,[],[f30511,f23326])).
fof(f31065,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711,f31064])).
fof(f31062,plain,(
  $false | ($spl84 | $spl107 | $spl302)),
  inference(global_subsumption,[],[f30716,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711])).
fof(f30716,plain,(
  ( ! [X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl84 | $spl302)),
  inference(backward_demodulation,[],[f30511,f23308])).
fof(f31061,plain,(
  $false | ($spl84 | $spl107 | $spl296)),
  inference(global_subsumption,[],[f31060,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711])).
fof(f31060,plain,(
  ( ! [X62,X63] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X63))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X63),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl84 | $spl296)),
  inference(forward_demodulation,[],[f30714,f30511])).
fof(f30714,plain,(
  ( ! [X62,X63] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X63))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X63),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl84 | $spl296)),
  inference(backward_demodulation,[],[f30511,f23296])).
fof(f31059,plain,(
  $false | ($spl84 | $spl107 | $spl294)),
  inference(global_subsumption,[],[f31058,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711])).
fof(f31058,plain,(
  ( ! [X59,X60] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl84 | $spl294)),
  inference(forward_demodulation,[],[f31057,f30511])).
fof(f31057,plain,(
  ( ! [X59,X60] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | ($spl84 | $spl294)),
  inference(forward_demodulation,[],[f31056,f3888])).
fof(f31056,plain,(
  ( ! [X59,X60] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | ($spl84 | $spl294)),
  inference(forward_demodulation,[],[f30713,f1445])).
fof(f30713,plain,(
  ( ! [X59,X60] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | ($spl84 | $spl294)),
  inference(backward_demodulation,[],[f30511,f23295])).
fof(f31055,plain,(
  $false | ($spl84 | $spl107 | $spl292)),
  inference(global_subsumption,[],[f30712,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711])).
fof(f30712,plain,(
  ( ! [X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl84 | $spl292)),
  inference(backward_demodulation,[],[f30511,f23292])).
fof(f31054,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710,f30711])).
fof(f31053,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048,f30710])).
fof(f31049,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044,f31048])).
fof(f31045,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033,f31044])).
fof(f31034,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028,f31033])).
fof(f31030,plain,(
  $false | ($spl84 | $spl107 | $spl256)),
  inference(global_subsumption,[],[f30673,f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028])).
fof(f30673,plain,(
  ( ! [X44] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | sP1('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl84 | $spl256)),
  inference(backward_demodulation,[],[f30511,f21514])).
fof(f31029,plain,(
  $false | ($spl84 | $spl107)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f4648,f16644,f16646,f16648,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17361,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f22061,f20391,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f31028])).
fof(f31026,plain,(
  $false | ($spl3 | $spl84)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f20330,f20333,f17642,f20336,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20389,f20331,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f23287,f23290,f23291,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23306,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23510,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25181,f25182,f25184,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f24737,f21356,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f27310,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f20329,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29933,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f20390,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f25180,f22061,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f30669,f31025])).
fof(f31025,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | ($spl3 | $spl84)),
  inference(forward_demodulation,[],[f31024,f30511])).
fof(f31024,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | ($spl3 | $spl84)),
  inference(forward_demodulation,[],[f31023,f3888])).
fof(f31023,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | ($spl3 | $spl84)),
  inference(forward_demodulation,[],[f30670,f1445])).
fof(f30670,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | ($spl3 | $spl84)),
  inference(backward_demodulation,[],[f30511,f20390])).
fof(f30669,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | ($spl3 | $spl84)),
  inference(backward_demodulation,[],[f30511,f20329])).
fof(f31022,plain,(
  $false | ($spl3 | $spl84)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f20330,f20333,f17642,f20336,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20389,f20331,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f23287,f23290,f23291,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23306,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23510,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25181,f25182,f25184,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f24979,f24978,f24737,f21356,f26260,f26259,f21799,f21830,f23035,f21947,f21801,f21783,f3549,f27310,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f20329,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29933,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f9998,f14962,f15401,f15413,f15711,f15714,f20390,f21690,f21764,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435,f30218,f30294,f30216,f30195,f30260,f30470,f30472,f27316,f26254,f25180,f22061,f5444,f30504,f30510,f30511,f30847,f30513,f30514,f30849,f30851,f30517,f30518,f30852,f30853,f30882,f30888,f30889,f30892,f30897,f30902,f30907,f30912,f30915,f30950,f30584,f30975,f30978,f30982,f31000,f31004,f30607,f30608,f30609,f30610,f31013,f30612,f30613,f30614,f30615,f30616,f31015,f31017,f30619,f30620,f30621,f30622,f30623,f30624,f30626,f30661,f30666,f30669])).
fof(f30505,plain,(
  ( ! [X38] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38)))) ) | $spl374),
  inference(cnf_transformation,[],[f30505_D])).
fof(f30505_D,plain,(
  ( ! [X38] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38)))) ) <=> ~$spl374),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl374])])).
fof(f30507,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl376),
  inference(cnf_transformation,[],[f30507_D])).
fof(f30507_D,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl376),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl376])])).
fof(f30504,plain,(
  ( ! [X38] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl84),
  inference(forward_demodulation,[],[f30395,f1445])).
fof(f30395,plain,(
  ( ! [X38] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl84),
  inference(superposition,[],[f1634,f3888])).
fof(f30436,plain,(
  $false | ($spl3 | $spl66 | $spl84)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f20330,f20333,f17642,f20336,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3552,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20389,f20331,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f23287,f23290,f23291,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23306,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23510,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25181,f25182,f25184,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f26435,f26822,f26437,f26438,f26823,f26824,f26441,f26442,f26826,f26827,f26829,f26446,f26831,f26832,f26450,f26833,f26835,f26836,f26838,f26840,f26842,f26844,f26845,f26847,f26851,f26853,f26854,f26855,f26856,f26858,f26860,f26862,f26866,f26868,f26871,f26873,f26876,f26879,f26881,f26883,f26886,f26888,f26890,f26894,f26482,f26483,f26896,f26898,f26900,f26902,f26904,f26905,f26906,f26908,f26909,f26910,f26911,f26912,f26913,f26914,f26500,f26501,f26502,f26915,f26504,f26505,f26917,f26919,f26921,f26923,f26924,f26927,f26931,f26932,f26935,f26936,f26938,f26939,f26940,f26942,f26521,f26944,f26945,f26948,f26950,f26951,f26952,f26953,f26955,f26956,f26958,f26962,f26964,f26965,f26966,f26968,f26971,f26972,f26974,f26975,f26977,f26978,f26979,f26980,f26981,f26982,f26984,f26985,f26986,f26987,f26988,f26990,f26553,f26554,f26555,f26556,f26991,f26558,f26559,f26560,f26561,f26562,f26992,f26993,f26565,f26566,f26567,f26568,f26569,f26570,f26572,f26607,f26612,f26994,f26996,f26998,f26617,f26999,f27001,f27004,f27006,f27010,f27013,f27015,f27016,f27017,f26628,f27018,f26630,f26631,f26632,f27019,f27020,f27022,f27023,f27024,f27025,f27026,f26640,f27027,f27028,f27029,f27031,f27032,f26646,f26647,f26648,f26649,f27033,f26651,f26652,f26653,f27034,f27035,f27036,f26657,f26658,f26659,f27044,f27049,f26674,f26675,f26676,f26677,f26678,f26679,f26680,f26681,f26682,f26683,f26684,f26685,f26686,f26687,f26688,f26689,f26690,f26691,f27050,f27051,f26694,f26696,f26697,f26698,f26699,f26700,f27055,f27056,f27057,f27058,f26710,f27060,f27062,f27063,f27064,f26715,f27066,f27067,f27068,f26719,f27072,f27073,f27074,f26723,f26724,f27075,f26726,f26727,f26728,f26729,f26730,f26731,f27076,f26733,f26734,f26735,f26736,f26737,f26738,f26739,f26740,f27077,f27078,f26743,f26744,f26745,f26746,f26747,f26750,f26751,f26752,f26753,f26754,f26755,f26756,f26757,f26758,f26759,f26760,f26761,f26762,f26763,f26764,f26765,f26766,f26767,f26768,f26769,f26770,f26771,f27122,f27123,f27124,f27125,f27129,f27131,f27132,f27133,f27137,f27149,f27157,f27164,f27166,f27171,f27176,f27144,f27140,f27179,f27180,f27290,f27182,f27291,f27292,f27293,f27294,f27195,f27196,f27295,f27199,f27200,f27201,f27296,f27211,f27297,f27219,f27220,f27298,f27226,f27230,f27231,f27232,f27234,f27299,f27237,f27300,f27240,f27241,f27242,f27243,f27244,f27245,f27246,f27247,f27248,f27249,f27250,f27251,f27252,f27253,f27254,f27255,f27256,f27257,f27260,f27301,f27266,f27267,f27269,f27270,f27273,f27275,f27302,f27277,f27278,f27279,f27284,f27285,f27289,f26615,f24979,f24978,f24737,f21356,f27316,f26260,f26259,f26254,f21799,f21830,f25180,f23035,f22061,f21947,f21801,f21783,f3549,f27310,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f20329,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29933,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f29972,f9998,f14962,f15401,f15413,f15711,f15714,f20390,f21690,f29973,f21764,f29974,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433,f30435])).
fof(f29974,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl66),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3552,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f26435,f26822,f26437,f26438,f26823,f26824,f26441,f26442,f26826,f26827,f26829,f26446,f26831,f26832,f26450,f26833,f26835,f26836,f26838,f26840,f26842,f26844,f26845,f26847,f26851,f26853,f26854,f26855,f26856,f26858,f26860,f26862,f26866,f26868,f26871,f26873,f26876,f26879,f26881,f26883,f26886,f26888,f26890,f26894,f26482,f26483,f26896,f26898,f26900,f26902,f26904,f26905,f26906,f26908,f26909,f26910,f26911,f26912,f26913,f26914,f26500,f26501,f26502,f26915,f26504,f26505,f26917,f26919,f26921,f26923,f26924,f26927,f26931,f26932,f26935,f26936,f26938,f26939,f26940,f26942,f26521,f26944,f26945,f26948,f26950,f26951,f26952,f26953,f26955,f26956,f26958,f26962,f26964,f26965,f26966,f26968,f26971,f26972,f26974,f26975,f26977,f26978,f26979,f26980,f26981,f26982,f26984,f26985,f26986,f26987,f26988,f26990,f26553,f26554,f26555,f26556,f26991,f26558,f26559,f26560,f26561,f26562,f26992,f26993,f26565,f26566,f26567,f26568,f26569,f26570,f26572,f26607,f26612,f26994,f26996,f26617,f26999,f27001,f27004,f27006,f27010,f27013,f27015,f27016,f27017,f26628,f27018,f26630,f26631,f26632,f27019,f27020,f27022,f27023,f27024,f27025,f27026,f26640,f27027,f27028,f27029,f27031,f27032,f26646,f26647,f26648,f26649,f27033,f26651,f26652,f26653,f27034,f27035,f27036,f26657,f26658,f26659,f27044,f27049,f26674,f26675,f26676,f26677,f26678,f26679,f26680,f26681,f26682,f26683,f26684,f26685,f26686,f26687,f26688,f26689,f26690,f26691,f27050,f27051,f26694,f26696,f26697,f26698,f26699,f26700,f27055,f27056,f27057,f27058,f26710,f27060,f27062,f27063,f27064,f26715,f27066,f27067,f27068,f26719,f27072,f27073,f27074,f26723,f26724,f27075,f26726,f26727,f26728,f26729,f26730,f26731,f27076,f26733,f26734,f26735,f26736,f26737,f26738,f26739,f26740,f27077,f27078,f26743,f26744,f26745,f26746,f26747,f26750,f26751,f26752,f26753,f26754,f26755,f26756,f26757,f26758,f26759,f26760,f26761,f26762,f26763,f26764,f26765,f26766,f26767,f26768,f26769,f26770,f26771,f27122,f27123,f27124,f27125,f27129,f27131,f27132,f27133,f27137,f27149,f27157,f27164,f27166,f27171,f27176,f27144,f27140,f27179,f27180,f27290,f27182,f27291,f27292,f27293,f27294,f27195,f27196,f27295,f27199,f27200,f27201,f27296,f27211,f27297,f27219,f27220,f27298,f27226,f27230,f27231,f27232,f27299,f27237,f27300,f27240,f27241,f27242,f27243,f27244,f27245,f27246,f27247,f27248,f27249,f27250,f27251,f27252,f27253,f27254,f27255,f27256,f27257,f27260,f27301,f27266,f27267,f27269,f27270,f27273,f27275,f27302,f27277,f27278,f27279,f27284,f27285,f27289,f24979,f24978,f27316,f26260,f26259,f26254,f21799,f21830,f23035,f22061,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21780,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f29972,f9998,f14962,f15401,f15413,f15711,f15714,f21690,f29973,f21764])).
fof(f29973,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s(bool,X4) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X4) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3)))))) ) | $spl66),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3552,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f21764,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f26435,f26822,f26437,f26438,f26823,f26824,f26441,f26442,f26826,f26827,f26829,f26446,f26831,f26832,f26450,f26833,f26835,f26836,f26838,f26840,f26842,f26844,f26845,f26847,f26851,f26853,f26854,f26855,f26856,f26858,f26860,f26862,f26866,f26868,f26871,f26873,f26876,f26879,f26881,f26883,f26886,f26888,f26890,f26894,f26482,f26483,f26896,f26898,f26900,f26902,f26904,f26905,f26906,f26908,f26909,f26910,f26911,f26912,f26913,f26914,f26500,f26501,f26502,f26915,f26504,f26505,f26917,f26919,f26921,f26923,f26924,f26927,f26931,f26932,f26935,f26936,f26938,f26939,f26940,f26942,f26521,f26944,f26945,f26948,f26950,f26951,f26952,f26953,f26955,f26956,f26958,f26962,f26964,f26965,f26966,f26968,f26971,f26972,f26974,f26975,f26977,f26978,f26979,f26980,f26981,f26982,f26984,f26985,f26986,f26987,f26988,f26990,f26553,f26554,f26555,f26556,f26991,f26558,f26559,f26560,f26561,f26562,f26992,f26993,f26565,f26566,f26567,f26568,f26569,f26570,f26572,f26607,f26612,f26994,f26996,f26617,f26999,f27001,f27004,f27006,f27010,f27013,f27015,f27016,f27017,f26628,f27018,f26630,f26631,f26632,f27019,f27020,f27022,f27023,f27024,f27025,f27026,f26640,f27027,f27028,f27029,f27031,f27032,f26646,f26647,f26648,f26649,f27033,f26651,f26652,f26653,f27034,f27035,f27036,f26657,f26658,f26659,f27044,f27049,f26674,f26675,f26676,f26677,f26678,f26679,f26680,f26681,f26682,f26683,f26684,f26685,f26686,f26687,f26688,f26689,f26690,f26691,f27050,f27051,f26694,f26696,f26697,f26698,f26699,f26700,f27055,f27056,f27057,f27058,f26710,f27060,f27062,f27063,f27064,f26715,f27066,f27067,f27068,f26719,f27072,f27073,f27074,f26723,f26724,f27075,f26726,f26727,f26728,f26729,f26730,f26731,f27076,f26733,f26734,f26735,f26736,f26737,f26738,f26739,f26740,f27077,f27078,f26743,f26744,f26745,f26746,f26747,f26750,f26751,f26752,f26753,f26754,f26755,f26756,f26757,f26758,f26759,f26760,f26761,f26762,f26763,f26764,f26765,f26766,f26767,f26768,f26769,f26770,f26771,f27122,f27123,f27124,f27125,f27129,f27131,f27132,f27133,f27137,f27149,f27157,f27164,f27166,f27171,f27176,f27144,f27140,f27179,f27180,f27290,f27182,f27291,f27292,f27293,f27294,f27195,f27196,f27295,f27199,f27200,f27201,f27296,f27211,f27297,f27219,f27220,f27298,f27226,f27230,f27231,f27232,f27299,f27237,f27300,f27240,f27241,f27242,f27243,f27244,f27245,f27246,f27247,f27248,f27249,f27250,f27251,f27252,f27253,f27254,f27255,f27256,f27257,f27260,f27301,f27266,f27267,f27269,f27270,f27273,f27275,f27302,f27277,f27278,f27279,f27284,f27285,f27289,f24979,f24978,f27316,f26260,f26259,f26254,f21799,f21830,f23035,f22061,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21780,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f29972,f9998,f14962,f15401,f15413,f15711,f15714,f21690])).
fof(f29972,plain,(
  ( ! [X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1)))) ) | $spl66),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3552,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f21764,f5918,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25182,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f26435,f26822,f26437,f26438,f26823,f26824,f26441,f26442,f26826,f26827,f26829,f26446,f26831,f26832,f26450,f26833,f26835,f26836,f26838,f26840,f26842,f26844,f26845,f26847,f26851,f26853,f26854,f26855,f26856,f26858,f26860,f26862,f26866,f26868,f26871,f26873,f26876,f26879,f26881,f26883,f26886,f26888,f26890,f26894,f26482,f26483,f26896,f26898,f26900,f26902,f26904,f26905,f26906,f26908,f26909,f26910,f26911,f26912,f26913,f26914,f26500,f26501,f26502,f26915,f26504,f26505,f26917,f26919,f26921,f26923,f26924,f26927,f26931,f26932,f26935,f26936,f26938,f26939,f26940,f26942,f26521,f26944,f26945,f26948,f26950,f26951,f26952,f26953,f26955,f26956,f26958,f26962,f26964,f26965,f26966,f26968,f26971,f26972,f26974,f26975,f26977,f26978,f26979,f26980,f26981,f26982,f26984,f26985,f26986,f26987,f26988,f26990,f26553,f26554,f26555,f26556,f26991,f26558,f26559,f26560,f26561,f26562,f26992,f26993,f26565,f26566,f26567,f26568,f26569,f26570,f26572,f26607,f26612,f26994,f26996,f26617,f26999,f27001,f27004,f27006,f27010,f27013,f27015,f27016,f27017,f26628,f27018,f26630,f26631,f26632,f27019,f27020,f27022,f27023,f27024,f27025,f27026,f26640,f27027,f27028,f27029,f27031,f27032,f26646,f26647,f26648,f26649,f27033,f26651,f26652,f26653,f27034,f27035,f27036,f26657,f26658,f26659,f27044,f27049,f26674,f26675,f26676,f26677,f26678,f26679,f26680,f26681,f26682,f26683,f26684,f26685,f26686,f26687,f26688,f26689,f26690,f26691,f27050,f27051,f26694,f26696,f26697,f26698,f26699,f26700,f27055,f27056,f27057,f27058,f26710,f27060,f27062,f27063,f27064,f26715,f27066,f27067,f27068,f26719,f27072,f27073,f27074,f26723,f26724,f27075,f26726,f26727,f26728,f26729,f26730,f26731,f27076,f26733,f26734,f26735,f26736,f26737,f26738,f26739,f26740,f27077,f27078,f26743,f26744,f26745,f26746,f26747,f26750,f26751,f26752,f26753,f26754,f26755,f26756,f26757,f26758,f26759,f26760,f26761,f26762,f26763,f26764,f26765,f26766,f26767,f26768,f26769,f26770,f26771,f27122,f27123,f27124,f27125,f27129,f27131,f27132,f27133,f27137,f27149,f27157,f27164,f27166,f27171,f27176,f27144,f27140,f27179,f27180,f27290,f27182,f27291,f27292,f27293,f27294,f27195,f27196,f27295,f27199,f27200,f27201,f27296,f27211,f27297,f27219,f27220,f27298,f27226,f27230,f27231,f27232,f27299,f27237,f27300,f27240,f27241,f27242,f27243,f27244,f27245,f27246,f27247,f27248,f27249,f27250,f27251,f27252,f27253,f27254,f27255,f27256,f27257,f27260,f27301,f27266,f27267,f27269,f27270,f27273,f27275,f27302,f27277,f27278,f27279,f27284,f27285,f27289,f24979,f24978,f27316,f26260,f26259,f26254,f21799,f21830,f23035,f22061,f21947,f21801,f21783,f3549,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21780,f21690,f21429,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15714,f15712,f15711,f15710,f15707,f15705,f15701,f15413,f15412,f15407,f15401,f15400,f14962,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9998,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471])).
fof(f26615,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | ($spl3 | $spl66)),
  inference(backward_demodulation,[],[f26435,f20329])).
fof(f27289,plain,(
  ( ! [X37,X35,X33,X36,X34] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X35),s('type.rat.rat',X36))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X34),s('type.rat.rat',X33))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X35))))))) | s(bool,X37) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X34),s('type.rat.rat',X33))) | s(bool,'T_0') = s(bool,X37)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27137])).
fof(f27285,plain,(
  ( ! [X30,X31,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30)))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27125])).
fof(f27284,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))))))) | s(bool,X29) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27124])).
fof(f27279,plain,(
  ( ! [X109,X108] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X109))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X109))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X108),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108)))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27078])).
fof(f27278,plain,(
  ( ! [X107,X105,X106] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X106),s('type.rat.rat',X107))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X105))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X107),s('type.rat.rat',X106))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X105),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X105)))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27077])).
fof(f27277,plain,(
  ( ! [X56,X55] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X56),s('type.rat.rat',X55))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X55),s('type.rat.rat',X56)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27076])).
fof(f27302,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))) ) | $spl66),
  inference(subsumption_resolution,[],[f27276,f26739])).
fof(f27276,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27075])).
fof(f27275,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X28))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X26))))) | s(bool,X29) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27074])).
fof(f27273,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X23))))) | s(bool,X25) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X25)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27068])).
fof(f27270,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27060])).
fof(f27269,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X23))))))) | s(bool,X25) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X25)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27058])).
fof(f27267,plain,(
  ( ! [X185,X186,X184,X183] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X185))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X185))))))))) | s(bool,X186) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X184),s('type.rat.rat',X183))) | s(bool,'T_0') = s(bool,X186)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27051])).
fof(f27266,plain,(
  ( ! [X182,X180,X178,X181,X179] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X180),s('type.rat.rat',X181))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X178),s('type.rat.rat',X179))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X181),s('type.rat.rat',X180))))))) | s(bool,X182) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X179),s('type.rat.rat',X178))) | s(bool,'T_0') = s(bool,X182)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27050])).
fof(f27301,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | s(bool,X9) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))) | s(bool,'T_0') = s(bool,X9) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))) ) | $spl66),
  inference(subsumption_resolution,[],[f27265,f26690])).
fof(f27265,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | s(bool,X9) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))) | s(bool,'T_0') = s(bool,X9) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27049])).
fof(f27260,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | p(s(bool,X0)) | s(bool,X0) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27044])).
fof(f27257,plain,(
  ( ! [X111,X109,X110,X108] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X109),s('type.rat.rat',X110))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X109),s('type.rat.rat',X110))))) | s(bool,X111) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X108),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X111)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27036])).
fof(f27256,plain,(
  ( ! [X107,X105,X106] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X106))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X106))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X105))))) | s(bool,X107) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X105),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X107)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27035])).
fof(f27255,plain,(
  ( ! [X103,X101,X102,X104] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X103),s('type.rat.rat',X102))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X101))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X102),s('type.rat.rat',X103))))))) | s(bool,X104) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X101),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X104)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27034])).
fof(f27254,plain,(
  ( ! [X70,X72,X71] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X71))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X71) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X70))) | s(bool,X72) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X72)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27033])).
fof(f27253,plain,(
  ( ! [X152,X151,X153,X150] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X151),s('type.rat.rat',X152))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X150))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X151),s('type.rat.rat',X152))))))) | s(bool,X153) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X150),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X153)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27032])).
fof(f27252,plain,(
  ( ! [X142,X140,X141,X139] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X140),s('type.rat.rat',X141))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X139))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X141),s('type.rat.rat',X140))))) | s(bool,X142) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X139),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X142)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27029])).
fof(f27251,plain,(
  ( ! [X121,X120,X119] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X120))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X119))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X120))))) | s(bool,X121) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X119),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X121)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27028])).
fof(f27250,plain,(
  ( ! [X118,X116,X117] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X117))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X116))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X117))))))) | s(bool,X118) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X116),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X118)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27027])).
fof(f27249,plain,(
  ( ! [X105,X106,X104] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X105))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X105) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X104))) | s(bool,X106) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X104),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X106)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27026])).
fof(f27248,plain,(
  ( ! [X103,X102] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X102))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,X103) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X102))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X103)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27025])).
fof(f27247,plain,(
  ( ! [X87,X85,X86,X84] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X86))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X86) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X85),s('type.rat.rat',X84))))) | s(bool,X87) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X84),s('type.rat.rat',X85))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X87)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27024])).
fof(f27246,plain,(
  ( ! [X80,X83,X81,X82] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X82))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X82))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X81),s('type.rat.rat',X80))))) | s(bool,X83) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X80),s('type.rat.rat',X81))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X83)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27023])).
fof(f27245,plain,(
  ( ! [X68,X69,X67] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X68))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X68) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X67))))))))) | s(bool,X69) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X67),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X69)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27020])).
fof(f27244,plain,(
  ( ! [X61,X62,X63] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X61))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X62))))))) | s(bool,X63) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X63)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27019])).
fof(f27243,plain,(
  ( ! [X47,X45,X46] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X46))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X45))))))) | s(bool,X47) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X47)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27018])).
fof(f27242,plain,(
  ( ! [X8,X7,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))) | s(bool,X9) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X9)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27017])).
fof(f27241,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) | s(bool,X2) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X2) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27016])).
fof(f27240,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27015])).
fof(f27300,plain,(
  ( ! [X59,X60,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27239,f27140])).
fof(f27239,plain,(
  ( ! [X59,X60,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27013])).
fof(f27237,plain,(
  ( ! [X30,X31,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f27006])).
fof(f27299,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s(bool,X4) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl66),
  inference(subsumption_resolution,[],[f27235,f26561])).
fof(f27235,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s(bool,X4) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26999])).
fof(f27234,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | ($spl3 | $spl66)),
  inference(backward_demodulation,[],[f27140,f26998])).
fof(f27232,plain,(
  ( ! [X132,X130,X131] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X131))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X130))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X131))))))))) | s(bool,X132) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X132)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26993])).
fof(f27231,plain,(
  ( ! [X127,X128,X126,X129] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X127),s('type.rat.rat',X128))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X126))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X128),s('type.rat.rat',X127))))))) | s(bool,X129) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X126),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X129)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26992])).
fof(f27230,plain,(
  ( ! [X76,X74,X75] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X75),s('type.rat.rat',X74))))) | s(bool,X76) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X76)) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26991])).
fof(f27226,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26974])).
fof(f27298,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27225,f27140])).
fof(f27225,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26971])).
fof(f27220,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26955])).
fof(f27219,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X52),s('type.rat.rat',X51))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26950])).
fof(f27297,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27218,f27140])).
fof(f27218,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26948])).
fof(f27211,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26919])).
fof(f27296,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl66),
  inference(subsumption_resolution,[],[f27205,f294])).
fof(f27205,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26898])).
fof(f27201,plain,(
  ( ! [X21,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26890])).
fof(f27200,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26888])).
fof(f27199,plain,(
  ( ! [X12,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X12) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26883])).
fof(f27295,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27197,f27140])).
fof(f27197,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26876])).
fof(f27196,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X20) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26873])).
fof(f27195,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X8) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26868])).
fof(f27294,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))) ) | $spl66),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3040,f3044,f3046,f3043,f3045,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f3552,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3474,f3477,f3479,f3481,f3482,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f15401,f15413,f15711,f15714,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21690,f21747,f21780,f21781,f21794,f21817,f21764,f21429,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23215,f23210,f23135,f23318,f23320,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23837,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23529,f23530,f23531,f23532,f23533,f23761,f23847,f23848,f23851,f23852,f23563,f23565,f23567,f23568,f23575,f23576,f23577,f23578,f23858,f23734,f23729,f23728,f23867,f23645,f23877,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24403,f24404,f24406,f24409,f24410,f24444,f24412,f24424,f24425,f24427,f24527,f24528,f24530,f24533,f24534,f24578,f24536,f24550,f24551,f24553,f24556,f24557,f24637,f24638,f24639,f24640,f24641,f24845,f24667,f24668,f24678,f24679,f24680,f24682,f24683,f24684,f24686,f24687,f24833,f24691,f24692,f24693,f24896,f24897,f24696,f24702,f24703,f24705,f24707,f24708,f24715,f24716,f24717,f24718,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24740,f24742,f24743,f24832,f24750,f24751,f24752,f24753,f24904,f24905,f24906,f24907,f24908,f24909,f24910,f24911,f24912,f24913,f24914,f24915,f24916,f24917,f24918,f24919,f24920,f24921,f24922,f24923,f24924,f24926,f25069,f25077,f25080,f25082,f24990,f25182,f23035,f22061,f21801,f21947,f21799,f21783,f21830,f3549,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26255,f26257,f26261,f26262,f26310,f26264,f26278,f26279,f26281,f26435,f26822,f26437,f26438,f26823,f26824,f26441,f26442,f26826,f26827,f26829,f26446,f26831,f26832,f26450,f26833,f26835,f26836,f26838,f26840,f26842,f26844,f26845,f26847,f26851,f26853,f26854,f26855,f26856,f26858,f26860,f26862,f26866,f26868,f26871,f26873,f26876,f26879,f26881,f26883,f26886,f26888,f26890,f26894,f26482,f26483,f26896,f26898,f26900,f26902,f26904,f26905,f26906,f26908,f26909,f26910,f26911,f26912,f26913,f26914,f26500,f26501,f26502,f26915,f26504,f26505,f26917,f26919,f26921,f26923,f26924,f26927,f26931,f26932,f26935,f26936,f26938,f26939,f26940,f26942,f26521,f26944,f26945,f26948,f26950,f26951,f26952,f26953,f26955,f26956,f26958,f26962,f26964,f26965,f26966,f26968,f26971,f26972,f26974,f26975,f26977,f26978,f26979,f26980,f26981,f26982,f26984,f26985,f26986,f26987,f26988,f26990,f26553,f26554,f26555,f26556,f26991,f26558,f26559,f26560,f26561,f26562,f26992,f26993,f26565,f26566,f26567,f26568,f26569,f26570,f26572,f26607,f26612,f26994,f26996,f26617,f26999,f27001,f27004,f27006,f27010,f27013,f27015,f27016,f27017,f26628,f27018,f26630,f26631,f26632,f27019,f27020,f27022,f27023,f27024,f27025,f27026,f26640,f27027,f27028,f27029,f27031,f27032,f26646,f26647,f26648,f26649,f27033,f26651,f26652,f26653,f27034,f27035,f27036,f26657,f26658,f26659,f27044,f27049,f26674,f26675,f26676,f26677,f26678,f26679,f26680,f26681,f26682,f26683,f26684,f26685,f26686,f26687,f26688,f26689,f26690,f26691,f27050,f27051,f26694,f26696,f26697,f26698,f26699,f26700,f27055,f27056,f27057,f27058,f26710,f27060,f27062,f27063,f27064,f26715,f27066,f27067,f27068,f26719,f27072,f27073,f27074,f26723,f26724,f27075,f26726,f26727,f26728,f26729,f26730,f26731,f27076,f26733,f26734,f26735,f26736,f26737,f26738,f26739,f26740,f27077,f27078,f26743,f26744,f26745,f26746,f26747,f26750,f26751,f26752,f26753,f26754,f26755,f26756,f26757,f26758,f26759,f26760,f26761,f26762,f26763,f26764,f26765,f26766,f26767,f26768,f26769,f26770,f26771,f27122,f27123,f27124,f27125,f27129,f27131,f27132,f27133,f27137,f27149,f27157,f27164,f27166,f27171,f27176,f27144,f27140,f27179,f27180,f27290,f27182,f27291,f27292,f27293])).
fof(f27293,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(subsumption_resolution,[],[f27189,f26879])).
fof(f27189,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26851])).
fof(f27292,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))) ) | $spl66),
  inference(subsumption_resolution,[],[f27185,f15717])).
fof(f27185,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26838])).
fof(f27291,plain,(
  ( ! [X10] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10)))) ) | $spl66),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3198,f3238,f3338,f3339,f3345,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5940,f5944,f5945,f6046,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17363,f17367,f17368,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f17642,f16032,f17708,f3040,f3044,f3046,f3043,f3045,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14953,f14322,f10118,f10115,f10113,f10104,f10100,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5747,f5737,f3628,f3620,f3605,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f16911,f16910,f16747,f16746,f3552,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3414,f3443,f3444,f3445,f3454,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3474,f3477,f3479,f3481,f3482,f3547,f3568,f3599,f3656,f5821,f9998,f10099,f10102,f10119,f14959,f14962,f15401,f15413,f15711,f15714,f20328,f1618,f3437,f3447,f3451,f3452,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21690,f21747,f21780,f21781,f21794,f21817,f21764,f21429,f5918,f22937,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23299,f23021,f23022,f23024,f23026,f23027,f23240,f23301,f23034,f23036,f23037,f23040,f23041,f23042,f23043,f23048,f23050,f23051,f23238,f23056,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23235,f23307,f23312,f23313,f23215,f23210,f23135,f23318,f23320,f23325,f23331,f23333,f23191,f23417,f23418,f23419,f23420,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23837,f23506,f23511,f23513,f23515,f23516,f23841,f23523,f23524,f23525,f23526,f23529,f23530,f23531,f23532,f23533,f23761,f23847,f23848,f23851,f23852,f23563,f23565,f23567,f23568,f23575,f23576,f23577,f23578,f23858,f23734,f23729,f23728,f23867,f23645,f23877,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24403,f24404,f24406,f24409,f24410,f24444,f24412,f24424,f24425,f24427,f24527,f24528,f24530,f24533,f24534,f24578,f24536,f24550,f24551,f24553,f24556,f24557,f24637,f24638,f24639,f24640,f24641,f24845,f24667,f24668,f24678,f24679,f24680,f24682,f24683,f24684,f24686,f24687,f24833,f24691,f24692,f24693,f24896,f24897,f24696,f24702,f24703,f24705,f24707,f24708,f24715,f24716,f24717,f24718,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24740,f24742,f24743,f24832,f24750,f24751,f24752,f24753,f24904,f24905,f24906,f24907,f24908,f24909,f24910,f24911,f24912,f24913,f24914,f24915,f24916,f24917,f24918,f24919,f24920,f24921,f24922,f24923,f24924,f24926,f25069,f25077,f25080,f25082,f24990,f25182,f23035,f22061,f21801,f21947,f21799,f21783,f21830,f3549,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3487,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26255,f26257,f26261,f26262,f26310,f26264,f26278,f26279,f26281,f26435,f26822,f26437,f26438,f26823,f26824,f26441,f26442,f26826,f26827,f26829,f26446,f26831,f26832,f26450,f26833,f26835,f26836,f26838,f26840,f26842,f26844,f26845,f26847,f26851,f26853,f26854,f26855,f26856,f26858,f26860,f26862,f26866,f26868,f26871,f26873,f26876,f26879,f26881,f26883,f26886,f26888,f26890,f26894,f26482,f26483,f26896,f26898,f26900,f26902,f26904,f26905,f26906,f26908,f26909,f26910,f26911,f26912,f26913,f26914,f26500,f26501,f26502,f26915,f26504,f26505,f26917,f26919,f26921,f26923,f26924,f26927,f26931,f26932,f26935,f26936,f26938,f26939,f26940,f26942,f26521,f26944,f26945,f26948,f26950,f26951,f26952,f26953,f26955,f26956,f26958,f26962,f26964,f26965,f26966,f26968,f26971,f26972,f26974,f26975,f26977,f26978,f26979,f26980,f26981,f26982,f26984,f26985,f26986,f26987,f26988,f26990,f26553,f26554,f26555,f26556,f26991,f26558,f26559,f26560,f26561,f26562,f26992,f26993,f26565,f26566,f26567,f26568,f26569,f26570,f26572,f26607,f26612,f26994,f26996,f26617,f26999,f27001,f27004,f27006,f27010,f27013,f27015,f27016,f27017,f26628,f27018,f26630,f26631,f26632,f27019,f27020,f27022,f27023,f27024,f27025,f27026,f26640,f27027,f27028,f27029,f27031,f27032,f26646,f26647,f26648,f26649,f27033,f26651,f26652,f26653,f27034,f27035,f27036,f26657,f26658,f26659,f27044,f27049,f26674,f26675,f26676,f26677,f26678,f26679,f26680,f26681,f26682,f26683,f26684,f26685,f26686,f26687,f26688,f26689,f26690,f26691,f27050,f27051,f26694,f26696,f26697,f26698,f26699,f26700,f27055,f27056,f27057,f27058,f26710,f27060,f27062,f27063,f27064,f26715,f27066,f27067,f27068,f26719,f27072,f27073,f27074,f26723,f26724,f27075,f26726,f26727,f26728,f26729,f26730,f26731,f27076,f26733,f26734,f26735,f26736,f26737,f26738,f26739,f26740,f27077,f27078,f26743,f26744,f26745,f26746,f26747,f26750,f26751,f26752,f26753,f26754,f26755,f26756,f26757,f26758,f26759,f26760,f26761,f26762,f26763,f26764,f26765,f26766,f26767,f26768,f26769,f26770,f26771,f27122,f27123,f27124,f27125,f27129,f27131,f27132,f27133,f27137,f27149,f27157,f27164,f27166,f27171,f27176,f27144,f27140,f27179,f27180,f27290,f27182])).
fof(f27182,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X11) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10)))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26829])).
fof(f27290,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(subsumption_resolution,[],[f27181,f1246])).
fof(f27181,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26826])).
fof(f27180,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26824])).
fof(f27179,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl66),
  inference(backward_demodulation,[],[f27140,f26823])).
fof(f27140,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | $spl66),
  inference(forward_demodulation,[],[f27139,f26435])).
fof(f27139,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl66),
  inference(subsumption_resolution,[],[f27138,f1492])).
fof(f27138,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl66),
  inference(subsumption_resolution,[],[f26395,f424])).
fof(f26395,plain,(
  p(s(bool,'F_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl66),
  inference(superposition,[],[f3552,f475])).
fof(f27166,plain,(
  ( ! [X24,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat',X25)))) ) | $spl66),
  inference(subsumption_resolution,[],[f27165,f424])).
fof(f27165,plain,(
  ( ! [X24,X25] : (p(s(bool,'F_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat',X25)))) ) | $spl66),
  inference(forward_demodulation,[],[f26406,f475])).
fof(f26406,plain,(
  ( ! [X24,X25] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat',X25)))) ) | $spl66),
  inference(superposition,[],[f3552,f1018])).
fof(f27149,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) | $spl66),
  inference(condensation,[],[f27148])).
fof(f27148,plain,(
  ( ! [X74,X75,X73] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X75))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X73),s('type.rat.rat',X74)))) ) | $spl66),
  inference(subsumption_resolution,[],[f27147,f26438])).
fof(f27147,plain,(
  ( ! [X74,X75,X73] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X75))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X73),s('type.rat.rat',X74)))) ) | $spl66),
  inference(forward_demodulation,[],[f27146,f26435])).
fof(f27146,plain,(
  ( ! [X74,X75,X73] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X75))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X73),s('type.rat.rat',X74)))) ) | $spl66),
  inference(forward_demodulation,[],[f26417,f26435])).
fof(f26417,plain,(
  ( ! [X74,X75,X73] : (p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X75),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X73),s('type.rat.rat',X74))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X75))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X73),s('type.rat.rat',X74)))) ) | $spl66),
  inference(superposition,[],[f3552,f2306])).
fof(f27137,plain,(
  ( ! [X37,X35,X33,X36,X34] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X35),s('type.rat.rat',X36))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X34),s('type.rat.rat',X33))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X35))))))) | s(bool,X37) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X34),s('type.rat.rat',X33))) | s(bool,'T_0') = s(bool,X37)) ) | $spl66),
  inference(forward_demodulation,[],[f26821,f1445])).
fof(f26821,plain,(
  ( ! [X37,X35,X33,X36,X34] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X35),s('type.rat.rat',X36))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X34),s('type.rat.rat',X33))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X35))))))) | s(bool,X37) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X34),s('type.rat.rat',X33))) | s(bool,'T_0') = s(bool,X37)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f26310])).
fof(f27133,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17)))) ) | $spl66),
  inference(forward_demodulation,[],[f26817,f26435])).
fof(f26817,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f26281])).
fof(f27132,plain,(
  ( ! [X10,X8,X7,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10)))) ) | $spl66),
  inference(forward_demodulation,[],[f26816,f26435])).
fof(f26816,plain,(
  ( ! [X10,X8,X7,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f26279])).
fof(f27131,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27130,f26435])).
fof(f27130,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26815,f1445])).
fof(f26815,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f26278])).
fof(f27129,plain,(
  ( ! [X39,X38,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X39))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27128,f1445])).
fof(f27128,plain,(
  ( ! [X39,X38,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X39))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27127,f1445])).
fof(f27127,plain,(
  ( ! [X39,X38,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X39))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27126,f26435])).
fof(f27126,plain,(
  ( ! [X39,X38,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X39))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26814,f1445])).
fof(f26814,plain,(
  ( ! [X39,X38,X40] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X39),s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X39))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f26264])).
fof(f27125,plain,(
  ( ! [X30,X31,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30)))) ) | $spl66),
  inference(forward_demodulation,[],[f26813,f1445])).
fof(f26813,plain,(
  ( ! [X30,X31,X32] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X30),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f26262])).
fof(f27124,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))))))) | s(bool,X29) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29)) ) | $spl66),
  inference(forward_demodulation,[],[f26812,f1445])).
fof(f26812,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))))))) | s(bool,X29) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f26261])).
fof(f27123,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X14),s('type.rat.rat',X13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12)))) ) | $spl66),
  inference(forward_demodulation,[],[f26811,f26435])).
fof(f26811,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X14),s('type.rat.rat',X13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f26257])).
fof(f27122,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | $spl66),
  inference(forward_demodulation,[],[f27121,f26435])).
fof(f27121,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | $spl66),
  inference(forward_demodulation,[],[f26810,f1445])).
fof(f26810,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f26255])).
fof(f26771,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f25069])).
fof(f26770,plain,(
  ( ! [X134,X132,X133,X131] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X131))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | p(s(bool,X132)) | ~sP5('const.rat.rat_les_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X133,X132) | s(bool,X133) = s(bool,X134) | s(bool,'T_0') = s(bool,X134) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X131)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24926])).
fof(f26769,plain,(
  ( ! [X70,X68,X69] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X68))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | ~sP8('const.rat.rat_les_2'(s('type.rat.rat',X68),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X69,X70) | sP9('const.rat.rat_les_2'(s('type.rat.rat',X68),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X69,X70) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X68)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24924])).
fof(f26768,plain,(
  ( ! [X66,X67,X65] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | ~sP10('const.rat.rat_les_2'(s('type.rat.rat',X65),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X66,X67) | sP11('const.rat.rat_les_2'(s('type.rat.rat',X65),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X66,X67) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24923])).
fof(f26767,plain,(
  ( ! [X64,X62,X63] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | ~p(s(bool,X63)) | p(s(bool,X64)) | ~sP11('const.rat.rat_les_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X64,X63) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24922])).
fof(f26766,plain,(
  ( ! [X61,X59,X60] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | ~p(s(bool,X60)) | sP11('const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X60,X61) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24921])).
fof(f26765,plain,(
  ( ! [X57,X58,X56] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | p(s(bool,X57)) | sP11('const.rat.rat_les_2'(s('type.rat.rat',X56),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X58,X57) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24920])).
fof(f26764,plain,(
  ( ! [X54,X55,X53] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | p(s(bool,X54)) | ~p(s(bool,X55)) | ~sP10(X55,X54,'const.rat.rat_les_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24919])).
fof(f26763,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | p(s(bool,X51)) | p(s(bool,X52)) | ~sP9('const.rat.rat_les_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X52,X51) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24918])).
fof(f26762,plain,(
  ( ! [X47,X48,X49] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X47))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | ~p(s(bool,X48)) | sP9('const.rat.rat_les_2'(s('type.rat.rat',X47),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X48,X49) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X47)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24917])).
fof(f26761,plain,(
  ( ! [X45,X46,X44] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | ~p(s(bool,X45)) | sP9('const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X46,X45) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24916])).
fof(f26760,plain,(
  ( ! [X43,X41,X42] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X41))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | p(s(bool,X42)) | p(s(bool,X43)) | ~sP8('const.rat.rat_les_2'(s('type.rat.rat',X41),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X42,X43) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X41)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24915])).
fof(f26759,plain,(
  ( ! [X39,X38,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | ~p(s(bool,X39)) | p(s(bool,X40)) | ~sP7(X40,X39,'const.rat.rat_les_2'(s('type.rat.rat',X38),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24914])).
fof(f26758,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | ~p(s(bool,X36)) | p(s(bool,X37)) | ~sP6(X36,'const.rat.rat_les_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X37) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24913])).
fof(f26757,plain,(
  ( ! [X33,X34,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X32))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP3(X33,'const.rat.rat_les_2'(s('type.rat.rat',X32),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X34) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X32)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24912])).
fof(f26756,plain,(
  ( ! [X30,X31,X29] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP4(X30,'const.rat.rat_les_2'(s('type.rat.rat',X29),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X31) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24911])).
fof(f26755,plain,(
  ( ! [X28,X26,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | ~p(s(bool,X27)) | p(s(bool,X28)) | ~sP5(X27,'const.rat.rat_les_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X28) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24910])).
fof(f26754,plain,(
  ( ! [X24,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | p(s(bool,X25)) | sP1(X25,'const.rat.rat_les_2'(s('type.rat.rat',X24),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24909])).
fof(f26753,plain,(
  ( ! [X23,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | p(s(bool,X23)) | sP1('const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X23) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24908])).
fof(f26752,plain,(
  ( ! [X21,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | sP0('const.rat.rat_les_2'(s('type.rat.rat',X20),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X21) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24907])).
fof(f26751,plain,(
  ( ! [X19,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | sP0(X19,'const.rat.rat_les_2'(s('type.rat.rat',X18),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24906])).
fof(f26750,plain,(
  ( ! [X17,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | ~p(s(bool,X17)) | s(bool,X17) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X16),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24905])).
fof(f26747,plain,(
  ( ! [X72,X71,X73] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X72),s('type.rat.rat',X73))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X71))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X72),s('type.rat.rat',X73))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X71),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X71)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24753])).
fof(f26746,plain,(
  ( ! [X70,X69] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X70))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X70))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X69))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X69),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X69)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24752])).
fof(f26745,plain,(
  ( ! [X68,X66,X67] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X68),s('type.rat.rat',X67))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X67),s('type.rat.rat',X68))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X66),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24751])).
fof(f26744,plain,(
  ( ! [X45,X44] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X45))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X45) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24740])).
fof(f26743,plain,(
  ( ! [X111,X112,X110] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X111),s('type.rat.rat',X112))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X110))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X111),s('type.rat.rat',X112))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X110),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X110)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24718])).
fof(f27078,plain,(
  ( ! [X109,X108] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X109))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X109))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X108),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108)))) ) | $spl66),
  inference(forward_demodulation,[],[f26742,f1445])).
fof(f26742,plain,(
  ( ! [X109,X108] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X109))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X109))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X108),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24717])).
fof(f27077,plain,(
  ( ! [X107,X105,X106] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X106),s('type.rat.rat',X107))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X105))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X107),s('type.rat.rat',X106))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X105),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X105)))) ) | $spl66),
  inference(forward_demodulation,[],[f26741,f1445])).
fof(f26741,plain,(
  ( ! [X107,X105,X106] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X106),s('type.rat.rat',X107))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X105))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X107),s('type.rat.rat',X106))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X105),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X105)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24716])).
fof(f26740,plain,(
  ( ! [X103,X102,X104] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X103),s('type.rat.rat',X104))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X102))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X104),s('type.rat.rat',X103))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X102),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X102)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24715])).
fof(f26739,plain,(
  ( ! [X90,X89] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X90))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X89))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X90))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X89),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X89)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24708])).
fof(f26738,plain,(
  ( ! [X88,X87] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X88))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X87))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X88))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X87),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X87)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24707])).
fof(f26737,plain,(
  ( ! [X80,X79] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X80))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X80) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X79))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X79),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X79)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24703])).
fof(f26736,plain,(
  ( ! [X78] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X78))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X78))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X78)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24702])).
fof(f26735,plain,(
  ( ! [X72,X71,X73] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X73))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X73))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X72),s('type.rat.rat',X71))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X71),s('type.rat.rat',X72))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X71),s('type.rat.rat',X72)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24696])).
fof(f26734,plain,(
  ( ! [X64,X62,X63] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X64))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X64) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X63),s('type.rat.rat',X62))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X62),s('type.rat.rat',X63))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X62),s('type.rat.rat',X63)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24693])).
fof(f26733,plain,(
  ( ! [X61,X59,X60] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X61))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24692])).
fof(f27076,plain,(
  ( ! [X56,X55] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X56),s('type.rat.rat',X55))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X55),s('type.rat.rat',X56)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26732,f1445])).
fof(f26732,plain,(
  ( ! [X56,X55] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X56),s('type.rat.rat',X55))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X55),s('type.rat.rat',X56))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X55),s('type.rat.rat',X56)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24691])).
fof(f26731,plain,(
  ( ! [X50,X49] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X50))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X50) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X49))))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X49),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X49)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24687])).
fof(f26730,plain,(
  ( ! [X47,X48,X46] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X47),s('type.rat.rat',X48))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X46))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X48),s('type.rat.rat',X47))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24686])).
fof(f26729,plain,(
  ( ! [X43,X42] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X42))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X43))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X42),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24684])).
fof(f26728,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X39),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24683])).
fof(f26727,plain,(
  ( ! [X28,X29] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X29))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X28))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24678])).
fof(f26726,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X5))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24667])).
fof(f27075,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26725,f1445])).
fof(f26725,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24639])).
fof(f26724,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X33),s('type.rat.rat',X32))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X30))))))) | s(bool,X34) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X31),s('type.rat.rat',X30))) | s(bool,'T_0') = s(bool,X34)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24578])).
fof(f26723,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X32))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X32))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X30))))) | s(bool,X33) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X30),s('type.rat.rat',X31))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X33)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24557])).
fof(f27074,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X28))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X26))))) | s(bool,X29) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29)) ) | $spl66),
  inference(forward_demodulation,[],[f26722,f1445])).
fof(f26722,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X28))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X26))))) | s(bool,X29) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X26),s('type.rat.rat',X27))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24556])).
fof(f27073,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26721,f26435])).
fof(f26721,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24550])).
fof(f27072,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27071,f1445])).
fof(f27071,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27070,f1445])).
fof(f27070,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27069,f26435])).
fof(f27069,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26720,f1445])).
fof(f26720,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24536])).
fof(f26719,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))))) | s(bool,X29) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24534])).
fof(f27068,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X23))))) | s(bool,X25) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X25)) ) | $spl66),
  inference(forward_demodulation,[],[f26718,f1445])).
fof(f26718,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X23))))) | s(bool,X25) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X25)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24533])).
fof(f27067,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | $spl66),
  inference(forward_demodulation,[],[f26717,f26435])).
fof(f26717,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24528])).
fof(f27066,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl66),
  inference(forward_demodulation,[],[f27065,f26435])).
fof(f27065,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(forward_demodulation,[],[f26716,f1445])).
fof(f26716,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24527])).
fof(f26715,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X33))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X30))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X33),s('type.rat.rat',X32))))))) | s(bool,X34) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X31),s('type.rat.rat',X30))) | s(bool,'T_0') = s(bool,X34)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24444])).
fof(f27064,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17)))) ) | $spl66),
  inference(forward_demodulation,[],[f26714,f26435])).
fof(f26714,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24427])).
fof(f27063,plain,(
  ( ! [X10,X8,X7,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10)))) ) | $spl66),
  inference(forward_demodulation,[],[f26713,f26435])).
fof(f26713,plain,(
  ( ! [X10,X8,X7,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24425])).
fof(f27062,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27061,f1445])).
fof(f27061,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26712,f26435])).
fof(f26712,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24424])).
fof(f27060,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27059,f1445])).
fof(f27059,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26711,f26435])).
fof(f26711,plain,(
  ( ! [X37,X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X36))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24412])).
fof(f26710,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))))))) | s(bool,X29) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X26),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X29)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24410])).
fof(f27058,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X23))))))) | s(bool,X25) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X25)) ) | $spl66),
  inference(forward_demodulation,[],[f26709,f1445])).
fof(f26709,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X23))))))) | s(bool,X25) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X22),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X25)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24409])).
fof(f27057,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X14),s('type.rat.rat',X13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12)))) ) | $spl66),
  inference(forward_demodulation,[],[f26708,f26435])).
fof(f26708,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X14),s('type.rat.rat',X13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24406])).
fof(f27056,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | $spl66),
  inference(forward_demodulation,[],[f26707,f26435])).
fof(f26707,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24404])).
fof(f27055,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl66),
  inference(forward_demodulation,[],[f27054,f26435])).
fof(f27054,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(forward_demodulation,[],[f26706,f1445])).
fof(f26706,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f24403])).
fof(f26700,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))) | p(s(bool,X0)) | s(bool,X0) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X2)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23877])).
fof(f26699,plain,(
  ( ! [X111,X109,X110,X108] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X110))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X110))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X109),s('type.rat.rat',X108))))))) | s(bool,X111) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X109),s('type.rat.rat',X108))) | s(bool,'T_0') = s(bool,X111)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23852])).
fof(f26698,plain,(
  ( ! [X90,X88,X87,X89] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X89))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X89))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X88),s('type.rat.rat',X87))))))) | s(bool,X90) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X88),s('type.rat.rat',X87))) | s(bool,'T_0') = s(bool,X90)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23847])).
fof(f26697,plain,(
  ( ! [X43,X41,X44,X42,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X42))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))))) | s('type.integer.int',X42) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) | s(bool,X44) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))) | s(bool,'T_0') = s(bool,X44)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23837])).
fof(f26696,plain,(
  ( ! [X30,X28,X29,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X29))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X29))))) | s(bool,X30) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X28),s('type.rat.rat',X27))) | s(bool,'T_0') = s(bool,X30)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23836])).
fof(f26694,plain,(
  ( ! [X191,X189,X187,X190,X188] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X189),s('type.rat.rat',X190))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X187),s('type.rat.rat',X188))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X189),s('type.rat.rat',X190))))))) | s(bool,X191) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X188),s('type.rat.rat',X187))) | s(bool,'T_0') = s(bool,X191)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23578])).
fof(f27051,plain,(
  ( ! [X185,X186,X184,X183] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X185))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X185))))))))) | s(bool,X186) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X184),s('type.rat.rat',X183))) | s(bool,'T_0') = s(bool,X186)) ) | $spl66),
  inference(forward_demodulation,[],[f26693,f1445])).
fof(f26693,plain,(
  ( ! [X185,X186,X184,X183] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X185))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X183),s('type.rat.rat',X184))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X185))))))))) | s(bool,X186) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X184),s('type.rat.rat',X183))) | s(bool,'T_0') = s(bool,X186)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23577])).
fof(f27050,plain,(
  ( ! [X182,X180,X178,X181,X179] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X180),s('type.rat.rat',X181))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X178),s('type.rat.rat',X179))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X181),s('type.rat.rat',X180))))))) | s(bool,X182) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X179),s('type.rat.rat',X178))) | s(bool,'T_0') = s(bool,X182)) ) | $spl66),
  inference(forward_demodulation,[],[f26692,f1445])).
fof(f26692,plain,(
  ( ! [X182,X180,X178,X181,X179] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X180),s('type.rat.rat',X181))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X178),s('type.rat.rat',X179))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X181),s('type.rat.rat',X180))))))) | s(bool,X182) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X179),s('type.rat.rat',X178))) | s(bool,'T_0') = s(bool,X182)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23576])).
fof(f26691,plain,(
  ( ! [X177,X175,X173,X176,X174] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X175),s('type.rat.rat',X176))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X173),s('type.rat.rat',X174))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X176),s('type.rat.rat',X175))))) | s(bool,X177) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X174),s('type.rat.rat',X173))) | s(bool,'T_0') = s(bool,X177)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23575])).
fof(f26690,plain,(
  ( ! [X146,X149,X147,X148] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X148))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X148))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X146),s('type.rat.rat',X147))))) | s(bool,X149) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X147),s('type.rat.rat',X146))) | s(bool,'T_0') = s(bool,X149)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23568])).
fof(f26689,plain,(
  ( ! [X144,X142,X145,X143] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X144))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X144))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X142),s('type.rat.rat',X143))))) | s(bool,X145) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X143),s('type.rat.rat',X142))) | s(bool,'T_0') = s(bool,X145)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23567])).
fof(f26688,plain,(
  ( ! [X134,X136,X135,X137] : (s('type.integer.int',X136) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X136))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X134),s('type.rat.rat',X135))))))) | s(bool,X137) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X135),s('type.rat.rat',X134))) | s(bool,'T_0') = s(bool,X137)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23565])).
fof(f26687,plain,(
  ( ! [X127,X128,X126,X129] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X128))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X128) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X126),s('type.rat.rat',X127))))) | s(bool,X129) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X127),s('type.rat.rat',X126))) | s(bool,'T_0') = s(bool,X129)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23563])).
fof(f26686,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))))) | s(bool,X21) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X19),s('type.rat.rat',X18))) | s(bool,'T_0') = s(bool,X21)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23533])).
fof(f26685,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X16) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))))))) | s(bool,X17) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))) | s(bool,'T_0') = s(bool,X17)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23532])).
fof(f26684,plain,(
  ( ! [X4,X5,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X3))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,X5) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat',X3))) | s(bool,'T_0') = s(bool,X5)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23529])).
fof(f26683,plain,(
  ( ! [X134,X132,X130,X133,X131] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X132),s('type.rat.rat',X133))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X132),s('type.rat.rat',X133))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X130),s('type.rat.rat',X131))))))) | s(bool,X134) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X131),s('type.rat.rat',X130))) | s(bool,'T_0') = s(bool,X134)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23526])).
fof(f26682,plain,(
  ( ! [X127,X128,X126,X129] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X128))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X128))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X126),s('type.rat.rat',X127))))))) | s(bool,X129) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X127),s('type.rat.rat',X126))) | s(bool,'T_0') = s(bool,X129)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23525])).
fof(f26681,plain,(
  ( ! [X125,X123,X121,X124,X122] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X124),s('type.rat.rat',X123))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X121),s('type.rat.rat',X122))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X123),s('type.rat.rat',X124))))))) | s(bool,X125) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X122),s('type.rat.rat',X121))) | s(bool,'T_0') = s(bool,X125)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23524])).
fof(f26680,plain,(
  ( ! [X118,X116,X120,X119,X117] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X119),s('type.rat.rat',X118))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X118),s('type.rat.rat',X119))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X116),s('type.rat.rat',X117))))))) | s(bool,X120) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X117),s('type.rat.rat',X116))) | s(bool,'T_0') = s(bool,X120)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23523])).
fof(f26679,plain,(
  ( ! [X92,X90,X93,X91] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X92))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X92))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X90),s('type.rat.rat',X91))))))) | s(bool,X93) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X91),s('type.rat.rat',X90))) | s(bool,'T_0') = s(bool,X93)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23516])).
fof(f26678,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X88))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X88))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X86),s('type.rat.rat',X87))))))) | s(bool,X89) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X87),s('type.rat.rat',X86))) | s(bool,'T_0') = s(bool,X89)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23515])).
fof(f26677,plain,(
  ( ! [X80,X78,X81,X79] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X80))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X80) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X78),s('type.rat.rat',X79))))) | s(bool,X81) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X79),s('type.rat.rat',X78))) | s(bool,'T_0') = s(bool,X81)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23513])).
fof(f26676,plain,(
  ( ! [X70,X72,X71,X73] : (s('type.integer.int',X72) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X72))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X70),s('type.rat.rat',X71))))))) | s(bool,X73) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X71),s('type.rat.rat',X70))) | s(bool,'T_0') = s(bool,X73)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23511])).
fof(f26675,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X37) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X35),s('type.rat.rat',X36))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X37))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) | s(bool,X39) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X36),s('type.rat.rat',X35))) | s(bool,'T_0') = s(bool,X39)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23502])).
fof(f26674,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s(bool,X3) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))) | s(bool,'T_0') = s(bool,X3)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23494])).
fof(f27049,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | s(bool,X9) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))) | s(bool,'T_0') = s(bool,X9) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26673,f1445])).
fof(f26673,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X8))))) | s(bool,X9) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X8),s('type.rat.rat',X7))) | s(bool,'T_0') = s(bool,X9) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23418])).
fof(f27044,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | p(s(bool,X0)) | s(bool,X0) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl66),
  inference(forward_demodulation,[],[f26667,f1445])).
fof(f26667,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | p(s(bool,X0)) | s(bool,X0) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23320])).
fof(f26659,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,'T_0') = s(bool,sK14(X0,X1,X2,bool)) | s(X2,f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) != s(X2,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23215])).
fof(f26658,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X0) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23191])).
fof(f26657,plain,(
  ( ! [X273,X275,X272,X274] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X275))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,f(s(X272,sK14(X273,X274,bool,X272)))) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X275),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(fun(X272,bool),X273) = s(fun(X272,bool),X274) | s(bool,'T_0') = s(bool,g(s(X272,sK14(X273,X274,bool,X272))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23135])).
fof(f27036,plain,(
  ( ! [X111,X109,X110,X108] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X109),s('type.rat.rat',X110))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X109),s('type.rat.rat',X110))))) | s(bool,X111) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X108),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X111)) ) | $spl66),
  inference(forward_demodulation,[],[f26656,f1445])).
fof(f26656,plain,(
  ( ! [X111,X109,X110,X108] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X109),s('type.rat.rat',X110))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X108))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X109),s('type.rat.rat',X110))))) | s(bool,X111) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X108),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X111)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23076])).
fof(f27035,plain,(
  ( ! [X107,X105,X106] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X106))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X106))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X105))))) | s(bool,X107) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X105),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X107)) ) | $spl66),
  inference(forward_demodulation,[],[f26655,f1445])).
fof(f26655,plain,(
  ( ! [X107,X105,X106] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X106))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X106))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X105))))) | s(bool,X107) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X105),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X107)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23075])).
fof(f27034,plain,(
  ( ! [X103,X101,X102,X104] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X103),s('type.rat.rat',X102))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X101))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X102),s('type.rat.rat',X103))))))) | s(bool,X104) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X101),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X104)) ) | $spl66),
  inference(forward_demodulation,[],[f26654,f1445])).
fof(f26654,plain,(
  ( ! [X103,X101,X102,X104] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X103),s('type.rat.rat',X102))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X101))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X102),s('type.rat.rat',X103))))))) | s(bool,X104) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X101),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X104)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23074])).
fof(f26653,plain,(
  ( ! [X99,X97,X100,X98] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X99),s('type.rat.rat',X98))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X97))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X98),s('type.rat.rat',X99))))) | s(bool,X100) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X97),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X100)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23073])).
fof(f26652,plain,(
  ( ! [X80,X81,X79] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X80))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X80))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X79))))) | s(bool,X81) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X79),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X81)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23066])).
fof(f26651,plain,(
  ( ! [X78,X76,X77] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X77))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X76))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X77))))) | s(bool,X78) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X76),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X78)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23065])).
fof(f27033,plain,(
  ( ! [X70,X72,X71] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X71))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X71) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X70))) | s(bool,X72) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X72)) ) | $spl66),
  inference(forward_demodulation,[],[f26650,f1445])).
fof(f26650,plain,(
  ( ! [X70,X72,X71] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X71))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int',X71) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X70))) | s(bool,X72) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X70),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X72)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23063])).
fof(f26649,plain,(
  ( ! [X66,X64,X65] : (s('type.integer.int',X65) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X65))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X64))))) | s(bool,X66) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X64),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X66)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23061])).
fof(f26648,plain,(
  ( ! [X61,X59,X60,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))) | s(bool,X61) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X58),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X61)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23059])).
fof(f26647,plain,(
  ( ! [X57,X56,X55] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X56))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) | s(bool,X57) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X55),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X57)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23058])).
fof(f26646,plain,(
  ( ! [X54,X52,X53,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X53),s('type.rat.rat',X52))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X51))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X52),s('type.rat.rat',X53))))))) | s(bool,X54) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X54)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23057])).
fof(f27032,plain,(
  ( ! [X152,X151,X153,X150] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X151),s('type.rat.rat',X152))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X150))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X151),s('type.rat.rat',X152))))))) | s(bool,X153) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X150),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X153)) ) | $spl66),
  inference(forward_demodulation,[],[f26645,f1445])).
fof(f26645,plain,(
  ( ! [X152,X151,X153,X150] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X151),s('type.rat.rat',X152))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X150))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X151),s('type.rat.rat',X152))))))) | s(bool,X153) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X150),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X153)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23037])).
fof(f27031,plain,(
  ( ! [X149,X147,X148] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X148))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X147))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X148))))))))) | s(bool,X149) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X147),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X149)) ) | $spl66),
  inference(forward_demodulation,[],[f27030,f1445])).
fof(f27030,plain,(
  ( ! [X149,X147,X148] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X148))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X147))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X148))))))))) | s(bool,X149) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X147),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X149)) ) | $spl66),
  inference(forward_demodulation,[],[f26644,f1445])).
fof(f26644,plain,(
  ( ! [X149,X147,X148] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X148))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X147))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X148))))))))) | s(bool,X149) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X147),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X149)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23036])).
fof(f27029,plain,(
  ( ! [X142,X140,X141,X139] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X140),s('type.rat.rat',X141))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X139))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X141),s('type.rat.rat',X140))))) | s(bool,X142) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X139),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X142)) ) | $spl66),
  inference(forward_demodulation,[],[f26643,f1445])).
fof(f26643,plain,(
  ( ! [X142,X140,X141,X139] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X140),s('type.rat.rat',X141))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X139))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X141),s('type.rat.rat',X140))))) | s(bool,X142) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X139),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X142)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23034])).
fof(f27028,plain,(
  ( ! [X121,X120,X119] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X120))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X119))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X120))))) | s(bool,X121) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X119),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X121)) ) | $spl66),
  inference(forward_demodulation,[],[f26642,f1445])).
fof(f26642,plain,(
  ( ! [X121,X120,X119] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X120))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X119))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X120))))) | s(bool,X121) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X119),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X121)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23027])).
fof(f27027,plain,(
  ( ! [X118,X116,X117] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X117))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X116))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X117))))))) | s(bool,X118) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X116),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X118)) ) | $spl66),
  inference(forward_demodulation,[],[f26641,f1445])).
fof(f26641,plain,(
  ( ! [X118,X116,X117] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X117))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X116))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X117))))))) | s(bool,X118) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X116),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X118)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23026])).
fof(f26640,plain,(
  ( ! [X111,X112,X110] : (s('type.integer.int',X111) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X111))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X110))))) | s(bool,X112) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X110),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X112)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23024])).
fof(f27026,plain,(
  ( ! [X105,X106,X104] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X105))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X105) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X104))) | s(bool,X106) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X104),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X106)) ) | $spl66),
  inference(forward_demodulation,[],[f26639,f1445])).
fof(f26639,plain,(
  ( ! [X105,X106,X104] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X105))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int',X105) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X104))) | s(bool,X106) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X104),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X106)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23022])).
fof(f27025,plain,(
  ( ! [X103,X102] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X102))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s(bool,X103) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X102))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X103)) ) | $spl66),
  inference(forward_demodulation,[],[f26638,f1445])).
fof(f26638,plain,(
  ( ! [X103,X102] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X102))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s(bool,X103) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X102))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X103)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23021])).
fof(f27024,plain,(
  ( ! [X87,X85,X86,X84] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X86))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int',X86) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X85),s('type.rat.rat',X84))))) | s(bool,X87) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X84),s('type.rat.rat',X85))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X87)) ) | $spl66),
  inference(forward_demodulation,[],[f26637,f1445])).
fof(f26637,plain,(
  ( ! [X87,X85,X86,X84] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X86))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X86) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X85),s('type.rat.rat',X84))))) | s(bool,X87) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X84),s('type.rat.rat',X85))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X87)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23013])).
fof(f27023,plain,(
  ( ! [X80,X83,X81,X82] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X82))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X82))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X81),s('type.rat.rat',X80))))) | s(bool,X83) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X80),s('type.rat.rat',X81))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X83)) ) | $spl66),
  inference(forward_demodulation,[],[f26636,f1445])).
fof(f26636,plain,(
  ( ! [X80,X83,X81,X82] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X82))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X82))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X81),s('type.rat.rat',X80))))) | s(bool,X83) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X80),s('type.rat.rat',X81))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X83)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23012])).
fof(f27022,plain,(
  ( ! [X78,X79,X77] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X78),s('type.rat.rat',X77))))) | s(bool,X79) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X77),s('type.rat.rat',X78))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X79)) ) | $spl66),
  inference(forward_demodulation,[],[f27021,f1445])).
fof(f27021,plain,(
  ( ! [X78,X79,X77] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X78),s('type.rat.rat',X77))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s(bool,X79) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X77),s('type.rat.rat',X78))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X79)) ) | $spl66),
  inference(forward_demodulation,[],[f26635,f1445])).
fof(f26635,plain,(
  ( ! [X78,X79,X77] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X78),s('type.rat.rat',X77))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s(bool,X79) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X77),s('type.rat.rat',X78))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X79)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23011])).
fof(f27020,plain,(
  ( ! [X68,X69,X67] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X68))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int',X68) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X67))))))))) | s(bool,X69) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X67),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X69)) ) | $spl66),
  inference(forward_demodulation,[],[f26634,f1445])).
fof(f26634,plain,(
  ( ! [X68,X69,X67] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X68))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X68) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X67))))))))) | s(bool,X69) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X67),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X69)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23007])).
fof(f27019,plain,(
  ( ! [X61,X62,X63] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X61))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X62))))))) | s(bool,X63) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X63)) ) | $spl66),
  inference(forward_demodulation,[],[f26633,f1445])).
fof(f26633,plain,(
  ( ! [X61,X62,X63] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X61))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X62))))))) | s(bool,X63) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X61),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X63)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23005])).
fof(f26632,plain,(
  ( ! [X59,X57,X60,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X58),s('type.rat.rat',X59))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X57))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X58))))) | s(bool,X60) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X57),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X60)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23004])).
fof(f26631,plain,(
  ( ! [X52,X53,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X51))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X52))))) | s(bool,X53) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X51),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X53)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23002])).
fof(f26630,plain,(
  ( ! [X50,X48,X49] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X49))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X48))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X49))))))) | s(bool,X50) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X48),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X50)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23001])).
fof(f27018,plain,(
  ( ! [X47,X45,X46] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X46))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X45))))))) | s(bool,X47) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X47)) ) | $spl66),
  inference(forward_demodulation,[],[f26629,f1445])).
fof(f26629,plain,(
  ( ! [X47,X45,X46] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X46))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X45))))))) | s(bool,X47) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X45),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X47)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f23000])).
fof(f26628,plain,(
  ( ! [X12,X10,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X11) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X10))))) | s(bool,X12) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X12)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f22988])).
fof(f27017,plain,(
  ( ! [X8,X7,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))) | s(bool,X9) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X9)) ) | $spl66),
  inference(forward_demodulation,[],[f26627,f1445])).
fof(f26627,plain,(
  ( ! [X8,X7,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))) | s(bool,X9) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X9)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f22987])).
fof(f27016,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) | s(bool,X2) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X2) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26626,f1445])).
fof(f26626,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) | s(bool,X2) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X2) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f22937])).
fof(f27015,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27014,f1445])).
fof(f27014,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26625,f26435])).
fof(f26625,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f21817])).
fof(f27013,plain,(
  ( ! [X59,X60,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27012,f1445])).
fof(f27012,plain,(
  ( ! [X59,X60,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27011,f26435])).
fof(f27011,plain,(
  ( ! [X59,X60,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26624,f1445])).
fof(f26624,plain,(
  ( ! [X59,X60,X58] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X58)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f21794])).
fof(f27010,plain,(
  ( ! [X33,X34] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X34))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27009,f1445])).
fof(f27009,plain,(
  ( ! [X33,X34] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X34))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27008,f1445])).
fof(f27008,plain,(
  ( ! [X33,X34] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X34))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27007,f26435])).
fof(f27007,plain,(
  ( ! [X33,X34] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X34))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26623,f1445])).
fof(f26623,plain,(
  ( ! [X33,X34] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X34))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X33)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f21781])).
fof(f27006,plain,(
  ( ! [X30,X31,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27005,f1445])).
fof(f27005,plain,(
  ( ! [X30,X31,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26622,f26435])).
fof(f26622,plain,(
  ( ! [X30,X31,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f21780])).
fof(f27004,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27003,f26435])).
fof(f27003,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27002,f1445])).
fof(f27002,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26621,f1445])).
fof(f26621,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f21764])).
fof(f27001,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27000,f26435])).
fof(f27000,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26620,f1445])).
fof(f26620,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f21747])).
fof(f26999,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s(bool,X4) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl66),
  inference(forward_demodulation,[],[f26619,f1445])).
fof(f26619,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s(bool,X4) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f21690])).
fof(f26617,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f21429])).
fof(f26998,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | ($spl3 | $spl66)),
  inference(forward_demodulation,[],[f26997,f26435])).
fof(f26997,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | ($spl3 | $spl66)),
  inference(forward_demodulation,[],[f26616,f1445])).
fof(f26616,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | ($spl3 | $spl66)),
  inference(backward_demodulation,[],[f26435,f20390])).
fof(f26996,plain,(
  ( ! [X17,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X16))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16)))) ) | $spl66),
  inference(forward_demodulation,[],[f26995,f26435])).
fof(f26995,plain,(
  ( ! [X17,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X16))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(forward_demodulation,[],[f26614,f1445])).
fof(f26614,plain,(
  ( ! [X17,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X16))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f18370])).
fof(f26994,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | $spl66),
  inference(forward_demodulation,[],[f26613,f26435])).
fof(f26613,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f18366])).
fof(f26612,plain,(
  ( ! [X2,X3,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))))) | s(bool,X3) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X3)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f18365])).
fof(f26607,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | p(s(bool,X0)) | s(bool,X0) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f17755])).
fof(f26572,plain,(
  ( ! [X68,X66,X69,X67] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X68))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X68) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X67),s('type.rat.rat',X66))))) | s(bool,X69) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X67))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X69)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f17707])).
fof(f26570,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s(bool,'T_0') = s(bool,sK14(X0,X1,X2,bool)) | s(X2,f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) != s(X2,g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f17621])).
fof(f26569,plain,(
  ( ! [X92,X90,X91,X89] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X90),s('type.rat.rat',X91))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X89))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X90),s('type.rat.rat',X91))))) | s(bool,X92) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X89),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X92)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f17378])).
fof(f26568,plain,(
  ( ! [X88,X87,X86] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X87))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X87))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X86))))) | s(bool,X88) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X86),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X88)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f17377])).
fof(f26567,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X84),s('type.rat.rat',X83))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X82))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X83),s('type.rat.rat',X84))))))) | s(bool,X85) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X82),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X85)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f17376])).
fof(f26566,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X51))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X51) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) | s(bool,X52) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X50),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X52)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f17365])).
fof(f26565,plain,(
  ( ! [X134,X136,X135,X133] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X134),s('type.rat.rat',X135))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X133))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X134),s('type.rat.rat',X135))))))) | s(bool,X136) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X133),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X136)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f17346])).
fof(f26993,plain,(
  ( ! [X132,X130,X131] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X131))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X130))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X131))))))))) | s(bool,X132) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X132)) ) | $spl66),
  inference(forward_demodulation,[],[f26564,f1445])).
fof(f26564,plain,(
  ( ! [X132,X130,X131] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X131))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X130))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X131))))))))) | s(bool,X132) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X130),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X132)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f17345])).
fof(f26992,plain,(
  ( ! [X127,X128,X126,X129] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X127),s('type.rat.rat',X128))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X126))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X128),s('type.rat.rat',X127))))))) | s(bool,X129) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X126),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X129)) ) | $spl66),
  inference(forward_demodulation,[],[f26563,f1445])).
fof(f26563,plain,(
  ( ! [X127,X128,X126,X129] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X127),s('type.rat.rat',X128))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X126))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X128),s('type.rat.rat',X127))))))) | s(bool,X129) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X126),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X129)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f17344])).
fof(f26562,plain,(
  ( ! [X125,X123,X124,X122] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X123),s('type.rat.rat',X124))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X122))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X124),s('type.rat.rat',X123))))) | s(bool,X125) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X122),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X125)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f17343])).
fof(f26561,plain,(
  ( ! [X103,X102,X104] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X103))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X102))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X103))))) | s(bool,X104) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X102),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X104)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f17336])).
fof(f26560,plain,(
  ( ! [X101,X99,X100] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X100))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X99))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X100))))))) | s(bool,X101) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X99),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X101)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f17335])).
fof(f26559,plain,(
  ( ! [X88,X87,X89] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X88))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X88) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X87))) | s(bool,X89) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X87),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X89)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f17331])).
fof(f26558,plain,(
  ( ! [X85,X86] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X85))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,X86) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X85))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X86)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f17330])).
fof(f26991,plain,(
  ( ! [X76,X74,X75] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X75),s('type.rat.rat',X74))))) | s(bool,X76) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X76)) ) | $spl66),
  inference(forward_demodulation,[],[f26557,f1445])).
fof(f26557,plain,(
  ( ! [X76,X74,X75] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X75),s('type.rat.rat',X74))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,X76) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X74),s('type.rat.rat',X75))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X76)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f17324])).
fof(f26556,plain,(
  ( ! [X64,X62,X65,X63] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X64))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X64))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X63),s('type.rat.rat',X62))))) | s(bool,X65) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X62),s('type.rat.rat',X63))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X65)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f17321])).
fof(f26555,plain,(
  ( ! [X54,X55,X53] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X54))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X54) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X53))))))))) | s(bool,X55) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X53),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X55)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f17318])).
fof(f26554,plain,(
  ( ! [X39,X37,X38] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X37))))))) | s(bool,X39) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X39)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f17313])).
fof(f26553,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))))) | s(bool,X10) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X10)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f17304])).
fof(f26990,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X17),s('type.rat.rat',X16))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26989,f26435])).
fof(f26989,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X17),s('type.rat.rat',X16))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26552,f1445])).
fof(f26552,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X17),s('type.rat.rat',X16))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f16911])).
fof(f26988,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X15))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))))) | s('type.integer.int',X15) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14)))) ) | $spl66),
  inference(forward_demodulation,[],[f26551,f26435])).
fof(f26551,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X15))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))))) | s('type.integer.int',X15) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X12),s('type.rat.rat',X13))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f16910])).
fof(f26987,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | $spl66),
  inference(forward_demodulation,[],[f26550,f26435])).
fof(f26550,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f16907])).
fof(f26986,plain,(
  ( ! [X39,X41,X42,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42)))) ) | $spl66),
  inference(forward_demodulation,[],[f26549,f26435])).
fof(f26549,plain,(
  ( ! [X39,X41,X42,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f16892])).
fof(f26985,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X25),s('type.rat.rat',X24))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22)))) ) | $spl66),
  inference(forward_demodulation,[],[f26548,f26435])).
fof(f26548,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X25))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X25),s('type.rat.rat',X24))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f16887])).
fof(f26984,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17)))) ) | $spl66),
  inference(forward_demodulation,[],[f26983,f26435])).
fof(f26983,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17)))) ) | $spl66),
  inference(forward_demodulation,[],[f26547,f1445])).
fof(f26547,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X16))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X15))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f16885])).
fof(f26982,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X17),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26546,f26435])).
fof(f26546,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X17),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f16747])).
fof(f26981,plain,(
  ( ! [X19,X20,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18)))) ) | $spl66),
  inference(forward_demodulation,[],[f26545,f26435])).
fof(f26545,plain,(
  ( ! [X19,X20,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f16731])).
fof(f26980,plain,(
  ( ! [X21,X19,X20] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X21))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))) | s('type.integer.int',X21) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X20)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26544,f26435])).
fof(f26544,plain,(
  ( ! [X21,X19,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X21))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X21) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X20)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f15734])).
fof(f26979,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X9)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26543,f26435])).
fof(f26543,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X9))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X8),s('type.rat.rat',X9)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f15731])).
fof(f26978,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | $spl66),
  inference(forward_demodulation,[],[f26542,f26435])).
fof(f26542,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f15729])).
fof(f26977,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26976,f26435])).
fof(f26976,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26541,f1445])).
fof(f26541,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f15718])).
fof(f26975,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) ) | $spl66),
  inference(forward_demodulation,[],[f26540,f26435])).
fof(f26540,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f15715])).
fof(f26974,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26973,f1445])).
fof(f26973,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26539,f26435])).
fof(f26539,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f15714])).
fof(f26972,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45)))) ) | $spl66),
  inference(forward_demodulation,[],[f26538,f26435])).
fof(f26538,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X43),s('type.rat.rat',X44))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X45)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f15712])).
fof(f26971,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26970,f1445])).
fof(f26970,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26969,f26435])).
fof(f26969,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26537,f1445])).
fof(f26537,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f15711])).
fof(f26968,plain,(
  ( ! [X37,X38,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36)))) ) | $spl66),
  inference(forward_demodulation,[],[f26967,f26435])).
fof(f26967,plain,(
  ( ! [X37,X38,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(forward_demodulation,[],[f26536,f1445])).
fof(f26536,plain,(
  ( ! [X37,X38,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X37),s('type.rat.rat',X38))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f15710])).
fof(f26966,plain,(
  ( ! [X28,X26,X27,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25)))) ) | $spl66),
  inference(forward_demodulation,[],[f26535,f26435])).
fof(f26535,plain,(
  ( ! [X28,X26,X27,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X27),s('type.rat.rat',X28))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f15707])).
fof(f26965,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20)))) ) | $spl66),
  inference(forward_demodulation,[],[f26534,f26435])).
fof(f26534,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f15705])).
fof(f26964,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) ) | $spl66),
  inference(forward_demodulation,[],[f26963,f26435])).
fof(f26963,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(forward_demodulation,[],[f26533,f1445])).
fof(f26533,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X4))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f15701])).
fof(f26962,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26961,f1445])).
fof(f26961,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26960,f26435])).
fof(f26960,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26959,f1445])).
fof(f26959,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26532,f1445])).
fof(f26532,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f15413])).
fof(f26958,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X16))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15)))) ) | $spl66),
  inference(forward_demodulation,[],[f26957,f26435])).
fof(f26957,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X16))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(forward_demodulation,[],[f26531,f1445])).
fof(f26531,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X16))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f15412])).
fof(f26956,plain,(
  ( ! [X2,X3,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | $spl66),
  inference(forward_demodulation,[],[f26530,f26435])).
fof(f26530,plain,(
  ( ! [X2,X3,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f15407])).
fof(f26955,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26954,f26435])).
fof(f26954,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26529,f1445])).
fof(f26529,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f15401])).
fof(f26953,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X16))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15)))) ) | $spl66),
  inference(forward_demodulation,[],[f26528,f26435])).
fof(f26528,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X16))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f15400])).
fof(f26952,plain,(
  ( ! [X21,X19,X20] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X21))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))) | s('type.integer.int',X21) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X20)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26527,f26435])).
fof(f26527,plain,(
  ( ! [X21,X19,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X20))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X21))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X21) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X20),s('type.rat.rat',X19))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X20)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f14982])).
fof(f26951,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X14),s('type.rat.rat',X13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26526,f26435])).
fof(f26526,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X14),s('type.rat.rat',X13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f14966])).
fof(f26950,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X52),s('type.rat.rat',X51))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26949,f1445])).
fof(f26949,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X52),s('type.rat.rat',X51))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26525,f26435])).
fof(f26525,plain,(
  ( ! [X52,X50,X51] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X52),s('type.rat.rat',X51))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50))))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X51),s('type.rat.rat',X52))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X50))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X50)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f14962])).
fof(f26948,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26947,f1445])).
fof(f26947,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26946,f26435])).
fof(f26946,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26524,f1445])).
fof(f26524,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X40),s('type.rat.rat',X41))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X41),s('type.rat.rat',X40))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X39)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f14959])).
fof(f26945,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X18))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20)))) ) | $spl66),
  inference(forward_demodulation,[],[f26523,f26435])).
fof(f26523,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X18),s('type.rat.rat',X19))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X19),s('type.rat.rat',X18))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f14953])).
fof(f26944,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X14),s('type.rat.rat',X13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26943,f26435])).
fof(f26943,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X14),s('type.rat.rat',X13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26522,f1445])).
fof(f26522,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X14),s('type.rat.rat',X13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X13),s('type.rat.rat',X14))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f14952])).
fof(f26521,plain,(
  ( ! [X712,X710,X713,X711] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X710))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,X711) = s(bool,X712) | s(bool,X712) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X710),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X711) = s(bool,X713) | s(bool,'T_0') = s(bool,X713)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f14322])).
fof(f26942,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int',X16) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15)))) ) | $spl66),
  inference(forward_demodulation,[],[f26941,f26435])).
fof(f26941,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int',X16) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(forward_demodulation,[],[f26520,f1445])).
fof(f26520,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X16) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f10118])).
fof(f26940,plain,(
  ( ! [X8,X7,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7)))) ) | $spl66),
  inference(forward_demodulation,[],[f26519,f26435])).
fof(f26519,plain,(
  ( ! [X8,X7,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f10115])).
fof(f26939,plain,(
  ( ! [X2,X3,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | $spl66),
  inference(forward_demodulation,[],[f26518,f26435])).
fof(f26518,plain,(
  ( ! [X2,X3,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f10113])).
fof(f26938,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26937,f26435])).
fof(f26937,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26517,f1445])).
fof(f26517,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f10107])).
fof(f26936,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1)))) ) | $spl66),
  inference(forward_demodulation,[],[f26516,f26435])).
fof(f26516,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f10104])).
fof(f26935,plain,(
  ( ! [X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X36))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26934,f1445])).
fof(f26934,plain,(
  ( ! [X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X36))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26933,f1445])).
fof(f26933,plain,(
  ( ! [X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X36))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26515,f26435])).
fof(f26515,plain,(
  ( ! [X35,X36] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X36))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X35)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f10102])).
fof(f26932,plain,(
  ( ! [X30,X31,X29] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X31))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X31))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X31)))) ) | $spl66),
  inference(forward_demodulation,[],[f26514,f26435])).
fof(f26514,plain,(
  ( ! [X30,X31,X29] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X30))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X31))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X31))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X29))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X31)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f10100])).
fof(f26931,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X28))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26930,f1445])).
fof(f26930,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X28))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26929,f26435])).
fof(f26929,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X28))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26928,f1445])).
fof(f26928,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X28))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26513,f1445])).
fof(f26513,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X28))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X28))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X27)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f10099])).
fof(f26927,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25)))) ) | $spl66),
  inference(forward_demodulation,[],[f26926,f26435])).
fof(f26926,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(forward_demodulation,[],[f26925,f1445])).
fof(f26925,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(forward_demodulation,[],[f26512,f1445])).
fof(f26512,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f10098])).
fof(f26924,plain,(
  ( ! [X19,X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17)))) ) | $spl66),
  inference(forward_demodulation,[],[f26511,f26435])).
fof(f26511,plain,(
  ( ! [X19,X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f10095])).
fof(f26923,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13)))) ) | $spl66),
  inference(forward_demodulation,[],[f26922,f26435])).
fof(f26922,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13)))) ) | $spl66),
  inference(forward_demodulation,[],[f26510,f1445])).
fof(f26510,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f10093])).
fof(f26921,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1)))) ) | $spl66),
  inference(forward_demodulation,[],[f26920,f26435])).
fof(f26920,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(forward_demodulation,[],[f26509,f1445])).
fof(f26509,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f10088])).
fof(f26919,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26918,f26435])).
fof(f26918,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26508,f1445])).
fof(f26508,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X17)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f9998])).
fof(f26917,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15)))) ) | $spl66),
  inference(forward_demodulation,[],[f26507,f26435])).
fof(f26507,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f9997])).
fof(f26505,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f6054])).
fof(f26504,plain,(
  ( ! [X35,X36,X34] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X35),s('type.rat.rat',X34)))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X34),s('type.rat.rat',X35))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X36))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X34),s('type.rat.rat',X35)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f6049])).
fof(f26915,plain,(
  ( ! [X39,X37,X38] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X38))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X38) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37)))) ) | $spl66),
  inference(forward_demodulation,[],[f26503,f26435])).
fof(f26503,plain,(
  ( ! [X39,X37,X38] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X38))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X38) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f5942])).
fof(f26502,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X10),s('type.rat.rat',X11))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X11),s('type.rat.rat',X10)))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f5933])).
fof(f26501,plain,(
  ( ! [X6,X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X7),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f5932])).
fof(f26500,plain,(
  ( ! [X4,X5,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X4),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f5931])).
fof(f26914,plain,(
  ( ! [X61,X59,X60] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X60))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59)))) ) | $spl66),
  inference(forward_demodulation,[],[f26499,f26435])).
fof(f26499,plain,(
  ( ! [X61,X59,X60] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X60))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f5924])).
fof(f26913,plain,(
  ( ! [X57,X58,X56] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X57))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56)))) ) | $spl66),
  inference(forward_demodulation,[],[f26498,f26435])).
fof(f26498,plain,(
  ( ! [X57,X58,X56] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X57))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f5923])).
fof(f26912,plain,(
  ( ! [X45,X46,X44] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X45))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X45) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44)))) ) | $spl66),
  inference(forward_demodulation,[],[f26497,f26435])).
fof(f26497,plain,(
  ( ! [X45,X46,X44] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X45))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X45) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f5919])).
fof(f26911,plain,(
  ( ! [X43,X42] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X42))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X42)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26496,f26435])).
fof(f26496,plain,(
  ( ! [X43,X42] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X42))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X42)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f5918])).
fof(f26910,plain,(
  ( ! [X33,X31,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26495,f26435])).
fof(f26495,plain,(
  ( ! [X33,X31,X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X32),s('type.rat.rat',X31))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X31),s('type.rat.rat',X32)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f5912])).
fof(f26909,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8)))) ) | $spl66),
  inference(forward_demodulation,[],[f26494,f26435])).
fof(f26494,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f5904])).
fof(f26908,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26907,f26435])).
fof(f26907,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26493,f1445])).
fof(f26493,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f5821])).
fof(f26906,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int',X4) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26492,f26435])).
fof(f26492,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f5758])).
fof(f26905,plain,(
  ( ! [X6,X7,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7)))) ) | $spl66),
  inference(forward_demodulation,[],[f26491,f26435])).
fof(f26491,plain,(
  ( ! [X6,X7,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f5747])).
fof(f26904,plain,(
  ( ! [X6,X7,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7)))) ) | $spl66),
  inference(forward_demodulation,[],[f26903,f26435])).
fof(f26903,plain,(
  ( ! [X6,X7,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(forward_demodulation,[],[f26490,f1445])).
fof(f26490,plain,(
  ( ! [X6,X7,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f5737])).
fof(f26902,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int',X1) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26901,f26435])).
fof(f26901,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int',X1) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26488,f1445])).
fof(f26488,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int',X1) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3656])).
fof(f26900,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4)))) ) | $spl66),
  inference(forward_demodulation,[],[f26899,f26435])).
fof(f26899,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(forward_demodulation,[],[f26486,f1445])).
fof(f26486,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3628])).
fof(f26898,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl66),
  inference(forward_demodulation,[],[f26897,f26435])).
fof(f26897,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(forward_demodulation,[],[f26485,f1445])).
fof(f26485,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3605])).
fof(f26896,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26895,f26435])).
fof(f26895,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26484,f1445])).
fof(f26484,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3599])).
fof(f26483,plain,(
  ( ! [X17,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X17),s('type.rat.rat',X16))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X16)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X17),s('type.rat.rat',X16)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3552])).
fof(f26482,plain,(
  ( ! [X2] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3547])).
fof(f26894,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26893,f26435])).
fof(f26893,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26481,f1445])).
fof(f26481,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3516])).
fof(f26890,plain,(
  ( ! [X21,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26889,f26435])).
fof(f26889,plain,(
  ( ! [X21,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26479,f1445])).
fof(f26479,plain,(
  ( ! [X21,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3482])).
fof(f26888,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26887,f26435])).
fof(f26887,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26478,f1445])).
fof(f26478,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3481])).
fof(f26886,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X16) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26885,f26435])).
fof(f26885,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X16) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26884,f1445])).
fof(f26884,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X16) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26477,f1445])).
fof(f26477,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int',X16) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3479])).
fof(f26883,plain,(
  ( ! [X12,X11] : (s('type.integer.int',X12) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26882,f26435])).
fof(f26882,plain,(
  ( ! [X12,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26476,f1445])).
fof(f26476,plain,(
  ( ! [X12,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3477])).
fof(f26881,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26880,f26435])).
fof(f26880,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26475,f1445])).
fof(f26475,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3471])).
fof(f26879,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26878,f26435])).
fof(f26878,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26877,f1445])).
fof(f26877,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26474,f1445])).
fof(f26474,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3469])).
fof(f26876,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26875,f1445])).
fof(f26875,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26874,f26435])).
fof(f26874,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26473,f1445])).
fof(f26473,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3468])).
fof(f26873,plain,(
  ( ! [X19,X20] : (s('type.integer.int',X20) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26872,f26435])).
fof(f26872,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X20) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26472,f1445])).
fof(f26472,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int',X20) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3466])).
fof(f26871,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X16) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26870,f26435])).
fof(f26870,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X16) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26869,f1445])).
fof(f26869,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X16) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26471,f1445])).
fof(f26471,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X16) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3464])).
fof(f26868,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X8) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26867,f26435])).
fof(f26867,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X8) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26470,f1445])).
fof(f26470,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X8) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3460])).
fof(f26866,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26865,f1445])).
fof(f26865,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26864,f26435])).
fof(f26864,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26863,f1445])).
fof(f26863,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26469,f1445])).
fof(f26469,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3459])).
fof(f26862,plain,(
  ( ! [X21,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26861,f26435])).
fof(f26861,plain,(
  ( ! [X21,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26468,f1445])).
fof(f26468,plain,(
  ( ! [X21,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3452])).
fof(f26860,plain,(
  ( ! [X19,X18] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26859,f26435])).
fof(f26859,plain,(
  ( ! [X19,X18] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26467,f1445])).
fof(f26467,plain,(
  ( ! [X19,X18] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3451])).
fof(f26858,plain,(
  ( ! [X10,X11] : (s('type.integer.int',X11) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X10))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X10)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26857,f1445])).
fof(f26857,plain,(
  ( ! [X10,X11] : (s('type.integer.int',X11) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X10))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X10)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26466,f26435])).
fof(f26466,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X10))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X10)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3447])).
fof(f26856,plain,(
  ( ! [X6,X7] : (s('type.integer.int',X7) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26465,f26435])).
fof(f26465,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3445])).
fof(f26855,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26464,f26435])).
fof(f26464,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X4)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3444])).
fof(f26854,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26463,f26435])).
fof(f26463,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3443])).
fof(f26853,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X24) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X24))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26852,f26435])).
fof(f26852,plain,(
  ( ! [X24,X23] : (s('type.integer.int',X24) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X24))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26462,f1445])).
fof(f26462,plain,(
  ( ! [X24,X23] : (s('type.integer.int',X24) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X24))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3437])).
fof(f26851,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26850,f1445])).
fof(f26850,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26849,f26435])).
fof(f26849,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26848,f1445])).
fof(f26848,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26461,f1445])).
fof(f26461,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3414])).
fof(f26847,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl66),
  inference(forward_demodulation,[],[f26846,f26435])).
fof(f26846,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl66),
  inference(forward_demodulation,[],[f26460,f1445])).
fof(f26460,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3374])).
fof(f26845,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4)))) ) | $spl66),
  inference(forward_demodulation,[],[f26459,f26435])).
fof(f26459,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X3))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat',X2))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3356])).
fof(f26844,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl66),
  inference(forward_demodulation,[],[f26843,f26435])).
fof(f26843,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(forward_demodulation,[],[f26458,f1445])).
fof(f26458,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3184])).
fof(f26842,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7)))) ) | $spl66),
  inference(forward_demodulation,[],[f26841,f26435])).
fof(f26841,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(forward_demodulation,[],[f26457,f1445])).
fof(f26457,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3176])).
fof(f26840,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5)))) ) | $spl66),
  inference(forward_demodulation,[],[f26456,f26435])).
fof(f26456,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X6))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3175])).
fof(f26838,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26837,f26435])).
fof(f26837,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26454,f1445])).
fof(f26454,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f3025])).
fof(f26836,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X1) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl66),
  inference(forward_demodulation,[],[f26453,f26435])).
fof(f26453,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X1) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f2995])).
fof(f26835,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4)))) ) | $spl66),
  inference(forward_demodulation,[],[f26834,f26435])).
fof(f26834,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(forward_demodulation,[],[f26452,f1445])).
fof(f26452,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f2989])).
fof(f26833,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) ) | $spl66),
  inference(forward_demodulation,[],[f26451,f26435])).
fof(f26451,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f2988])).
fof(f26450,plain,(
  ( ! [X114,X113] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X113))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s(bool,X114) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X113),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X114)) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f2304])).
fof(f26832,plain,(
  ( ! [X10,X11] : (s('type.integer.int',X11) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10)))) ) | $spl66),
  inference(forward_demodulation,[],[f26448,f26435])).
fof(f26448,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f1636])).
fof(f26831,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X7) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | $spl66),
  inference(forward_demodulation,[],[f26830,f26435])).
fof(f26830,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X7) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(forward_demodulation,[],[f26447,f1445])).
fof(f26447,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int',X7) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f1634])).
fof(f26446,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f1631])).
fof(f26829,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X11) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10)))) ) | $spl66),
  inference(forward_demodulation,[],[f26828,f26435])).
fof(f26828,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X11) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(forward_demodulation,[],[f26445,f1445])).
fof(f26445,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int',X11) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f1629])).
fof(f26827,plain,(
  ( ! [X6,X7] : (s('type.integer.int',X7) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | $spl66),
  inference(forward_demodulation,[],[f26444,f26435])).
fof(f26444,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X7) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f1627])).
fof(f26826,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26825,f26435])).
fof(f26825,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(forward_demodulation,[],[f26443,f1445])).
fof(f26443,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f1618])).
fof(f26442,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f292])).
fof(f26441,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f291])).
fof(f26824,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl66),
  inference(forward_demodulation,[],[f26440,f1445])).
fof(f26440,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f264])).
fof(f26823,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl66),
  inference(forward_demodulation,[],[f26439,f1445])).
fof(f26439,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f263])).
fof(f26438,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | ~p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f262])).
fof(f26437,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f261])).
fof(f26822,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl66),
  inference(forward_demodulation,[],[f26436,f26435])).
fof(f26436,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(backward_demodulation,[],[f26435,f242])).
fof(f26435,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl66),
  inference(subsumption_resolution,[],[f26434,f1489])).
fof(f26434,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl66),
  inference(subsumption_resolution,[],[f26393,f424])).
fof(f26393,plain,(
  p(s(bool,'F_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl66),
  inference(superposition,[],[f3552,f474])).
fof(f30434,plain,(
  $false | ($spl3 | $spl66 | $spl84)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f20330,f20333,f17642,f20336,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3552,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20389,f20331,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f23287,f23290,f23291,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23306,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23510,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25181,f25182,f25184,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f26435,f26822,f26437,f26438,f26823,f26824,f26441,f26442,f26826,f26827,f26829,f26446,f26831,f26832,f26450,f26833,f26835,f26836,f26838,f26840,f26842,f26844,f26845,f26847,f26851,f26853,f26854,f26855,f26856,f26858,f26860,f26862,f26866,f26868,f26871,f26873,f26876,f26879,f26881,f26883,f26886,f26888,f26890,f26894,f26482,f26483,f26896,f26898,f26900,f26902,f26904,f26905,f26906,f26908,f26909,f26910,f26911,f26912,f26913,f26914,f26500,f26501,f26502,f26915,f26504,f26505,f26917,f26919,f26921,f26923,f26924,f26927,f26931,f26932,f26935,f26936,f26938,f26939,f26940,f26942,f26521,f26944,f26945,f26948,f26950,f26951,f26952,f26953,f26955,f26956,f26958,f26962,f26964,f26965,f26966,f26968,f26971,f26972,f26974,f26975,f26977,f26978,f26979,f26980,f26981,f26982,f26984,f26985,f26986,f26987,f26988,f26990,f26553,f26554,f26555,f26556,f26991,f26558,f26559,f26560,f26561,f26562,f26992,f26993,f26565,f26566,f26567,f26568,f26569,f26570,f26572,f26607,f26612,f26994,f26996,f26998,f26617,f26999,f27001,f27004,f27006,f27010,f27013,f27015,f27016,f27017,f26628,f27018,f26630,f26631,f26632,f27019,f27020,f27022,f27023,f27024,f27025,f27026,f26640,f27027,f27028,f27029,f27031,f27032,f26646,f26647,f26648,f26649,f27033,f26651,f26652,f26653,f27034,f27035,f27036,f26657,f26658,f26659,f27044,f27049,f26674,f26675,f26676,f26677,f26678,f26679,f26680,f26681,f26682,f26683,f26684,f26685,f26686,f26687,f26688,f26689,f26690,f26691,f27050,f27051,f26694,f26696,f26697,f26698,f26699,f26700,f27055,f27056,f27057,f27058,f26710,f27060,f27062,f27063,f27064,f26715,f27066,f27067,f27068,f26719,f27072,f27073,f27074,f26723,f26724,f27075,f26726,f26727,f26728,f26729,f26730,f26731,f27076,f26733,f26734,f26735,f26736,f26737,f26738,f26739,f26740,f27077,f27078,f26743,f26744,f26745,f26746,f26747,f26750,f26751,f26752,f26753,f26754,f26755,f26756,f26757,f26758,f26759,f26760,f26761,f26762,f26763,f26764,f26765,f26766,f26767,f26768,f26769,f26770,f26771,f27122,f27123,f27124,f27125,f27129,f27131,f27132,f27133,f27137,f27149,f27157,f27164,f27166,f27171,f27176,f27144,f27140,f27179,f27180,f27290,f27182,f27291,f27292,f27293,f27294,f27195,f27196,f27295,f27199,f27200,f27201,f27296,f27211,f27297,f27219,f27220,f27298,f27226,f27230,f27231,f27232,f27234,f27299,f27237,f27300,f27240,f27241,f27242,f27243,f27244,f27245,f27246,f27247,f27248,f27249,f27250,f27251,f27252,f27253,f27254,f27255,f27256,f27257,f27260,f27301,f27266,f27267,f27269,f27270,f27273,f27275,f27302,f27277,f27278,f27279,f27284,f27285,f27289,f26615,f24979,f24978,f24737,f21356,f27316,f26260,f26259,f26254,f21799,f21830,f25180,f23035,f22061,f21947,f21801,f21783,f3549,f27310,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f20329,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29933,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f29972,f9998,f14962,f15401,f15413,f15711,f15714,f20390,f21690,f29973,f21764,f29974,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431,f30433])).
fof(f30432,plain,(
  $false | ($spl3 | $spl66 | $spl84)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f20330,f20333,f17642,f20336,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3552,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20389,f20331,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f23287,f23290,f23291,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23306,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23510,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25181,f25182,f25184,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f26435,f26822,f26437,f26438,f26823,f26824,f26441,f26442,f26826,f26827,f26829,f26446,f26831,f26832,f26450,f26833,f26835,f26836,f26838,f26840,f26842,f26844,f26845,f26847,f26851,f26853,f26854,f26855,f26856,f26858,f26860,f26862,f26866,f26868,f26871,f26873,f26876,f26879,f26881,f26883,f26886,f26888,f26890,f26894,f26482,f26483,f26896,f26898,f26900,f26902,f26904,f26905,f26906,f26908,f26909,f26910,f26911,f26912,f26913,f26914,f26500,f26501,f26502,f26915,f26504,f26505,f26917,f26919,f26921,f26923,f26924,f26927,f26931,f26932,f26935,f26936,f26938,f26939,f26940,f26942,f26521,f26944,f26945,f26948,f26950,f26951,f26952,f26953,f26955,f26956,f26958,f26962,f26964,f26965,f26966,f26968,f26971,f26972,f26974,f26975,f26977,f26978,f26979,f26980,f26981,f26982,f26984,f26985,f26986,f26987,f26988,f26990,f26553,f26554,f26555,f26556,f26991,f26558,f26559,f26560,f26561,f26562,f26992,f26993,f26565,f26566,f26567,f26568,f26569,f26570,f26572,f26607,f26612,f26994,f26996,f26998,f26617,f26999,f27001,f27004,f27006,f27010,f27013,f27015,f27016,f27017,f26628,f27018,f26630,f26631,f26632,f27019,f27020,f27022,f27023,f27024,f27025,f27026,f26640,f27027,f27028,f27029,f27031,f27032,f26646,f26647,f26648,f26649,f27033,f26651,f26652,f26653,f27034,f27035,f27036,f26657,f26658,f26659,f27044,f27049,f26674,f26675,f26676,f26677,f26678,f26679,f26680,f26681,f26682,f26683,f26684,f26685,f26686,f26687,f26688,f26689,f26690,f26691,f27050,f27051,f26694,f26696,f26697,f26698,f26699,f26700,f27055,f27056,f27057,f27058,f26710,f27060,f27062,f27063,f27064,f26715,f27066,f27067,f27068,f26719,f27072,f27073,f27074,f26723,f26724,f27075,f26726,f26727,f26728,f26729,f26730,f26731,f27076,f26733,f26734,f26735,f26736,f26737,f26738,f26739,f26740,f27077,f27078,f26743,f26744,f26745,f26746,f26747,f26750,f26751,f26752,f26753,f26754,f26755,f26756,f26757,f26758,f26759,f26760,f26761,f26762,f26763,f26764,f26765,f26766,f26767,f26768,f26769,f26770,f26771,f27122,f27123,f27124,f27125,f27129,f27131,f27132,f27133,f27137,f27149,f27157,f27164,f27166,f27171,f27176,f27144,f27140,f27179,f27180,f27290,f27182,f27291,f27292,f27293,f27294,f27195,f27196,f27295,f27199,f27200,f27201,f27296,f27211,f27297,f27219,f27220,f27298,f27226,f27230,f27231,f27232,f27234,f27299,f27237,f27300,f27240,f27241,f27242,f27243,f27244,f27245,f27246,f27247,f27248,f27249,f27250,f27251,f27252,f27253,f27254,f27255,f27256,f27257,f27260,f27301,f27266,f27267,f27269,f27270,f27273,f27275,f27302,f27277,f27278,f27279,f27284,f27285,f27289,f26615,f24979,f24978,f24737,f21356,f27316,f26260,f26259,f26254,f21799,f21830,f25180,f23035,f22061,f21947,f21801,f21783,f3549,f27310,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f20329,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29933,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f29972,f9998,f14962,f15401,f15413,f15711,f15714,f20390,f21690,f29973,f21764,f29974,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429,f30431])).
fof(f30430,plain,(
  $false | ($spl3 | $spl66 | $spl84)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f20330,f20333,f17642,f20336,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3552,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20389,f20331,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f23287,f23290,f23291,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23306,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23510,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25181,f25182,f25184,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f26435,f26822,f26437,f26438,f26823,f26824,f26441,f26442,f26826,f26827,f26829,f26446,f26831,f26832,f26450,f26833,f26835,f26836,f26838,f26840,f26842,f26844,f26845,f26847,f26851,f26853,f26854,f26855,f26856,f26858,f26860,f26862,f26866,f26868,f26871,f26873,f26876,f26879,f26881,f26883,f26886,f26888,f26890,f26894,f26482,f26483,f26896,f26898,f26900,f26902,f26904,f26905,f26906,f26908,f26909,f26910,f26911,f26912,f26913,f26914,f26500,f26501,f26502,f26915,f26504,f26505,f26917,f26919,f26921,f26923,f26924,f26927,f26931,f26932,f26935,f26936,f26938,f26939,f26940,f26942,f26521,f26944,f26945,f26948,f26950,f26951,f26952,f26953,f26955,f26956,f26958,f26962,f26964,f26965,f26966,f26968,f26971,f26972,f26974,f26975,f26977,f26978,f26979,f26980,f26981,f26982,f26984,f26985,f26986,f26987,f26988,f26990,f26553,f26554,f26555,f26556,f26991,f26558,f26559,f26560,f26561,f26562,f26992,f26993,f26565,f26566,f26567,f26568,f26569,f26570,f26572,f26607,f26612,f26994,f26996,f26998,f26617,f26999,f27001,f27004,f27006,f27010,f27013,f27015,f27016,f27017,f26628,f27018,f26630,f26631,f26632,f27019,f27020,f27022,f27023,f27024,f27025,f27026,f26640,f27027,f27028,f27029,f27031,f27032,f26646,f26647,f26648,f26649,f27033,f26651,f26652,f26653,f27034,f27035,f27036,f26657,f26658,f26659,f27044,f27049,f26674,f26675,f26676,f26677,f26678,f26679,f26680,f26681,f26682,f26683,f26684,f26685,f26686,f26687,f26688,f26689,f26690,f26691,f27050,f27051,f26694,f26696,f26697,f26698,f26699,f26700,f27055,f27056,f27057,f27058,f26710,f27060,f27062,f27063,f27064,f26715,f27066,f27067,f27068,f26719,f27072,f27073,f27074,f26723,f26724,f27075,f26726,f26727,f26728,f26729,f26730,f26731,f27076,f26733,f26734,f26735,f26736,f26737,f26738,f26739,f26740,f27077,f27078,f26743,f26744,f26745,f26746,f26747,f26750,f26751,f26752,f26753,f26754,f26755,f26756,f26757,f26758,f26759,f26760,f26761,f26762,f26763,f26764,f26765,f26766,f26767,f26768,f26769,f26770,f26771,f27122,f27123,f27124,f27125,f27129,f27131,f27132,f27133,f27137,f27149,f27157,f27164,f27166,f27171,f27176,f27144,f27140,f27179,f27180,f27290,f27182,f27291,f27292,f27293,f27294,f27195,f27196,f27295,f27199,f27200,f27201,f27296,f27211,f27297,f27219,f27220,f27298,f27226,f27230,f27231,f27232,f27234,f27299,f27237,f27300,f27240,f27241,f27242,f27243,f27244,f27245,f27246,f27247,f27248,f27249,f27250,f27251,f27252,f27253,f27254,f27255,f27256,f27257,f27260,f27301,f27266,f27267,f27269,f27270,f27273,f27275,f27302,f27277,f27278,f27279,f27284,f27285,f27289,f26615,f24979,f24978,f24737,f21356,f27316,f26260,f26259,f26254,f21799,f21830,f25180,f23035,f22061,f21947,f21801,f21783,f3549,f27310,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f20329,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29933,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f29972,f9998,f14962,f15401,f15413,f15711,f15714,f20390,f21690,f29973,f21764,f29974,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424,f30429])).
fof(f30425,plain,(
  $false | ($spl3 | $spl66 | $spl84)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f20330,f20333,f17642,f20336,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3552,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20389,f20331,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f23287,f23290,f23291,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23306,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23510,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25181,f25182,f25184,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f26435,f26822,f26437,f26438,f26823,f26824,f26441,f26442,f26826,f26827,f26829,f26446,f26831,f26832,f26450,f26833,f26835,f26836,f26838,f26840,f26842,f26844,f26845,f26847,f26851,f26853,f26854,f26855,f26856,f26858,f26860,f26862,f26866,f26868,f26871,f26873,f26876,f26879,f26881,f26883,f26886,f26888,f26890,f26894,f26482,f26483,f26896,f26898,f26900,f26902,f26904,f26905,f26906,f26908,f26909,f26910,f26911,f26912,f26913,f26914,f26500,f26501,f26502,f26915,f26504,f26505,f26917,f26919,f26921,f26923,f26924,f26927,f26931,f26932,f26935,f26936,f26938,f26939,f26940,f26942,f26521,f26944,f26945,f26948,f26950,f26951,f26952,f26953,f26955,f26956,f26958,f26962,f26964,f26965,f26966,f26968,f26971,f26972,f26974,f26975,f26977,f26978,f26979,f26980,f26981,f26982,f26984,f26985,f26986,f26987,f26988,f26990,f26553,f26554,f26555,f26556,f26991,f26558,f26559,f26560,f26561,f26562,f26992,f26993,f26565,f26566,f26567,f26568,f26569,f26570,f26572,f26607,f26612,f26994,f26996,f26998,f26617,f26999,f27001,f27004,f27006,f27010,f27013,f27015,f27016,f27017,f26628,f27018,f26630,f26631,f26632,f27019,f27020,f27022,f27023,f27024,f27025,f27026,f26640,f27027,f27028,f27029,f27031,f27032,f26646,f26647,f26648,f26649,f27033,f26651,f26652,f26653,f27034,f27035,f27036,f26657,f26658,f26659,f27044,f27049,f26674,f26675,f26676,f26677,f26678,f26679,f26680,f26681,f26682,f26683,f26684,f26685,f26686,f26687,f26688,f26689,f26690,f26691,f27050,f27051,f26694,f26696,f26697,f26698,f26699,f26700,f27055,f27056,f27057,f27058,f26710,f27060,f27062,f27063,f27064,f26715,f27066,f27067,f27068,f26719,f27072,f27073,f27074,f26723,f26724,f27075,f26726,f26727,f26728,f26729,f26730,f26731,f27076,f26733,f26734,f26735,f26736,f26737,f26738,f26739,f26740,f27077,f27078,f26743,f26744,f26745,f26746,f26747,f26750,f26751,f26752,f26753,f26754,f26755,f26756,f26757,f26758,f26759,f26760,f26761,f26762,f26763,f26764,f26765,f26766,f26767,f26768,f26769,f26770,f26771,f27122,f27123,f27124,f27125,f27129,f27131,f27132,f27133,f27137,f27149,f27157,f27164,f27166,f27171,f27176,f27144,f27140,f27179,f27180,f27290,f27182,f27291,f27292,f27293,f27294,f27195,f27196,f27295,f27199,f27200,f27201,f27296,f27211,f27297,f27219,f27220,f27298,f27226,f27230,f27231,f27232,f27234,f27299,f27237,f27300,f27240,f27241,f27242,f27243,f27244,f27245,f27246,f27247,f27248,f27249,f27250,f27251,f27252,f27253,f27254,f27255,f27256,f27257,f27260,f27301,f27266,f27267,f27269,f27270,f27273,f27275,f27302,f27277,f27278,f27279,f27284,f27285,f27289,f26615,f24979,f24978,f24737,f21356,f27316,f26260,f26259,f26254,f21799,f21830,f25180,f23035,f22061,f21947,f21801,f21783,f3549,f27310,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f20329,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29933,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f29972,f9998,f14962,f15401,f15413,f15711,f15714,f20390,f21690,f29973,f21764,f29974,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364,f30424])).
fof(f30419,plain,(
  $false | ($spl3 | $spl66 | $spl84)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f20330,f20333,f17642,f20336,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3552,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20389,f20331,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f23287,f23290,f23291,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23306,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23510,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25181,f25182,f25184,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f26435,f26822,f26437,f26438,f26823,f26824,f26441,f26442,f26826,f26827,f26829,f26446,f26831,f26832,f26450,f26833,f26835,f26836,f26838,f26840,f26842,f26844,f26845,f26847,f26851,f26853,f26854,f26855,f26856,f26858,f26860,f26862,f26866,f26868,f26871,f26873,f26876,f26879,f26881,f26883,f26886,f26888,f26890,f26894,f26482,f26483,f26896,f26898,f26900,f26902,f26904,f26905,f26906,f26908,f26909,f26910,f26911,f26912,f26913,f26914,f26500,f26501,f26502,f26915,f26504,f26505,f26917,f26919,f26921,f26923,f26924,f26927,f26931,f26932,f26935,f26936,f26938,f26939,f26940,f26942,f26521,f26944,f26945,f26948,f26950,f26951,f26952,f26953,f26955,f26956,f26958,f26962,f26964,f26965,f26966,f26968,f26971,f26972,f26974,f26975,f26977,f26978,f26979,f26980,f26981,f26982,f26984,f26985,f26986,f26987,f26988,f26990,f26553,f26554,f26555,f26556,f26991,f26558,f26559,f26560,f26561,f26562,f26992,f26993,f26565,f26566,f26567,f26568,f26569,f26570,f26572,f26607,f26612,f26994,f26996,f26998,f26617,f26999,f27001,f27004,f27006,f27010,f27013,f27015,f27016,f27017,f26628,f27018,f26630,f26631,f26632,f27019,f27020,f27022,f27023,f27024,f27025,f27026,f26640,f27027,f27028,f27029,f27031,f27032,f26646,f26647,f26648,f26649,f27033,f26651,f26652,f26653,f27034,f27035,f27036,f26657,f26658,f26659,f27044,f27049,f26674,f26675,f26676,f26677,f26678,f26679,f26680,f26681,f26682,f26683,f26684,f26685,f26686,f26687,f26688,f26689,f26690,f26691,f27050,f27051,f26694,f26696,f26697,f26698,f26699,f26700,f27055,f27056,f27057,f27058,f26710,f27060,f27062,f27063,f27064,f26715,f27066,f27067,f27068,f26719,f27072,f27073,f27074,f26723,f26724,f27075,f26726,f26727,f26728,f26729,f26730,f26731,f27076,f26733,f26734,f26735,f26736,f26737,f26738,f26739,f26740,f27077,f27078,f26743,f26744,f26745,f26746,f26747,f26750,f26751,f26752,f26753,f26754,f26755,f26756,f26757,f26758,f26759,f26760,f26761,f26762,f26763,f26764,f26765,f26766,f26767,f26768,f26769,f26770,f26771,f27122,f27123,f27124,f27125,f27129,f27131,f27132,f27133,f27137,f27149,f27157,f27164,f27166,f27171,f27176,f27144,f27140,f27179,f27180,f27290,f27182,f27291,f27292,f27293,f27294,f27195,f27196,f27295,f27199,f27200,f27201,f27296,f27211,f27297,f27219,f27220,f27298,f27226,f27230,f27231,f27232,f27234,f27299,f27237,f27300,f27240,f27241,f27242,f27243,f27244,f27245,f27246,f27247,f27248,f27249,f27250,f27251,f27252,f27253,f27254,f27255,f27256,f27257,f27260,f27301,f27266,f27267,f27269,f27270,f27273,f27275,f27302,f27277,f27278,f27279,f27284,f27285,f27289,f26615,f24979,f24978,f24737,f21356,f27316,f26260,f26259,f26254,f21799,f21830,f25180,f23035,f22061,f21947,f21801,f21783,f3549,f27310,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f20329,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29933,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f29972,f9998,f14962,f15401,f15413,f15711,f15714,f20390,f21690,f29973,f21764,f29974,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363,f30364])).
fof(f30418,plain,(
  $false | ($spl3 | $spl66 | $spl84)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f20330,f20333,f17642,f20336,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3552,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20389,f20331,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f23287,f23290,f23291,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23306,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23510,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25181,f25182,f25184,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f26435,f26822,f26437,f26438,f26823,f26824,f26441,f26442,f26826,f26827,f26829,f26446,f26831,f26832,f26450,f26833,f26835,f26836,f26838,f26840,f26842,f26844,f26845,f26847,f26851,f26853,f26854,f26855,f26856,f26858,f26860,f26862,f26866,f26868,f26871,f26873,f26876,f26879,f26881,f26883,f26886,f26888,f26890,f26894,f26482,f26483,f26896,f26898,f26900,f26902,f26904,f26905,f26906,f26908,f26909,f26910,f26911,f26912,f26913,f26914,f26500,f26501,f26502,f26915,f26504,f26505,f26917,f26919,f26921,f26923,f26924,f26927,f26931,f26932,f26935,f26936,f26938,f26939,f26940,f26942,f26521,f26944,f26945,f26948,f26950,f26951,f26952,f26953,f26955,f26956,f26958,f26962,f26964,f26965,f26966,f26968,f26971,f26972,f26974,f26975,f26977,f26978,f26979,f26980,f26981,f26982,f26984,f26985,f26986,f26987,f26988,f26990,f26553,f26554,f26555,f26556,f26991,f26558,f26559,f26560,f26561,f26562,f26992,f26993,f26565,f26566,f26567,f26568,f26569,f26570,f26572,f26607,f26612,f26994,f26996,f26998,f26617,f26999,f27001,f27004,f27006,f27010,f27013,f27015,f27016,f27017,f26628,f27018,f26630,f26631,f26632,f27019,f27020,f27022,f27023,f27024,f27025,f27026,f26640,f27027,f27028,f27029,f27031,f27032,f26646,f26647,f26648,f26649,f27033,f26651,f26652,f26653,f27034,f27035,f27036,f26657,f26658,f26659,f27044,f27049,f26674,f26675,f26676,f26677,f26678,f26679,f26680,f26681,f26682,f26683,f26684,f26685,f26686,f26687,f26688,f26689,f26690,f26691,f27050,f27051,f26694,f26696,f26697,f26698,f26699,f26700,f27055,f27056,f27057,f27058,f26710,f27060,f27062,f27063,f27064,f26715,f27066,f27067,f27068,f26719,f27072,f27073,f27074,f26723,f26724,f27075,f26726,f26727,f26728,f26729,f26730,f26731,f27076,f26733,f26734,f26735,f26736,f26737,f26738,f26739,f26740,f27077,f27078,f26743,f26744,f26745,f26746,f26747,f26750,f26751,f26752,f26753,f26754,f26755,f26756,f26757,f26758,f26759,f26760,f26761,f26762,f26763,f26764,f26765,f26766,f26767,f26768,f26769,f26770,f26771,f27122,f27123,f27124,f27125,f27129,f27131,f27132,f27133,f27137,f27149,f27157,f27164,f27166,f27171,f27176,f27144,f27140,f27179,f27180,f27290,f27182,f27291,f27292,f27293,f27294,f27195,f27196,f27295,f27199,f27200,f27201,f27296,f27211,f27297,f27219,f27220,f27298,f27226,f27230,f27231,f27232,f27234,f27299,f27237,f27300,f27240,f27241,f27242,f27243,f27244,f27245,f27246,f27247,f27248,f27249,f27250,f27251,f27252,f27253,f27254,f27255,f27256,f27257,f27260,f27301,f27266,f27267,f27269,f27270,f27273,f27275,f27302,f27277,f27278,f27279,f27284,f27285,f27289,f26615,f24979,f24978,f24737,f21356,f27316,f26260,f26259,f26254,f21799,f21830,f25180,f23035,f22061,f21947,f21801,f21783,f3549,f27310,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f20329,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29933,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f29972,f9998,f14962,f15401,f15413,f15711,f15714,f20390,f21690,f29973,f21764,f29974,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362,f30363])).
fof(f30417,plain,(
  $false | ($spl3 | $spl66 | $spl84)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f20330,f20333,f17642,f20336,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3552,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20389,f20331,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f23287,f23290,f23291,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23306,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23510,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25181,f25182,f25184,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f26435,f26822,f26437,f26438,f26823,f26824,f26441,f26442,f26826,f26827,f26829,f26446,f26831,f26832,f26450,f26833,f26835,f26836,f26838,f26840,f26842,f26844,f26845,f26847,f26851,f26853,f26854,f26855,f26856,f26858,f26860,f26862,f26866,f26868,f26871,f26873,f26876,f26879,f26881,f26883,f26886,f26888,f26890,f26894,f26482,f26483,f26896,f26898,f26900,f26902,f26904,f26905,f26906,f26908,f26909,f26910,f26911,f26912,f26913,f26914,f26500,f26501,f26502,f26915,f26504,f26505,f26917,f26919,f26921,f26923,f26924,f26927,f26931,f26932,f26935,f26936,f26938,f26939,f26940,f26942,f26521,f26944,f26945,f26948,f26950,f26951,f26952,f26953,f26955,f26956,f26958,f26962,f26964,f26965,f26966,f26968,f26971,f26972,f26974,f26975,f26977,f26978,f26979,f26980,f26981,f26982,f26984,f26985,f26986,f26987,f26988,f26990,f26553,f26554,f26555,f26556,f26991,f26558,f26559,f26560,f26561,f26562,f26992,f26993,f26565,f26566,f26567,f26568,f26569,f26570,f26572,f26607,f26612,f26994,f26996,f26998,f26617,f26999,f27001,f27004,f27006,f27010,f27013,f27015,f27016,f27017,f26628,f27018,f26630,f26631,f26632,f27019,f27020,f27022,f27023,f27024,f27025,f27026,f26640,f27027,f27028,f27029,f27031,f27032,f26646,f26647,f26648,f26649,f27033,f26651,f26652,f26653,f27034,f27035,f27036,f26657,f26658,f26659,f27044,f27049,f26674,f26675,f26676,f26677,f26678,f26679,f26680,f26681,f26682,f26683,f26684,f26685,f26686,f26687,f26688,f26689,f26690,f26691,f27050,f27051,f26694,f26696,f26697,f26698,f26699,f26700,f27055,f27056,f27057,f27058,f26710,f27060,f27062,f27063,f27064,f26715,f27066,f27067,f27068,f26719,f27072,f27073,f27074,f26723,f26724,f27075,f26726,f26727,f26728,f26729,f26730,f26731,f27076,f26733,f26734,f26735,f26736,f26737,f26738,f26739,f26740,f27077,f27078,f26743,f26744,f26745,f26746,f26747,f26750,f26751,f26752,f26753,f26754,f26755,f26756,f26757,f26758,f26759,f26760,f26761,f26762,f26763,f26764,f26765,f26766,f26767,f26768,f26769,f26770,f26771,f27122,f27123,f27124,f27125,f27129,f27131,f27132,f27133,f27137,f27149,f27157,f27164,f27166,f27171,f27176,f27144,f27140,f27179,f27180,f27290,f27182,f27291,f27292,f27293,f27294,f27195,f27196,f27295,f27199,f27200,f27201,f27296,f27211,f27297,f27219,f27220,f27298,f27226,f27230,f27231,f27232,f27234,f27299,f27237,f27300,f27240,f27241,f27242,f27243,f27244,f27245,f27246,f27247,f27248,f27249,f27250,f27251,f27252,f27253,f27254,f27255,f27256,f27257,f27260,f27301,f27266,f27267,f27269,f27270,f27273,f27275,f27302,f27277,f27278,f27279,f27284,f27285,f27289,f26615,f24979,f24978,f24737,f21356,f27316,f26260,f26259,f26254,f21799,f21830,f25180,f23035,f22061,f21947,f21801,f21783,f3549,f27310,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f20329,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29933,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f29972,f9998,f14962,f15401,f15413,f15711,f15714,f20390,f21690,f29973,f21764,f29974,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361,f30362])).
fof(f30416,plain,(
  $false | ($spl3 | $spl66 | $spl84)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f20330,f20333,f17642,f20336,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3552,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20389,f20331,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f23287,f23290,f23291,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23306,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23510,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25181,f25182,f25184,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f26435,f26822,f26437,f26438,f26823,f26824,f26441,f26442,f26826,f26827,f26829,f26446,f26831,f26832,f26450,f26833,f26835,f26836,f26838,f26840,f26842,f26844,f26845,f26847,f26851,f26853,f26854,f26855,f26856,f26858,f26860,f26862,f26866,f26868,f26871,f26873,f26876,f26879,f26881,f26883,f26886,f26888,f26890,f26894,f26482,f26483,f26896,f26898,f26900,f26902,f26904,f26905,f26906,f26908,f26909,f26910,f26911,f26912,f26913,f26914,f26500,f26501,f26502,f26915,f26504,f26505,f26917,f26919,f26921,f26923,f26924,f26927,f26931,f26932,f26935,f26936,f26938,f26939,f26940,f26942,f26521,f26944,f26945,f26948,f26950,f26951,f26952,f26953,f26955,f26956,f26958,f26962,f26964,f26965,f26966,f26968,f26971,f26972,f26974,f26975,f26977,f26978,f26979,f26980,f26981,f26982,f26984,f26985,f26986,f26987,f26988,f26990,f26553,f26554,f26555,f26556,f26991,f26558,f26559,f26560,f26561,f26562,f26992,f26993,f26565,f26566,f26567,f26568,f26569,f26570,f26572,f26607,f26612,f26994,f26996,f26998,f26617,f26999,f27001,f27004,f27006,f27010,f27013,f27015,f27016,f27017,f26628,f27018,f26630,f26631,f26632,f27019,f27020,f27022,f27023,f27024,f27025,f27026,f26640,f27027,f27028,f27029,f27031,f27032,f26646,f26647,f26648,f26649,f27033,f26651,f26652,f26653,f27034,f27035,f27036,f26657,f26658,f26659,f27044,f27049,f26674,f26675,f26676,f26677,f26678,f26679,f26680,f26681,f26682,f26683,f26684,f26685,f26686,f26687,f26688,f26689,f26690,f26691,f27050,f27051,f26694,f26696,f26697,f26698,f26699,f26700,f27055,f27056,f27057,f27058,f26710,f27060,f27062,f27063,f27064,f26715,f27066,f27067,f27068,f26719,f27072,f27073,f27074,f26723,f26724,f27075,f26726,f26727,f26728,f26729,f26730,f26731,f27076,f26733,f26734,f26735,f26736,f26737,f26738,f26739,f26740,f27077,f27078,f26743,f26744,f26745,f26746,f26747,f26750,f26751,f26752,f26753,f26754,f26755,f26756,f26757,f26758,f26759,f26760,f26761,f26762,f26763,f26764,f26765,f26766,f26767,f26768,f26769,f26770,f26771,f27122,f27123,f27124,f27125,f27129,f27131,f27132,f27133,f27137,f27149,f27157,f27164,f27166,f27171,f27176,f27144,f27140,f27179,f27180,f27290,f27182,f27291,f27292,f27293,f27294,f27195,f27196,f27295,f27199,f27200,f27201,f27296,f27211,f27297,f27219,f27220,f27298,f27226,f27230,f27231,f27232,f27234,f27299,f27237,f27300,f27240,f27241,f27242,f27243,f27244,f27245,f27246,f27247,f27248,f27249,f27250,f27251,f27252,f27253,f27254,f27255,f27256,f27257,f27260,f27301,f27266,f27267,f27269,f27270,f27273,f27275,f27302,f27277,f27278,f27279,f27284,f27285,f27289,f26615,f24979,f24978,f24737,f21356,f27316,f26260,f26259,f26254,f21799,f21830,f25180,f23035,f22061,f21947,f21801,f21783,f3549,f27310,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f20329,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29933,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f29972,f9998,f14962,f15401,f15413,f15711,f15714,f20390,f21690,f29973,f21764,f29974,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360,f30361])).
fof(f30415,plain,(
  $false | ($spl3 | $spl66 | $spl84)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f20330,f20333,f17642,f20336,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3552,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20389,f20331,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f23287,f23290,f23291,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23306,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23510,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25181,f25182,f25184,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f26435,f26822,f26437,f26438,f26823,f26824,f26441,f26442,f26826,f26827,f26829,f26446,f26831,f26832,f26450,f26833,f26835,f26836,f26838,f26840,f26842,f26844,f26845,f26847,f26851,f26853,f26854,f26855,f26856,f26858,f26860,f26862,f26866,f26868,f26871,f26873,f26876,f26879,f26881,f26883,f26886,f26888,f26890,f26894,f26482,f26483,f26896,f26898,f26900,f26902,f26904,f26905,f26906,f26908,f26909,f26910,f26911,f26912,f26913,f26914,f26500,f26501,f26502,f26915,f26504,f26505,f26917,f26919,f26921,f26923,f26924,f26927,f26931,f26932,f26935,f26936,f26938,f26939,f26940,f26942,f26521,f26944,f26945,f26948,f26950,f26951,f26952,f26953,f26955,f26956,f26958,f26962,f26964,f26965,f26966,f26968,f26971,f26972,f26974,f26975,f26977,f26978,f26979,f26980,f26981,f26982,f26984,f26985,f26986,f26987,f26988,f26990,f26553,f26554,f26555,f26556,f26991,f26558,f26559,f26560,f26561,f26562,f26992,f26993,f26565,f26566,f26567,f26568,f26569,f26570,f26572,f26607,f26612,f26994,f26996,f26998,f26617,f26999,f27001,f27004,f27006,f27010,f27013,f27015,f27016,f27017,f26628,f27018,f26630,f26631,f26632,f27019,f27020,f27022,f27023,f27024,f27025,f27026,f26640,f27027,f27028,f27029,f27031,f27032,f26646,f26647,f26648,f26649,f27033,f26651,f26652,f26653,f27034,f27035,f27036,f26657,f26658,f26659,f27044,f27049,f26674,f26675,f26676,f26677,f26678,f26679,f26680,f26681,f26682,f26683,f26684,f26685,f26686,f26687,f26688,f26689,f26690,f26691,f27050,f27051,f26694,f26696,f26697,f26698,f26699,f26700,f27055,f27056,f27057,f27058,f26710,f27060,f27062,f27063,f27064,f26715,f27066,f27067,f27068,f26719,f27072,f27073,f27074,f26723,f26724,f27075,f26726,f26727,f26728,f26729,f26730,f26731,f27076,f26733,f26734,f26735,f26736,f26737,f26738,f26739,f26740,f27077,f27078,f26743,f26744,f26745,f26746,f26747,f26750,f26751,f26752,f26753,f26754,f26755,f26756,f26757,f26758,f26759,f26760,f26761,f26762,f26763,f26764,f26765,f26766,f26767,f26768,f26769,f26770,f26771,f27122,f27123,f27124,f27125,f27129,f27131,f27132,f27133,f27137,f27149,f27157,f27164,f27166,f27171,f27176,f27144,f27140,f27179,f27180,f27290,f27182,f27291,f27292,f27293,f27294,f27195,f27196,f27295,f27199,f27200,f27201,f27296,f27211,f27297,f27219,f27220,f27298,f27226,f27230,f27231,f27232,f27234,f27299,f27237,f27300,f27240,f27241,f27242,f27243,f27244,f27245,f27246,f27247,f27248,f27249,f27250,f27251,f27252,f27253,f27254,f27255,f27256,f27257,f27260,f27301,f27266,f27267,f27269,f27270,f27273,f27275,f27302,f27277,f27278,f27279,f27284,f27285,f27289,f26615,f24979,f24978,f24737,f21356,f27316,f26260,f26259,f26254,f21799,f21830,f25180,f23035,f22061,f21947,f21801,f21783,f3549,f27310,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f20329,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29933,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f29972,f9998,f14962,f15401,f15413,f15711,f15714,f20390,f21690,f29973,f21764,f29974,f21780,f3487,f3888,f30403,f30408,f30358,f30359,f30360])).
fof(f30414,plain,(
  $false | ($spl3 | $spl66 | $spl84)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f20330,f20333,f17642,f20336,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3552,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20389,f20331,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f23287,f23290,f23291,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23306,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23510,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25181,f25182,f25184,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f26435,f26822,f26437,f26438,f26823,f26824,f26441,f26442,f26826,f26827,f26829,f26446,f26831,f26832,f26450,f26833,f26835,f26836,f26838,f26840,f26842,f26844,f26845,f26847,f26851,f26853,f26854,f26855,f26856,f26858,f26860,f26862,f26866,f26868,f26871,f26873,f26876,f26879,f26881,f26883,f26886,f26888,f26890,f26894,f26482,f26483,f26896,f26898,f26900,f26902,f26904,f26905,f26906,f26908,f26909,f26910,f26911,f26912,f26913,f26914,f26500,f26501,f26502,f26915,f26504,f26505,f26917,f26919,f26921,f26923,f26924,f26927,f26931,f26932,f26935,f26936,f26938,f26939,f26940,f26942,f26521,f26944,f26945,f26948,f26950,f26951,f26952,f26953,f26955,f26956,f26958,f26962,f26964,f26965,f26966,f26968,f26971,f26972,f26974,f26975,f26977,f26978,f26979,f26980,f26981,f26982,f26984,f26985,f26986,f26987,f26988,f26990,f26553,f26554,f26555,f26556,f26991,f26558,f26559,f26560,f26561,f26562,f26992,f26993,f26565,f26566,f26567,f26568,f26569,f26570,f26572,f26607,f26612,f26994,f26996,f26998,f26617,f26999,f27001,f27004,f27006,f27010,f27013,f27015,f27016,f27017,f26628,f27018,f26630,f26631,f26632,f27019,f27020,f27022,f27023,f27024,f27025,f27026,f26640,f27027,f27028,f27029,f27031,f27032,f26646,f26647,f26648,f26649,f27033,f26651,f26652,f26653,f27034,f27035,f27036,f26657,f26658,f26659,f27044,f27049,f26674,f26675,f26676,f26677,f26678,f26679,f26680,f26681,f26682,f26683,f26684,f26685,f26686,f26687,f26688,f26689,f26690,f26691,f27050,f27051,f26694,f26696,f26697,f26698,f26699,f26700,f27055,f27056,f27057,f27058,f26710,f27060,f27062,f27063,f27064,f26715,f27066,f27067,f27068,f26719,f27072,f27073,f27074,f26723,f26724,f27075,f26726,f26727,f26728,f26729,f26730,f26731,f27076,f26733,f26734,f26735,f26736,f26737,f26738,f26739,f26740,f27077,f27078,f26743,f26744,f26745,f26746,f26747,f26750,f26751,f26752,f26753,f26754,f26755,f26756,f26757,f26758,f26759,f26760,f26761,f26762,f26763,f26764,f26765,f26766,f26767,f26768,f26769,f26770,f26771,f27122,f27123,f27124,f27125,f27129,f27131,f27132,f27133,f27137,f27149,f27157,f27164,f27166,f27171,f27176,f27144,f27140,f27179,f27180,f27290,f27182,f27291,f27292,f27293,f27294,f27195,f27196,f27295,f27199,f27200,f27201,f27296,f27211,f27297,f27219,f27220,f27298,f27226,f27230,f27231,f27232,f27234,f27299,f27237,f27300,f27240,f27241,f27242,f27243,f27244,f27245,f27246,f27247,f27248,f27249,f27250,f27251,f27252,f27253,f27254,f27255,f27256,f27257,f27260,f27301,f27266,f27267,f27269,f27270,f27273,f27275,f27302,f27277,f27278,f27279,f27284,f27285,f27289,f26615,f24979,f24978,f24737,f21356,f27316,f26260,f26259,f26254,f21799,f21830,f25180,f23035,f22061,f21947,f21801,f21783,f3549,f27310,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f20329,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29933,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f29972,f9998,f14962,f15401,f15413,f15711,f15714,f20390,f21690,f29973,f21764,f29974,f21780,f3487,f3888,f30403,f30408,f30358,f30359])).
fof(f30413,plain,(
  $false | ($spl3 | $spl66 | $spl84)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f20330,f20333,f17642,f20336,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3552,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20389,f20331,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f23287,f23290,f23291,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23306,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23510,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25181,f25182,f25184,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f26435,f26822,f26437,f26438,f26823,f26824,f26441,f26442,f26826,f26827,f26829,f26446,f26831,f26832,f26450,f26833,f26835,f26836,f26838,f26840,f26842,f26844,f26845,f26847,f26851,f26853,f26854,f26855,f26856,f26858,f26860,f26862,f26866,f26868,f26871,f26873,f26876,f26879,f26881,f26883,f26886,f26888,f26890,f26894,f26482,f26483,f26896,f26898,f26900,f26902,f26904,f26905,f26906,f26908,f26909,f26910,f26911,f26912,f26913,f26914,f26500,f26501,f26502,f26915,f26504,f26505,f26917,f26919,f26921,f26923,f26924,f26927,f26931,f26932,f26935,f26936,f26938,f26939,f26940,f26942,f26521,f26944,f26945,f26948,f26950,f26951,f26952,f26953,f26955,f26956,f26958,f26962,f26964,f26965,f26966,f26968,f26971,f26972,f26974,f26975,f26977,f26978,f26979,f26980,f26981,f26982,f26984,f26985,f26986,f26987,f26988,f26990,f26553,f26554,f26555,f26556,f26991,f26558,f26559,f26560,f26561,f26562,f26992,f26993,f26565,f26566,f26567,f26568,f26569,f26570,f26572,f26607,f26612,f26994,f26996,f26998,f26617,f26999,f27001,f27004,f27006,f27010,f27013,f27015,f27016,f27017,f26628,f27018,f26630,f26631,f26632,f27019,f27020,f27022,f27023,f27024,f27025,f27026,f26640,f27027,f27028,f27029,f27031,f27032,f26646,f26647,f26648,f26649,f27033,f26651,f26652,f26653,f27034,f27035,f27036,f26657,f26658,f26659,f27044,f27049,f26674,f26675,f26676,f26677,f26678,f26679,f26680,f26681,f26682,f26683,f26684,f26685,f26686,f26687,f26688,f26689,f26690,f26691,f27050,f27051,f26694,f26696,f26697,f26698,f26699,f26700,f27055,f27056,f27057,f27058,f26710,f27060,f27062,f27063,f27064,f26715,f27066,f27067,f27068,f26719,f27072,f27073,f27074,f26723,f26724,f27075,f26726,f26727,f26728,f26729,f26730,f26731,f27076,f26733,f26734,f26735,f26736,f26737,f26738,f26739,f26740,f27077,f27078,f26743,f26744,f26745,f26746,f26747,f26750,f26751,f26752,f26753,f26754,f26755,f26756,f26757,f26758,f26759,f26760,f26761,f26762,f26763,f26764,f26765,f26766,f26767,f26768,f26769,f26770,f26771,f27122,f27123,f27124,f27125,f27129,f27131,f27132,f27133,f27137,f27149,f27157,f27164,f27166,f27171,f27176,f27144,f27140,f27179,f27180,f27290,f27182,f27291,f27292,f27293,f27294,f27195,f27196,f27295,f27199,f27200,f27201,f27296,f27211,f27297,f27219,f27220,f27298,f27226,f27230,f27231,f27232,f27234,f27299,f27237,f27300,f27240,f27241,f27242,f27243,f27244,f27245,f27246,f27247,f27248,f27249,f27250,f27251,f27252,f27253,f27254,f27255,f27256,f27257,f27260,f27301,f27266,f27267,f27269,f27270,f27273,f27275,f27302,f27277,f27278,f27279,f27284,f27285,f27289,f26615,f24979,f24978,f24737,f21356,f27316,f26260,f26259,f26254,f21799,f21830,f25180,f23035,f22061,f21947,f21801,f21783,f3549,f27310,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f20329,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29933,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f29972,f9998,f14962,f15401,f15413,f15711,f15714,f20390,f21690,f29973,f21764,f29974,f21780,f3487,f3888,f30403,f30408,f30358])).
fof(f30409,plain,(
  $false | ($spl3 | $spl66 | $spl84)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f20330,f20333,f17642,f20336,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3552,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20389,f20331,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f23287,f23290,f23291,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23306,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23510,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25181,f25182,f25184,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f26435,f26822,f26437,f26438,f26823,f26824,f26441,f26442,f26826,f26827,f26829,f26446,f26831,f26832,f26450,f26833,f26835,f26836,f26838,f26840,f26842,f26844,f26845,f26847,f26851,f26853,f26854,f26855,f26856,f26858,f26860,f26862,f26866,f26868,f26871,f26873,f26876,f26879,f26881,f26883,f26886,f26888,f26890,f26894,f26482,f26483,f26896,f26898,f26900,f26902,f26904,f26905,f26906,f26908,f26909,f26910,f26911,f26912,f26913,f26914,f26500,f26501,f26502,f26915,f26504,f26505,f26917,f26919,f26921,f26923,f26924,f26927,f26931,f26932,f26935,f26936,f26938,f26939,f26940,f26942,f26521,f26944,f26945,f26948,f26950,f26951,f26952,f26953,f26955,f26956,f26958,f26962,f26964,f26965,f26966,f26968,f26971,f26972,f26974,f26975,f26977,f26978,f26979,f26980,f26981,f26982,f26984,f26985,f26986,f26987,f26988,f26990,f26553,f26554,f26555,f26556,f26991,f26558,f26559,f26560,f26561,f26562,f26992,f26993,f26565,f26566,f26567,f26568,f26569,f26570,f26572,f26607,f26612,f26994,f26996,f26998,f26617,f26999,f27001,f27004,f27006,f27010,f27013,f27015,f27016,f27017,f26628,f27018,f26630,f26631,f26632,f27019,f27020,f27022,f27023,f27024,f27025,f27026,f26640,f27027,f27028,f27029,f27031,f27032,f26646,f26647,f26648,f26649,f27033,f26651,f26652,f26653,f27034,f27035,f27036,f26657,f26658,f26659,f27044,f27049,f26674,f26675,f26676,f26677,f26678,f26679,f26680,f26681,f26682,f26683,f26684,f26685,f26686,f26687,f26688,f26689,f26690,f26691,f27050,f27051,f26694,f26696,f26697,f26698,f26699,f26700,f27055,f27056,f27057,f27058,f26710,f27060,f27062,f27063,f27064,f26715,f27066,f27067,f27068,f26719,f27072,f27073,f27074,f26723,f26724,f27075,f26726,f26727,f26728,f26729,f26730,f26731,f27076,f26733,f26734,f26735,f26736,f26737,f26738,f26739,f26740,f27077,f27078,f26743,f26744,f26745,f26746,f26747,f26750,f26751,f26752,f26753,f26754,f26755,f26756,f26757,f26758,f26759,f26760,f26761,f26762,f26763,f26764,f26765,f26766,f26767,f26768,f26769,f26770,f26771,f27122,f27123,f27124,f27125,f27129,f27131,f27132,f27133,f27137,f27149,f27157,f27164,f27166,f27171,f27176,f27144,f27140,f27179,f27180,f27290,f27182,f27291,f27292,f27293,f27294,f27195,f27196,f27295,f27199,f27200,f27201,f27296,f27211,f27297,f27219,f27220,f27298,f27226,f27230,f27231,f27232,f27234,f27299,f27237,f27300,f27240,f27241,f27242,f27243,f27244,f27245,f27246,f27247,f27248,f27249,f27250,f27251,f27252,f27253,f27254,f27255,f27256,f27257,f27260,f27301,f27266,f27267,f27269,f27270,f27273,f27275,f27302,f27277,f27278,f27279,f27284,f27285,f27289,f26615,f24979,f24978,f24737,f21356,f27316,f26260,f26259,f26254,f21799,f21830,f25180,f23035,f22061,f21947,f21801,f21783,f3549,f27310,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f20329,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29933,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f29972,f9998,f14962,f15401,f15413,f15711,f15714,f20390,f21690,f29973,f21764,f29974,f21780,f3487,f3888,f30403,f30408])).
fof(f30404,plain,(
  $false | ($spl3 | $spl66 | $spl84)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f241,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f3001,f3038,f3031,f3157,f3198,f3238,f3338,f3339,f3345,f3511,f3512,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3654,f3638,f3632,f3660,f3659,f3658,f3664,f3663,f3662,f3923,f3418,f3610,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f3650,f1640,f3039,f3362,f3193,f3036,f2305,f1445,f3186,f3924,f3647,f3633,f3406,f3405,f3190,f3180,f3179,f3174,f3173,f3033,f3030,f2992,f2991,f2987,f1245,f240,f5664,f5762,f5763,f5819,f5836,f5837,f5859,f5860,f5905,f5921,f5930,f5936,f5937,f5939,f5940,f5944,f5945,f6046,f6222,f6407,f6545,f6548,f6552,f6554,f6649,f6652,f6655,f6657,f8698,f8700,f9016,f9021,f9774,f9776,f9992,f9994,f10122,f10089,f10090,f10105,f10106,f13890,f13722,f13708,f13706,f10711,f11007,f11008,f14214,f14218,f14224,f14226,f14244,f11365,f11366,f14246,f14260,f14261,f14262,f11545,f11548,f14297,f14298,f14299,f14300,f14301,f14302,f14303,f14304,f14305,f14306,f14307,f14308,f14309,f14310,f14311,f14312,f14313,f14314,f14315,f14316,f14317,f14318,f14323,f14324,f11804,f11805,f14334,f14335,f14352,f14385,f12463,f14951,f14955,f14960,f14965,f14977,f15303,f15395,f15397,f15409,f15455,f15702,f15703,f15717,f5665,f5446,f4229,f3922,f16727,f16729,f16743,f16884,f17122,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17257,f17259,f17687,f17702,f17703,f17668,f17305,f17314,f17315,f17317,f17643,f17333,f17348,f17349,f17350,f17351,f17354,f17355,f17359,f17360,f17363,f17367,f17368,f17709,f17375,f17641,f17710,f17715,f17716,f17473,f17753,f17760,f17768,f17770,f17562,f18368,f2849,f3652,f20330,f20333,f17642,f20336,f16032,f17708,f3044,f3046,f3043,f3045,f3620,f2304,f16911,f16910,f16747,f16746,f3552,f3025,f5758,f5844,f14979,f14982,f15731,f15734,f3445,f3454,f3474,f3547,f3568,f10119,f20389,f20331,f20328,f1618,f3516,f15718,f14966,f14952,f10107,f5985,f20403,f20404,f20405,f20406,f21675,f21747,f5918,f23287,f23290,f23291,f22938,f22939,f22941,f22942,f23279,f23293,f23294,f23260,f23259,f23299,f23240,f23301,f23040,f23041,f23042,f23043,f23047,f23048,f23050,f23051,f23238,f23056,f23306,f23235,f23307,f23312,f23313,f23210,f23318,f23325,f23331,f23333,f23191,f23417,f23419,f23420,f23819,f23802,f23821,f23822,f23783,f23782,f23781,f23826,f23494,f23495,f23835,f23497,f23836,f23502,f23506,f23510,f23841,f23530,f23531,f23761,f23848,f23851,f23858,f23734,f23729,f23728,f23867,f23645,f23882,f23890,f23892,f24086,f24160,f24161,f24218,f24231,f24296,f24297,f24324,f24322,f24424,f24427,f24530,f24550,f24551,f24553,f24637,f24638,f24640,f24641,f24845,f24668,f24679,f24680,f24682,f24833,f24705,f24720,f24721,f24722,f24723,f24726,f24728,f24729,f24732,f24738,f24742,f24743,f24832,f24750,f24904,f25069,f25077,f25080,f25082,f24990,f25181,f25182,f25184,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f10091,f10097,f14957,f15411,f15704,f15709,f25355,f24162,f24158,f26278,f26281,f26435,f26822,f26437,f26438,f26823,f26824,f26441,f26442,f26826,f26827,f26829,f26446,f26831,f26832,f26450,f26833,f26835,f26836,f26838,f26840,f26842,f26844,f26845,f26847,f26851,f26853,f26854,f26855,f26856,f26858,f26860,f26862,f26866,f26868,f26871,f26873,f26876,f26879,f26881,f26883,f26886,f26888,f26890,f26894,f26482,f26483,f26896,f26898,f26900,f26902,f26904,f26905,f26906,f26908,f26909,f26910,f26911,f26912,f26913,f26914,f26500,f26501,f26502,f26915,f26504,f26505,f26917,f26919,f26921,f26923,f26924,f26927,f26931,f26932,f26935,f26936,f26938,f26939,f26940,f26942,f26521,f26944,f26945,f26948,f26950,f26951,f26952,f26953,f26955,f26956,f26958,f26962,f26964,f26965,f26966,f26968,f26971,f26972,f26974,f26975,f26977,f26978,f26979,f26980,f26981,f26982,f26984,f26985,f26986,f26987,f26988,f26990,f26553,f26554,f26555,f26556,f26991,f26558,f26559,f26560,f26561,f26562,f26992,f26993,f26565,f26566,f26567,f26568,f26569,f26570,f26572,f26607,f26612,f26994,f26996,f26998,f26617,f26999,f27001,f27004,f27006,f27010,f27013,f27015,f27016,f27017,f26628,f27018,f26630,f26631,f26632,f27019,f27020,f27022,f27023,f27024,f27025,f27026,f26640,f27027,f27028,f27029,f27031,f27032,f26646,f26647,f26648,f26649,f27033,f26651,f26652,f26653,f27034,f27035,f27036,f26657,f26658,f26659,f27044,f27049,f26674,f26675,f26676,f26677,f26678,f26679,f26680,f26681,f26682,f26683,f26684,f26685,f26686,f26687,f26688,f26689,f26690,f26691,f27050,f27051,f26694,f26696,f26697,f26698,f26699,f26700,f27055,f27056,f27057,f27058,f26710,f27060,f27062,f27063,f27064,f26715,f27066,f27067,f27068,f26719,f27072,f27073,f27074,f26723,f26724,f27075,f26726,f26727,f26728,f26729,f26730,f26731,f27076,f26733,f26734,f26735,f26736,f26737,f26738,f26739,f26740,f27077,f27078,f26743,f26744,f26745,f26746,f26747,f26750,f26751,f26752,f26753,f26754,f26755,f26756,f26757,f26758,f26759,f26760,f26761,f26762,f26763,f26764,f26765,f26766,f26767,f26768,f26769,f26770,f26771,f27122,f27123,f27124,f27125,f27129,f27131,f27132,f27133,f27137,f27149,f27157,f27164,f27166,f27171,f27176,f27144,f27140,f27179,f27180,f27290,f27182,f27291,f27292,f27293,f27294,f27195,f27196,f27295,f27199,f27200,f27201,f27296,f27211,f27297,f27219,f27220,f27298,f27226,f27230,f27231,f27232,f27234,f27299,f27237,f27300,f27240,f27241,f27242,f27243,f27244,f27245,f27246,f27247,f27248,f27249,f27250,f27251,f27252,f27253,f27254,f27255,f27256,f27257,f27260,f27301,f27266,f27267,f27269,f27270,f27273,f27275,f27302,f27277,f27278,f27279,f27284,f27285,f27289,f26615,f24979,f24978,f24737,f21356,f27316,f26260,f26259,f26254,f21799,f21830,f25180,f23035,f22061,f21947,f21801,f21783,f3549,f27310,f3040,f26310,f26279,f26264,f26262,f26261,f26257,f26255,f24926,f24924,f24923,f24922,f24921,f24920,f24919,f24918,f24917,f24916,f24915,f24914,f24913,f24912,f24911,f24910,f24909,f24908,f24907,f24906,f24905,f24897,f24896,f24753,f24752,f24751,f24740,f24718,f24717,f24716,f24715,f24708,f24707,f24703,f24702,f24696,f24693,f24692,f24691,f24687,f24686,f24684,f24683,f24678,f24667,f24639,f24578,f24557,f24556,f24536,f24534,f24533,f24528,f24527,f24444,f24425,f24412,f24410,f24409,f24406,f24404,f24403,f23877,f23852,f23847,f23837,f23578,f23577,f23576,f23575,f23568,f23567,f23565,f23563,f23533,f23532,f23320,f23215,f23135,f21817,f21794,f21781,f21429,f20329,f18370,f18366,f18365,f17755,f17707,f17706,f17621,f17378,f17377,f17376,f17365,f17346,f17345,f17344,f17343,f17336,f17335,f17331,f17330,f17324,f17321,f17318,f17313,f17304,f16907,f16892,f16887,f16885,f16731,f15729,f15715,f15712,f15710,f15707,f15705,f15701,f15412,f15407,f15400,f14959,f14953,f14322,f10118,f10115,f10113,f10104,f10102,f10100,f10099,f10098,f10095,f10093,f10088,f9997,f6054,f6049,f5942,f5933,f5932,f5931,f5924,f5923,f5919,f5912,f5904,f5821,f5747,f5737,f3656,f3628,f3605,f3599,f3482,f3481,f3479,f3477,f3464,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f1636,f1634,f1631,f1629,f1627,f292,f291,f264,f263,f262,f261,f242,f24298,f29933,f29101,f28742,f27748,f22937,f22987,f22988,f23000,f23001,f23002,f23004,f23005,f23007,f23011,f23012,f23013,f23021,f23022,f23024,f23026,f23027,f23034,f23036,f23037,f23057,f23058,f23059,f23061,f23063,f23065,f23066,f23073,f23074,f23075,f23076,f23418,f23511,f23513,f23515,f23516,f23523,f23524,f23525,f23526,f23529,f29484,f29483,f28786,f28781,f28780,f28779,f28778,f28777,f28776,f28775,f28773,f5444,f3414,f3437,f3443,f3444,f3447,f3451,f3452,f3459,f3460,f3466,f3468,f3469,f3471,f29972,f9998,f14962,f15401,f15413,f15711,f15714,f20390,f21690,f29973,f21764,f29974,f21780,f3487,f3888,f30403])).
fof(f29929,plain,(
  ( ! [X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1)))))) ) | $spl372),
  inference(cnf_transformation,[],[f29929_D])).
fof(f29929_D,plain,(
  ( ! [X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1)))))) ) <=> ~$spl372),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl372])])).
fof(f29930,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4)))) ) | ($spl3 | $spl108)),
  inference(subsumption_resolution,[],[f29907,f27325])).
fof(f29907,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4)))) ) | ($spl3 | $spl108)),
  inference(duplicate_literal_removal,[],[f29899])).
fof(f29899,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3)))))) ) | ($spl3 | $spl108)),
  inference(superposition,[],[f27320,f1617])).
fof(f29928,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) ) | ($spl3 | $spl108)),
  inference(subsumption_resolution,[],[f29908,f27325])).
fof(f29908,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) ) | ($spl3 | $spl108)),
  inference(duplicate_literal_removal,[],[f29898])).
fof(f29898,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) ) | ($spl3 | $spl108)),
  inference(superposition,[],[f27320,f1617])).
fof(f29616,plain,(
  ( ! [X45,X44] : (sP1('T_0',g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat',X45))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X45),s('type.rat.rat',X44)))))) ) | $spl370),
  inference(cnf_transformation,[],[f29616_D])).
fof(f29616_D,plain,(
  ( ! [X45,X44] : (sP1('T_0',g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat',X45))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X45),s('type.rat.rat',X44)))))) ) <=> ~$spl370),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl370])])).
fof(f29590,plain,(
  ( ! [X45,X43,X44] : (sP1('T_0',g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat',X45))))) | s(bool,'T_0') = s(bool,X43) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X45),s('type.rat.rat',X44)))))) ) | ($spl26 | $spl91)),
  inference(duplicate_literal_removal,[],[f29573])).
fof(f29573,plain,(
  ( ! [X45,X43,X44] : (sP1('T_0',g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat',X45))))) | s(bool,'T_0') = s(bool,X43) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X45),s('type.rat.rat',X44))))) | s(bool,'T_0') = s(bool,X43)) ) | ($spl26 | $spl91)),
  inference(superposition,[],[f26119,f2305])).
fof(f26119,plain,(
  ( ! [X0] : (sP1('T_0',g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl26 | $spl91)),
  inference(superposition,[],[f25710,f241])).
fof(f25710,plain,(
  sP1('T_0',g(s(bool,'F_0'))) | ($spl26 | $spl91)),
  inference(unit_resulting_resolution,[],[f4040,f2820])).
fof(f4040,plain,(
  s(bool,'T_0') != s(bool,g(s(bool,'F_0'))) | $spl91),
  inference(cnf_transformation,[],[f4040_D])).
fof(f4040_D,plain,(
  s(bool,'T_0') != s(bool,g(s(bool,'F_0'))) <=> ~$spl91),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl91])])).
fof(f27940,plain,(
  ( ! [X61,X59,X60] : (sP0(X61,f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59)))))) ) | $spl368),
  inference(cnf_transformation,[],[f27940_D])).
fof(f27940_D,plain,(
  ( ! [X61,X59,X60] : (sP0(X61,f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59)))))) ) <=> ~$spl368),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl368])])).
fof(f27915,plain,(
  ( ! [X61,X59,X60,X58] : (sP0(X61,f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))) | s(bool,'T_0') = s(bool,X58) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59)))))) ) | $spl98),
  inference(duplicate_literal_removal,[],[f27898])).
fof(f27898,plain,(
  ( ! [X61,X59,X60,X58] : (sP0(X61,f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat',X60))))) | s(bool,'T_0') = s(bool,X58) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X60),s('type.rat.rat',X59))))) | s(bool,'T_0') = s(bool,X58)) ) | $spl98),
  inference(superposition,[],[f24040,f2305])).
fof(f24040,plain,(
  ( ! [X0,X1] : (sP0(X1,f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl98),
  inference(superposition,[],[f24019,f241])).
fof(f24019,plain,(
  ( ! [X3] : (sP0(X3,f(s(bool,'F_0')))) ) | $spl98),
  inference(subsumption_resolution,[],[f23933,f233])).
fof(f23933,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | sP0(X3,f(s(bool,'F_0')))) ) | $spl98),
  inference(superposition,[],[f302,f4046])).
fof(f4046,plain,(
  s(bool,'T_0') = s(bool,f(s(bool,'F_0'))) | $spl98),
  inference(cnf_transformation,[],[f4046_D])).
fof(f4046_D,plain,(
  s(bool,'T_0') = s(bool,f(s(bool,'F_0'))) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f6550,plain,(
  ( ! [X33] : (p(s(bool,X33))) ) | $spl114),
  inference(cnf_transformation,[],[f6550_D])).
fof(f6550_D,plain,(
  ( ! [X33] : (p(s(bool,X33))) ) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f3888,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | $spl84),
  inference(cnf_transformation,[],[f3888_D])).
fof(f3888_D,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f27144,plain,(
  ( ! [X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | p(s(bool,X1))) ) | $spl66),
  inference(forward_demodulation,[],[f27143,f26435])).
fof(f27143,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(subsumption_resolution,[],[f27142,f1492])).
fof(f27142,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl66),
  inference(subsumption_resolution,[],[f26396,f251])).
fof(f26396,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X1)) ) | $spl66),
  inference(superposition,[],[f3552,f1018])).
fof(f27177,plain,(
  ( ! [X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl366),
  inference(cnf_transformation,[],[f27177_D])).
fof(f27177_D,plain,(
  ( ! [X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) <=> ~$spl366),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl366])])).
fof(f27176,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | p(s(bool,X4)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl66),
  inference(forward_demodulation,[],[f27175,f1445])).
fof(f27175,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | p(s(bool,X4)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl66),
  inference(forward_demodulation,[],[f27174,f26435])).
fof(f27174,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | p(s(bool,X4)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl66),
  inference(forward_demodulation,[],[f27173,f26435])).
fof(f27173,plain,(
  ( ! [X4,X3] : (p(s(bool,X4)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl66),
  inference(subsumption_resolution,[],[f26398,f251])).
fof(f26398,plain,(
  ( ! [X4,X3] : (p(s(bool,X4)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl66),
  inference(superposition,[],[f3552,f2304])).
fof(f27172,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6)))))) ) | $spl364),
  inference(cnf_transformation,[],[f27172_D])).
fof(f27172_D,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6)))))) ) <=> ~$spl364),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl364])])).
fof(f27171,plain,(
  ( ! [X6,X7,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))) | p(s(bool,X7)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27170,f26435])).
fof(f27170,plain,(
  ( ! [X6,X7,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))) | p(s(bool,X7)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X5)))))) ) | $spl66),
  inference(forward_demodulation,[],[f27169,f26435])).
fof(f27169,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,X7)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X5)))))) ) | $spl66),
  inference(subsumption_resolution,[],[f26399,f251])).
fof(f26399,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,X7)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X6))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X5))))) | s(bool,'T_0') = s(bool,X7)) ) | $spl66),
  inference(superposition,[],[f3552,f2305])).
fof(f27158,plain,(
  ( ! [X59,X57,X60,X56] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X56),s('type.rat.rat',X57))))) | s(bool,'T_0') = s(bool,X60) | s(bool,X59) = s(bool,X60) | s(bool,X59) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X56),s('type.rat.rat',X57))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X56),s('type.rat.rat',X57)))))) ) | $spl362),
  inference(cnf_transformation,[],[f27158_D])).
fof(f27158_D,plain,(
  ( ! [X59,X57,X60,X56] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X56),s('type.rat.rat',X57))))) | s(bool,'T_0') = s(bool,X60) | s(bool,X59) = s(bool,X60) | s(bool,X59) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X56),s('type.rat.rat',X57))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X56),s('type.rat.rat',X57)))))) ) <=> ~$spl362),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl362])])).
fof(f27164,plain,(
  ( ! [X39,X37,X38,X36,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))) | p(s(bool,X38)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))) | s(bool,X39) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))) | s(bool,X39) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) ) | $spl66),
  inference(forward_demodulation,[],[f27163,f26435])).
fof(f27163,plain,(
  ( ! [X39,X37,X38,X36,X40] : (p(s(bool,X38)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))) | s(bool,X39) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))) | s(bool,X39) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) ) | $spl66),
  inference(subsumption_resolution,[],[f26409,f251])).
fof(f26409,plain,(
  ( ! [X39,X37,X38,X36,X40] : (p(s(bool,X38)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))))) | s(bool,X39) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X36),s('type.rat.rat',X37))) | s(bool,'T_0') = s(bool,X38) | s(bool,X39) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) ) | $spl66),
  inference(superposition,[],[f3552,f1799])).
fof(f27157,plain,(
  ( ! [X59,X57,X60,X58,X56] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X56),s('type.rat.rat',X57))))) | p(s(bool,X58)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X56),s('type.rat.rat',X57))))) | s(bool,X59) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X56),s('type.rat.rat',X57))) | s(bool,X59) = s(bool,X60) | s(bool,'T_0') = s(bool,X60)) ) | $spl66),
  inference(forward_demodulation,[],[f27156,f26435])).
fof(f27156,plain,(
  ( ! [X59,X57,X60,X58,X56] : (p(s(bool,X58)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X56),s('type.rat.rat',X57))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X56),s('type.rat.rat',X57))))) | s(bool,X59) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X56),s('type.rat.rat',X57))) | s(bool,X59) = s(bool,X60) | s(bool,'T_0') = s(bool,X60)) ) | $spl66),
  inference(subsumption_resolution,[],[f26413,f251])).
fof(f26413,plain,(
  ( ! [X59,X57,X60,X58,X56] : (p(s(bool,X58)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X56),s('type.rat.rat',X57))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X56),s('type.rat.rat',X57))))) | s(bool,X59) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X56),s('type.rat.rat',X57))) | s(bool,X59) = s(bool,X60) | s(bool,'T_0') = s(bool,X60) | s(bool,'T_0') = s(bool,X58)) ) | $spl66),
  inference(superposition,[],[f3552,f1799])).
fof(f27141,plain,(
  $false | ($spl66 | $spl78)),
  inference(subsumption_resolution,[],[f27140,f22494])).
fof(f22494,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | $spl78),
  inference(forward_demodulation,[],[f22466,f1445])).
fof(f22466,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | $spl78),
  inference(unit_resulting_resolution,[],[f1492,f3885])).
fof(f25482,plain,(
  ( ! [X61,X66,X62,X65] : (s(fun(bool,bool),X61) = s(fun(bool,bool),X62) | s(bool,'T_0') = s(bool,X66) | s(bool,X65) = s(bool,X66) | s(bool,X65) = s(bool,sK14(X61,X62,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK14(X61,X62,bool,bool))))) ) | $spl358),
  inference(cnf_transformation,[],[f25482_D])).
fof(f25482_D,plain,(
  ( ! [X61,X66,X62,X65] : (s(fun(bool,bool),X61) = s(fun(bool,bool),X62) | s(bool,'T_0') = s(bool,X66) | s(bool,X65) = s(bool,X66) | s(bool,X65) = s(bool,sK14(X61,X62,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK14(X61,X62,bool,bool))))) ) <=> ~$spl358),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl358])])).
fof(f25483,plain,(
  ( ! [X64,X63] : (s(bool,X64) != s(bool,f(s(bool,X63))) | s(bool,'T_0') = s(bool,X63) | s(bool,'T_0') = s(bool,X64)) ) | $spl360),
  inference(cnf_transformation,[],[f25483_D])).
fof(f25483_D,plain,(
  ( ! [X64,X63] : (s(bool,X64) != s(bool,f(s(bool,X63))) | s(bool,'T_0') = s(bool,X63) | s(bool,'T_0') = s(bool,X64)) ) <=> ~$spl360),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl360])])).
fof(f24158,plain,(
  ( ! [X39,X37,X41,X38,X42,X40] : (s(bool,X40) != s(bool,f(s(bool,X39))) | s(fun(bool,bool),X37) = s(fun(bool,bool),X38) | s(bool,'T_0') = s(bool,X40) | s(bool,'T_0') = s(bool,g(s(bool,sK14(X37,X38,bool,bool)))) | s(bool,X41) = s(bool,sK14(X37,X38,bool,bool)) | s(bool,'T_0') = s(bool,X39) | s(bool,X41) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(superposition,[],[f1876,f1799])).
fof(f24162,plain,(
  ( ! [X61,X66,X64,X62,X65,X63] : (s(bool,X64) != s(bool,f(s(bool,X63))) | s(fun(bool,bool),X61) = s(fun(bool,bool),X62) | s(bool,'T_0') = s(bool,X64) | s(bool,'T_0') = s(bool,g(s(bool,sK14(X61,X62,bool,bool)))) | s(bool,X65) = s(bool,sK14(X61,X62,bool,bool)) | s(bool,X65) = s(bool,X66) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,X63)) )),
  inference(superposition,[],[f1876,f1799])).
fof(f25481,plain,(
  ( ! [X64,X62,X63] : (sP0(X64,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X62),s('type.rat.rat',X63))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X63),s('type.rat.rat',X62)))))) ) | $spl356),
  inference(cnf_transformation,[],[f25481_D])).
fof(f25481_D,plain,(
  ( ! [X64,X62,X63] : (sP0(X64,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X62),s('type.rat.rat',X63))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X63),s('type.rat.rat',X62)))))) ) <=> ~$spl356),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl356])])).
fof(f25455,plain,(
  ( ! [X61,X64,X62,X63] : (sP0(X64,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X62),s('type.rat.rat',X63))))) | s(bool,'T_0') = s(bool,X61) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X63),s('type.rat.rat',X62)))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f25437])).
fof(f25437,plain,(
  ( ! [X61,X64,X62,X63] : (sP0(X64,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X62),s('type.rat.rat',X63))))) | s(bool,'T_0') = s(bool,X61) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X63),s('type.rat.rat',X62))))) | s(bool,'T_0') = s(bool,X61)) ) | $spl90),
  inference(superposition,[],[f21951,f2305])).
fof(f21951,plain,(
  ( ! [X0,X1] : (sP0(X1,g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f21644,f241])).
fof(f21644,plain,(
  ( ! [X3] : (sP0(X3,g(s(bool,'F_0')))) ) | $spl90),
  inference(subsumption_resolution,[],[f21555,f233])).
fof(f21555,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | sP0(X3,g(s(bool,'F_0')))) ) | $spl90),
  inference(superposition,[],[f302,f4041])).
fof(f25480,plain,(
  ( ! [X59,X60] : (sP0(X60,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl354),
  inference(cnf_transformation,[],[f25480_D])).
fof(f25480_D,plain,(
  ( ! [X59,X60] : (sP0(X60,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl354),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl354])])).
fof(f25456,plain,(
  ( ! [X59,X60,X58] : (sP0(X60,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X58) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f25436])).
fof(f25436,plain,(
  ( ! [X59,X60,X58] : (sP0(X60,g(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X58) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X58)) ) | $spl90),
  inference(superposition,[],[f21951,f2304])).
fof(f25341,plain,(
  ( ! [X24,X23,X21] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))) | s(bool,'T_0') = s(bool,X24) | s(bool,X23) = s(bool,X24) | s(bool,X23) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl352),
  inference(cnf_transformation,[],[f25341_D])).
fof(f25341_D,plain,(
  ( ! [X24,X23,X21] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))) | s(bool,'T_0') = s(bool,X24) | s(bool,X23) = s(bool,X24) | s(bool,X23) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl352),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl352])])).
fof(f25342,plain,(
  ( ! [X39,X37,X38,X40] : (p(s(bool,X38)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X37))))) | s(bool,X39) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X37))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X39) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) ) | $spl108),
  inference(subsumption_resolution,[],[f25317,f251])).
fof(f25317,plain,(
  ( ! [X39,X37,X38,X40] : (p(s(bool,X38)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X37))))) | s(bool,X39) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X37))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X39) = s(bool,X40) | s(bool,'T_0') = s(bool,X40) | s(bool,'T_0') = s(bool,X38)) ) | $spl108),
  inference(superposition,[],[f25190,f1799])).
fof(f25340,plain,(
  ( ! [X24,X23,X21,X22] : (p(s(bool,X22)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))) | s(bool,X23) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X23) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) ) | $spl108),
  inference(subsumption_resolution,[],[f25313,f251])).
fof(f25313,plain,(
  ( ! [X24,X23,X21,X22] : (p(s(bool,X22)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))) | s(bool,X23) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X22) | s(bool,X23) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) ) | $spl108),
  inference(superposition,[],[f25190,f1799])).
fof(f25178,plain,(
  ( ! [X24,X23,X21] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X24) | s(bool,X23) = s(bool,X24) | s(bool,X23) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21)))))) ) | $spl350),
  inference(cnf_transformation,[],[f25178_D])).
fof(f25178_D,plain,(
  ( ! [X24,X23,X21] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X24) | s(bool,X23) = s(bool,X24) | s(bool,X23) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21)))))) ) <=> ~$spl350),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl350])])).
fof(f25179,plain,(
  ( ! [X39,X37,X38,X40] : (p(s(bool,X38)) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X37))))) | s(bool,X39) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X37))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X39) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) ) | $spl64),
  inference(subsumption_resolution,[],[f25139,f251])).
fof(f25139,plain,(
  ( ! [X39,X37,X38,X40] : (p(s(bool,X38)) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X37))))) | s(bool,X39) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X37))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X39) = s(bool,X40) | s(bool,'T_0') = s(bool,X40) | s(bool,'T_0') = s(bool,X38)) ) | $spl64),
  inference(superposition,[],[f20427,f1799])).
fof(f20427,plain,(
  ( ! [X3] : (p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3)))))) ) | $spl64),
  inference(backward_demodulation,[],[f3515,f3487])).
fof(f25177,plain,(
  ( ! [X24,X23,X21,X22] : (p(s(bool,X22)) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))) | s(bool,X23) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X23) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) ) | $spl64),
  inference(subsumption_resolution,[],[f25135,f251])).
fof(f25135,plain,(
  ( ! [X24,X23,X21,X22] : (p(s(bool,X22)) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))) | s(bool,X23) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X22) | s(bool,X23) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) ) | $spl64),
  inference(superposition,[],[f20427,f1799])).
fof(f25081,plain,(
  ( ! [X24,X23,X21] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))) | s(bool,'T_0') = s(bool,X24) | s(bool,X23) = s(bool,X24) | s(bool,X23) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl348),
  inference(cnf_transformation,[],[f25081_D])).
fof(f25081_D,plain,(
  ( ! [X24,X23,X21] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))) | s(bool,'T_0') = s(bool,X24) | s(bool,X23) = s(bool,X24) | s(bool,X23) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl348),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl348])])).
fof(f25082,plain,(
  ( ! [X39,X37,X38,X40] : (p(s(bool,X38)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X37))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X37))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X39) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X39) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(subsumption_resolution,[],[f25061,f251])).
fof(f25061,plain,(
  ( ! [X39,X37,X38,X40] : (p(s(bool,X38)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X37))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X37))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X39) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X39) = s(bool,X40) | s(bool,'T_0') = s(bool,X40) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f3547,f1799])).
fof(f25080,plain,(
  ( ! [X24,X23,X21,X22] : (p(s(bool,X22)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X23) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X23) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(subsumption_resolution,[],[f25057,f251])).
fof(f25057,plain,(
  ( ! [X24,X23,X21,X22] : (p(s(bool,X22)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X23) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X21),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X22) | s(bool,X23) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f3547,f1799])).
fof(f24901,plain,(
  ( ! [X54] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X54))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X54))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X54))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl346),
  inference(cnf_transformation,[],[f24901_D])).
fof(f24901_D,plain,(
  ( ! [X54] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X54))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X54))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X54))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl346),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl346])])).
fof(f24832,plain,(
  ( ! [X54,X55] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X54))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X54))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X54)))) )),
  inference(duplicate_literal_removal,[],[f24745])).
fof(f24745,plain,(
  ( ! [X54,X55] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X54))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X54))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X54),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X54)))) )),
  inference(superposition,[],[f1629,f3238])).
fof(f24335,plain,(
  ( ! [X54,X52,X50,X53,X51,X49] : (s(fun(bool,bool),X49) = s(fun(bool,bool),X50) | s(bool,'T_0') = s(bool,X54) | s(bool,X52) = s(bool,X54) | s(bool,X53) = s(bool,sK14(X49,X50,bool,bool)) | s(bool,X52) = s(bool,X53) | s(bool,'T_0') = s(bool,X51) | s(bool,X51) = s(bool,g(s(bool,sK14(X49,X50,bool,bool))))) ) | $spl344),
  inference(cnf_transformation,[],[f24335_D])).
fof(f24335_D,plain,(
  ( ! [X54,X52,X50,X53,X51,X49] : (s(fun(bool,bool),X49) = s(fun(bool,bool),X50) | s(bool,'T_0') = s(bool,X54) | s(bool,X52) = s(bool,X54) | s(bool,X53) = s(bool,sK14(X49,X50,bool,bool)) | s(bool,X52) = s(bool,X53) | s(bool,'T_0') = s(bool,X51) | s(bool,X51) = s(bool,g(s(bool,sK14(X49,X50,bool,bool))))) ) <=> ~$spl344),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl344])])).
fof(f17175,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | $spl147),
  inference(cnf_transformation,[],[f17175_D])).
fof(f17175_D,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) <=> ~$spl147),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl147])])).
fof(f24297,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X55) = s(fun(bool,bool),X56) | s(bool,X57) = s(bool,g(s(bool,sK14(X55,X56,bool,bool)))) | s(bool,'T_0') = s(bool,X57) | s(bool,X58) = s(bool,X59) | s(bool,X59) = s(bool,X60) | s(bool,'T_0') = s(bool,X60) | s(bool,X58) = s(bool,sK14(X55,X56,bool,bool))) )),
  inference(superposition,[],[f1997,f1799])).
fof(f24296,plain,(
  ( ! [X54,X52,X50,X53,X51,X49] : (s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X49) = s(fun(bool,bool),X50) | s(bool,X51) = s(bool,g(s(bool,sK14(X49,X50,bool,bool)))) | s(bool,'T_0') = s(bool,X51) | s(bool,X52) = s(bool,X53) | s(bool,X53) = s(bool,sK14(X49,X50,bool,bool)) | s(bool,X52) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f1997,f1799])).
fof(f24216,plain,(
  ( ! [X54,X52,X50,X53,X49] : (s(fun(bool,bool),X49) = s(fun(bool,bool),X50) | s(bool,'T_0') = s(bool,X54) | s(bool,X52) = s(bool,X54) | s(bool,X53) = s(bool,sK14(X49,X50,bool,bool)) | s(bool,X52) = s(bool,X53) | s(bool,'T_0') = s(bool,g(s(bool,sK14(X49,X50,bool,bool))))) ) | $spl342),
  inference(cnf_transformation,[],[f24216_D])).
fof(f24216_D,plain,(
  ( ! [X54,X52,X50,X53,X49] : (s(fun(bool,bool),X49) = s(fun(bool,bool),X50) | s(bool,'T_0') = s(bool,X54) | s(bool,X52) = s(bool,X54) | s(bool,X53) = s(bool,sK14(X49,X50,bool,bool)) | s(bool,X52) = s(bool,X53) | s(bool,'T_0') = s(bool,g(s(bool,sK14(X49,X50,bool,bool))))) ) <=> ~$spl342),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl342])])).
fof(f17176,plain,(
  ( ! [X10] : (s(bool,X10) != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X10)) ) | $spl148),
  inference(cnf_transformation,[],[f17176_D])).
fof(f17176_D,plain,(
  ( ! [X10] : (s(bool,X10) != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X10)) ) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f24161,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (s(bool,X57) != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X55) = s(fun(bool,bool),X56) | s(bool,'T_0') = s(bool,X57) | s(bool,'T_0') = s(bool,g(s(bool,sK14(X55,X56,bool,bool)))) | s(bool,X58) = s(bool,X59) | s(bool,X59) = s(bool,X60) | s(bool,'T_0') = s(bool,X60) | s(bool,X58) = s(bool,sK14(X55,X56,bool,bool))) )),
  inference(superposition,[],[f1876,f1799])).
fof(f24160,plain,(
  ( ! [X54,X52,X50,X53,X51,X49] : (s(bool,X51) != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X49) = s(fun(bool,bool),X50) | s(bool,'T_0') = s(bool,X51) | s(bool,'T_0') = s(bool,g(s(bool,sK14(X49,X50,bool,bool)))) | s(bool,X52) = s(bool,X53) | s(bool,X53) = s(bool,sK14(X49,X50,bool,bool)) | s(bool,X52) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f1876,f1799])).
fof(f24087,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X2))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl340),
  inference(cnf_transformation,[],[f24087_D])).
fof(f24087_D,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X2))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl340),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl340])])).
fof(f24086,plain,(
  ( ! [X2,X3] : (p(s(bool,X3)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X2)))))) )),
  inference(subsumption_resolution,[],[f24061,f251])).
fof(f24061,plain,(
  ( ! [X2,X3] : (p(s(bool,X3)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X2))))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f21429,f2305])).
fof(f23893,plain,(
  ( ! [X243,X239,X242,X240] : (sP1('const.rat.rat_les_2'(s('type.rat.rat',X239),s('type.rat.rat',X240)),X242) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X240),s('type.rat.rat',X239))))) | s(bool,'T_0') = s(bool,X243) | s(bool,X242) = s(bool,X243)) ) | $spl338),
  inference(cnf_transformation,[],[f23893_D])).
fof(f23893_D,plain,(
  ( ! [X243,X239,X242,X240] : (sP1('const.rat.rat_les_2'(s('type.rat.rat',X239),s('type.rat.rat',X240)),X242) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X240),s('type.rat.rat',X239))))) | s(bool,'T_0') = s(bool,X243) | s(bool,X242) = s(bool,X243)) ) <=> ~$spl338),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl338])])).
fof(f23892,plain,(
  ( ! [X243,X241,X239,X242,X240] : (p(s(bool,X241)) | sP1('const.rat.rat_les_2'(s('type.rat.rat',X239),s('type.rat.rat',X240)),X242) | s(bool,X242) = s(bool,X243) | s(bool,'T_0') = s(bool,X243) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X240),s('type.rat.rat',X239)))))) )),
  inference(subsumption_resolution,[],[f23705,f251])).
fof(f23705,plain,(
  ( ! [X243,X241,X239,X242,X240] : (p(s(bool,X241)) | sP1('const.rat.rat_les_2'(s('type.rat.rat',X239),s('type.rat.rat',X240)),X242) | s(bool,X242) = s(bool,X243) | s(bool,'T_0') = s(bool,X243) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X240),s('type.rat.rat',X239))))) | s(bool,'T_0') = s(bool,X241)) )),
  inference(superposition,[],[f2288,f2305])).
fof(f23891,plain,(
  ( ! [X237,X235,X238,X234] : (sP1(X237,'const.rat.rat_les_2'(s('type.rat.rat',X234),s('type.rat.rat',X235))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X235),s('type.rat.rat',X234))))) | s(bool,'T_0') = s(bool,X238) | s(bool,X237) = s(bool,X238)) ) | $spl336),
  inference(cnf_transformation,[],[f23891_D])).
fof(f23891_D,plain,(
  ( ! [X237,X235,X238,X234] : (sP1(X237,'const.rat.rat_les_2'(s('type.rat.rat',X234),s('type.rat.rat',X235))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X235),s('type.rat.rat',X234))))) | s(bool,'T_0') = s(bool,X238) | s(bool,X237) = s(bool,X238)) ) <=> ~$spl336),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl336])])).
fof(f23890,plain,(
  ( ! [X237,X235,X238,X236,X234] : (p(s(bool,X236)) | sP1(X237,'const.rat.rat_les_2'(s('type.rat.rat',X234),s('type.rat.rat',X235))) | s(bool,X237) = s(bool,X238) | s(bool,'T_0') = s(bool,X238) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X235),s('type.rat.rat',X234)))))) )),
  inference(subsumption_resolution,[],[f23704,f251])).
fof(f23704,plain,(
  ( ! [X237,X235,X238,X236,X234] : (p(s(bool,X236)) | sP1(X237,'const.rat.rat_les_2'(s('type.rat.rat',X234),s('type.rat.rat',X235))) | s(bool,X237) = s(bool,X238) | s(bool,'T_0') = s(bool,X238) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X235),s('type.rat.rat',X234))))) | s(bool,'T_0') = s(bool,X236)) )),
  inference(superposition,[],[f2287,f2305])).
fof(f23887,plain,(
  ( ! [X222,X223] : (sP1('const.rat.rat_les_2'(s('type.rat.rat',X222),s('type.rat.rat',X223)),'T_0') | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X223),s('type.rat.rat',X222)))))) ) | $spl334),
  inference(cnf_transformation,[],[f23887_D])).
fof(f23887_D,plain,(
  ( ! [X222,X223] : (sP1('const.rat.rat_les_2'(s('type.rat.rat',X222),s('type.rat.rat',X223)),'T_0') | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X223),s('type.rat.rat',X222)))))) ) <=> ~$spl334),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl334])])).
fof(f23886,plain,(
  ( ! [X222,X223,X224] : (p(s(bool,X224)) | sP1('const.rat.rat_les_2'(s('type.rat.rat',X222),s('type.rat.rat',X223)),'T_0') | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X223),s('type.rat.rat',X222)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f23701,f251])).
fof(f23701,plain,(
  ( ! [X222,X223,X224] : (p(s(bool,X224)) | sP1('const.rat.rat_les_2'(s('type.rat.rat',X222),s('type.rat.rat',X223)),'T_0') | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X223),s('type.rat.rat',X222))))) | s(bool,'T_0') = s(bool,X224)) ) | $spl30),
  inference(superposition,[],[f2237,f2305])).
fof(f23885,plain,(
  ( ! [X220,X219] : (sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',X219),s('type.rat.rat',X220))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X220),s('type.rat.rat',X219)))))) ) | $spl332),
  inference(cnf_transformation,[],[f23885_D])).
fof(f23885_D,plain,(
  ( ! [X220,X219] : (sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',X219),s('type.rat.rat',X220))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X220),s('type.rat.rat',X219)))))) ) <=> ~$spl332),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl332])])).
fof(f23884,plain,(
  ( ! [X220,X219,X221] : (p(s(bool,X221)) | sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',X219),s('type.rat.rat',X220))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X220),s('type.rat.rat',X219)))))) ) | $spl26),
  inference(subsumption_resolution,[],[f23700,f251])).
fof(f23700,plain,(
  ( ! [X220,X219,X221] : (p(s(bool,X221)) | sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',X219),s('type.rat.rat',X220))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X220),s('type.rat.rat',X219))))) | s(bool,'T_0') = s(bool,X221)) ) | $spl26),
  inference(superposition,[],[f2233,f2305])).
fof(f23883,plain,(
  ( ! [X218,X215,X217,X214] : (s(bool,X217) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X214),s('type.rat.rat',X215))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X215),s('type.rat.rat',X214))))) | s(bool,'T_0') = s(bool,X218) | s(bool,X217) = s(bool,X218)) ) | $spl330),
  inference(cnf_transformation,[],[f23883_D])).
fof(f23883_D,plain,(
  ( ! [X218,X215,X217,X214] : (s(bool,X217) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X214),s('type.rat.rat',X215))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X215),s('type.rat.rat',X214))))) | s(bool,'T_0') = s(bool,X218) | s(bool,X217) = s(bool,X218)) ) <=> ~$spl330),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl330])])).
fof(f23882,plain,(
  ( ! [X218,X216,X215,X217,X214] : (p(s(bool,X216)) | s(bool,X217) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X214),s('type.rat.rat',X215))) | s(bool,X217) = s(bool,X218) | s(bool,'T_0') = s(bool,X218) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X215),s('type.rat.rat',X214)))))) )),
  inference(subsumption_resolution,[],[f23699,f251])).
fof(f23699,plain,(
  ( ! [X218,X216,X215,X217,X214] : (p(s(bool,X216)) | s(bool,X217) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X214),s('type.rat.rat',X215))) | s(bool,X217) = s(bool,X218) | s(bool,'T_0') = s(bool,X218) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X215),s('type.rat.rat',X214))))) | s(bool,'T_0') = s(bool,X216)) )),
  inference(superposition,[],[f1924,f2305])).
fof(f23825,plain,(
  ( ! [X85,X83,X84] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X84),s('type.rat.rat',X85))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X83),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X83))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X85),s('type.rat.rat',X84)))))) ) | $spl324),
  inference(cnf_transformation,[],[f23825_D])).
fof(f23825_D,plain,(
  ( ! [X85,X83,X84] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X84),s('type.rat.rat',X85))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X83),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X83))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X85),s('type.rat.rat',X84)))))) ) <=> ~$spl324),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl324])])).
fof(f23728,plain,(
  ( ! [X241,X239,X240,X238] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X239),s('type.rat.rat',X240))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X241),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X241))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X238) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X240),s('type.rat.rat',X239)))))) )),
  inference(duplicate_literal_removal,[],[f23632])).
fof(f23632,plain,(
  ( ! [X241,X239,X240,X238] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X239),s('type.rat.rat',X240))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X241),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X241))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X238) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X240),s('type.rat.rat',X239))))) | s(bool,'T_0') = s(bool,X238)) )),
  inference(superposition,[],[f2306,f2305])).
fof(f23823,plain,(
  ( ! [X76,X74,X75] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X75),s('type.rat.rat',X76))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X74))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X76),s('type.rat.rat',X75)))))) ) | $spl320),
  inference(cnf_transformation,[],[f23823_D])).
fof(f23823_D,plain,(
  ( ! [X76,X74,X75] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X75),s('type.rat.rat',X76))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X74))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X76),s('type.rat.rat',X75)))))) ) <=> ~$spl320),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl320])])).
fof(f23729,plain,(
  ( ! [X237,X235,X236,X234] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X235),s('type.rat.rat',X236))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X237),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X237))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X234) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X236),s('type.rat.rat',X235)))))) )),
  inference(duplicate_literal_removal,[],[f23631])).
fof(f23631,plain,(
  ( ! [X237,X235,X236,X234] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X235),s('type.rat.rat',X236))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X237),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X237))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X234) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X236),s('type.rat.rat',X235))))) | s(bool,'T_0') = s(bool,X234)) )),
  inference(superposition,[],[f2304,f2305])).
fof(f23859,plain,(
  ( ! [X4,X5] : (s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4)))))) ) | $spl328),
  inference(cnf_transformation,[],[f23859_D])).
fof(f23859_D,plain,(
  ( ! [X4,X5] : (s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4)))))) ) <=> ~$spl328),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl328])])).
fof(f23858,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))) | p(s(bool,X3)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4)))))) )),
  inference(subsumption_resolution,[],[f23581,f251])).
fof(f23581,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))) | p(s(bool,X3)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X5),s('type.rat.rat',X4))))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f251,f2305])).
fof(f23842,plain,(
  ( ! [X101,X99,X98] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X99),s('type.rat.rat',X98))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X99),s('type.rat.rat',X98))))))) | s(bool,'T_0') = s(bool,X101) | s(bool,X101) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X99),s('type.rat.rat',X98)))) ) | $spl326),
  inference(cnf_transformation,[],[f23842_D])).
fof(f23842_D,plain,(
  ( ! [X101,X99,X98] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X99),s('type.rat.rat',X98))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X99),s('type.rat.rat',X98))))))) | s(bool,'T_0') = s(bool,X101) | s(bool,X101) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X99),s('type.rat.rat',X98)))) ) <=> ~$spl326),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl326])])).
fof(f23841,plain,(
  ( ! [X101,X99,X100,X98] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X99),s('type.rat.rat',X98))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X99),s('type.rat.rat',X98))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X100))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X100))) | s(bool,X101) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X99),s('type.rat.rat',X98))) | s(bool,'T_0') = s(bool,X101)) )),
  inference(forward_demodulation,[],[f23763,f1445])).
fof(f23763,plain,(
  ( ! [X101,X99,X100,X98] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X98),s('type.rat.rat',X99))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X98),s('type.rat.rat',X99))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X100))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X100))) | s(bool,X101) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X99),s('type.rat.rat',X98))) | s(bool,'T_0') = s(bool,X101)) )),
  inference(duplicate_literal_removal,[],[f23518])).
fof(f23518,plain,(
  ( ! [X101,X99,X100,X98] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X98),s('type.rat.rat',X99))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X98),s('type.rat.rat',X99))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X100))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X100))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X100))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X101) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X99),s('type.rat.rat',X98))) | s(bool,'T_0') = s(bool,X101)) )),
  inference(superposition,[],[f1629,f2305])).
fof(f23781,plain,(
  ( ! [X85,X83,X84,X82] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X84),s('type.rat.rat',X85))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X83),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X85),s('type.rat.rat',X84))))) | s(bool,'T_0') = s(bool,X82) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X83))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(duplicate_literal_removal,[],[f23454])).
fof(f23454,plain,(
  ( ! [X85,X83,X84,X82] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X84),s('type.rat.rat',X85))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X83),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X85),s('type.rat.rat',X84))))) | s(bool,'T_0') = s(bool,X82) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X83))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X82)) )),
  inference(superposition,[],[f2305,f2306])).
fof(f23824,plain,(
  ( ! [X80,X78,X81,X79] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X78),s('type.rat.rat',X79))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X80),s('type.rat.rat',X81))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X79),s('type.rat.rat',X78))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X81),s('type.rat.rat',X80)))))) ) | $spl322),
  inference(cnf_transformation,[],[f23824_D])).
fof(f23824_D,plain,(
  ( ! [X80,X78,X81,X79] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X78),s('type.rat.rat',X79))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X80),s('type.rat.rat',X81))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X79),s('type.rat.rat',X78))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X81),s('type.rat.rat',X80)))))) ) <=> ~$spl322),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl322])])).
fof(f23782,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X78),s('type.rat.rat',X79))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X80),s('type.rat.rat',X81))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X81),s('type.rat.rat',X80))))) | s(bool,'T_0') = s(bool,X77) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X79),s('type.rat.rat',X78)))))) )),
  inference(duplicate_literal_removal,[],[f23453])).
fof(f23453,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X78),s('type.rat.rat',X79))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X80),s('type.rat.rat',X81))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X81),s('type.rat.rat',X80))))) | s(bool,'T_0') = s(bool,X77) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X79),s('type.rat.rat',X78))))) | s(bool,'T_0') = s(bool,X77)) )),
  inference(superposition,[],[f2305,f2305])).
fof(f23783,plain,(
  ( ! [X76,X74,X75,X73] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X75),s('type.rat.rat',X76))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X76),s('type.rat.rat',X75))))) | s(bool,'T_0') = s(bool,X73) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X74))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(duplicate_literal_removal,[],[f23452])).
fof(f23452,plain,(
  ( ! [X76,X74,X75,X73] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X75),s('type.rat.rat',X76))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X74),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X76),s('type.rat.rat',X75))))) | s(bool,'T_0') = s(bool,X73) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X74))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f2305,f2304])).
fof(f23820,plain,(
  ( ! [X2,X1] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1)))))) ) | $spl318),
  inference(cnf_transformation,[],[f23820_D])).
fof(f23820_D,plain,(
  ( ! [X2,X1] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1)))))) ) <=> ~$spl318),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl318])])).
fof(f23822,plain,(
  ( ! [X24,X23,X22] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X23))))) | s(bool,'T_0') = s(bool,X22)) )),
  inference(forward_demodulation,[],[f23796,f475])).
fof(f23796,plain,(
  ( ! [X24,X23,X22] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X23))))) | s(bool,'T_0') = s(bool,X22)) )),
  inference(duplicate_literal_removal,[],[f23443])).
fof(f23443,plain,(
  ( ! [X24,X23,X22] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X23),s('type.rat.rat',X24))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X24),s('type.rat.rat',X23))))) | s(bool,'T_0') = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) )),
  inference(superposition,[],[f2305,f1018])).
fof(f23821,plain,(
  ( ! [X21,X19,X20] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))))) | s(bool,'T_0') = s(bool,X19)) )),
  inference(forward_demodulation,[],[f23797,f474])).
fof(f23797,plain,(
  ( ! [X21,X19,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))))) | s(bool,'T_0') = s(bool,X19)) )),
  inference(duplicate_literal_removal,[],[f23442])).
fof(f23442,plain,(
  ( ! [X21,X19,X20] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X20),s('type.rat.rat',X21))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X21),s('type.rat.rat',X20))))) | s(bool,'T_0') = s(bool,X19) | s(bool,'T_0') = s(bool,X19)) )),
  inference(superposition,[],[f2305,f1017])).
fof(f23802,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f23437])).
fof(f23437,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X2),s('type.rat.rat',X1))))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f2305,f241])).
fof(f23416,plain,(
  ( ! [X46] : (sP1('T_0',f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl316),
  inference(cnf_transformation,[],[f23416_D])).
fof(f23416_D,plain,(
  ( ! [X46] : (sP1('T_0',f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl316),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl316])])).
fof(f23389,plain,(
  ( ! [X45,X46] : (sP1('T_0',f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X45) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl26 | $spl99)),
  inference(duplicate_literal_removal,[],[f23375])).
fof(f23375,plain,(
  ( ! [X45,X46] : (sP1('T_0',f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X46),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X45) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X46))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X45)) ) | ($spl26 | $spl99)),
  inference(superposition,[],[f20133,f2306])).
fof(f20133,plain,(
  ( ! [X0] : (sP1('T_0',f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl26 | $spl99)),
  inference(superposition,[],[f19674,f241])).
fof(f19674,plain,(
  sP1('T_0',f(s(bool,'F_0'))) | ($spl26 | $spl99)),
  inference(unit_resulting_resolution,[],[f4047,f2820])).
fof(f23415,plain,(
  ( ! [X44] : (sP1('T_0',f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl314),
  inference(cnf_transformation,[],[f23415_D])).
fof(f23415_D,plain,(
  ( ! [X44] : (sP1('T_0',f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl314),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl314])])).
fof(f23390,plain,(
  ( ! [X43,X44] : (sP1('T_0',f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X43) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | ($spl26 | $spl99)),
  inference(duplicate_literal_removal,[],[f23374])).
fof(f23374,plain,(
  ( ! [X43,X44] : (sP1('T_0',f(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X43) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X43)) ) | ($spl26 | $spl99)),
  inference(superposition,[],[f20133,f2304])).
fof(f23334,plain,(
  ( ! [X180,X178,X181] : (sP1('const.rat.rat_les_2'(s('type.rat.rat',X178),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X180) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X178))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X181) | s(bool,X180) = s(bool,X181)) ) | $spl312),
  inference(cnf_transformation,[],[f23334_D])).
fof(f23334_D,plain,(
  ( ! [X180,X178,X181] : (sP1('const.rat.rat_les_2'(s('type.rat.rat',X178),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X180) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X178))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X181) | s(bool,X180) = s(bool,X181)) ) <=> ~$spl312),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl312])])).
fof(f23333,plain,(
  ( ! [X180,X178,X181,X179] : (p(s(bool,X179)) | sP1('const.rat.rat_les_2'(s('type.rat.rat',X178),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X180) | s(bool,X180) = s(bool,X181) | s(bool,'T_0') = s(bool,X181) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X178))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(subsumption_resolution,[],[f23188,f251])).
fof(f23188,plain,(
  ( ! [X180,X178,X181,X179] : (p(s(bool,X179)) | sP1('const.rat.rat_les_2'(s('type.rat.rat',X178),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X180) | s(bool,X180) = s(bool,X181) | s(bool,'T_0') = s(bool,X181) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X178))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X179)) )),
  inference(superposition,[],[f2288,f2304])).
fof(f23332,plain,(
  ( ! [X177,X176,X174] : (sP1(X176,'const.rat.rat_les_2'(s('type.rat.rat',X174),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X174))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X177) | s(bool,X176) = s(bool,X177)) ) | $spl310),
  inference(cnf_transformation,[],[f23332_D])).
fof(f23332_D,plain,(
  ( ! [X177,X176,X174] : (sP1(X176,'const.rat.rat_les_2'(s('type.rat.rat',X174),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X174))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X177) | s(bool,X176) = s(bool,X177)) ) <=> ~$spl310),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl310])])).
fof(f23331,plain,(
  ( ! [X177,X175,X176,X174] : (p(s(bool,X175)) | sP1(X176,'const.rat.rat_les_2'(s('type.rat.rat',X174),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X176) = s(bool,X177) | s(bool,'T_0') = s(bool,X177) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X174))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(subsumption_resolution,[],[f23187,f251])).
fof(f23187,plain,(
  ( ! [X177,X175,X176,X174] : (p(s(bool,X175)) | sP1(X176,'const.rat.rat_les_2'(s('type.rat.rat',X174),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X176) = s(bool,X177) | s(bool,'T_0') = s(bool,X177) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X174))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X175)) )),
  inference(superposition,[],[f2287,f2304])).
fof(f23330,plain,(
  ( ! [X165] : (sP1('const.rat.rat_les_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X165))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl308),
  inference(cnf_transformation,[],[f23330_D])).
fof(f23330_D,plain,(
  ( ! [X165] : (sP1('const.rat.rat_les_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X165))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl308),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl308])])).
fof(f23329,plain,(
  ( ! [X165,X166] : (p(s(bool,X166)) | sP1('const.rat.rat_les_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X165))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl30),
  inference(subsumption_resolution,[],[f23184,f251])).
fof(f23184,plain,(
  ( ! [X165,X166] : (p(s(bool,X166)) | sP1('const.rat.rat_les_2'(s('type.rat.rat',X165),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X165))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X166)) ) | $spl30),
  inference(superposition,[],[f2237,f2304])).
fof(f23328,plain,(
  ( ! [X163] : (sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',X163),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X163))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl306),
  inference(cnf_transformation,[],[f23328_D])).
fof(f23328_D,plain,(
  ( ! [X163] : (sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',X163),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X163))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl306),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl306])])).
fof(f23327,plain,(
  ( ! [X163,X164] : (p(s(bool,X164)) | sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',X163),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X163))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl26),
  inference(subsumption_resolution,[],[f23183,f251])).
fof(f23183,plain,(
  ( ! [X163,X164] : (p(s(bool,X164)) | sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',X163),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X163))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X164)) ) | $spl26),
  inference(superposition,[],[f2233,f2304])).
fof(f23326,plain,(
  ( ! [X161,X159,X162] : (s(bool,X161) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X159),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X159))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X162) | s(bool,X161) = s(bool,X162)) ) | $spl304),
  inference(cnf_transformation,[],[f23326_D])).
fof(f23326_D,plain,(
  ( ! [X161,X159,X162] : (s(bool,X161) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X159),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X159))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X162) | s(bool,X161) = s(bool,X162)) ) <=> ~$spl304),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl304])])).
fof(f23325,plain,(
  ( ! [X161,X159,X162,X160] : (p(s(bool,X160)) | s(bool,X161) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X159),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X161) = s(bool,X162) | s(bool,'T_0') = s(bool,X162) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X159))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(subsumption_resolution,[],[f23182,f251])).
fof(f23182,plain,(
  ( ! [X161,X159,X162,X160] : (p(s(bool,X160)) | s(bool,X161) != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X159),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X161) = s(bool,X162) | s(bool,'T_0') = s(bool,X162) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X159))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X160)) )),
  inference(superposition,[],[f1924,f2304])).
fof(f23292,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl292),
  inference(cnf_transformation,[],[f23292_D])).
fof(f23292_D,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl292),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl292])])).
fof(f23318,plain,(
  ( ! [X12,X13] : (p(s(bool,X13)) | s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(subsumption_resolution,[],[f23143,f251])).
fof(f23143,plain,(
  ( ! [X12,X13] : (p(s(bool,X13)) | s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f256,f2304])).
fof(f23296,plain,(
  ( ! [X62,X63] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X63),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X63))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl296),
  inference(cnf_transformation,[],[f23296_D])).
fof(f23296_D,plain,(
  ( ! [X62,X63] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X63),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X63))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl296),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl296])])).
fof(f23210,plain,(
  ( ! [X185,X184,X183] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X184),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X185),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X185))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X183) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X184))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(duplicate_literal_removal,[],[f23129])).
fof(f23129,plain,(
  ( ! [X185,X184,X183] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X184),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X185),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X185))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X183) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X184))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X183)) )),
  inference(superposition,[],[f2306,f2304])).
fof(f23313,plain,(
  ( ! [X109,X108] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X109),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X108) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X109))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f23228,f475])).
fof(f23228,plain,(
  ( ! [X109,X108] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X109),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X108) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X109))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(duplicate_literal_removal,[],[f23111])).
fof(f23111,plain,(
  ( ! [X109,X108] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X109),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X108) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X109))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X108)) )),
  inference(superposition,[],[f1018,f2304])).
fof(f23312,plain,(
  ( ! [X107,X106] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X107),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X106) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X107))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f23229,f474])).
fof(f23229,plain,(
  ( ! [X107,X106] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X107),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X106) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X107))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(duplicate_literal_removal,[],[f23110])).
fof(f23110,plain,(
  ( ! [X107,X106] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X107),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X106) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X107))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X106)) )),
  inference(superposition,[],[f1017,f2304])).
fof(f23308,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl302),
  inference(cnf_transformation,[],[f23308_D])).
fof(f23308_D,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl302),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl302])])).
fof(f23307,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,X2)) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(subsumption_resolution,[],[f23079,f251])).
fof(f23079,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,X2)) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f251,f2304])).
fof(f23235,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X0) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(duplicate_literal_removal,[],[f23078])).
fof(f23078,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X0) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f241,f2304])).
fof(f23305,plain,(
  ( ! [X39,X37] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37))))) | s(bool,'T_0') = s(bool,X39) | s(bool,X39) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl300),
  inference(cnf_transformation,[],[f23305_D])).
fof(f23305_D,plain,(
  ( ! [X39,X37] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37))))) | s(bool,'T_0') = s(bool,X39) | s(bool,X39) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl300),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl300])])).
fof(f23238,plain,(
  ( ! [X39,X37,X38] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) | s(bool,X39) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X39)) )),
  inference(duplicate_literal_removal,[],[f23052])).
fof(f23052,plain,(
  ( ! [X39,X37,X38] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X37))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X39) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X37),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X39)) )),
  inference(superposition,[],[f1629,f2304])).
fof(f23302,plain,(
  ( ! [X133,X131] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X131))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,'T_0') = s(bool,X133) | s(bool,X133) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl298),
  inference(cnf_transformation,[],[f23302_D])).
fof(f23302_D,plain,(
  ( ! [X133,X131] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X131))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,'T_0') = s(bool,X133) | s(bool,X133) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl298),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl298])])).
fof(f23301,plain,(
  ( ! [X132,X133,X131] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X131))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X132))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X132))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X133) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X133)) )),
  inference(subsumption_resolution,[],[f23031,f242])).
fof(f23031,plain,(
  ( ! [X132,X133,X131] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X132))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X131))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X132))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X132))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X133) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X131),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X133)) )),
  inference(superposition,[],[f1634,f2304])).
fof(f23259,plain,(
  ( ! [X61,X62,X63] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X63),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X63))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X61) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(duplicate_literal_removal,[],[f22959])).
fof(f22959,plain,(
  ( ! [X61,X62,X63] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X63),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X63))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X61) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X61)) )),
  inference(superposition,[],[f2304,f2306])).
fof(f23295,plain,(
  ( ! [X59,X60] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl294),
  inference(cnf_transformation,[],[f23295_D])).
fof(f23295_D,plain,(
  ( ! [X59,X60] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl294),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl294])])).
fof(f23260,plain,(
  ( ! [X59,X60,X58] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X58) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(duplicate_literal_removal,[],[f22958])).
fof(f22958,plain,(
  ( ! [X59,X60,X58] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X58) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X58)) )),
  inference(superposition,[],[f2304,f2304])).
fof(f23294,plain,(
  ( ! [X17,X16] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(forward_demodulation,[],[f23273,f475])).
fof(f23273,plain,(
  ( ! [X17,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(duplicate_literal_removal,[],[f22949])).
fof(f22949,plain,(
  ( ! [X17,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f2304,f1018])).
fof(f23293,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(forward_demodulation,[],[f23274,f474])).
fof(f23274,plain,(
  ( ! [X14,X15] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(duplicate_literal_removal,[],[f22948])).
fof(f22948,plain,(
  ( ! [X14,X15] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X14) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f2304,f1017])).
fof(f23279,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f22943])).
fof(f22943,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f2304,f241])).
fof(f22741,plain,(
  ( ! [X24,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25)))) ) | $spl286),
  inference(cnf_transformation,[],[f22741_D])).
fof(f22741_D,plain,(
  ( ! [X24,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25)))) ) <=> ~$spl286),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl286])])).
fof(f22701,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl270),
  inference(cnf_transformation,[],[f22701_D])).
fof(f22701_D,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl270),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl270])])).
fof(f22752,plain,(
  ( ! [X57,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57)))) ) | ($spl64 | $spl80)),
  inference(forward_demodulation,[],[f22751,f1445])).
fof(f22751,plain,(
  ( ! [X57,X58] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57)))) ) | ($spl64 | $spl80)),
  inference(forward_demodulation,[],[f22750,f1445])).
fof(f22750,plain,(
  ( ! [X57,X58] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57)))) ) | ($spl64 | $spl80)),
  inference(forward_demodulation,[],[f22637,f3515])).
fof(f22637,plain,(
  ( ! [X57,X58] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X58))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X57)))) ) | $spl80),
  inference(superposition,[],[f1634,f3886])).
fof(f22749,plain,(
  ( ! [X56,X55] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56)))) ) | $spl290),
  inference(cnf_transformation,[],[f22749_D])).
fof(f22749_D,plain,(
  ( ! [X56,X55] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56)))) ) <=> ~$spl290),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl290])])).
fof(f22686,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl262),
  inference(cnf_transformation,[],[f22686_D])).
fof(f22686_D,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl262),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl262])])).
fof(f22748,plain,(
  ( ! [X56,X55] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55)))) ) | $spl80),
  inference(forward_demodulation,[],[f22636,f1445])).
fof(f22636,plain,(
  ( ! [X56,X55] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X56))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X55)))) ) | $spl80),
  inference(superposition,[],[f1632,f3886])).
fof(f22745,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl288),
  inference(cnf_transformation,[],[f22745_D])).
fof(f22745_D,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl288),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl288])])).
fof(f22743,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl80),
  inference(condensation,[],[f22742])).
fof(f22742,plain,(
  ( ! [X26,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26)))) ) | $spl80),
  inference(subsumption_resolution,[],[f22623,f22566])).
fof(f22566,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl80),
  inference(superposition,[],[f3886,f3886])).
fof(f22623,plain,(
  ( ! [X26,X27] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26)))) ) | $spl80),
  inference(superposition,[],[f1636,f3886])).
fof(f22622,plain,(
  ( ! [X24,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24)))) ) | $spl80),
  inference(superposition,[],[f1632,f3886])).
fof(f22736,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl284),
  inference(cnf_transformation,[],[f22736_D])).
fof(f22736_D,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl284),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl284])])).
fof(f22735,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5)))) ) | $spl80),
  inference(subsumption_resolution,[],[f22612,f1489])).
fof(f22612,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5)))) ) | $spl80),
  inference(superposition,[],[f1636,f3886])).
fof(f3926,plain,(
  ( ! [X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16)))) ) | $spl86),
  inference(cnf_transformation,[],[f3926_D])).
fof(f3926_D,plain,(
  ( ! [X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16)))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f22724,plain,(
  ( ! [X66] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66)))) ) | $spl282),
  inference(cnf_transformation,[],[f22724_D])).
fof(f22724_D,plain,(
  ( ! [X66] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66)))) ) <=> ~$spl282),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl282])])).
fof(f22723,plain,(
  ( ! [X66,X65] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65)))) ) | $spl80),
  inference(forward_demodulation,[],[f22722,f1445])).
fof(f22722,plain,(
  ( ! [X66,X65] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65)))) ) | $spl80),
  inference(forward_demodulation,[],[f22602,f1445])).
fof(f22602,plain,(
  ( ! [X66,X65] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65)))) ) | $spl80),
  inference(superposition,[],[f1636,f3886])).
fof(f22720,plain,(
  ( ! [X61] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61)))) ) | $spl278),
  inference(cnf_transformation,[],[f22720_D])).
fof(f22720_D,plain,(
  ( ! [X61] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61)))) ) <=> ~$spl278),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl278])])).
fof(f22721,plain,(
  ( ! [X62] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62)))) ) | $spl280),
  inference(cnf_transformation,[],[f22721_D])).
fof(f22721_D,plain,(
  ( ! [X62] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62)))) ) <=> ~$spl280),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl280])])).
fof(f22719,plain,(
  ( ! [X61,X62] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61)))) ) | $spl80),
  inference(forward_demodulation,[],[f22600,f1445])).
fof(f22600,plain,(
  ( ! [X61,X62] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X61)))) ) | $spl80),
  inference(superposition,[],[f1632,f3886])).
fof(f22718,plain,(
  ( ! [X59,X60] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60)))) ) | $spl276),
  inference(cnf_transformation,[],[f22718_D])).
fof(f22718_D,plain,(
  ( ! [X59,X60] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60)))) ) <=> ~$spl276),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl276])])).
fof(f22700,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl271),
  inference(cnf_transformation,[],[f22700_D])).
fof(f22700_D,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl271),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl271])])).
fof(f22717,plain,(
  ( ! [X59,X60] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59)))) ) | ($spl64 | $spl80)),
  inference(forward_demodulation,[],[f22716,f1445])).
fof(f22716,plain,(
  ( ! [X59,X60] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59)))) ) | ($spl64 | $spl80)),
  inference(forward_demodulation,[],[f22715,f1445])).
fof(f22715,plain,(
  ( ! [X59,X60] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59)))) ) | ($spl64 | $spl80)),
  inference(forward_demodulation,[],[f22599,f3515])).
fof(f22599,plain,(
  ( ! [X59,X60] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59)))) ) | $spl80),
  inference(superposition,[],[f1629,f3886])).
fof(f1665,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl18),
  inference(cnf_transformation,[],[f1665_D])).
fof(f1665_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f22708,plain,(
  ( ! [X30,X31] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X31))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X31))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30)))) ) | $spl80),
  inference(subsumption_resolution,[],[f22585,f3886])).
fof(f22585,plain,(
  ( ! [X30,X31] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X31))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X31))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X31))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X30)))) ) | $spl80),
  inference(superposition,[],[f1636,f3886])).
fof(f22685,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl263),
  inference(cnf_transformation,[],[f22685_D])).
fof(f22685_D,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl263),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl263])])).
fof(f22707,plain,(
  ( ! [X26,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26)))) ) | ($spl64 | $spl80)),
  inference(forward_demodulation,[],[f22706,f1445])).
fof(f22706,plain,(
  ( ! [X26,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26)))) ) | ($spl64 | $spl80)),
  inference(forward_demodulation,[],[f22583,f3515])).
fof(f22583,plain,(
  ( ! [X26,X27] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26)))) ) | $spl80),
  inference(superposition,[],[f1629,f3886])).
fof(f22705,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl274),
  inference(cnf_transformation,[],[f22705_D])).
fof(f22705_D,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl274),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl274])])).
fof(f22704,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f22648,f1445])).
fof(f22648,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl80),
  inference(duplicate_literal_removal,[],[f22573])).
fof(f22573,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8)))) ) | $spl80),
  inference(superposition,[],[f1636,f3886])).
fof(f22702,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1)))) ) | $spl272),
  inference(cnf_transformation,[],[f22702_D])).
fof(f22702_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1)))) ) <=> ~$spl272),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl272])])).
fof(f22703,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) ) | $spl80),
  inference(subsumption_resolution,[],[f22565,f1489])).
fof(f22565,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))) ) | $spl80),
  inference(superposition,[],[f3886,f1617])).
fof(f22699,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl80),
  inference(subsumption_resolution,[],[f22564,f1489])).
fof(f22564,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl80),
  inference(superposition,[],[f3886,f1617])).
fof(f22331,plain,(
  ( ! [X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X32))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X32)))))) ) | $spl258),
  inference(cnf_transformation,[],[f22331_D])).
fof(f22331_D,plain,(
  ( ! [X32] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X32))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X32)))))) ) <=> ~$spl258),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl258])])).
fof(f22690,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl266),
  inference(cnf_transformation,[],[f22690_D])).
fof(f22690_D,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl266),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl266])])).
fof(f22698,plain,(
  ( ! [X12] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | $spl80),
  inference(forward_demodulation,[],[f22649,f1445])).
fof(f22649,plain,(
  ( ! [X12] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | $spl80),
  inference(duplicate_literal_removal,[],[f22561])).
fof(f22561,plain,(
  ( ! [X12] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X12)))))) ) | $spl80),
  inference(superposition,[],[f3886,f1618])).
fof(f22696,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X11) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X11)) ) | ($spl23 | $spl80)),
  inference(forward_demodulation,[],[f22695,f1445])).
fof(f22695,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,X11) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X11)) ) | ($spl23 | $spl80)),
  inference(subsumption_resolution,[],[f22560,f17357])).
fof(f22560,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s(bool,X11) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X11)) ) | $spl80),
  inference(superposition,[],[f3886,f2306])).
fof(f4649,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl108),
  inference(cnf_transformation,[],[f4649_D])).
fof(f4649_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f22694,plain,(
  ( ! [X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9)))))) ) | ($spl64 | $spl80)),
  inference(forward_demodulation,[],[f22693,f1445])).
fof(f22693,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9)))))) ) | ($spl64 | $spl80)),
  inference(forward_demodulation,[],[f22692,f3515])).
fof(f22692,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9)))))) ) | $spl80),
  inference(subsumption_resolution,[],[f22559,f3338])).
fof(f22559,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9)))))) ) | $spl80),
  inference(superposition,[],[f3886,f1618])).
fof(f22691,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4)))) ) | $spl80),
  inference(forward_demodulation,[],[f22656,f1445])).
fof(f22656,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4)))) ) | $spl80),
  inference(duplicate_literal_removal,[],[f22556])).
fof(f22556,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | $spl80),
  inference(superposition,[],[f3886,f1617])).
fof(f22687,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) ) | $spl80),
  inference(forward_demodulation,[],[f22657,f1445])).
fof(f22657,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) ) | $spl80),
  inference(duplicate_literal_removal,[],[f22555])).
fof(f22555,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) ) | $spl80),
  inference(superposition,[],[f3886,f1617])).
fof(f22684,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl64 | $spl80)),
  inference(forward_demodulation,[],[f22683,f1445])).
fof(f22683,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl64 | $spl80)),
  inference(forward_demodulation,[],[f22658,f3515])).
fof(f22658,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl80),
  inference(duplicate_literal_removal,[],[f22554])).
fof(f22554,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl80),
  inference(superposition,[],[f3886,f242])).
fof(f22660,plain,(
  $false | ($spl78 | $spl80)),
  inference(subsumption_resolution,[],[f22659,f22465])).
fof(f22465,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | $spl78),
  inference(unit_resulting_resolution,[],[f1489,f3885])).
fof(f22659,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | $spl80),
  inference(forward_demodulation,[],[f22549,f1445])).
fof(f22549,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | $spl80),
  inference(unit_resulting_resolution,[],[f1492,f3886])).
fof(f22419,plain,(
  ( ! [X21,X19,X22] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) | s(bool,'T_0') = s(bool,X22) | s(bool,X21) = s(bool,X22) | s(bool,X21) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl260),
  inference(cnf_transformation,[],[f22419_D])).
fof(f22419_D,plain,(
  ( ! [X21,X19,X22] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) | s(bool,'T_0') = s(bool,X22) | s(bool,X21) = s(bool,X22) | s(bool,X21) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl260),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl260])])).
fof(f22420,plain,(
  ( ! [X37,X35,X38,X36] : (p(s(bool,X36)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) | s(bool,X37) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X37) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) ) | $spl82),
  inference(subsumption_resolution,[],[f22408,f251])).
fof(f22408,plain,(
  ( ! [X37,X35,X38,X36] : (p(s(bool,X36)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X35))) | s(bool,X37) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X35),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X37) = s(bool,X38) | s(bool,'T_0') = s(bool,X38) | s(bool,'T_0') = s(bool,X36)) ) | $spl82),
  inference(superposition,[],[f3887,f1799])).
fof(f22418,plain,(
  ( ! [X21,X19,X22,X20] : (p(s(bool,X20)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) | s(bool,X21) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X21) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) ) | $spl82),
  inference(subsumption_resolution,[],[f22404,f251])).
fof(f22404,plain,(
  ( ! [X21,X19,X22,X20] : (p(s(bool,X20)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) | s(bool,X21) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X20) | s(bool,X21) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) ) | $spl82),
  inference(superposition,[],[f3887,f1799])).
fof(f22330,plain,(
  ( ! [X33,X32] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X32))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X32)))))) ) | ($spl3 | $spl74)),
  inference(subsumption_resolution,[],[f22329,f20329])).
fof(f22329,plain,(
  ( ! [X33,X32] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X32))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X32)))))) ) | $spl74),
  inference(subsumption_resolution,[],[f22294,f3878])).
fof(f22294,plain,(
  ( ! [X33,X32] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X32))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X32))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X32)))))) )),
  inference(superposition,[],[f1636,f1618])).
fof(f21514,plain,(
  ( ! [X44] : (sP1('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl256),
  inference(cnf_transformation,[],[f21514_D])).
fof(f21514_D,plain,(
  ( ! [X44] : (sP1('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl256),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl256])])).
fof(f21488,plain,(
  ( ! [X43,X44] : (sP1('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X43) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl26 | $spl91)),
  inference(duplicate_literal_removal,[],[f21475])).
fof(f21475,plain,(
  ( ! [X43,X44] : (sP1('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X44),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X43) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X44))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X43)) ) | ($spl26 | $spl91)),
  inference(superposition,[],[f18344,f2306])).
fof(f18344,plain,(
  ( ! [X0] : (sP1('T_0',g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl26 | $spl91)),
  inference(superposition,[],[f17995,f241])).
fof(f17995,plain,(
  sP1('T_0',g(s(bool,'F_0'))) | ($spl26 | $spl91)),
  inference(unit_resulting_resolution,[],[f4040,f2820])).
fof(f3515,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl64),
  inference(cnf_transformation,[],[f3515_D])).
fof(f3515_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f20406,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(subsumption_resolution,[],[f6188,f3338])).
fof(f6188,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) )),
  inference(duplicate_literal_removal,[],[f6187])).
fof(f6187,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(condensation,[],[f6186])).
fof(f6186,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8)))))) )),
  inference(subsumption_resolution,[],[f5817,f2992])).
fof(f5817,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8)))))) )),
  inference(superposition,[],[f1617,f1618])).
fof(f20405,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(subsumption_resolution,[],[f6205,f3338])).
fof(f6205,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(duplicate_literal_removal,[],[f6204])).
fof(f6204,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(condensation,[],[f6203])).
fof(f6203,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8)))))) )),
  inference(subsumption_resolution,[],[f5827,f2992])).
fof(f5827,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8)))))) )),
  inference(superposition,[],[f1617,f1618])).
fof(f20404,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(subsumption_resolution,[],[f6220,f3338])).
fof(f6220,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) )),
  inference(duplicate_literal_removal,[],[f6219])).
fof(f6219,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) )),
  inference(condensation,[],[f6218])).
fof(f6218,plain,(
  ( ! [X14,X15] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14)))) )),
  inference(subsumption_resolution,[],[f5906,f2992])).
fof(f5906,plain,(
  ( ! [X14,X15] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14)))) )),
  inference(superposition,[],[f1618,f1617])).
fof(f20403,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(subsumption_resolution,[],[f6225,f3338])).
fof(f6225,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) )),
  inference(duplicate_literal_removal,[],[f6224])).
fof(f6224,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) )),
  inference(condensation,[],[f6223])).
fof(f6223,plain,(
  ( ! [X14,X15] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15)))) )),
  inference(subsumption_resolution,[],[f5957,f2992])).
fof(f5957,plain,(
  ( ! [X14,X15] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X14))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X14))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15)))) )),
  inference(superposition,[],[f1618,f1617])).
fof(f19165,plain,(
  ( ! [X64,X62] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))))) | s(bool,'T_0') = s(bool,X64) | s(bool,X64) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl248),
  inference(cnf_transformation,[],[f19165_D])).
fof(f19165_D,plain,(
  ( ! [X64,X62] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))))) | s(bool,'T_0') = s(bool,X64) | s(bool,X64) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl248),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl248])])).
fof(f17708,plain,(
  ( ! [X64,X62,X63] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X63))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X63))) | s(bool,X64) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X64)) )),
  inference(subsumption_resolution,[],[f17369,f294])).
fof(f17369,plain,(
  ( ! [X64,X62,X63] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X63))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X63))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X63))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X64) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X64)) )),
  inference(superposition,[],[f1627,f2306])).
fof(f3927,plain,(
  ( ! [X15] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | $spl88),
  inference(cnf_transformation,[],[f3927_D])).
fof(f3927_D,plain,(
  ( ! [X15] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f16032,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) )),
  inference(forward_demodulation,[],[f5482,f240])).
fof(f5482,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) )),
  inference(subsumption_resolution,[],[f5472,f294])).
fof(f5472,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) )),
  inference(superposition,[],[f1627,f1618])).
fof(f20335,plain,(
  ( ! [X67,X65] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65))))))) | s(bool,'T_0') = s(bool,X67) | s(bool,X67) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X65),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl254),
  inference(cnf_transformation,[],[f20335_D])).
fof(f20335_D,plain,(
  ( ! [X67,X65] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65))))))) | s(bool,'T_0') = s(bool,X67) | s(bool,X67) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X65),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl254),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl254])])).
fof(f17642,plain,(
  ( ! [X66,X67,X65] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))) | s(bool,X67) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X65),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X67)) )),
  inference(duplicate_literal_removal,[],[f17370])).
fof(f17370,plain,(
  ( ! [X66,X67,X65] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X65))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X66))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X67) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X65),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f1629,f2306])).
fof(f20334,plain,(
  ( ! [X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X40))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X40))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X40)))))) ) | $spl252),
  inference(cnf_transformation,[],[f20334_D])).
fof(f20334_D,plain,(
  ( ! [X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X40))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X40))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X40)))))) ) <=> ~$spl252),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl252])])).
fof(f16602,plain,(
  ( ! [X41,X40] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X40))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X40))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X41))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X41))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X40)))))) ) | $spl108),
  inference(forward_demodulation,[],[f16556,f240])).
fof(f16556,plain,(
  ( ! [X41,X40] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X40))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X40))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X41))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X41))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X40)))))) ) | $spl108),
  inference(duplicate_literal_removal,[],[f16546])).
fof(f16546,plain,(
  ( ! [X41,X40] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X40))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X40))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X41))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X41))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X41))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X40)))))) ) | $spl108),
  inference(superposition,[],[f1629,f4649])).
fof(f20325,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f20324,f424])).
fof(f20324,plain,(
  p(s(bool,'F_0')) | $spl6),
  inference(forward_demodulation,[],[f20313,f475])).
fof(f20313,plain,(
  p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | $spl6),
  inference(equality_resolution,[],[f19019])).
fof(f19019,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) ) | $spl6),
  inference(backward_demodulation,[],[f18896,f18604])).
fof(f18604,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))) ) | $spl6),
  inference(backward_demodulation,[],[f18475,f292])).
fof(f18475,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl6),
  inference(unit_resulting_resolution,[],[f1492,f4646])).
fof(f4646,plain,(
  ( ! [X14,X15] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X14))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X15),s('type.rat.rat',X14)))))) ) | $spl6),
  inference(global_subsumption,[],[f232,f231,f230,f233,f240,f241,f242,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1245,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1445,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f2305,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f2987,f2991,f2992,f3001,f3038,f3039,f3025,f3030,f3031,f3033,f3036,f3173,f3174,f3190,f3179,f3180,f3193,f3198,f3186,f3238,f3338,f3339,f3345,f3362,f3512,f3405,f3406,f3546,f3417,f3551,f3555,f3560,f3563,f3566,f3453,f3568,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3647,f3654,f3638,f3632,f3633,f3660,f3659,f3658,f3664,f3663,f3662,f1651,f2849,f3923,f3924,f3418,f3610,f3040,f3044,f3046,f3043,f3045,f3656,f3628,f3605,f3599,f3547,f3516,f3482,f3481,f3479,f3477,f3471,f3469,f3468,f3466,f3464,f3460,f3459,f3454,f3452,f3451,f3447,f3445,f3444,f3443,f3437,f3414,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1640,f1636,f1634,f1631,f1629,f1627,f1618,f292,f291,f264,f263,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f262,f261,f3419,f3434,f3435,f3439,f3440,f3449,f3472,f3474,f3487,f3549])).
fof(f18896,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | $spl6),
  inference(backward_demodulation,[],[f18474,f18475])).
fof(f18474,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl6),
  inference(unit_resulting_resolution,[],[f1489,f4646])).
fof(f19193,plain,(
  $false | ($spl2 | $spl6 | $spl107)),
  inference(subsumption_resolution,[],[f19192,f18881])).
fof(f18881,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | ($spl6 | $spl107)),
  inference(forward_demodulation,[],[f18880,f1445])).
fof(f18880,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))))) | ($spl6 | $spl107)),
  inference(forward_demodulation,[],[f18879,f1445])).
fof(f18879,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))))) | ($spl6 | $spl107)),
  inference(forward_demodulation,[],[f18716,f1445])).
fof(f18716,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))))))))) | ($spl6 | $spl107)),
  inference(backward_demodulation,[],[f18475,f16644])).
fof(f19192,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f1645,f18474])).
fof(f1645,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl2),
  inference(cnf_transformation,[],[f1645_D])).
fof(f1645_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f19190,plain,(
  $false | ($spl6 | $spl85)),
  inference(subsumption_resolution,[],[f3889,f18896])).
fof(f19176,plain,(
  ( ! [X38] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38)))))) ) | $spl250),
  inference(cnf_transformation,[],[f19176_D])).
fof(f19176_D,plain,(
  ( ! [X38] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38)))))) ) <=> ~$spl250),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl250])])).
fof(f3886,plain,(
  ( ! [X34] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34)))) ) | $spl80),
  inference(cnf_transformation,[],[f3886_D])).
fof(f3886_D,plain,(
  ( ! [X34] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34)))) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f19175,plain,(
  ( ! [X39,X38] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38)))))) ) | ($spl6 | $spl108)),
  inference(forward_demodulation,[],[f16601,f18474])).
fof(f16601,plain,(
  ( ! [X39,X38] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X38))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38)))))) ) | $spl108),
  inference(forward_demodulation,[],[f16600,f240])).
fof(f16600,plain,(
  ( ! [X39,X38] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38)))))) ) | $spl108),
  inference(subsumption_resolution,[],[f16545,f294])).
fof(f16545,plain,(
  ( ! [X39,X38] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X39))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X38)))))) ) | $spl108),
  inference(superposition,[],[f1627,f4649])).
fof(f19174,plain,(
  $false | ($spl6 | $spl107)),
  inference(subsumption_resolution,[],[f19173,f18896])).
fof(f19173,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | ($spl6 | $spl107)),
  inference(forward_demodulation,[],[f19172,f1445])).
fof(f19172,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | ($spl6 | $spl107)),
  inference(forward_demodulation,[],[f19171,f1445])).
fof(f19171,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | ($spl6 | $spl107)),
  inference(forward_demodulation,[],[f16643,f18474])).
fof(f16643,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl107),
  inference(unit_resulting_resolution,[],[f4648,f294])).
fof(f19170,plain,(
  $false | ($spl6 | $spl107)),
  inference(subsumption_resolution,[],[f19169,f18896])).
fof(f19169,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | ($spl6 | $spl107)),
  inference(forward_demodulation,[],[f19168,f1445])).
fof(f19168,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | ($spl6 | $spl107)),
  inference(forward_demodulation,[],[f19167,f1445])).
fof(f19167,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | ($spl6 | $spl107)),
  inference(forward_demodulation,[],[f16641,f18474])).
fof(f16641,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl107),
  inference(unit_resulting_resolution,[],[f4648,f294])).
fof(f19164,plain,(
  ( ! [X64,X62,X63] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X63))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X62))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X63))) | s(bool,X64) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X62),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X64)) ) | $spl6),
  inference(forward_demodulation,[],[f17708,f18474])).
fof(f19162,plain,(
  $false | ($spl6 | $spl107)),
  inference(subsumption_resolution,[],[f18809,f18896])).
fof(f18809,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | ($spl6 | $spl107)),
  inference(forward_demodulation,[],[f18808,f1445])).
fof(f18808,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | ($spl6 | $spl107)),
  inference(forward_demodulation,[],[f18807,f1445])).
fof(f18807,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | ($spl6 | $spl107)),
  inference(forward_demodulation,[],[f18652,f1445])).
fof(f18652,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))))))) | ($spl6 | $spl107)),
  inference(backward_demodulation,[],[f18475,f4648])).
fof(f19014,plain,(
  ( ! [X66,X67] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X67))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X67))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X67)))))) ) | $spl246),
  inference(cnf_transformation,[],[f19014_D])).
fof(f19014_D,plain,(
  ( ! [X66,X67] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X67))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X67))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X67)))))) ) <=> ~$spl246),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl246])])).
fof(f19013,plain,(
  ( ! [X68,X66,X67] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X68))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X67))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X67))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X68))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X67)))))) ) | $spl6),
  inference(forward_demodulation,[],[f18944,f18474])).
fof(f18944,plain,(
  ( ! [X68,X66,X67] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X67))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X67))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X68))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X68))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X67)))))) ) | $spl6),
  inference(subsumption_resolution,[],[f18516,f294])).
fof(f18516,plain,(
  ( ! [X68,X66,X67] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X67))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X67))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X68))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X68))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X68))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X66),s('type.rat.rat',X67)))))) ) | $spl6),
  inference(superposition,[],[f1627,f4646])).
fof(f18897,plain,(
  $false | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f18896,f18805])).
fof(f18805,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | ($spl3 | $spl6)),
  inference(forward_demodulation,[],[f18650,f1445])).
fof(f18650,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | ($spl3 | $spl6)),
  inference(backward_demodulation,[],[f18475,f3922])).
fof(f18817,plain,(
  ( ! [X42] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X42)))))) ) | $spl242),
  inference(cnf_transformation,[],[f18817_D])).
fof(f18817_D,plain,(
  ( ! [X42] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X42)))))) ) <=> ~$spl242),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl242])])).
fof(f18818,plain,(
  ( ! [X43] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43)))) ) | $spl244),
  inference(cnf_transformation,[],[f18818_D])).
fof(f18818_D,plain,(
  ( ! [X43] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43)))) ) <=> ~$spl244),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl244])])).
fof(f18816,plain,(
  ( ! [X43,X42] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X42)))))) ) | ($spl3 | $spl6 | $spl108)),
  inference(forward_demodulation,[],[f18815,f18475])).
fof(f18815,plain,(
  ( ! [X43,X42] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X42)))))) ) | ($spl3 | $spl6 | $spl108)),
  inference(subsumption_resolution,[],[f18660,f16604])).
fof(f18660,plain,(
  ( ! [X43,X42] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X42))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X42))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X43))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X42)))))) ) | $spl6),
  inference(backward_demodulation,[],[f18475,f5918])).
fof(f17771,plain,(
  ( ! [X178,X176,X179] : (sP1('const.rat.rat_gre_2'(s('type.rat.rat',X176),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X178) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X176))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X179) | s(bool,X178) = s(bool,X179)) ) | $spl240),
  inference(cnf_transformation,[],[f17771_D])).
fof(f17771_D,plain,(
  ( ! [X178,X176,X179] : (sP1('const.rat.rat_gre_2'(s('type.rat.rat',X176),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X178) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X176))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X179) | s(bool,X178) = s(bool,X179)) ) <=> ~$spl240),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl240])])).
fof(f17770,plain,(
  ( ! [X177,X178,X176,X179] : (p(s(bool,X177)) | sP1('const.rat.rat_gre_2'(s('type.rat.rat',X176),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X178) | s(bool,X178) = s(bool,X179) | s(bool,'T_0') = s(bool,X179) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X176))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(subsumption_resolution,[],[f17525,f251])).
fof(f17525,plain,(
  ( ! [X177,X178,X176,X179] : (p(s(bool,X177)) | sP1('const.rat.rat_gre_2'(s('type.rat.rat',X176),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),X178) | s(bool,X178) = s(bool,X179) | s(bool,'T_0') = s(bool,X179) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X176))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X177)) )),
  inference(superposition,[],[f2288,f2306])).
fof(f17769,plain,(
  ( ! [X175,X174,X172] : (sP1(X174,'const.rat.rat_gre_2'(s('type.rat.rat',X172),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X172))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X175) | s(bool,X174) = s(bool,X175)) ) | $spl238),
  inference(cnf_transformation,[],[f17769_D])).
fof(f17769_D,plain,(
  ( ! [X175,X174,X172] : (sP1(X174,'const.rat.rat_gre_2'(s('type.rat.rat',X172),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X172))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X175) | s(bool,X174) = s(bool,X175)) ) <=> ~$spl238),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl238])])).
fof(f17768,plain,(
  ( ! [X175,X173,X174,X172] : (p(s(bool,X173)) | sP1(X174,'const.rat.rat_gre_2'(s('type.rat.rat',X172),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X174) = s(bool,X175) | s(bool,'T_0') = s(bool,X175) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X172))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(subsumption_resolution,[],[f17524,f251])).
fof(f17524,plain,(
  ( ! [X175,X173,X174,X172] : (p(s(bool,X173)) | sP1(X174,'const.rat.rat_gre_2'(s('type.rat.rat',X172),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X174) = s(bool,X175) | s(bool,'T_0') = s(bool,X175) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X172))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X173)) )),
  inference(superposition,[],[f2287,f2306])).
fof(f17765,plain,(
  ( ! [X163] : (sP1('const.rat.rat_gre_2'(s('type.rat.rat',X163),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X163))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl236),
  inference(cnf_transformation,[],[f17765_D])).
fof(f17765_D,plain,(
  ( ! [X163] : (sP1('const.rat.rat_gre_2'(s('type.rat.rat',X163),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X163))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl236),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl236])])).
fof(f17764,plain,(
  ( ! [X163,X164] : (p(s(bool,X164)) | sP1('const.rat.rat_gre_2'(s('type.rat.rat',X163),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X163))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl30),
  inference(subsumption_resolution,[],[f17521,f251])).
fof(f17521,plain,(
  ( ! [X163,X164] : (p(s(bool,X164)) | sP1('const.rat.rat_gre_2'(s('type.rat.rat',X163),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),'T_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X163))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X164)) ) | $spl30),
  inference(superposition,[],[f2237,f2306])).
fof(f17763,plain,(
  ( ! [X161] : (sP1('T_0','const.rat.rat_gre_2'(s('type.rat.rat',X161),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X161))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl234),
  inference(cnf_transformation,[],[f17763_D])).
fof(f17763_D,plain,(
  ( ! [X161] : (sP1('T_0','const.rat.rat_gre_2'(s('type.rat.rat',X161),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X161))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl234),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl234])])).
fof(f17762,plain,(
  ( ! [X161,X162] : (p(s(bool,X162)) | sP1('T_0','const.rat.rat_gre_2'(s('type.rat.rat',X161),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X161))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl26),
  inference(subsumption_resolution,[],[f17520,f251])).
fof(f17520,plain,(
  ( ! [X161,X162] : (p(s(bool,X162)) | sP1('T_0','const.rat.rat_gre_2'(s('type.rat.rat',X161),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X161))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X162)) ) | $spl26),
  inference(superposition,[],[f2233,f2306])).
fof(f17761,plain,(
  ( ! [X159,X157,X160] : (s(bool,X159) != s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X157),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X157))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X160) | s(bool,X159) = s(bool,X160)) ) | $spl232),
  inference(cnf_transformation,[],[f17761_D])).
fof(f17761_D,plain,(
  ( ! [X159,X157,X160] : (s(bool,X159) != s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X157),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X157))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X160) | s(bool,X159) = s(bool,X160)) ) <=> ~$spl232),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl232])])).
fof(f17760,plain,(
  ( ! [X158,X159,X157,X160] : (p(s(bool,X158)) | s(bool,X159) != s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X157),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X159) = s(bool,X160) | s(bool,'T_0') = s(bool,X160) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X157))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(subsumption_resolution,[],[f17519,f251])).
fof(f17519,plain,(
  ( ! [X158,X159,X157,X160] : (p(s(bool,X158)) | s(bool,X159) != s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X157),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X159) = s(bool,X160) | s(bool,'T_0') = s(bool,X160) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X157))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X158)) )),
  inference(superposition,[],[f1924,f2306])).
fof(f17701,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl158),
  inference(cnf_transformation,[],[f17701_D])).
fof(f17701_D,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f17753,plain,(
  ( ! [X10,X11] : (p(s(bool,X11)) | s(bool,'F_0') = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(subsumption_resolution,[],[f17480,f251])).
fof(f17480,plain,(
  ( ! [X10,X11] : (p(s(bool,X11)) | s(bool,'F_0') = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f256,f2306])).
fof(f17752,plain,(
  ( ! [X262] : (sP1('F_0',f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X262),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X262))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl230),
  inference(cnf_transformation,[],[f17752_D])).
fof(f17752_D,plain,(
  ( ! [X262] : (sP1('F_0',f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X262),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X262))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl230),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl230])])).
fof(f17581,plain,(
  ( ! [X261,X262] : (sP1('F_0',f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X262),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X261) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X262))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl98),
  inference(duplicate_literal_removal,[],[f17465])).
fof(f17465,plain,(
  ( ! [X261,X262] : (sP1('F_0',f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X262),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X261) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X262))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X261)) ) | $spl98),
  inference(superposition,[],[f16361,f2306])).
fof(f16361,plain,(
  ( ! [X0] : (sP1('F_0',f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl98),
  inference(superposition,[],[f16310,f241])).
fof(f16310,plain,(
  sP1('F_0',f(s(bool,'F_0'))) | $spl98),
  inference(unit_resulting_resolution,[],[f424,f15681])).
fof(f15681,plain,(
  ( ! [X6] : (sP1(X6,f(s(bool,'F_0'))) | p(s(bool,X6))) ) | $spl98),
  inference(subsumption_resolution,[],[f15566,f233])).
fof(f15566,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,X6)) | sP1(X6,f(s(bool,'F_0')))) ) | $spl98),
  inference(superposition,[],[f321,f4046])).
fof(f17751,plain,(
  ( ! [X260] : (sP1(f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X260),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X260))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl228),
  inference(cnf_transformation,[],[f17751_D])).
fof(f17751_D,plain,(
  ( ! [X260] : (sP1(f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X260),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X260))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl228),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl228])])).
fof(f17582,plain,(
  ( ! [X259,X260] : (sP1(f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X260),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s(bool,'T_0') = s(bool,X259) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X260))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl98),
  inference(duplicate_literal_removal,[],[f17464])).
fof(f17464,plain,(
  ( ! [X259,X260] : (sP1(f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X260),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s(bool,'T_0') = s(bool,X259) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X260))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X259)) ) | $spl98),
  inference(superposition,[],[f16294,f2306])).
fof(f16294,plain,(
  ( ! [X0] : (sP1(f(s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl98),
  inference(superposition,[],[f16237,f241])).
fof(f16237,plain,(
  sP1(f(s(bool,'F_0')),'F_0') | $spl98),
  inference(unit_resulting_resolution,[],[f424,f15680])).
fof(f15680,plain,(
  ( ! [X5] : (sP1(f(s(bool,'F_0')),X5) | p(s(bool,X5))) ) | $spl98),
  inference(subsumption_resolution,[],[f15565,f233])).
fof(f15565,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,X5)) | sP1(f(s(bool,'F_0')),X5)) ) | $spl98),
  inference(superposition,[],[f318,f4046])).
fof(f17750,plain,(
  ( ! [X258] : (~sP5('F_0',f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X258),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X258))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl226),
  inference(cnf_transformation,[],[f17750_D])).
fof(f17750_D,plain,(
  ( ! [X258] : (~sP5('F_0',f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X258),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X258))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl226),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl226])])).
fof(f17583,plain,(
  ( ! [X257,X258] : (~sP5('F_0',f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X258),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0') | s(bool,'T_0') = s(bool,X257) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X258))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl98),
  inference(duplicate_literal_removal,[],[f17463])).
fof(f17463,plain,(
  ( ! [X257,X258] : (~sP5('F_0',f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X258),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0') | s(bool,'T_0') = s(bool,X257) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X258))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X257)) ) | $spl98),
  inference(superposition,[],[f16037,f2306])).
fof(f16037,plain,(
  ( ! [X0] : (~sP5('F_0',f(s(bool,X0)),'T_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl98),
  inference(superposition,[],[f15528,f241])).
fof(f15528,plain,(
  ~sP5('F_0',f(s(bool,'F_0')),'T_0') | $spl98),
  inference(unit_resulting_resolution,[],[f424,f4046,f363])).
fof(f17749,plain,(
  ( ! [X255,X256] : (sP0(f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X255),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),X256) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X255))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl224),
  inference(cnf_transformation,[],[f17749_D])).
fof(f17749_D,plain,(
  ( ! [X255,X256] : (sP0(f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X255),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),X256) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X255))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl224),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl224])])).
fof(f17584,plain,(
  ( ! [X255,X254,X256] : (sP0(f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X255),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),X256) | s(bool,'T_0') = s(bool,X254) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X255))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl98),
  inference(duplicate_literal_removal,[],[f17462])).
fof(f17462,plain,(
  ( ! [X255,X254,X256] : (sP0(f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X255),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),X256) | s(bool,'T_0') = s(bool,X254) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X255))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X254)) ) | $spl98),
  inference(superposition,[],[f15768,f2306])).
fof(f15768,plain,(
  ( ! [X0,X1] : (sP0(f(s(bool,X0)),X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl98),
  inference(superposition,[],[f15679,f241])).
fof(f15679,plain,(
  ( ! [X4] : (sP0(f(s(bool,'F_0')),X4)) ) | $spl98),
  inference(subsumption_resolution,[],[f15564,f233])).
fof(f15564,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | sP0(f(s(bool,'F_0')),X4)) ) | $spl98),
  inference(superposition,[],[f303,f4046])).
fof(f17748,plain,(
  ( ! [X253,X252] : (sP0(X253,f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X252),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X252))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl222),
  inference(cnf_transformation,[],[f17748_D])).
fof(f17748_D,plain,(
  ( ! [X253,X252] : (sP0(X253,f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X252),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X252))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl222),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl222])])).
fof(f17585,plain,(
  ( ! [X253,X251,X252] : (sP0(X253,f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X252),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X251) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X252))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl98),
  inference(duplicate_literal_removal,[],[f17461])).
fof(f17461,plain,(
  ( ! [X253,X251,X252] : (sP0(X253,f(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X252),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X251) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X252))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X251)) ) | $spl98),
  inference(superposition,[],[f15751,f2306])).
fof(f15751,plain,(
  ( ! [X0,X1] : (sP0(X1,f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl98),
  inference(superposition,[],[f15678,f241])).
fof(f15678,plain,(
  ( ! [X3] : (sP0(X3,f(s(bool,'F_0')))) ) | $spl98),
  inference(subsumption_resolution,[],[f15563,f233])).
fof(f15563,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | sP0(X3,f(s(bool,'F_0')))) ) | $spl98),
  inference(superposition,[],[f302,f4046])).
fof(f17747,plain,(
  ( ! [X250] : (p(s(bool,g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X250),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X250))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl220),
  inference(cnf_transformation,[],[f17747_D])).
fof(f17747_D,plain,(
  ( ! [X250] : (p(s(bool,g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X250),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X250))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl220),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl220])])).
fof(f17586,plain,(
  ( ! [X249,X250] : (p(s(bool,g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X250),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | s(bool,'T_0') = s(bool,X249) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X250))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17460])).
fof(f17460,plain,(
  ( ! [X249,X250] : (p(s(bool,g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X250),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | s(bool,'T_0') = s(bool,X249) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X250))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X249)) ) | $spl90),
  inference(superposition,[],[f10290,f2306])).
fof(f10290,plain,(
  ( ! [X1] : (p(s(bool,g(s(bool,X1)))) | s(bool,'T_0') = s(bool,X1)) ) | $spl90),
  inference(trivial_inequality_removal,[],[f10203])).
fof(f10203,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'T_0') | p(s(bool,g(s(bool,X1)))) | s(bool,'T_0') = s(bool,X1)) ) | $spl90),
  inference(superposition,[],[f251,f4083])).
fof(f4083,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f4041,f241])).
fof(f17746,plain,(
  ( ! [X248] : (~sP10(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X248),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','T_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X248))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl218),
  inference(cnf_transformation,[],[f17746_D])).
fof(f17746_D,plain,(
  ( ! [X248] : (~sP10(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X248),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','T_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X248))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl218])])).
fof(f17587,plain,(
  ( ! [X248,X247] : (~sP10(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X248),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','T_0') | s(bool,'T_0') = s(bool,X247) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X248))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17459])).
fof(f17459,plain,(
  ( ! [X248,X247] : (~sP10(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X248),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','T_0') | s(bool,'T_0') = s(bool,X247) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X248))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X247)) ) | $spl90),
  inference(superposition,[],[f10046,f2306])).
fof(f10046,plain,(
  ( ! [X0] : (~sP10(g(s(bool,X0)),'F_0','T_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f9978,f241])).
fof(f9978,plain,(
  ~sP10(g(s(bool,'F_0')),'F_0','T_0') | $spl90),
  inference(unit_resulting_resolution,[],[f233,f424,f9962,f404])).
fof(f9962,plain,(
  ~sP11(g(s(bool,'F_0')),'F_0','T_0') | $spl90),
  inference(unit_resulting_resolution,[],[f233,f424,f4156])).
fof(f4156,plain,(
  ( ! [X31,X32] : (~sP11(g(s(bool,'F_0')),X32,X31) | p(s(bool,X32)) | ~p(s(bool,X31))) ) | $spl90),
  inference(subsumption_resolution,[],[f4116,f233])).
fof(f4116,plain,(
  ( ! [X31,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X31)) | p(s(bool,X32)) | ~sP11(g(s(bool,'F_0')),X32,X31)) ) | $spl90),
  inference(superposition,[],[f412,f4041])).
fof(f17745,plain,(
  ( ! [X246] : (~sP11(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X246),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','T_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X246))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl216),
  inference(cnf_transformation,[],[f17745_D])).
fof(f17745_D,plain,(
  ( ! [X246] : (~sP11(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X246),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','T_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X246))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl216])])).
fof(f17588,plain,(
  ( ! [X246,X245] : (~sP11(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X246),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','T_0') | s(bool,'T_0') = s(bool,X245) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X246))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17458])).
fof(f17458,plain,(
  ( ! [X246,X245] : (~sP11(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X246),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','T_0') | s(bool,'T_0') = s(bool,X245) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X246))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X245)) ) | $spl90),
  inference(superposition,[],[f9980,f2306])).
fof(f9980,plain,(
  ( ! [X0] : (~sP11(g(s(bool,X0)),'F_0','T_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f9962,f241])).
fof(f17744,plain,(
  ( ! [X244] : (~sP11('T_0','F_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X244),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X244))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl214),
  inference(cnf_transformation,[],[f17744_D])).
fof(f17744_D,plain,(
  ( ! [X244] : (~sP11('T_0','F_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X244),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X244))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl214),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl214])])).
fof(f17589,plain,(
  ( ! [X243,X244] : (~sP11('T_0','F_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X244),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X243) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X244))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17457])).
fof(f17457,plain,(
  ( ! [X243,X244] : (~sP11('T_0','F_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X244),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X243) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X244))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X243)) ) | $spl90),
  inference(superposition,[],[f9858,f2306])).
fof(f9858,plain,(
  ( ! [X0] : (~sP11('T_0','F_0',g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f9831,f241])).
fof(f9831,plain,(
  ~sP11('T_0','F_0',g(s(bool,'F_0'))) | $spl90),
  inference(unit_resulting_resolution,[],[f9786,f400])).
fof(f9786,plain,(
  ~sP10('T_0','F_0',g(s(bool,'F_0'))) | $spl90),
  inference(unit_resulting_resolution,[],[f424,f233,f4153])).
fof(f4153,plain,(
  ( ! [X26,X25] : (~sP10(X26,X25,g(s(bool,'F_0'))) | ~p(s(bool,X26)) | p(s(bool,X25))) ) | $spl90),
  inference(subsumption_resolution,[],[f4113,f233])).
fof(f4113,plain,(
  ( ! [X26,X25] : (~p(s(bool,'T_0')) | p(s(bool,X25)) | ~p(s(bool,X26)) | ~sP10(X26,X25,g(s(bool,'F_0')))) ) | $spl90),
  inference(superposition,[],[f405,f4041])).
fof(f17743,plain,(
  ( ! [X242] : (~sP10('T_0','F_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X242),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X242))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl212),
  inference(cnf_transformation,[],[f17743_D])).
fof(f17743_D,plain,(
  ( ! [X242] : (~sP10('T_0','F_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X242),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X242))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl212])])).
fof(f17590,plain,(
  ( ! [X241,X242] : (~sP10('T_0','F_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X242),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X241) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X242))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17456])).
fof(f17456,plain,(
  ( ! [X241,X242] : (~sP10('T_0','F_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X242),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X241) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X242))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X241)) ) | $spl90),
  inference(superposition,[],[f9832,f2306])).
fof(f9832,plain,(
  ( ! [X0] : (~sP10('T_0','F_0',g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f9786,f241])).
fof(f17742,plain,(
  ( ! [X240] : (~sP9(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X240),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','F_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X240))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl210),
  inference(cnf_transformation,[],[f17742_D])).
fof(f17742_D,plain,(
  ( ! [X240] : (~sP9(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X240),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','F_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X240))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl210),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl210])])).
fof(f17591,plain,(
  ( ! [X239,X240] : (~sP9(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X240),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','F_0') | s(bool,'T_0') = s(bool,X239) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X240))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17455])).
fof(f17455,plain,(
  ( ! [X239,X240] : (~sP9(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X240),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','F_0') | s(bool,'T_0') = s(bool,X239) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X240))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X239)) ) | $spl90),
  inference(superposition,[],[f9630,f2306])).
fof(f9630,plain,(
  ( ! [X0] : (~sP9(g(s(bool,X0)),'F_0','F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f9617,f241])).
fof(f9617,plain,(
  ~sP9(g(s(bool,'F_0')),'F_0','F_0') | $spl90),
  inference(unit_resulting_resolution,[],[f9558,f383])).
fof(f9558,plain,(
  ~sP8(g(s(bool,'F_0')),'F_0','F_0') | $spl90),
  inference(unit_resulting_resolution,[],[f424,f424,f4149])).
fof(f4149,plain,(
  ( ! [X17,X18] : (~sP8(g(s(bool,'F_0')),X17,X18) | p(s(bool,X18)) | p(s(bool,X17))) ) | $spl90),
  inference(subsumption_resolution,[],[f4109,f233])).
fof(f4109,plain,(
  ( ! [X17,X18] : (~p(s(bool,'T_0')) | p(s(bool,X17)) | p(s(bool,X18)) | ~sP8(g(s(bool,'F_0')),X17,X18)) ) | $spl90),
  inference(superposition,[],[f388,f4041])).
fof(f17741,plain,(
  ( ! [X238] : (~sP8(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X238),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','F_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X238))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl208),
  inference(cnf_transformation,[],[f17741_D])).
fof(f17741_D,plain,(
  ( ! [X238] : (~sP8(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X238),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','F_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X238))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl208])])).
fof(f17592,plain,(
  ( ! [X237,X238] : (~sP8(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X238),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','F_0') | s(bool,'T_0') = s(bool,X237) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X238))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17454])).
fof(f17454,plain,(
  ( ! [X237,X238] : (~sP8(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X238),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0','F_0') | s(bool,'T_0') = s(bool,X237) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X238))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X237)) ) | $spl90),
  inference(superposition,[],[f9618,f2306])).
fof(f9618,plain,(
  ( ! [X0] : (~sP8(g(s(bool,X0)),'F_0','F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f9558,f241])).
fof(f17740,plain,(
  ( ! [X236] : (~sP7('F_0','T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X236),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X236))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl206),
  inference(cnf_transformation,[],[f17740_D])).
fof(f17740_D,plain,(
  ( ! [X236] : (~sP7('F_0','T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X236),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X236))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl206),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl206])])).
fof(f17593,plain,(
  ( ! [X235,X236] : (~sP7('F_0','T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X236),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X235) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X236))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17453])).
fof(f17453,plain,(
  ( ! [X235,X236] : (~sP7('F_0','T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X236),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X235) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X236))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X235)) ) | $spl90),
  inference(superposition,[],[f9413,f2306])).
fof(f9413,plain,(
  ( ! [X0] : (~sP7('F_0','T_0',g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f9402,f241])).
fof(f9402,plain,(
  ~sP7('F_0','T_0',g(s(bool,'F_0'))) | $spl90),
  inference(unit_resulting_resolution,[],[f9339,f364])).
fof(f9339,plain,(
  ~sP6('T_0',g(s(bool,'F_0')),'F_0') | $spl90),
  inference(unit_resulting_resolution,[],[f233,f424,f4147])).
fof(f4147,plain,(
  ( ! [X14,X13] : (~sP6(X13,g(s(bool,'F_0')),X14) | p(s(bool,X14)) | ~p(s(bool,X13))) ) | $spl90),
  inference(subsumption_resolution,[],[f4107,f233])).
fof(f4107,plain,(
  ( ! [X14,X13] : (~p(s(bool,'T_0')) | ~p(s(bool,X13)) | p(s(bool,X14)) | ~sP6(X13,g(s(bool,'F_0')),X14)) ) | $spl90),
  inference(superposition,[],[f371,f4041])).
fof(f17739,plain,(
  ( ! [X234] : (~sP6('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X234),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X234))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl204),
  inference(cnf_transformation,[],[f17739_D])).
fof(f17739_D,plain,(
  ( ! [X234] : (~sP6('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X234),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X234))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl204),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl204])])).
fof(f17594,plain,(
  ( ! [X233,X234] : (~sP6('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X234),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s(bool,'T_0') = s(bool,X233) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X234))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17452])).
fof(f17452,plain,(
  ( ! [X233,X234] : (~sP6('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X234),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s(bool,'T_0') = s(bool,X233) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X234))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X233)) ) | $spl90),
  inference(superposition,[],[f9403,f2306])).
fof(f9403,plain,(
  ( ! [X0] : (~sP6('T_0',g(s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f9339,f241])).
fof(f17738,plain,(
  ( ! [X232] : (~sP5('T_0','F_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X232),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X232))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl202),
  inference(cnf_transformation,[],[f17738_D])).
fof(f17738_D,plain,(
  ( ! [X232] : (~sP5('T_0','F_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X232),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X232))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl202])])).
fof(f17595,plain,(
  ( ! [X231,X232] : (~sP5('T_0','F_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X232),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X231) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X232))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17451])).
fof(f17451,plain,(
  ( ! [X231,X232] : (~sP5('T_0','F_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X232),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X231) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X232))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X231)) ) | $spl90),
  inference(superposition,[],[f9146,f2306])).
fof(f9146,plain,(
  ( ! [X0] : (~sP5('T_0','F_0',g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f9136,f241])).
fof(f9136,plain,(
  ~sP5('T_0','F_0',g(s(bool,'F_0'))) | $spl90),
  inference(unit_resulting_resolution,[],[f9058,f343])).
fof(f9058,plain,(
  ~sP4('T_0',g(s(bool,'F_0')),'F_0') | $spl90),
  inference(unit_resulting_resolution,[],[f233,f424,f4145])).
fof(f4145,plain,(
  ( ! [X10,X9] : (~sP4(X9,g(s(bool,'F_0')),X10) | p(s(bool,X10)) | ~p(s(bool,X9))) ) | $spl90),
  inference(subsumption_resolution,[],[f4105,f233])).
fof(f4105,plain,(
  ( ! [X10,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X9)) | p(s(bool,X10)) | ~sP4(X9,g(s(bool,'F_0')),X10)) ) | $spl90),
  inference(superposition,[],[f348,f4041])).
fof(f17737,plain,(
  ( ! [X230] : (~sP4('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X230),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X230))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl200),
  inference(cnf_transformation,[],[f17737_D])).
fof(f17737_D,plain,(
  ( ! [X230] : (~sP4('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X230),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X230))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl200),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl200])])).
fof(f17596,plain,(
  ( ! [X229,X230] : (~sP4('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X230),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s(bool,'T_0') = s(bool,X229) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X230))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17450])).
fof(f17450,plain,(
  ( ! [X229,X230] : (~sP4('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X230),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s(bool,'T_0') = s(bool,X229) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X230))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X229)) ) | $spl90),
  inference(superposition,[],[f9137,f2306])).
fof(f9137,plain,(
  ( ! [X0] : (~sP4('T_0',g(s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f9058,f241])).
fof(f17736,plain,(
  ( ! [X228] : (~sP5('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X228),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X228))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl198),
  inference(cnf_transformation,[],[f17736_D])).
fof(f17736_D,plain,(
  ( ! [X228] : (~sP5('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X228),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X228))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl198])])).
fof(f17597,plain,(
  ( ! [X227,X228] : (~sP5('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X228),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s(bool,'T_0') = s(bool,X227) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X228))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17449])).
fof(f17449,plain,(
  ( ! [X227,X228] : (~sP5('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X228),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s(bool,'T_0') = s(bool,X227) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X228))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X227)) ) | $spl90),
  inference(superposition,[],[f8946,f2306])).
fof(f8946,plain,(
  ( ! [X0] : (~sP5('T_0',g(s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f8934,f241])).
fof(f8934,plain,(
  ~sP5('T_0',g(s(bool,'F_0')),'F_0') | $spl90),
  inference(unit_resulting_resolution,[],[f233,f424,f4144])).
fof(f4144,plain,(
  ( ! [X8,X7] : (~sP5(X7,g(s(bool,'F_0')),X8) | p(s(bool,X8)) | ~p(s(bool,X7))) ) | $spl90),
  inference(subsumption_resolution,[],[f4104,f233])).
fof(f4104,plain,(
  ( ! [X8,X7] : (~p(s(bool,'T_0')) | ~p(s(bool,X7)) | p(s(bool,X8)) | ~sP5(X7,g(s(bool,'F_0')),X8)) ) | $spl90),
  inference(superposition,[],[f344,f4041])).
fof(f17735,plain,(
  ( ! [X225,X226] : (sP11(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X225),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0',X226) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X225))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl196),
  inference(cnf_transformation,[],[f17735_D])).
fof(f17735_D,plain,(
  ( ! [X225,X226] : (sP11(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X225),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0',X226) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X225))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl196),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl196])])).
fof(f17598,plain,(
  ( ! [X225,X226,X224] : (sP11(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X225),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0',X226) | s(bool,'T_0') = s(bool,X224) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X225))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17448])).
fof(f17448,plain,(
  ( ! [X225,X226,X224] : (sP11(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X225),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0',X226) | s(bool,'T_0') = s(bool,X224) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X225))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X224)) ) | $spl90),
  inference(superposition,[],[f5457,f2306])).
fof(f5457,plain,(
  ( ! [X0,X1] : (sP11(g(s(bool,X0)),'T_0',X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f5447,f241])).
fof(f5447,plain,(
  ( ! [X0] : (sP11(g(s(bool,'F_0')),'T_0',X0)) ) | $spl90),
  inference(unit_resulting_resolution,[],[f233,f4155])).
fof(f4155,plain,(
  ( ! [X30,X29] : (sP11(g(s(bool,'F_0')),X29,X30) | ~p(s(bool,X29))) ) | $spl90),
  inference(subsumption_resolution,[],[f4115,f233])).
fof(f4115,plain,(
  ( ! [X30,X29] : (~p(s(bool,'T_0')) | ~p(s(bool,X29)) | sP11(g(s(bool,'F_0')),X29,X30)) ) | $spl90),
  inference(superposition,[],[f411,f4041])).
fof(f17734,plain,(
  ( ! [X222,X223] : (sP11(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X222),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),X223,'F_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X222))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl194),
  inference(cnf_transformation,[],[f17734_D])).
fof(f17734_D,plain,(
  ( ! [X222,X223] : (sP11(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X222),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),X223,'F_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X222))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f17599,plain,(
  ( ! [X222,X223,X221] : (sP11(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X222),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),X223,'F_0') | s(bool,'T_0') = s(bool,X221) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X222))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17447])).
fof(f17447,plain,(
  ( ! [X222,X223,X221] : (sP11(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X222),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),X223,'F_0') | s(bool,'T_0') = s(bool,X221) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X222))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X221)) ) | $spl90),
  inference(superposition,[],[f5296,f2306])).
fof(f5296,plain,(
  ( ! [X0,X1] : (sP11(g(s(bool,X0)),X1,'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f5286,f241])).
fof(f5286,plain,(
  ( ! [X0] : (sP11(g(s(bool,'F_0')),X0,'F_0')) ) | $spl90),
  inference(unit_resulting_resolution,[],[f424,f4154])).
fof(f4154,plain,(
  ( ! [X28,X27] : (sP11(g(s(bool,'F_0')),X28,X27) | p(s(bool,X27))) ) | $spl90),
  inference(subsumption_resolution,[],[f4114,f233])).
fof(f4114,plain,(
  ( ! [X28,X27] : (~p(s(bool,'T_0')) | p(s(bool,X27)) | sP11(g(s(bool,'F_0')),X28,X27)) ) | $spl90),
  inference(superposition,[],[f410,f4041])).
fof(f17733,plain,(
  ( ! [X220,X219] : (sP9(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X219),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0',X220) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X219))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl192),
  inference(cnf_transformation,[],[f17733_D])).
fof(f17733_D,plain,(
  ( ! [X220,X219] : (sP9(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X219),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0',X220) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X219))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl192),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl192])])).
fof(f17600,plain,(
  ( ! [X218,X220,X219] : (sP9(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X219),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0',X220) | s(bool,'T_0') = s(bool,X218) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X219))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17446])).
fof(f17446,plain,(
  ( ! [X218,X220,X219] : (sP9(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X219),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0',X220) | s(bool,'T_0') = s(bool,X218) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X219))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X218)) ) | $spl90),
  inference(superposition,[],[f5256,f2306])).
fof(f5256,plain,(
  ( ! [X0,X1] : (sP9(g(s(bool,X0)),'T_0',X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f5246,f241])).
fof(f5246,plain,(
  ( ! [X0] : (sP9(g(s(bool,'F_0')),'T_0',X0)) ) | $spl90),
  inference(unit_resulting_resolution,[],[f233,f4151])).
fof(f4151,plain,(
  ( ! [X21,X22] : (sP9(g(s(bool,'F_0')),X21,X22) | ~p(s(bool,X21))) ) | $spl90),
  inference(subsumption_resolution,[],[f4111,f233])).
fof(f4111,plain,(
  ( ! [X21,X22] : (~p(s(bool,'T_0')) | ~p(s(bool,X21)) | sP9(g(s(bool,'F_0')),X21,X22)) ) | $spl90),
  inference(superposition,[],[f394,f4041])).
fof(f17732,plain,(
  ( ! [X216,X217] : (sP9(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X216),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),X217,'T_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X216))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl190),
  inference(cnf_transformation,[],[f17732_D])).
fof(f17732_D,plain,(
  ( ! [X216,X217] : (sP9(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X216),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),X217,'T_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X216))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl190),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl190])])).
fof(f17601,plain,(
  ( ! [X216,X215,X217] : (sP9(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X216),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),X217,'T_0') | s(bool,'T_0') = s(bool,X215) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X216))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17445])).
fof(f17445,plain,(
  ( ! [X216,X215,X217] : (sP9(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X216),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),X217,'T_0') | s(bool,'T_0') = s(bool,X215) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X216))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X215)) ) | $spl90),
  inference(superposition,[],[f5222,f2306])).
fof(f5222,plain,(
  ( ! [X0,X1] : (sP9(g(s(bool,X0)),X1,'T_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f5212,f241])).
fof(f5212,plain,(
  ( ! [X0] : (sP9(g(s(bool,'F_0')),X0,'T_0')) ) | $spl90),
  inference(unit_resulting_resolution,[],[f233,f4150])).
fof(f4150,plain,(
  ( ! [X19,X20] : (sP9(g(s(bool,'F_0')),X20,X19) | ~p(s(bool,X19))) ) | $spl90),
  inference(subsumption_resolution,[],[f4110,f233])).
fof(f4110,plain,(
  ( ! [X19,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,X19)) | sP9(g(s(bool,'F_0')),X20,X19)) ) | $spl90),
  inference(superposition,[],[f393,f4041])).
fof(f17731,plain,(
  ( ! [X214] : (sP1('F_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X214),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X214))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl188),
  inference(cnf_transformation,[],[f17731_D])).
fof(f17731_D,plain,(
  ( ! [X214] : (sP1('F_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X214),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X214))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl188])])).
fof(f17602,plain,(
  ( ! [X213,X214] : (sP1('F_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X214),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X213) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X214))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17444])).
fof(f17444,plain,(
  ( ! [X213,X214] : (sP1('F_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X214),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X213) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X214))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X213)) ) | $spl90),
  inference(superposition,[],[f4957,f2306])).
fof(f4957,plain,(
  ( ! [X0] : (sP1('F_0',g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f4949,f241])).
fof(f4949,plain,(
  sP1('F_0',g(s(bool,'F_0'))) | $spl90),
  inference(unit_resulting_resolution,[],[f424,f4143])).
fof(f4143,plain,(
  ( ! [X6] : (sP1(X6,g(s(bool,'F_0'))) | p(s(bool,X6))) ) | $spl90),
  inference(subsumption_resolution,[],[f4103,f233])).
fof(f4103,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,X6)) | sP1(X6,g(s(bool,'F_0')))) ) | $spl90),
  inference(superposition,[],[f321,f4041])).
fof(f17730,plain,(
  ( ! [X212,X211] : (sP1(X212,g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X211))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,X212))) ) | $spl186),
  inference(cnf_transformation,[],[f17730_D])).
fof(f17730_D,plain,(
  ( ! [X212,X211] : (sP1(X212,g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X211))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,X212))) ) <=> ~$spl186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl186])])).
fof(f17603,plain,(
  ( ! [X212,X210,X211] : (sP1(X212,g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | p(s(bool,X212)) | s(bool,'T_0') = s(bool,X210) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X211))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17443])).
fof(f17443,plain,(
  ( ! [X212,X210,X211] : (sP1(X212,g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X211),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | p(s(bool,X212)) | s(bool,'T_0') = s(bool,X210) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X211))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X210)) ) | $spl90),
  inference(superposition,[],[f4950,f2306])).
fof(f4950,plain,(
  ( ! [X0,X1] : (sP1(X1,g(s(bool,X0))) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f4143,f241])).
fof(f17729,plain,(
  ( ! [X209] : (sP1(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X209),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X209))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl184),
  inference(cnf_transformation,[],[f17729_D])).
fof(f17729_D,plain,(
  ( ! [X209] : (sP1(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X209),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X209))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl184])])).
fof(f17604,plain,(
  ( ! [X208,X209] : (sP1(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X209),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s(bool,'T_0') = s(bool,X208) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X209))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17442])).
fof(f17442,plain,(
  ( ! [X208,X209] : (sP1(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X209),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s(bool,'T_0') = s(bool,X208) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X209))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X208)) ) | $spl90),
  inference(superposition,[],[f4922,f2306])).
fof(f4922,plain,(
  ( ! [X0] : (sP1(g(s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f4914,f241])).
fof(f4914,plain,(
  sP1(g(s(bool,'F_0')),'F_0') | $spl90),
  inference(unit_resulting_resolution,[],[f424,f4142])).
fof(f4142,plain,(
  ( ! [X5] : (sP1(g(s(bool,'F_0')),X5) | p(s(bool,X5))) ) | $spl90),
  inference(subsumption_resolution,[],[f4102,f233])).
fof(f4102,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,X5)) | sP1(g(s(bool,'F_0')),X5)) ) | $spl90),
  inference(superposition,[],[f318,f4041])).
fof(f17728,plain,(
  ( ! [X206,X207] : (sP1(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),X207) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X206))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,X207))) ) | $spl182),
  inference(cnf_transformation,[],[f17728_D])).
fof(f17728_D,plain,(
  ( ! [X206,X207] : (sP1(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),X207) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X206))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,X207))) ) <=> ~$spl182),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl182])])).
fof(f17605,plain,(
  ( ! [X206,X207,X205] : (sP1(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),X207) | p(s(bool,X207)) | s(bool,'T_0') = s(bool,X205) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X206))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17441])).
fof(f17441,plain,(
  ( ! [X206,X207,X205] : (sP1(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X206),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),X207) | p(s(bool,X207)) | s(bool,'T_0') = s(bool,X205) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X206))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X205)) ) | $spl90),
  inference(superposition,[],[f4915,f2306])).
fof(f4915,plain,(
  ( ! [X0,X1] : (sP1(g(s(bool,X0)),X1) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f4142,f241])).
fof(f17727,plain,(
  ( ! [X204] : (~sP3('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X204),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X204))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl180),
  inference(cnf_transformation,[],[f17727_D])).
fof(f17727_D,plain,(
  ( ! [X204] : (~sP3('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X204),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X204))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f17606,plain,(
  ( ! [X204,X203] : (~sP3('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X204),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s(bool,'T_0') = s(bool,X203) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X204))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17440])).
fof(f17440,plain,(
  ( ! [X204,X203] : (~sP3('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X204),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'F_0') | s(bool,'T_0') = s(bool,X203) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X204))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X203)) ) | $spl90),
  inference(superposition,[],[f4665,f2306])).
fof(f4665,plain,(
  ( ! [X0] : (~sP3('T_0',g(s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f4220,f241])).
fof(f4220,plain,(
  ~sP3('T_0',g(s(bool,'F_0')),'F_0') | $spl90),
  inference(unit_resulting_resolution,[],[f424,f443,f432,f4081,f347])).
fof(f4081,plain,(
  ~sP5('F_0','T_0',g(s(bool,'F_0'))) | $spl90),
  inference(unit_resulting_resolution,[],[f424,f4041,f363])).
fof(f17726,plain,(
  ( ! [X202] : (sP4('T_0','T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X202),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X202))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl178),
  inference(cnf_transformation,[],[f17726_D])).
fof(f17726_D,plain,(
  ( ! [X202] : (sP4('T_0','T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X202),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X202))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f17607,plain,(
  ( ! [X202,X201] : (sP4('T_0','T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X202),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X201) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X202))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17439])).
fof(f17439,plain,(
  ( ! [X202,X201] : (sP4('T_0','T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X202),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X201) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X202))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X201)) ) | $spl90),
  inference(superposition,[],[f4653,f2306])).
fof(f4653,plain,(
  ( ! [X0] : (sP4('T_0','T_0',g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f4211,f241])).
fof(f4211,plain,(
  sP4('T_0','T_0',g(s(bool,'F_0'))) | $spl90),
  inference(unit_resulting_resolution,[],[f4080,f343])).
fof(f4080,plain,(
  sP5('T_0',g(s(bool,'F_0')),'T_0') | $spl90),
  inference(unit_resulting_resolution,[],[f233,f4041,f361])).
fof(f17725,plain,(
  ( ! [X200] : (~sP3(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X200),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0','F_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X200))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl176),
  inference(cnf_transformation,[],[f17725_D])).
fof(f17725_D,plain,(
  ( ! [X200] : (~sP3(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X200),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0','F_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X200))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl176),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl176])])).
fof(f17608,plain,(
  ( ! [X200,X199] : (~sP3(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X200),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0','F_0') | s(bool,'T_0') = s(bool,X199) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X200))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17438])).
fof(f17438,plain,(
  ( ! [X200,X199] : (~sP3(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X200),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0','F_0') | s(bool,'T_0') = s(bool,X199) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X200))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X199)) ) | $spl90),
  inference(superposition,[],[f4252,f2306])).
fof(f4252,plain,(
  ( ! [X0] : (~sP3(g(s(bool,X0)),'T_0','F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f4196,f241])).
fof(f4196,plain,(
  ~sP3(g(s(bool,'F_0')),'T_0','F_0') | $spl90),
  inference(unit_resulting_resolution,[],[f233,f444,f432,f4079,f345])).
fof(f4079,plain,(
  ~sP5('F_0',g(s(bool,'F_0')),'T_0') | $spl90),
  inference(unit_resulting_resolution,[],[f424,f4041,f363])).
fof(f17724,plain,(
  ( ! [X198] : (sP5('T_0','T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X198),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X198))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl174),
  inference(cnf_transformation,[],[f17724_D])).
fof(f17724_D,plain,(
  ( ! [X198] : (sP5('T_0','T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X198),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X198))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl174])])).
fof(f17609,plain,(
  ( ! [X198,X197] : (sP5('T_0','T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X198),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X197) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X198))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17437])).
fof(f17437,plain,(
  ( ! [X198,X197] : (sP5('T_0','T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X198),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X197) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X198))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X197)) ) | $spl90),
  inference(superposition,[],[f4240,f2306])).
fof(f4240,plain,(
  ( ! [X0] : (sP5('T_0','T_0',g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f4082,f241])).
fof(f4082,plain,(
  sP5('T_0','T_0',g(s(bool,'F_0'))) | $spl90),
  inference(unit_resulting_resolution,[],[f233,f4041,f361])).
fof(f17723,plain,(
  ( ! [X196] : (~sP5('F_0','T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X196),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X196))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl172),
  inference(cnf_transformation,[],[f17723_D])).
fof(f17723_D,plain,(
  ( ! [X196] : (~sP5('F_0','T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X196),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X196))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f17610,plain,(
  ( ! [X196,X195] : (~sP5('F_0','T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X196),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X195) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X196))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17436])).
fof(f17436,plain,(
  ( ! [X196,X195] : (~sP5('F_0','T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X196),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X195) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X196))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X195)) ) | $spl90),
  inference(superposition,[],[f4223,f2306])).
fof(f4223,plain,(
  ( ! [X0] : (~sP5('F_0','T_0',g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f4081,f241])).
fof(f17722,plain,(
  ( ! [X194] : (sP5('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X194),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X194))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl170),
  inference(cnf_transformation,[],[f17722_D])).
fof(f17722_D,plain,(
  ( ! [X194] : (sP5('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X194),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X194))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl170),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl170])])).
fof(f17611,plain,(
  ( ! [X194,X193] : (sP5('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X194),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0') | s(bool,'T_0') = s(bool,X193) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X194))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17435])).
fof(f17435,plain,(
  ( ! [X194,X193] : (sP5('T_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X194),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0') | s(bool,'T_0') = s(bool,X193) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X194))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X193)) ) | $spl90),
  inference(superposition,[],[f4214,f2306])).
fof(f4214,plain,(
  ( ! [X0] : (sP5('T_0',g(s(bool,X0)),'T_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f4080,f241])).
fof(f17721,plain,(
  ( ! [X192] : (~sP5('F_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X192),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X192))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl168),
  inference(cnf_transformation,[],[f17721_D])).
fof(f17721_D,plain,(
  ( ! [X192] : (~sP5('F_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X192),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0') | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X192))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f17612,plain,(
  ( ! [X191,X192] : (~sP5('F_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X192),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0') | s(bool,'T_0') = s(bool,X191) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X192))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17434])).
fof(f17434,plain,(
  ( ! [X191,X192] : (~sP5('F_0',g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X192),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),'T_0') | s(bool,'T_0') = s(bool,X191) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X192))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X191)) ) | $spl90),
  inference(superposition,[],[f4199,f2306])).
fof(f4199,plain,(
  ( ! [X0] : (~sP5('F_0',g(s(bool,X0)),'T_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f4079,f241])).
fof(f17720,plain,(
  ( ! [X189,X190] : (sP0(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X189),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),X190) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X189))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl166),
  inference(cnf_transformation,[],[f17720_D])).
fof(f17720_D,plain,(
  ( ! [X189,X190] : (sP0(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X189),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),X190) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X189))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl166),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl166])])).
fof(f17613,plain,(
  ( ! [X189,X190,X188] : (sP0(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X189),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),X190) | s(bool,'T_0') = s(bool,X188) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X189))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17433])).
fof(f17433,plain,(
  ( ! [X189,X190,X188] : (sP0(g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X189),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),X190) | s(bool,'T_0') = s(bool,X188) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X189))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X188)) ) | $spl90),
  inference(superposition,[],[f4188,f2306])).
fof(f4188,plain,(
  ( ! [X0,X1] : (sP0(g(s(bool,X0)),X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f4141,f241])).
fof(f4141,plain,(
  ( ! [X4] : (sP0(g(s(bool,'F_0')),X4)) ) | $spl90),
  inference(subsumption_resolution,[],[f4101,f233])).
fof(f4101,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | sP0(g(s(bool,'F_0')),X4)) ) | $spl90),
  inference(superposition,[],[f303,f4041])).
fof(f17719,plain,(
  ( ! [X187,X186] : (sP0(X187,g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X186),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X186))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl164),
  inference(cnf_transformation,[],[f17719_D])).
fof(f17719_D,plain,(
  ( ! [X187,X186] : (sP0(X187,g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X186),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X186))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f17614,plain,(
  ( ! [X187,X185,X186] : (sP0(X187,g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X186),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X185) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X186))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl90),
  inference(duplicate_literal_removal,[],[f17432])).
fof(f17432,plain,(
  ( ! [X187,X185,X186] : (sP0(X187,g(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X186),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s(bool,'T_0') = s(bool,X185) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X186))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X185)) ) | $spl90),
  inference(superposition,[],[f4160,f2306])).
fof(f4160,plain,(
  ( ! [X0,X1] : (sP0(X1,g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl90),
  inference(superposition,[],[f4140,f241])).
fof(f4140,plain,(
  ( ! [X3] : (sP0(X3,g(s(bool,'F_0')))) ) | $spl90),
  inference(subsumption_resolution,[],[f4100,f233])).
fof(f4100,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | sP0(X3,g(s(bool,'F_0')))) ) | $spl90),
  inference(superposition,[],[f302,f4041])).
fof(f17716,plain,(
  ( ! [X109,X108] : (s(bool,'F_0') = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X109),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X108) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X109))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f17634,f475])).
fof(f17634,plain,(
  ( ! [X109,X108] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X109),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X108) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X109))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(duplicate_literal_removal,[],[f17413])).
fof(f17413,plain,(
  ( ! [X109,X108] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X109),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X108) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X109))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X108)) )),
  inference(superposition,[],[f1018,f2306])).
fof(f17715,plain,(
  ( ! [X107,X106] : (s(bool,'F_0') = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X107),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X106) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X107))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f17635,f474])).
fof(f17635,plain,(
  ( ! [X107,X106] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X107),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X106) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X107))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(duplicate_literal_removal,[],[f17412])).
fof(f17412,plain,(
  ( ! [X107,X106] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X107),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X106) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X107))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X106)) )),
  inference(superposition,[],[f1017,f2306])).
fof(f17711,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl162),
  inference(cnf_transformation,[],[f17711_D])).
fof(f17711_D,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f17710,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,X2)) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(subsumption_resolution,[],[f17381,f251])).
fof(f17381,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,X2)) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f251,f2306])).
fof(f17641,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X0) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(duplicate_literal_removal,[],[f17380])).
fof(f17380,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X0) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f241,f2306])).
fof(f17704,plain,(
  ( ! [X59,X60] : (s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl160),
  inference(cnf_transformation,[],[f17704_D])).
fof(f17704_D,plain,(
  ( ! [X59,X60] : (s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f17668,plain,(
  ( ! [X59,X60,X58] : (s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X58) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(duplicate_literal_removal,[],[f17276])).
fof(f17276,plain,(
  ( ! [X59,X60,X58] : (s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X59),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X60),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X60))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X58) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X59))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X58)) )),
  inference(superposition,[],[f2306,f2306])).
fof(f17703,plain,(
  ( ! [X17,X16] : (s(bool,'F_0') = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(forward_demodulation,[],[f17681,f475])).
fof(f17681,plain,(
  ( ! [X17,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(duplicate_literal_removal,[],[f17267])).
fof(f17267,plain,(
  ( ! [X17,X16] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X17),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X17))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f2306,f1018])).
fof(f17702,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(forward_demodulation,[],[f17682,f474])).
fof(f17682,plain,(
  ( ! [X14,X15] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(duplicate_literal_removal,[],[f17266])).
fof(f17266,plain,(
  ( ! [X14,X15] : (s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X15),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X14) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f2306,f1017])).
fof(f17687,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f17261])).
fof(f17261,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X1),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f2306,f241])).
fof(f17169,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | $spl138),
  inference(cnf_transformation,[],[f17169_D])).
fof(f17169_D,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f17170,plain,(
  ( ! [X4,X5,X3] : (s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,X5) | s(bool,X5) = s(bool,sK14(X3,X4,bool,bool))) ) | $spl140),
  inference(cnf_transformation,[],[f17170_D])).
fof(f17170_D,plain,(
  ( ! [X4,X5,X3] : (s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,X5) | s(bool,X5) = s(bool,sK14(X3,X4,bool,bool))) ) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f17179,plain,(
  ( ! [X45,X44,X40] : (s(bool,X40) != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X45) | s(bool,X44) = s(bool,X45) | s(bool,X40) = s(bool,X44)) ) | $spl154),
  inference(cnf_transformation,[],[f17179_D])).
fof(f17179_D,plain,(
  ( ! [X45,X44,X40] : (s(bool,X40) != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X45) | s(bool,X44) = s(bool,X45) | s(bool,X40) = s(bool,X44)) ) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f17151,plain,(
  ( ! [X68,X66,X64,X69,X67,X65] : (s(bool,X64) != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X65) = s(fun(bool,bool),X66) | s(bool,X67) = s(bool,sK14(X65,X66,bool,bool)) | s(bool,'T_0') = s(bool,X67) | s(bool,X64) = s(bool,X68) | s(bool,X68) = s(bool,X69) | s(bool,'T_0') = s(bool,X69) | s(bool,'T_0') = s(bool,g(s(bool,'T_0')))) )),
  inference(superposition,[],[f1996,f1799])).
fof(f17178,plain,(
  ( ! [X39,X38] : (s(bool,X38) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X39) | s(bool,X38) = s(bool,X39)) ) | $spl152),
  inference(cnf_transformation,[],[f17178_D])).
fof(f17178_D,plain,(
  ( ! [X39,X38] : (s(bool,X38) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X39) | s(bool,X38) = s(bool,X39)) ) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f17150,plain,(
  ( ! [X61,X59,X62,X60,X58,X63] : (s(bool,X58) != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X59) = s(fun(bool,bool),X60) | s(bool,X61) = s(bool,sK14(X59,X60,bool,bool)) | s(bool,'T_0') = s(bool,X61) | s(bool,X62) = s(bool,g(s(bool,'T_0'))) | s(bool,X62) = s(bool,X63) | s(bool,'T_0') = s(bool,X63) | s(bool,'T_0') = s(bool,X58)) )),
  inference(superposition,[],[f1996,f1799])).
fof(f17180,plain,(
  ( ! [X50,X51,X49] : (s(bool,X49) = s(bool,X50) | s(bool,'T_0') = s(bool,X51) | s(bool,X49) = s(bool,X51) | s(bool,X50) = s(bool,g(s(bool,'T_0')))) ) | $spl156),
  inference(cnf_transformation,[],[f17180_D])).
fof(f17180_D,plain,(
  ( ! [X50,X51,X49] : (s(bool,X49) = s(bool,X50) | s(bool,'T_0') = s(bool,X51) | s(bool,X49) = s(bool,X51) | s(bool,X50) = s(bool,g(s(bool,'T_0')))) ) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f17149,plain,(
  ( ! [X57,X54,X52,X56,X55,X53] : (s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X52) = s(fun(bool,bool),X53) | s(bool,X54) = s(bool,sK14(X52,X53,bool,bool)) | s(bool,'T_0') = s(bool,X54) | s(bool,X55) = s(bool,X56) | s(bool,X56) = s(bool,X57) | s(bool,'T_0') = s(bool,X57) | s(bool,X55) = s(bool,g(s(bool,'T_0')))) )),
  inference(superposition,[],[f1996,f1799])).
fof(f17148,plain,(
  ( ! [X47,X50,X48,X46,X51,X49] : (s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X46) = s(fun(bool,bool),X47) | s(bool,X48) = s(bool,sK14(X46,X47,bool,bool)) | s(bool,'T_0') = s(bool,X48) | s(bool,X49) = s(bool,X50) | s(bool,X50) = s(bool,g(s(bool,'T_0'))) | s(bool,X49) = s(bool,X51) | s(bool,'T_0') = s(bool,X51)) )),
  inference(superposition,[],[f1996,f1799])).
fof(f17147,plain,(
  ( ! [X45,X43,X41,X44,X42,X40] : (s(bool,X40) != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X41) = s(fun(bool,bool),X42) | s(bool,X43) = s(bool,sK14(X41,X42,bool,bool)) | s(bool,'T_0') = s(bool,X43) | s(bool,X40) = s(bool,X44) | s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | s(bool,X44) = s(bool,X45) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f1996,f1799])).
fof(f17146,plain,(
  ( ! [X39,X37,X35,X38,X36,X34] : (s(bool,X34) != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X35) = s(fun(bool,bool),X36) | s(bool,X37) = s(bool,sK14(X35,X36,bool,bool)) | s(bool,'T_0') = s(bool,X37) | s(bool,X38) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X34) | s(bool,X38) = s(bool,X39) | s(bool,'T_0') = s(bool,X39)) )),
  inference(superposition,[],[f1996,f1799])).
fof(f17173,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X9)) ) | $spl144),
  inference(cnf_transformation,[],[f17173_D])).
fof(f17173_D,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X9)) ) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f17177,plain,(
  ( ! [X26,X22] : (s(bool,X22) != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X26) | s(bool,X22) = s(bool,X26)) ) | $spl150),
  inference(cnf_transformation,[],[f17177_D])).
fof(f17177_D,plain,(
  ( ! [X26,X22] : (s(bool,X22) != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X26) | s(bool,X22) = s(bool,X26)) ) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f17145,plain,(
  ( ! [X30,X28,X33,X31,X29,X32] : (s(bool,X28) != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X29) = s(fun(bool,bool),X30) | s(bool,X31) = s(bool,sK14(X29,X30,bool,bool)) | s(bool,'T_0') = s(bool,X31) | s(bool,X32) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X32) | s(bool,X28) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1996,f1799])).
fof(f17144,plain,(
  ( ! [X26,X24,X23,X27,X25,X22] : (s(bool,X22) != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X23) = s(fun(bool,bool),X24) | s(bool,X25) = s(bool,sK14(X23,X24,bool,bool)) | s(bool,'T_0') = s(bool,X25) | s(bool,X22) = s(bool,X26) | s(bool,'T_0') = s(bool,X26) | s(bool,X27) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X27)) )),
  inference(superposition,[],[f1996,f1799])).
fof(f17143,plain,(
  ( ! [X21,X19,X20,X18] : (s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X18) = s(fun(bool,bool),X19) | s(bool,X20) = s(bool,sK14(X18,X19,bool,bool)) | s(bool,'T_0') = s(bool,X20) | s(bool,X21) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f1996,f608])).
fof(f17142,plain,(
  ( ! [X14,X17,X15,X16] : (s(bool,X14) != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X15) = s(fun(bool,bool),X16) | s(bool,X17) = s(bool,sK14(X15,X16,bool,bool)) | s(bool,'T_0') = s(bool,X17) | s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f1996,f608])).
fof(f17141,plain,(
  ( ! [X12,X10,X13,X11] : (s(bool,X10) != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X11) = s(fun(bool,bool),X12) | s(bool,X13) = s(bool,sK14(X11,X12,bool,bool)) | s(bool,'T_0') = s(bool,X13) | s(bool,'T_0') = s(bool,X10) | s(bool,'T_0') = s(bool,g(s(bool,'T_0')))) )),
  inference(superposition,[],[f1996,f608])).
fof(f17140,plain,(
  ( ! [X6,X8,X7,X9] : (s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X6) = s(fun(bool,bool),X7) | s(bool,X8) = s(bool,sK14(X6,X7,bool,bool)) | s(bool,'T_0') = s(bool,X8) | s(bool,X9) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f1996,f608])).
fof(f17172,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | $spl143),
  inference(cnf_transformation,[],[f17172_D])).
fof(f17172_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) <=> ~$spl143),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl143])])).
fof(f17139,plain,(
  ( ! [X4,X5,X3] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,X5) = s(bool,sK14(X3,X4,bool,bool)) | s(bool,'T_0') = s(bool,X5) | s(bool,'T_0') = s(bool,g(s(bool,'T_0')))) )),
  inference(superposition,[],[f1996,f241])).
fof(f16031,plain,(
  $false | ($spl3 | $spl86)),
  inference(subsumption_resolution,[],[f15940,f15985])).
fof(f15985,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | $spl86),
  inference(forward_demodulation,[],[f15788,f15892])).
fof(f15892,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl86),
  inference(forward_demodulation,[],[f15789,f1445])).
fof(f15789,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl86),
  inference(unit_resulting_resolution,[],[f1492,f3926])).
fof(f15788,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl86),
  inference(unit_resulting_resolution,[],[f1489,f3926])).
fof(f15940,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | ($spl3 | $spl86)),
  inference(backward_demodulation,[],[f15892,f4229])).
fof(f16026,plain,(
  ( ! [X52] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52)))) ) | $spl136),
  inference(cnf_transformation,[],[f16026_D])).
fof(f16026_D,plain,(
  ( ! [X52] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52)))) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f16025,plain,(
  ( ! [X52,X53] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52)))) ) | $spl86),
  inference(forward_demodulation,[],[f16024,f15892])).
fof(f16024,plain,(
  ( ! [X52,X53] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52)))) ) | $spl86),
  inference(subsumption_resolution,[],[f15831,f242])).
fof(f15831,plain,(
  ( ! [X52,X53] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X53))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X52)))) ) | $spl86),
  inference(superposition,[],[f1634,f3926])).
fof(f15986,plain,(
  $false | ($spl77 | $spl86)),
  inference(subsumption_resolution,[],[f15985,f3880])).
fof(f4042,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK14(X0,X1,bool,bool))) ) | $spl92),
  inference(cnf_transformation,[],[f4042_D])).
fof(f4042_D,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK14(X0,X1,bool,bool))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f4047,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | $spl99),
  inference(cnf_transformation,[],[f4047_D])).
fof(f4047_D,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl99),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl99])])).
fof(f4124,plain,(
  ( ! [X41,X40] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X40) = s(fun(bool,bool),X41) | s(bool,'T_0') = s(bool,sK14(X40,X41,bool,bool))) ) | $spl90),
  inference(superposition,[],[f1546,f4041])).
fof(f15523,plain,(
  ( ! [X142,X143] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X142) = s(fun(bool,bool),X143) | s(bool,'T_0') = s(bool,sK14(X142,X143,bool,bool))) ) | $spl90),
  inference(subsumption_resolution,[],[f10284,f464])).
fof(f10284,plain,(
  ( ! [X142,X143] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X142) = s(fun(bool,bool),X143) | s(bool,'T_0') = s(bool,sK14(X142,X143,bool,bool)) | s(bool,'T_0') = s(bool,'F_0')) ) | $spl90),
  inference(superposition,[],[f1546,f4083])).
fof(f15519,plain,(
  ( ! [X2,X3] : (s(bool,X2) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X3) | s(bool,X2) = s(bool,X3)) ) | $spl134),
  inference(cnf_transformation,[],[f15519_D])).
fof(f15519_D,plain,(
  ( ! [X2,X3] : (s(bool,X2) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X3) | s(bool,X2) = s(bool,X3)) ) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f15522,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,sK14(X0,X1,bool,bool)) | s(bool,X2) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl90),
  inference(condensation,[],[f15521])).
fof(f15521,plain,(
  ( ! [X761,X763,X759,X760,X762] : (s(bool,'T_0') = s(bool,X763) | s(bool,X759) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X760) = s(fun(bool,bool),X761) | s(bool,'T_0') = s(bool,sK14(X760,X761,bool,bool)) | s(bool,X759) = s(bool,X762) | s(bool,'T_0') = s(bool,X762)) ) | $spl90),
  inference(duplicate_literal_removal,[],[f15520])).
fof(f15520,plain,(
  ( ! [X761,X763,X759,X760,X762] : (s(bool,'T_0') = s(bool,X763) | s(bool,X759) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X760) = s(fun(bool,bool),X761) | s(bool,'T_0') = s(bool,sK14(X760,X761,bool,bool)) | s(bool,X759) = s(bool,X762) | s(bool,'T_0') = s(bool,X762) | s(bool,'T_0') = s(bool,X763)) ) | $spl90),
  inference(forward_demodulation,[],[f11009,f4041])).
fof(f11009,plain,(
  ( ! [X761,X763,X759,X760,X762] : (s(bool,X759) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X760) = s(fun(bool,bool),X761) | s(bool,'T_0') = s(bool,sK14(X760,X761,bool,bool)) | s(bool,X759) = s(bool,X762) | s(bool,'T_0') = s(bool,X762) | s(bool,X763) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X763)) )),
  inference(superposition,[],[f1546,f1799])).
fof(f15518,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,sK14(X0,X1,bool,bool)) | s(bool,X2) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl90),
  inference(condensation,[],[f15517])).
fof(f15517,plain,(
  ( ! [X761,X763,X759,X760,X762] : (s(bool,'T_0') = s(bool,X762) | s(bool,X759) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X760) = s(fun(bool,bool),X761) | s(bool,'T_0') = s(bool,sK14(X760,X761,bool,bool)) | s(bool,X759) = s(bool,X763) | s(bool,'T_0') = s(bool,X763)) ) | $spl90),
  inference(duplicate_literal_removal,[],[f15516])).
fof(f15516,plain,(
  ( ! [X761,X763,X759,X760,X762] : (s(bool,'T_0') = s(bool,X762) | s(bool,X759) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X760) = s(fun(bool,bool),X761) | s(bool,'T_0') = s(bool,sK14(X760,X761,bool,bool)) | s(bool,'T_0') = s(bool,X762) | s(bool,X759) = s(bool,X763) | s(bool,'T_0') = s(bool,X763)) ) | $spl90),
  inference(forward_demodulation,[],[f11188,f4041])).
fof(f11188,plain,(
  ( ! [X761,X763,X759,X760,X762] : (s(bool,X759) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X760) = s(fun(bool,bool),X761) | s(bool,'T_0') = s(bool,sK14(X760,X761,bool,bool)) | s(bool,X762) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X762) | s(bool,X759) = s(bool,X763) | s(bool,'T_0') = s(bool,X763)) )),
  inference(superposition,[],[f1546,f1799])).
fof(f15515,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,sK14(X0,X1,bool,bool)) | s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1)) ) | $spl90),
  inference(condensation,[],[f15514])).
fof(f15514,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,sK14(X0,X1,bool,bool)) | s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X2)) ) | $spl90),
  inference(duplicate_literal_removal,[],[f15513])).
fof(f15513,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,sK14(X0,X1,bool,bool)) | s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl90),
  inference(condensation,[],[f15512])).
fof(f15512,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,sK14(X0,X1,bool,bool)) | s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,X2) = s(bool,sK14(X0,X1,bool,bool)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl90),
  inference(condensation,[],[f15511])).
fof(f15511,plain,(
  ( ! [X738,X741,X739,X740,X742] : (s(bool,'T_0') = s(bool,X741) | s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X738) = s(fun(bool,bool),X739) | s(bool,'T_0') = s(bool,sK14(X738,X739,bool,bool)) | s(bool,X740) = s(bool,X741) | s(bool,X740) = s(bool,X742) | s(bool,'T_0') = s(bool,X742)) ) | $spl90),
  inference(forward_demodulation,[],[f11806,f4041])).
fof(f11806,plain,(
  ( ! [X738,X741,X739,X740,X742] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X738) = s(fun(bool,bool),X739) | s(bool,'T_0') = s(bool,sK14(X738,X739,bool,bool)) | s(bool,X740) = s(bool,X741) | s(bool,X741) = s(bool,g(s(bool,'F_0'))) | s(bool,X740) = s(bool,X742) | s(bool,'T_0') = s(bool,X742)) )),
  inference(superposition,[],[f1546,f1799])).
fof(f15510,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,sK14(X0,X1,bool,bool)) | s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1)) ) | $spl90),
  inference(condensation,[],[f15509])).
fof(f15509,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,sK14(X0,X1,bool,bool)) | s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X2)) ) | $spl90),
  inference(duplicate_literal_removal,[],[f15508])).
fof(f15508,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,sK14(X0,X1,bool,bool)) | s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl90),
  inference(condensation,[],[f15507])).
fof(f15507,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,sK14(X0,X1,bool,bool)) | s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,X2) = s(bool,sK14(X0,X1,bool,bool)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl90),
  inference(condensation,[],[f15506])).
fof(f15506,plain,(
  ( ! [X738,X741,X739,X740,X742] : (s(bool,'T_0') = s(bool,X740) | s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X738) = s(fun(bool,bool),X739) | s(bool,'T_0') = s(bool,sK14(X738,X739,bool,bool)) | s(bool,X740) = s(bool,X741) | s(bool,X741) = s(bool,X742) | s(bool,'T_0') = s(bool,X742)) ) | $spl90),
  inference(forward_demodulation,[],[f12424,f4041])).
fof(f12424,plain,(
  ( ! [X738,X741,X739,X740,X742] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X738) = s(fun(bool,bool),X739) | s(bool,'T_0') = s(bool,sK14(X738,X739,bool,bool)) | s(bool,X740) = s(bool,X741) | s(bool,X741) = s(bool,X742) | s(bool,'T_0') = s(bool,X742) | s(bool,X740) = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f1546,f1799])).
fof(f15491,plain,(
  ( ! [X21,X19,X22] : (s(bool,'F_0') = s(bool,f(s(bool,X19))) | s(bool,'T_0') = s(bool,X22) | s(bool,X21) = s(bool,X22) | s(bool,X19) = s(bool,X21)) ) | $spl132),
  inference(cnf_transformation,[],[f15491_D])).
fof(f15491_D,plain,(
  ( ! [X21,X19,X22] : (s(bool,'F_0') = s(bool,f(s(bool,X19))) | s(bool,'T_0') = s(bool,X22) | s(bool,X21) = s(bool,X22) | s(bool,X19) = s(bool,X21)) ) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f15492,plain,(
  ( ! [X37,X35,X38,X36] : (p(s(bool,X36)) | s(bool,'F_0') = s(bool,f(s(bool,X35))) | s(bool,X35) = s(bool,X37) | s(bool,X37) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) ) | $spl99),
  inference(subsumption_resolution,[],[f15470,f251])).
fof(f15470,plain,(
  ( ! [X37,X35,X38,X36] : (p(s(bool,X36)) | s(bool,'F_0') = s(bool,f(s(bool,X35))) | s(bool,X35) = s(bool,X37) | s(bool,X37) = s(bool,X38) | s(bool,'T_0') = s(bool,X38) | s(bool,'T_0') = s(bool,X36)) ) | $spl99),
  inference(superposition,[],[f15261,f1799])).
fof(f15261,plain,(
  ( ! [X6] : (p(s(bool,X6)) | s(bool,'F_0') = s(bool,f(s(bool,X6)))) ) | $spl99),
  inference(subsumption_resolution,[],[f15120,f251])).
fof(f15120,plain,(
  ( ! [X6] : (p(s(bool,X6)) | s(bool,'F_0') = s(bool,f(s(bool,X6))) | s(bool,'T_0') = s(bool,X6)) ) | $spl99),
  inference(superposition,[],[f256,f5010])).
fof(f5010,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl99),
  inference(superposition,[],[f4712,f241])).
fof(f4712,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'F_0'))) | $spl99),
  inference(unit_resulting_resolution,[],[f513,f4047,f2286])).
fof(f15490,plain,(
  ( ! [X21,X19,X22,X20] : (p(s(bool,X20)) | s(bool,'F_0') = s(bool,f(s(bool,X19))) | s(bool,X19) = s(bool,X21) | s(bool,X21) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) ) | $spl99),
  inference(subsumption_resolution,[],[f15466,f251])).
fof(f15466,plain,(
  ( ! [X21,X19,X22,X20] : (p(s(bool,X20)) | s(bool,'F_0') = s(bool,f(s(bool,X19))) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X20) | s(bool,X21) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) ) | $spl99),
  inference(superposition,[],[f15261,f1799])).
fof(f14245,plain,(
  ( ! [X728,X725,X727] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X725))) | s(bool,'T_0') = s(bool,X728) | s(bool,X727) = s(bool,X728) | s(bool,X727) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X725),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X725))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl128),
  inference(cnf_transformation,[],[f14245_D])).
fof(f14245_D,plain,(
  ( ! [X728,X725,X727] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X725))) | s(bool,'T_0') = s(bool,X728) | s(bool,X727) = s(bool,X728) | s(bool,X727) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X725),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X725))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f14352,plain,(
  ( ! [X728,X726,X725,X727] : (p(s(bool,X726)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X725))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X725))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X727) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X725),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X727) = s(bool,X728) | s(bool,'T_0') = s(bool,X728)) )),
  inference(subsumption_resolution,[],[f11979,f251])).
fof(f11979,plain,(
  ( ! [X728,X726,X725,X727] : (p(s(bool,X726)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X725))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X725))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X727) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X725),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X727) = s(bool,X728) | s(bool,'T_0') = s(bool,X728) | s(bool,'T_0') = s(bool,X726)) )),
  inference(superposition,[],[f1640,f1799])).
fof(f14227,plain,(
  ( ! [X212,X213,X211,X209,X214] : (sP1(X209,X211) | s(bool,'T_0') = s(bool,X214) | s(bool,X213) = s(bool,X214) | s(bool,X209) = s(bool,X213) | s(bool,'T_0') = s(bool,X212) | s(bool,X211) = s(bool,X212)) ) | $spl126),
  inference(cnf_transformation,[],[f14227_D])).
fof(f14227_D,plain,(
  ( ! [X212,X213,X211,X209,X214] : (sP1(X209,X211) | s(bool,'T_0') = s(bool,X214) | s(bool,X213) = s(bool,X214) | s(bool,X209) = s(bool,X213) | s(bool,'T_0') = s(bool,X212) | s(bool,X211) = s(bool,X212)) ) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f14335,plain,(
  ( ! [X212,X210,X213,X211,X209,X214] : (p(s(bool,X210)) | sP1(X209,X211) | s(bool,X211) = s(bool,X212) | s(bool,'T_0') = s(bool,X212) | s(bool,X209) = s(bool,X213) | s(bool,X213) = s(bool,X214) | s(bool,'T_0') = s(bool,X214)) )),
  inference(subsumption_resolution,[],[f11847,f251])).
fof(f11847,plain,(
  ( ! [X212,X210,X213,X211,X209,X214] : (p(s(bool,X210)) | sP1(X209,X211) | s(bool,X211) = s(bool,X212) | s(bool,'T_0') = s(bool,X212) | s(bool,X209) = s(bool,X213) | s(bool,X213) = s(bool,X214) | s(bool,'T_0') = s(bool,X214) | s(bool,'T_0') = s(bool,X210)) )),
  inference(superposition,[],[f2288,f1799])).
fof(f14225,plain,(
  ( ! [X208,X206,X207,X205,X203] : (sP1(X205,X203) | s(bool,'T_0') = s(bool,X208) | s(bool,X207) = s(bool,X208) | s(bool,X203) = s(bool,X207) | s(bool,'T_0') = s(bool,X206) | s(bool,X205) = s(bool,X206)) ) | $spl124),
  inference(cnf_transformation,[],[f14225_D])).
fof(f14225_D,plain,(
  ( ! [X208,X206,X207,X205,X203] : (sP1(X205,X203) | s(bool,'T_0') = s(bool,X208) | s(bool,X207) = s(bool,X208) | s(bool,X203) = s(bool,X207) | s(bool,'T_0') = s(bool,X206) | s(bool,X205) = s(bool,X206)) ) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f14334,plain,(
  ( ! [X208,X206,X204,X207,X205,X203] : (p(s(bool,X204)) | sP1(X205,X203) | s(bool,X205) = s(bool,X206) | s(bool,'T_0') = s(bool,X206) | s(bool,X203) = s(bool,X207) | s(bool,X207) = s(bool,X208) | s(bool,'T_0') = s(bool,X208)) )),
  inference(subsumption_resolution,[],[f11846,f251])).
fof(f11846,plain,(
  ( ! [X208,X206,X204,X207,X205,X203] : (p(s(bool,X204)) | sP1(X205,X203) | s(bool,X205) = s(bool,X206) | s(bool,'T_0') = s(bool,X206) | s(bool,X203) = s(bool,X207) | s(bool,X207) = s(bool,X208) | s(bool,'T_0') = s(bool,X208) | s(bool,'T_0') = s(bool,X204)) )),
  inference(superposition,[],[f2287,f1799])).
fof(f14223,plain,(
  ( ! [X191,X190,X188] : (sP1(X188,'T_0') | s(bool,'T_0') = s(bool,X191) | s(bool,X190) = s(bool,X191) | s(bool,X188) = s(bool,X190)) ) | $spl122),
  inference(cnf_transformation,[],[f14223_D])).
fof(f14223_D,plain,(
  ( ! [X191,X190,X188] : (sP1(X188,'T_0') | s(bool,'T_0') = s(bool,X191) | s(bool,X190) = s(bool,X191) | s(bool,X188) = s(bool,X190)) ) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f14333,plain,(
  ( ! [X191,X189,X190,X188] : (p(s(bool,X189)) | sP1(X188,'T_0') | s(bool,X188) = s(bool,X190) | s(bool,X190) = s(bool,X191) | s(bool,'T_0') = s(bool,X191)) ) | $spl30),
  inference(subsumption_resolution,[],[f11843,f251])).
fof(f11843,plain,(
  ( ! [X191,X189,X190,X188] : (p(s(bool,X189)) | sP1(X188,'T_0') | s(bool,X188) = s(bool,X190) | s(bool,X190) = s(bool,X191) | s(bool,'T_0') = s(bool,X191) | s(bool,'T_0') = s(bool,X189)) ) | $spl30),
  inference(superposition,[],[f2237,f1799])).
fof(f14221,plain,(
  ( ! [X187,X186,X184] : (sP1('T_0',X184) | s(bool,'T_0') = s(bool,X187) | s(bool,X186) = s(bool,X187) | s(bool,X184) = s(bool,X186)) ) | $spl120),
  inference(cnf_transformation,[],[f14221_D])).
fof(f14221_D,plain,(
  ( ! [X187,X186,X184] : (sP1('T_0',X184) | s(bool,'T_0') = s(bool,X187) | s(bool,X186) = s(bool,X187) | s(bool,X184) = s(bool,X186)) ) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f14332,plain,(
  ( ! [X187,X185,X186,X184] : (p(s(bool,X185)) | sP1('T_0',X184) | s(bool,X184) = s(bool,X186) | s(bool,X186) = s(bool,X187) | s(bool,'T_0') = s(bool,X187)) ) | $spl26),
  inference(subsumption_resolution,[],[f11842,f251])).
fof(f11842,plain,(
  ( ! [X187,X185,X186,X184] : (p(s(bool,X185)) | sP1('T_0',X184) | s(bool,X184) = s(bool,X186) | s(bool,X186) = s(bool,X187) | s(bool,'T_0') = s(bool,X187) | s(bool,'T_0') = s(bool,X185)) ) | $spl26),
  inference(superposition,[],[f2233,f1799])).
fof(f14247,plain,(
  ( ! [X6,X7,X5] : (s(bool,'T_0') != s(bool,X5) | s(bool,'T_0') = s(bool,X7) | s(bool,X6) = s(bool,X7) | s(bool,X5) = s(bool,X6)) ) | $spl130),
  inference(cnf_transformation,[],[f14247_D])).
fof(f14247_D,plain,(
  ( ! [X6,X7,X5] : (s(bool,'T_0') != s(bool,X5) | s(bool,'T_0') = s(bool,X7) | s(bool,X6) = s(bool,X7) | s(bool,X5) = s(bool,X6)) ) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f14246,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') != s(bool,X5) | p(s(bool,X4)) | s(bool,X5) = s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f11369,f251])).
fof(f11369,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') != s(bool,X5) | p(s(bool,X4)) | s(bool,X5) = s(bool,X6) | s(bool,'T_0') = s(bool,X4) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f251,f1799])).
fof(f14244,plain,(
  ( ! [X728,X726,X725,X727] : (p(s(bool,X726)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X725))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X725))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X727) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X725),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,X727) = s(bool,X728) | s(bool,'T_0') = s(bool,X728)) )),
  inference(subsumption_resolution,[],[f11361,f251])).
fof(f11361,plain,(
  ( ! [X728,X726,X725,X727] : (p(s(bool,X726)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X725))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X725))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X727) = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X725),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X726) | s(bool,X727) = s(bool,X728) | s(bool,'T_0') = s(bool,X728)) )),
  inference(superposition,[],[f1640,f1799])).
fof(f14226,plain,(
  ( ! [X212,X210,X213,X211,X209,X214] : (p(s(bool,X210)) | sP1(X209,X211) | s(bool,X211) = s(bool,X212) | s(bool,'T_0') = s(bool,X212) | s(bool,X209) = s(bool,X213) | s(bool,X213) = s(bool,X214) | s(bool,'T_0') = s(bool,X214)) )),
  inference(subsumption_resolution,[],[f11229,f251])).
fof(f11229,plain,(
  ( ! [X212,X210,X213,X211,X209,X214] : (p(s(bool,X210)) | sP1(X209,X211) | s(bool,X211) = s(bool,X212) | s(bool,'T_0') = s(bool,X212) | s(bool,X209) = s(bool,X213) | s(bool,'T_0') = s(bool,X210) | s(bool,X213) = s(bool,X214) | s(bool,'T_0') = s(bool,X214)) )),
  inference(superposition,[],[f2288,f1799])).
fof(f14224,plain,(
  ( ! [X208,X206,X204,X207,X205,X203] : (p(s(bool,X204)) | sP1(X205,X203) | s(bool,X205) = s(bool,X206) | s(bool,'T_0') = s(bool,X206) | s(bool,X203) = s(bool,X207) | s(bool,X207) = s(bool,X208) | s(bool,'T_0') = s(bool,X208)) )),
  inference(subsumption_resolution,[],[f11228,f251])).
fof(f11228,plain,(
  ( ! [X208,X206,X204,X207,X205,X203] : (p(s(bool,X204)) | sP1(X205,X203) | s(bool,X205) = s(bool,X206) | s(bool,'T_0') = s(bool,X206) | s(bool,X203) = s(bool,X207) | s(bool,'T_0') = s(bool,X204) | s(bool,X207) = s(bool,X208) | s(bool,'T_0') = s(bool,X208)) )),
  inference(superposition,[],[f2287,f1799])).
fof(f14222,plain,(
  ( ! [X191,X189,X190,X188] : (p(s(bool,X189)) | sP1(X188,'T_0') | s(bool,X188) = s(bool,X190) | s(bool,X190) = s(bool,X191) | s(bool,'T_0') = s(bool,X191)) ) | $spl30),
  inference(subsumption_resolution,[],[f11225,f251])).
fof(f11225,plain,(
  ( ! [X191,X189,X190,X188] : (p(s(bool,X189)) | sP1(X188,'T_0') | s(bool,X188) = s(bool,X190) | s(bool,'T_0') = s(bool,X189) | s(bool,X190) = s(bool,X191) | s(bool,'T_0') = s(bool,X191)) ) | $spl30),
  inference(superposition,[],[f2237,f1799])).
fof(f14220,plain,(
  ( ! [X187,X185,X186,X184] : (p(s(bool,X185)) | sP1('T_0',X184) | s(bool,X184) = s(bool,X186) | s(bool,X186) = s(bool,X187) | s(bool,'T_0') = s(bool,X187)) ) | $spl26),
  inference(subsumption_resolution,[],[f11224,f251])).
fof(f11224,plain,(
  ( ! [X187,X185,X186,X184] : (p(s(bool,X185)) | sP1('T_0',X184) | s(bool,X184) = s(bool,X186) | s(bool,'T_0') = s(bool,X185) | s(bool,X186) = s(bool,X187) | s(bool,'T_0') = s(bool,X187)) ) | $spl26),
  inference(superposition,[],[f2233,f1799])).
fof(f14219,plain,(
  ( ! [X182,X180,X178,X183,X181] : (s(bool,X178) != s(bool,X180) | s(bool,'T_0') = s(bool,X183) | s(bool,X182) = s(bool,X183) | s(bool,X178) = s(bool,X182) | s(bool,'T_0') = s(bool,X181) | s(bool,X180) = s(bool,X181)) ) | $spl118),
  inference(cnf_transformation,[],[f14219_D])).
fof(f14219_D,plain,(
  ( ! [X182,X180,X178,X183,X181] : (s(bool,X178) != s(bool,X180) | s(bool,'T_0') = s(bool,X183) | s(bool,X182) = s(bool,X183) | s(bool,X178) = s(bool,X182) | s(bool,'T_0') = s(bool,X181) | s(bool,X180) = s(bool,X181)) ) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f14218,plain,(
  ( ! [X182,X180,X178,X183,X181,X179] : (p(s(bool,X179)) | s(bool,X178) != s(bool,X180) | s(bool,X180) = s(bool,X181) | s(bool,'T_0') = s(bool,X181) | s(bool,X178) = s(bool,X182) | s(bool,X182) = s(bool,X183) | s(bool,'T_0') = s(bool,X183)) )),
  inference(subsumption_resolution,[],[f11223,f251])).
fof(f11223,plain,(
  ( ! [X182,X180,X178,X183,X181,X179] : (p(s(bool,X179)) | s(bool,X178) != s(bool,X180) | s(bool,X180) = s(bool,X181) | s(bool,'T_0') = s(bool,X181) | s(bool,X178) = s(bool,X182) | s(bool,'T_0') = s(bool,X179) | s(bool,X182) = s(bool,X183) | s(bool,'T_0') = s(bool,X183)) )),
  inference(superposition,[],[f1924,f1799])).
fof(f8070,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6662,f6683])).
fof(f6683,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f6550,f6550,f290])).
fof(f6662,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f6550,f255])).
fof(f8069,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6666,f233])).
fof(f6666,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f465,f6550,f290])).
fof(f8068,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6668,f233])).
fof(f6668,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f466,f6550,f290])).
fof(f8067,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6670,f233])).
fof(f6670,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f464,f6550,f290])).
fof(f8066,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f6672,f233])).
fof(f6672,plain,(
  ~p(s(bool,'T_0')) | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4047,f6550,f290])).
fof(f8065,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6674,f6550])).
fof(f6674,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | $spl114),
  inference(unit_resulting_resolution,[],[f465,f6550,f290])).
fof(f8064,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6676,f6550])).
fof(f6676,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | $spl114),
  inference(unit_resulting_resolution,[],[f466,f6550,f290])).
fof(f8063,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f6680,f6550])).
fof(f6680,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4047,f6550,f290])).
fof(f8062,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6684,f233])).
fof(f6684,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f465,f6550,f290])).
fof(f8061,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6686,f233])).
fof(f6686,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f466,f6550,f290])).
fof(f8060,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6688,f233])).
fof(f6688,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f464,f6550,f290])).
fof(f8059,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f6690,f233])).
fof(f6690,plain,(
  ~p(s(bool,'T_0')) | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4047,f6550,f290])).
fof(f8058,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6692,f6550])).
fof(f6692,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | $spl114),
  inference(unit_resulting_resolution,[],[f465,f6550,f290])).
fof(f8057,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6694,f6550])).
fof(f6694,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | $spl114),
  inference(unit_resulting_resolution,[],[f466,f6550,f290])).
fof(f8056,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f6698,f6550])).
fof(f6698,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4047,f6550,f290])).
fof(f8055,plain,(
  $false | ($spl26 | $spl114)),
  inference(subsumption_resolution,[],[f6705,f6550])).
fof(f6705,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | ($spl26 | $spl114)),
  inference(unit_resulting_resolution,[],[f2823,f6550,f317])).
fof(f2823,plain,(
  sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | $spl26),
  inference(subsumption_resolution,[],[f2816,f424])).
fof(f2816,plain,(
  p(s(bool,'F_0')) | sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | $spl26),
  inference(superposition,[],[f2233,f474])).
fof(f8054,plain,(
  $false | ($spl26 | $spl114)),
  inference(subsumption_resolution,[],[f6706,f6550])).
fof(f6706,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | ($spl26 | $spl114)),
  inference(unit_resulting_resolution,[],[f2824,f6550,f317])).
fof(f2824,plain,(
  sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) | $spl26),
  inference(subsumption_resolution,[],[f2818,f424])).
fof(f2818,plain,(
  p(s(bool,'F_0')) | sP1('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) | $spl26),
  inference(superposition,[],[f2233,f475])).
fof(f8053,plain,(
  $false | ($spl26 | $spl99 | $spl114)),
  inference(subsumption_resolution,[],[f6707,f6550])).
fof(f6707,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | ($spl26 | $spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4714,f6550,f317])).
fof(f4714,plain,(
  sP1('T_0',f(s(bool,'F_0'))) | ($spl26 | $spl99)),
  inference(unit_resulting_resolution,[],[f4047,f2820])).
fof(f8052,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6708,f233])).
fof(f6708,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f508,f6550,f317])).
fof(f8051,plain,(
  $false | ($spl90 | $spl114)),
  inference(subsumption_resolution,[],[f6709,f6550])).
fof(f6709,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | ($spl90 | $spl114)),
  inference(unit_resulting_resolution,[],[f4949,f6550,f317])).
fof(f8050,plain,(
  $false | ($spl30 | $spl99 | $spl114)),
  inference(subsumption_resolution,[],[f6710,f233])).
fof(f6710,plain,(
  ~p(s(bool,'T_0')) | ($spl30 | $spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4715,f6550,f317])).
fof(f4715,plain,(
  sP1(f(s(bool,'F_0')),'T_0') | ($spl30 | $spl99)),
  inference(unit_resulting_resolution,[],[f4047,f2868])).
fof(f2868,plain,(
  ( ! [X0] : (sP1(X0,'T_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl30),
  inference(subsumption_resolution,[],[f2854,f424])).
fof(f2854,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | sP1(X0,'T_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl30),
  inference(superposition,[],[f2237,f241])).
fof(f8049,plain,(
  $false | ($spl30 | $spl114)),
  inference(subsumption_resolution,[],[f6712,f233])).
fof(f6712,plain,(
  ~p(s(bool,'T_0')) | ($spl30 | $spl114)),
  inference(unit_resulting_resolution,[],[f2871,f6550,f317])).
fof(f2871,plain,(
  sP1('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0') | $spl30),
  inference(subsumption_resolution,[],[f2864,f424])).
fof(f2864,plain,(
  p(s(bool,'F_0')) | sP1('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0') | $spl30),
  inference(superposition,[],[f2237,f474])).
fof(f8048,plain,(
  $false | ($spl30 | $spl114)),
  inference(subsumption_resolution,[],[f6713,f233])).
fof(f6713,plain,(
  ~p(s(bool,'T_0')) | ($spl30 | $spl114)),
  inference(unit_resulting_resolution,[],[f2872,f6550,f317])).
fof(f2872,plain,(
  sP1('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0') | $spl30),
  inference(subsumption_resolution,[],[f2866,f424])).
fof(f2866,plain,(
  p(s(bool,'F_0')) | sP1('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0') | $spl30),
  inference(superposition,[],[f2237,f475])).
fof(f8047,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6718,f233])).
fof(f6718,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f501,f6550,f317])).
fof(f8046,plain,(
  $false | ($spl26 | $spl114)),
  inference(subsumption_resolution,[],[f6719,f233])).
fof(f6719,plain,(
  ~p(s(bool,'T_0')) | ($spl26 | $spl114)),
  inference(unit_resulting_resolution,[],[f2823,f6550,f317])).
fof(f8045,plain,(
  $false | ($spl26 | $spl114)),
  inference(subsumption_resolution,[],[f6720,f233])).
fof(f6720,plain,(
  ~p(s(bool,'T_0')) | ($spl26 | $spl114)),
  inference(unit_resulting_resolution,[],[f2824,f6550,f317])).
fof(f8044,plain,(
  $false | ($spl26 | $spl99 | $spl114)),
  inference(subsumption_resolution,[],[f6721,f233])).
fof(f6721,plain,(
  ~p(s(bool,'T_0')) | ($spl26 | $spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4714,f6550,f317])).
fof(f8043,plain,(
  $false | ($spl30 | $spl99 | $spl114)),
  inference(subsumption_resolution,[],[f6724,f6550])).
fof(f6724,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | ($spl30 | $spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4715,f6550,f317])).
fof(f8042,plain,(
  $false | ($spl90 | $spl114)),
  inference(subsumption_resolution,[],[f6725,f6550])).
fof(f6725,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | ($spl90 | $spl114)),
  inference(unit_resulting_resolution,[],[f4914,f6550,f317])).
fof(f8041,plain,(
  $false | ($spl30 | $spl114)),
  inference(subsumption_resolution,[],[f6726,f6550])).
fof(f6726,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | ($spl30 | $spl114)),
  inference(unit_resulting_resolution,[],[f2871,f6550,f317])).
fof(f8040,plain,(
  $false | ($spl30 | $spl114)),
  inference(subsumption_resolution,[],[f6727,f6550])).
fof(f6727,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | ($spl30 | $spl114)),
  inference(unit_resulting_resolution,[],[f2872,f6550,f317])).
fof(f8039,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6740,f233])).
fof(f6740,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f697,f424,f6550,f344])).
fof(f8038,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f6742,f6550])).
fof(f6742,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f5007,f424,f6550,f344])).
fof(f5007,plain,(
  sP5('T_0',f(s(bool,'F_0')),'F_0') | $spl99),
  inference(unit_resulting_resolution,[],[f233,f4712,f361])).
fof(f8037,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6743,f6550])).
fof(f6743,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | $spl114),
  inference(unit_resulting_resolution,[],[f704,f424,f6550,f344])).
fof(f8036,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6744,f6550])).
fof(f6744,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | $spl114),
  inference(unit_resulting_resolution,[],[f705,f424,f6550,f344])).
fof(f8035,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6780,f233])).
fof(f6780,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f1359,f424,f6550,f344])).
fof(f8034,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f6781,f233])).
fof(f6781,plain,(
  ~p(s(bool,'T_0')) | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f5007,f424,f6550,f344])).
fof(f8033,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6782,f233])).
fof(f6782,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f704,f424,f6550,f344])).
fof(f8032,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6783,f233])).
fof(f6783,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f705,f424,f6550,f344])).
fof(f8031,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6822,f7092])).
fof(f7092,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f6550,f359])).
fof(f6822,plain,(
  ~sP2('F_0','T_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f723,f435,f428,f6550,f345])).
fof(f8030,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6823,f7092])).
fof(f6823,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f720,f435,f428,f6550,f345])).
fof(f8029,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6824,f7092])).
fof(f6824,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f721,f435,f428,f6550,f345])).
fof(f8028,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f6825,f7092])).
fof(f6825,plain,(
  ~sP2(f(s(bool,'F_0')),'T_0','T_0') | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4724,f435,f428,f6550,f345])).
fof(f4724,plain,(
  ~sP5('T_0','T_0',f(s(bool,'F_0'))) | $spl99),
  inference(unit_resulting_resolution,[],[f233,f4047,f362])).
fof(f8027,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6826,f7092])).
fof(f6826,plain,(
  ~sP2('F_0','T_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f723,f436,f428,f6550,f345])).
fof(f8026,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6827,f7092])).
fof(f6827,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f720,f437,f428,f6550,f345])).
fof(f8025,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6828,f7092])).
fof(f6828,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f721,f438,f428,f6550,f345])).
fof(f8024,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6829,f7092])).
fof(f6829,plain,(
  ~sP2('F_0','T_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f723,f436,f429,f6550,f345])).
fof(f8023,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6834,f7092])).
fof(f6834,plain,(
  ~sP2('F_0','T_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f723,f435,f429,f6550,f345])).
fof(f8022,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6838,f7092])).
fof(f6838,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f720,f437,f430,f6550,f345])).
fof(f8021,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6840,f7092])).
fof(f6840,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f720,f435,f430,f6550,f345])).
fof(f8020,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6842,f7092])).
fof(f6842,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f721,f438,f431,f6550,f345])).
fof(f8019,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6844,f7092])).
fof(f6844,plain,(
  ~sP2('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f721,f435,f431,f6550,f345])).
fof(f8018,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6858,f7032])).
fof(f7032,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f6550,f349])).
fof(f6858,plain,(
  ~sP4('T_0','F_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f723,f435,f442,f6550,f345])).
fof(f8017,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6859,f7032])).
fof(f6859,plain,(
  ~sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f720,f435,f442,f6550,f345])).
fof(f8016,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6860,f7032])).
fof(f6860,plain,(
  ~sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f721,f435,f442,f6550,f345])).
fof(f8015,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f6861,f7032])).
fof(f6861,plain,(
  ~sP4('T_0',f(s(bool,'F_0')),'T_0') | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4724,f435,f442,f6550,f345])).
fof(f8014,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6866,f7032])).
fof(f6866,plain,(
  ~sP4('T_0','F_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f723,f436,f442,f6550,f345])).
fof(f8013,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6867,f7032])).
fof(f6867,plain,(
  ~sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f720,f437,f442,f6550,f345])).
fof(f8012,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6868,f7032])).
fof(f6868,plain,(
  ~sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f721,f438,f442,f6550,f345])).
fof(f8011,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6874,f7086])).
fof(f7086,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f6550,f353])).
fof(f6874,plain,(
  ~sP3('T_0','F_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f723,f428,f442,f6550,f345])).
fof(f8010,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6875,f7086])).
fof(f6875,plain,(
  ~sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f720,f428,f442,f6550,f345])).
fof(f8009,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6876,f7086])).
fof(f6876,plain,(
  ~sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f721,f428,f442,f6550,f345])).
fof(f8008,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f6877,f7086])).
fof(f6877,plain,(
  ~sP3('T_0',f(s(bool,'F_0')),'T_0') | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4724,f428,f442,f6550,f345])).
fof(f8007,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6886,f7086])).
fof(f6886,plain,(
  ~sP3('T_0','F_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f723,f429,f442,f6550,f345])).
fof(f8006,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6894,f7086])).
fof(f6894,plain,(
  ~sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f720,f430,f442,f6550,f345])).
fof(f8005,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6902,f7086])).
fof(f6902,plain,(
  ~sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f721,f431,f442,f6550,f345])).
fof(f8004,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6910,f7032])).
fof(f6910,plain,(
  ~sP4('T_0','F_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f723,f435,f443,f6550,f345])).
fof(f8003,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6911,f7032])).
fof(f6911,plain,(
  ~sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f720,f435,f443,f6550,f345])).
fof(f8002,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6912,f7032])).
fof(f6912,plain,(
  ~sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f721,f435,f443,f6550,f345])).
fof(f8001,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f6913,f7032])).
fof(f6913,plain,(
  ~sP4('T_0',f(s(bool,'F_0')),'T_0') | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4724,f435,f443,f6550,f345])).
fof(f8000,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6914,f7032])).
fof(f6914,plain,(
  ~sP4('T_0','F_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f723,f436,f443,f6550,f345])).
fof(f7999,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6915,f7032])).
fof(f6915,plain,(
  ~sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f720,f437,f443,f6550,f345])).
fof(f7998,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6916,f7032])).
fof(f6916,plain,(
  ~sP4('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f721,f438,f443,f6550,f345])).
fof(f7997,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6917,f7086])).
fof(f6917,plain,(
  ~sP3('T_0','F_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f723,f428,f443,f6550,f345])).
fof(f7996,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6918,f7086])).
fof(f6918,plain,(
  ~sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f720,f428,f443,f6550,f345])).
fof(f7995,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6919,f7086])).
fof(f6919,plain,(
  ~sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f721,f428,f443,f6550,f345])).
fof(f7994,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f6920,f7086])).
fof(f6920,plain,(
  ~sP3('T_0',f(s(bool,'F_0')),'T_0') | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4724,f428,f443,f6550,f345])).
fof(f7993,plain,(
  $false | ($spl32 | $spl114)),
  inference(subsumption_resolution,[],[f6926,f7729])).
fof(f7729,plain,(
  ( ! [X0] : (~sP5(X0,'T_0','F_0')) ) | ($spl32 | $spl114)),
  inference(unit_resulting_resolution,[],[f424,f6550,f2240])).
fof(f6926,plain,(
  ( ! [X0] : (sP5(X0,'T_0','F_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f436,f428,f443,f6550,f345])).
fof(f7992,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6928,f7152])).
fof(f7152,plain,(
  ( ! [X0] : (~sP5(X0,'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f465,f6550,f362])).
fof(f6928,plain,(
  ( ! [X0] : (sP5(X0,'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f437,f428,f443,f6550,f345])).
fof(f7991,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6930,f7154])).
fof(f7154,plain,(
  ( ! [X0] : (~sP5(X0,'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f466,f6550,f362])).
fof(f6930,plain,(
  ( ! [X0] : (sP5(X0,'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f438,f428,f443,f6550,f345])).
fof(f7990,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6932,f7086])).
fof(f6932,plain,(
  ~sP3('T_0','F_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f723,f429,f443,f6550,f345])).
fof(f7989,plain,(
  $false | ($spl32 | $spl114)),
  inference(subsumption_resolution,[],[f6933,f7729])).
fof(f6933,plain,(
  ( ! [X0] : (sP5(X0,'T_0','F_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f436,f429,f443,f6550,f345])).
fof(f7988,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6935,f723])).
fof(f6935,plain,(
  sP5('T_0','T_0','F_0') | $spl114),
  inference(unit_resulting_resolution,[],[f435,f429,f443,f6550,f345])).
fof(f7987,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6937,f7086])).
fof(f6937,plain,(
  ~sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f720,f430,f443,f6550,f345])).
fof(f7986,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6938,f7152])).
fof(f6938,plain,(
  ( ! [X0] : (sP5(X0,'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f437,f430,f443,f6550,f345])).
fof(f7985,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6940,f720])).
fof(f6940,plain,(
  sP5('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | $spl114),
  inference(unit_resulting_resolution,[],[f435,f430,f443,f6550,f345])).
fof(f7984,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6942,f7086])).
fof(f6942,plain,(
  ~sP3('T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f721,f431,f443,f6550,f345])).
fof(f7983,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6943,f7154])).
fof(f6943,plain,(
  ( ! [X0] : (sP5(X0,'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f438,f431,f443,f6550,f345])).
fof(f7982,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6945,f721])).
fof(f6945,plain,(
  sP5('T_0','T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) | $spl114),
  inference(unit_resulting_resolution,[],[f435,f431,f443,f6550,f345])).
fof(f7981,plain,(
  $false | ($spl32 | $spl114)),
  inference(subsumption_resolution,[],[f6953,f7729])).
fof(f6953,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0','F_0') | $spl114),
  inference(unit_resulting_resolution,[],[f436,f433,f443,f6550,f345])).
fof(f7980,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6954,f7152])).
fof(f6954,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | $spl114),
  inference(unit_resulting_resolution,[],[f437,f433,f443,f6550,f345])).
fof(f7979,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6955,f7154])).
fof(f6955,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) | $spl114),
  inference(unit_resulting_resolution,[],[f438,f433,f443,f6550,f345])).
fof(f7978,plain,(
  $false | ($spl32 | $spl114)),
  inference(subsumption_resolution,[],[f6956,f7729])).
fof(f6956,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0','F_0') | $spl114),
  inference(unit_resulting_resolution,[],[f436,f434,f443,f6550,f345])).
fof(f7977,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6957,f7152])).
fof(f6957,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | $spl114),
  inference(unit_resulting_resolution,[],[f437,f434,f443,f6550,f345])).
fof(f7976,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6958,f7154])).
fof(f6958,plain,(
  sP5('const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)),'T_0','const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) | $spl114),
  inference(unit_resulting_resolution,[],[f438,f434,f443,f6550,f345])).
fof(f7975,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6982,f6550])).
fof(f6982,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | $spl114),
  inference(unit_resulting_resolution,[],[f430,f424,f6550,f348])).
fof(f7974,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6983,f6550])).
fof(f6983,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | $spl114),
  inference(unit_resulting_resolution,[],[f431,f424,f6550,f348])).
fof(f7973,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f6984,f6550])).
fof(f6984,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f5126,f424,f6550,f348])).
fof(f5126,plain,(
  sP4('T_0',f(s(bool,'F_0')),'F_0') | $spl99),
  inference(unit_resulting_resolution,[],[f5009,f343])).
fof(f5009,plain,(
  sP5('T_0','F_0',f(s(bool,'F_0'))) | $spl99),
  inference(unit_resulting_resolution,[],[f233,f4712,f361])).
fof(f7972,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6985,f6550])).
fof(f6985,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f432,f424,f6550,f348])).
fof(f7971,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6986,f6550])).
fof(f6986,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f433,f424,f6550,f348])).
fof(f7970,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f6987,f6550])).
fof(f6987,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f434,f424,f6550,f348])).
fof(f7969,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7004,f7032])).
fof(f7004,plain,(
  ( ! [X0,X1] : (~sP4(X0,X1,'F_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f424,f6550,f6550,f348])).
fof(f7968,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7006,f6550])).
fof(f7006,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f429,f424,f6550,f348])).
fof(f7967,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7007,f6550])).
fof(f7007,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f430,f424,f6550,f348])).
fof(f7966,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7008,f6550])).
fof(f7008,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f431,f424,f6550,f348])).
fof(f7965,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f7009,f233])).
fof(f7009,plain,(
  ~p(s(bool,'T_0')) | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f5126,f424,f6550,f348])).
fof(f7964,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7011,f6550])).
fof(f7011,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | $spl114),
  inference(unit_resulting_resolution,[],[f433,f424,f6550,f348])).
fof(f7963,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7012,f6550])).
fof(f7012,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | $spl114),
  inference(unit_resulting_resolution,[],[f434,f424,f6550,f348])).
fof(f7962,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7019,f7032])).
fof(f7019,plain,(
  ( ! [X0] : (~sP4('T_0',X0,'F_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f424,f233,f6550,f348])).
fof(f7961,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7030,f7032])).
fof(f7030,plain,(
  ( ! [X0,X1] : (~sP4(X0,X1,'F_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f424,f6550,f6550,f348])).
fof(f7960,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7035,f6550])).
fof(f7035,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | $spl114),
  inference(unit_resulting_resolution,[],[f437,f424,f6550,f352])).
fof(f7959,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7036,f6550])).
fof(f7036,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | $spl114),
  inference(unit_resulting_resolution,[],[f438,f424,f6550,f352])).
fof(f7958,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f7037,f6550])).
fof(f7037,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4810,f424,f6550,f352])).
fof(f4810,plain,(
  sP3('T_0',f(s(bool,'F_0')),'F_0') | $spl99),
  inference(unit_resulting_resolution,[],[f4723,f342])).
fof(f4723,plain,(
  sP5('F_0','T_0',f(s(bool,'F_0'))) | $spl99),
  inference(unit_resulting_resolution,[],[f424,f4047,f360])).
fof(f7957,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7038,f6550])).
fof(f7038,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f439,f424,f6550,f352])).
fof(f7956,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f7039,f233])).
fof(f7039,plain,(
  ~p(s(bool,'T_0')) | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4773,f424,f6550,f352])).
fof(f4773,plain,(
  sP3(f(s(bool,'F_0')),'T_0','F_0') | $spl99),
  inference(unit_resulting_resolution,[],[f4717,f342])).
fof(f4717,plain,(
  sP5('F_0',f(s(bool,'F_0')),'T_0') | $spl99),
  inference(unit_resulting_resolution,[],[f424,f4047,f360])).
fof(f7955,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7040,f6550])).
fof(f7040,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f440,f424,f6550,f352])).
fof(f7954,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7041,f6550])).
fof(f7041,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f441,f424,f6550,f352])).
fof(f7953,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7058,f7086])).
fof(f7058,plain,(
  ( ! [X0,X1] : (~sP3(X0,X1,'F_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f424,f6550,f6550,f352])).
fof(f7952,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7060,f6550])).
fof(f7060,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f436,f424,f6550,f352])).
fof(f7951,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7061,f6550])).
fof(f7061,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f437,f424,f6550,f352])).
fof(f7950,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7062,f6550])).
fof(f7062,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f438,f424,f6550,f352])).
fof(f7949,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f7063,f233])).
fof(f7063,plain,(
  ~p(s(bool,'T_0')) | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4810,f424,f6550,f352])).
fof(f7948,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f7065,f6550])).
fof(f7065,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4773,f424,f6550,f352])).
fof(f7947,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7066,f6550])).
fof(f7066,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | $spl114),
  inference(unit_resulting_resolution,[],[f440,f424,f6550,f352])).
fof(f7946,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7067,f6550])).
fof(f7067,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | $spl114),
  inference(unit_resulting_resolution,[],[f441,f424,f6550,f352])).
fof(f7945,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7073,f7086])).
fof(f7073,plain,(
  ( ! [X0] : (~sP3('T_0',X0,'F_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f424,f233,f6550,f352])).
fof(f7944,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7084,f7086])).
fof(f7084,plain,(
  ( ! [X0,X1] : (~sP3(X0,X1,'F_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f424,f6550,f6550,f352])).
fof(f7943,plain,(
  $false | ($spl90 | $spl114)),
  inference(subsumption_resolution,[],[f7103,f4041])).
fof(f7103,plain,(
  s(bool,'T_0') != s(bool,g(s(bool,'F_0'))) | ($spl90 | $spl114)),
  inference(unit_resulting_resolution,[],[f4081,f6550,f361])).
fof(f7942,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7105,f474])).
fof(f7105,plain,(
  s(bool,'F_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | $spl114),
  inference(unit_resulting_resolution,[],[f734,f6550,f361])).
fof(f7941,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7106,f475])).
fof(f7106,plain,(
  s(bool,'F_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) | $spl114),
  inference(unit_resulting_resolution,[],[f735,f6550,f361])).
fof(f7940,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f7107,f4712])).
fof(f7107,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f5008,f6550,f361])).
fof(f5008,plain,(
  ~sP5('F_0','F_0',f(s(bool,'F_0'))) | $spl99),
  inference(unit_resulting_resolution,[],[f424,f4712,f363])).
fof(f7939,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f7108,f4712])).
fof(f7108,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f5006,f6550,f361])).
fof(f5006,plain,(
  ~sP5('F_0',f(s(bool,'F_0')),'F_0') | $spl99),
  inference(unit_resulting_resolution,[],[f424,f4712,f363])).
fof(f7938,plain,(
  $false | ($spl90 | $spl114)),
  inference(subsumption_resolution,[],[f7109,f4041])).
fof(f7109,plain,(
  s(bool,'T_0') != s(bool,g(s(bool,'F_0'))) | ($spl90 | $spl114)),
  inference(unit_resulting_resolution,[],[f4079,f6550,f361])).
fof(f7937,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7110,f474])).
fof(f7110,plain,(
  s(bool,'F_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | $spl114),
  inference(unit_resulting_resolution,[],[f732,f6550,f361])).
fof(f7936,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7111,f475])).
fof(f7111,plain,(
  s(bool,'F_0') != s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) | $spl114),
  inference(unit_resulting_resolution,[],[f733,f6550,f361])).
fof(f7935,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7128,f464])).
fof(f7128,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl114),
  inference(unit_resulting_resolution,[],[f697,f6550,f362])).
fof(f7934,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7129,f465])).
fof(f7129,plain,(
  s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | $spl114),
  inference(unit_resulting_resolution,[],[f695,f6550,f362])).
fof(f7933,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7130,f466])).
fof(f7130,plain,(
  s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) | $spl114),
  inference(unit_resulting_resolution,[],[f696,f6550,f362])).
fof(f7932,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f7131,f4047])).
fof(f7131,plain,(
  s(bool,'T_0') = s(bool,f(s(bool,'F_0'))) | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4723,f6550,f362])).
fof(f7931,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7132,f464])).
fof(f7132,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl114),
  inference(unit_resulting_resolution,[],[f694,f6550,f362])).
fof(f7930,plain,(
  $false | ($spl99 | $spl114)),
  inference(subsumption_resolution,[],[f7133,f4047])).
fof(f7133,plain,(
  s(bool,'T_0') = s(bool,f(s(bool,'F_0'))) | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4717,f6550,f362])).
fof(f7929,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7134,f465])).
fof(f7134,plain,(
  s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | $spl114),
  inference(unit_resulting_resolution,[],[f692,f6550,f362])).
fof(f7928,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7135,f466])).
fof(f7135,plain,(
  s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) | $spl114),
  inference(unit_resulting_resolution,[],[f693,f6550,f362])).
fof(f7927,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7146,f464])).
fof(f7146,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl114),
  inference(unit_resulting_resolution,[],[f1293,f6550,f362])).
fof(f7926,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7147,f464])).
fof(f7147,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl114),
  inference(unit_resulting_resolution,[],[f1296,f6550,f362])).
fof(f7925,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7148,f465])).
fof(f7148,plain,(
  s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | $spl114),
  inference(unit_resulting_resolution,[],[f1294,f6550,f362])).
fof(f7924,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7149,f466])).
fof(f7149,plain,(
  s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) | $spl114),
  inference(unit_resulting_resolution,[],[f1295,f6550,f362])).
fof(f7923,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7150,f465])).
fof(f7150,plain,(
  s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | $spl114),
  inference(unit_resulting_resolution,[],[f1297,f6550,f362])).
fof(f7922,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7151,f466])).
fof(f7151,plain,(
  s(bool,'T_0') = s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))) | $spl114),
  inference(unit_resulting_resolution,[],[f1298,f6550,f362])).
fof(f7921,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7175,f7332])).
fof(f7332,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f6550,f6550,f6550,f377])).
fof(f7175,plain,(
  ( ! [X0,X1] : (~sP7(X0,X1,'F_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f424,f6550,f365])).
fof(f7920,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7184,f7332])).
fof(f7184,plain,(
  ( ! [X0,X1] : (~sP7(X0,'F_0',X1)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f424,f6550,f366])).
fof(f7919,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7187,f6550])).
fof(f7187,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f449,f519,f6550,f367])).
fof(f7918,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7188,f6550])).
fof(f7188,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f445,f519,f6550,f367])).
fof(f7917,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7190,f6550])).
fof(f7190,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | $spl114),
  inference(unit_resulting_resolution,[],[f447,f519,f6550,f367])).
fof(f7916,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7191,f6550])).
fof(f7191,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | $spl114),
  inference(unit_resulting_resolution,[],[f448,f519,f6550,f367])).
fof(f7915,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7196,f7278])).
fof(f7278,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f6550,f372])).
fof(f7196,plain,(
  ~sP6('F_0','T_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f519,f233,f6550,f367])).
fof(f7914,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7206,f7278])).
fof(f7206,plain,(
  ( ! [X0] : (~sP6(X0,'F_0','T_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f518,f6550,f6550,f367])).
fof(f7913,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7208,f7278])).
fof(f7208,plain,(
  ( ! [X0] : (~sP6('F_0',X0,'T_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f519,f6550,f6550,f367])).
fof(f7912,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7211,f6550])).
fof(f7211,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f446,f518,f6550,f367])).
fof(f7911,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7212,f6550])).
fof(f7212,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f445,f518,f6550,f367])).
fof(f7910,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7214,f6550])).
fof(f7214,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | $spl114),
  inference(unit_resulting_resolution,[],[f450,f518,f6550,f367])).
fof(f7909,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7215,f6550])).
fof(f7215,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | $spl114),
  inference(unit_resulting_resolution,[],[f451,f518,f6550,f367])).
fof(f7908,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7221,f7278])).
fof(f7221,plain,(
  ~sP6('T_0','F_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f518,f233,f6550,f367])).
fof(f7907,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7231,f7278])).
fof(f7231,plain,(
  ( ! [X0] : (~sP6(X0,'F_0','T_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f518,f6550,f6550,f367])).
fof(f7906,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7233,f7278])).
fof(f7233,plain,(
  ( ! [X0] : (~sP6('F_0',X0,'T_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f519,f6550,f6550,f367])).
fof(f7905,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7237,f6550])).
fof(f7237,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | $spl114),
  inference(unit_resulting_resolution,[],[f447,f424,f6550,f371])).
fof(f7904,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7238,f6550])).
fof(f7238,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | $spl114),
  inference(unit_resulting_resolution,[],[f448,f424,f6550,f371])).
fof(f7903,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7239,f6550])).
fof(f7239,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f449,f424,f6550,f371])).
fof(f7902,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7240,f6550])).
fof(f7240,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f450,f424,f6550,f371])).
fof(f7901,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7241,f6550])).
fof(f7241,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f451,f424,f6550,f371])).
fof(f7900,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7255,f7278])).
fof(f7255,plain,(
  ( ! [X0,X1] : (~sP6(X0,X1,'F_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f424,f6550,f6550,f371])).
fof(f7899,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7257,f6550])).
fof(f7257,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f446,f424,f6550,f371])).
fof(f7898,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7258,f6550])).
fof(f7258,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f447,f424,f6550,f371])).
fof(f7897,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7259,f6550])).
fof(f7259,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f448,f424,f6550,f371])).
fof(f7896,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7261,f6550])).
fof(f7261,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | $spl114),
  inference(unit_resulting_resolution,[],[f450,f424,f6550,f371])).
fof(f7895,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7262,f6550])).
fof(f7262,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | $spl114),
  inference(unit_resulting_resolution,[],[f451,f424,f6550,f371])).
fof(f7894,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7267,f7278])).
fof(f7267,plain,(
  ( ! [X0] : (~sP6('T_0',X0,'F_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f424,f233,f6550,f371])).
fof(f7893,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7276,f7278])).
fof(f7276,plain,(
  ( ! [X0,X1] : (~sP6(X0,X1,'F_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f424,f6550,f6550,f371])).
fof(f7892,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7281,f6550])).
fof(f7281,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f519,f233,f6550,f377])).
fof(f7891,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7283,f6550])).
fof(f7283,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f519,f6550,f6550,f377])).
fof(f7890,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7284,f233])).
fof(f7284,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f851,f6550,f6550,f377])).
fof(f7889,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7285,f233])).
fof(f7285,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f519,f233,f6550,f377])).
fof(f7888,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7291,f233])).
fof(f7291,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f518,f6550,f6550,f377])).
fof(f7887,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7292,f233])).
fof(f7292,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f519,f6550,f6550,f377])).
fof(f7886,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7298,f6550])).
fof(f7298,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f518,f233,f6550,f377])).
fof(f7885,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7300,f6550])).
fof(f7300,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f518,f6550,f6550,f377])).
fof(f7884,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7302,f233])).
fof(f7302,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f851,f6550,f6550,f377])).
fof(f7883,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7303,f233])).
fof(f7303,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f518,f233,f6550,f377])).
fof(f7882,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7309,f233])).
fof(f7309,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f518,f6550,f6550,f377])).
fof(f7881,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7310,f233])).
fof(f7310,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f519,f6550,f6550,f377])).
fof(f7880,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7317,f233])).
fof(f7317,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f851,f233,f6550,f377])).
fof(f7879,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7318,f6550])).
fof(f7318,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f518,f6550,f6550,f377])).
fof(f7878,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7320,f233])).
fof(f7320,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f851,f6550,f6550,f377])).
fof(f7877,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7322,f233])).
fof(f7322,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f851,f233,f6550,f377])).
fof(f7876,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7328,f6550])).
fof(f7328,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f519,f6550,f6550,f377])).
fof(f7875,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7329,f233])).
fof(f7329,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f851,f6550,f6550,f377])).
fof(f7874,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7335,f6550])).
fof(f7335,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | $spl114),
  inference(unit_resulting_resolution,[],[f597,f424,f6550,f380])).
fof(f7873,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7336,f6550])).
fof(f7336,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | $spl114),
  inference(unit_resulting_resolution,[],[f598,f424,f6550,f380])).
fof(f7872,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7337,f6550])).
fof(f7337,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f528,f424,f6550,f380])).
fof(f7871,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7338,f6550])).
fof(f7338,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f600,f424,f6550,f380])).
fof(f7870,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7339,f6550])).
fof(f7339,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f601,f424,f6550,f380])).
fof(f7869,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7355,f6550])).
fof(f7355,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f521,f424,f6550,f380])).
fof(f7868,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7356,f6550])).
fof(f7356,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f597,f424,f6550,f380])).
fof(f7867,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7357,f6550])).
fof(f7357,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f598,f424,f6550,f380])).
fof(f7866,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7359,f6550])).
fof(f7359,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | $spl114),
  inference(unit_resulting_resolution,[],[f600,f424,f6550,f380])).
fof(f7865,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7360,f6550])).
fof(f7360,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | $spl114),
  inference(unit_resulting_resolution,[],[f601,f424,f6550,f380])).
fof(f7864,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7383,f7719])).
fof(f7719,plain,(
  ( ! [X0,X1] : (sP9('F_0',X0,X1)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f454,f6550,f416])).
fof(f7383,plain,(
  ( ! [X0,X1] : (~sP9('F_0',X0,X1)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f424,f6550,f381])).
fof(f7863,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7392,f7719])).
fof(f7392,plain,(
  ( ! [X0,X1] : (~sP9('F_0',X0,X1)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f424,f6550,f382])).
fof(f7862,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7402,f7430])).
fof(f7430,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f6550,f390])).
fof(f7402,plain,(
  ~sP8('F_0','T_0','F_0') | $spl114),
  inference(unit_resulting_resolution,[],[f533,f424,f6550,f385])).
fof(f7861,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7410,f7430])).
fof(f7410,plain,(
  ~sP8('F_0','F_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f532,f424,f6550,f386])).
fof(f7860,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7426,f7430])).
fof(f7426,plain,(
  ( ! [X0] : (~sP8(X0,'F_0','F_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f424,f424,f6550,f388])).
fof(f7859,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7434,f233])).
fof(f7434,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f920,f6550,f393])).
fof(f7858,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7439,f233])).
fof(f7439,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f532,f6550,f393])).
fof(f7857,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7440,f6550])).
fof(f7440,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f533,f6550,f393])).
fof(f7856,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7448,f233])).
fof(f7448,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f920,f6550,f394])).
fof(f7855,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7453,f6550])).
fof(f7453,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f532,f6550,f394])).
fof(f7854,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7454,f233])).
fof(f7454,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f533,f6550,f394])).
fof(f7853,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7483,f7708])).
fof(f7708,plain,(
  ( ! [X0,X1] : (sP11('F_0',X0,X1)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f461,f6550,f415])).
fof(f7483,plain,(
  ( ! [X0,X1] : (~sP11('F_0',X0,X1)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f424,f6550,f399])).
fof(f7852,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7486,f6550])).
fof(f7486,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f461,f551,f6550,f402])).
fof(f7851,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7487,f6550])).
fof(f7487,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f460,f551,f6550,f402])).
fof(f7850,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7489,f6550])).
fof(f7489,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | $spl114),
  inference(unit_resulting_resolution,[],[f458,f551,f6550,f402])).
fof(f7849,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7490,f6550])).
fof(f7490,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | $spl114),
  inference(unit_resulting_resolution,[],[f459,f551,f6550,f402])).
fof(f7848,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7495,f7613])).
fof(f7613,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f6550,f407])).
fof(f7495,plain,(
  ~sP10('F_0','T_0','T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f551,f233,f6550,f402])).
fof(f7847,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7505,f7613])).
fof(f7505,plain,(
  ( ! [X0] : (~sP10('F_0',X0,'F_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f547,f6550,f6550,f402])).
fof(f7846,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7507,f7613])).
fof(f7507,plain,(
  ( ! [X0] : (~sP10('F_0','T_0',X0)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f551,f6550,f6550,f402])).
fof(f7845,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7522,f7613])).
fof(f7522,plain,(
  ( ! [X0] : (~sP10('F_0',X0,'F_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f547,f6550,f6550,f402])).
fof(f7844,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7523,f7613])).
fof(f7523,plain,(
  ( ! [X0] : (~sP10('F_0','T_0',X0)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f551,f6550,f6550,f402])).
fof(f7843,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7544,f7613])).
fof(f7544,plain,(
  ~sP10('F_0','F_0','F_0') | $spl114),
  inference(unit_resulting_resolution,[],[f547,f424,f6550,f403])).
fof(f7842,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7561,f7613])).
fof(f7561,plain,(
  ~sP10('F_0','F_0','F_0') | $spl114),
  inference(unit_resulting_resolution,[],[f547,f424,f6550,f404])).
fof(f7841,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7583,f6550])).
fof(f7583,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | $spl114),
  inference(unit_resulting_resolution,[],[f458,f424,f6550,f405])).
fof(f7840,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7584,f6550])).
fof(f7584,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | $spl114),
  inference(unit_resulting_resolution,[],[f459,f424,f6550,f405])).
fof(f7839,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7585,f6550])).
fof(f7585,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f461,f424,f6550,f405])).
fof(f7838,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7586,f6550])).
fof(f7586,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f462,f424,f6550,f405])).
fof(f7837,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7587,f6550])).
fof(f7587,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f463,f424,f6550,f405])).
fof(f7836,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7590,f7613])).
fof(f7590,plain,(
  ( ! [X0,X1] : (~sP10(X0,'F_0',X1)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f6550,f424,f6550,f405])).
fof(f7835,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7603,f6550])).
fof(f7603,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f457,f424,f6550,f405])).
fof(f7834,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7604,f6550])).
fof(f7604,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f458,f424,f6550,f405])).
fof(f7833,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7605,f6550])).
fof(f7605,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f459,f424,f6550,f405])).
fof(f7832,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7607,f6550])).
fof(f7607,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | $spl114),
  inference(unit_resulting_resolution,[],[f462,f424,f6550,f405])).
fof(f7831,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7608,f6550])).
fof(f7608,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | $spl114),
  inference(unit_resulting_resolution,[],[f463,f424,f6550,f405])).
fof(f7830,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7609,f7613])).
fof(f7609,plain,(
  ( ! [X0] : (~sP10('T_0','F_0',X0)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f233,f424,f6550,f405])).
fof(f7829,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7611,f7613])).
fof(f7611,plain,(
  ( ! [X0,X1] : (~sP10(X0,'F_0',X1)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f6550,f424,f6550,f405])).
fof(f7828,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7628,f233])).
fof(f7628,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f974,f6550,f411])).
fof(f7827,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7633,f6550])).
fof(f7633,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl114),
  inference(unit_resulting_resolution,[],[f547,f6550,f411])).
fof(f7826,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7634,f233])).
fof(f7634,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f551,f6550,f411])).
fof(f7825,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7640,f233])).
fof(f7640,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f554,f424,f6550,f412])).
fof(f7824,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7641,f233])).
fof(f7641,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f576,f424,f6550,f412])).
fof(f7823,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7642,f233])).
fof(f7642,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f577,f424,f6550,f412])).
fof(f7822,plain,(
  $false | ($spl90 | $spl114)),
  inference(subsumption_resolution,[],[f7644,f6550])).
fof(f7644,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | ($spl90 | $spl114)),
  inference(unit_resulting_resolution,[],[f5286,f424,f6550,f412])).
fof(f7821,plain,(
  $false | ($spl90 | $spl114)),
  inference(subsumption_resolution,[],[f7645,f6550])).
fof(f7645,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | ($spl90 | $spl114)),
  inference(unit_resulting_resolution,[],[f5770,f424,f6550,f412])).
fof(f5770,plain,(
  ( ! [X0] : (sP11(g(s(bool,'F_0')),X0,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) ) | $spl90),
  inference(unit_resulting_resolution,[],[f458,f4157])).
fof(f4157,plain,(
  ( ! [X33,X34] : (sP11(g(s(bool,'F_0')),X33,X34) | ~sP10(g(s(bool,'F_0')),X33,X34)) ) | $spl90),
  inference(subsumption_resolution,[],[f4117,f233])).
fof(f4117,plain,(
  ( ! [X33,X34] : (~p(s(bool,'T_0')) | ~sP10(g(s(bool,'F_0')),X33,X34) | sP11(g(s(bool,'F_0')),X33,X34)) ) | $spl90),
  inference(superposition,[],[f415,f4041])).
fof(f7820,plain,(
  $false | ($spl90 | $spl114)),
  inference(subsumption_resolution,[],[f7646,f6550])).
fof(f7646,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | ($spl90 | $spl114)),
  inference(unit_resulting_resolution,[],[f5771,f424,f6550,f412])).
fof(f5771,plain,(
  ( ! [X0] : (sP11(g(s(bool,'F_0')),X0,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) ) | $spl90),
  inference(unit_resulting_resolution,[],[f459,f4157])).
fof(f7819,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7647,f6550])).
fof(f7647,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | $spl114),
  inference(unit_resulting_resolution,[],[f953,f424,f6550,f412])).
fof(f7818,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7648,f6550])).
fof(f7648,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | $spl114),
  inference(unit_resulting_resolution,[],[f954,f424,f6550,f412])).
fof(f7817,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7669,f6550])).
fof(f7669,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | $spl114),
  inference(unit_resulting_resolution,[],[f576,f424,f6550,f412])).
fof(f7816,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7670,f6550])).
fof(f7670,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | $spl114),
  inference(unit_resulting_resolution,[],[f577,f424,f6550,f412])).
fof(f7815,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7671,f233])).
fof(f7671,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f952,f424,f6550,f412])).
fof(f7814,plain,(
  $false | ($spl90 | $spl114)),
  inference(subsumption_resolution,[],[f7673,f6550])).
fof(f7673,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))) | ($spl90 | $spl114)),
  inference(unit_resulting_resolution,[],[f5770,f424,f6550,f412])).
fof(f7813,plain,(
  $false | ($spl90 | $spl114)),
  inference(subsumption_resolution,[],[f7674,f6550])).
fof(f7674,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))) | ($spl90 | $spl114)),
  inference(unit_resulting_resolution,[],[f5771,f424,f6550,f412])).
fof(f7812,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7675,f233])).
fof(f7675,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f953,f424,f6550,f412])).
fof(f7811,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7676,f233])).
fof(f7676,plain,(
  ~p(s(bool,'T_0')) | $spl114),
  inference(unit_resulting_resolution,[],[f954,f424,f6550,f412])).
fof(f7810,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7697,f457])).
fof(f7697,plain,(
  ( ! [X0] : (~sP10('F_0',X0,'F_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f547,f6550,f415])).
fof(f7809,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7698,f460])).
fof(f7698,plain,(
  ( ! [X0] : (~sP10('F_0','T_0',X0)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f551,f6550,f415])).
fof(f7808,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7712,f452])).
fof(f7712,plain,(
  ( ! [X0] : (~sP8('F_0',X0,'T_0')) ) | $spl114),
  inference(unit_resulting_resolution,[],[f532,f6550,f416])).
fof(f7807,plain,(
  $false | $spl114),
  inference(subsumption_resolution,[],[f7713,f453])).
fof(f7713,plain,(
  ( ! [X0] : (~sP8('F_0','T_0',X0)) ) | $spl114),
  inference(unit_resulting_resolution,[],[f533,f6550,f416])).
fof(f7774,plain,(
  $false | ($spl56 | $spl114)),
  inference(unit_resulting_resolution,[],[f554,f424,f6550,f2276])).
fof(f7768,plain,(
  $false | ($spl54 | $spl114)),
  inference(unit_resulting_resolution,[],[f974,f6550,f2273])).
fof(f7766,plain,(
  $false | ($spl50 | $spl114)),
  inference(unit_resulting_resolution,[],[f461,f424,f6550,f2267])).
fof(f7760,plain,(
  $false | ($spl46 | $spl114)),
  inference(unit_resulting_resolution,[],[f920,f6550,f2261])).
fof(f7758,plain,(
  $false | ($spl44 | $spl114)),
  inference(unit_resulting_resolution,[],[f920,f6550,f2258])).
fof(f7756,plain,(
  $false | ($spl40 | $spl114)),
  inference(unit_resulting_resolution,[],[f528,f424,f6550,f2252])).
fof(f7750,plain,(
  $false | ($spl38 | $spl114)),
  inference(unit_resulting_resolution,[],[f449,f424,f6550,f2249])).
fof(f7744,plain,(
  $false | ($spl36 | $spl114)),
  inference(unit_resulting_resolution,[],[f439,f424,f6550,f2246])).
fof(f7737,plain,(
  $false | ($spl34 | $spl114)),
  inference(unit_resulting_resolution,[],[f432,f424,f6550,f2243])).
fof(f7730,plain,(
  $false | ($spl32 | $spl114)),
  inference(unit_resulting_resolution,[],[f697,f424,f6550,f2240])).
fof(f7720,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f532,f454,f6550,f416])).
fof(f7718,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f533,f453,f6550,f416])).
fof(f7716,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f532,f452,f6550,f416])).
fof(f7709,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f547,f461,f6550,f415])).
fof(f7707,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f551,f460,f6550,f415])).
fof(f7705,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f551,f459,f6550,f415])).
fof(f7703,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f551,f458,f6550,f415])).
fof(f7701,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f547,f457,f6550,f415])).
fof(f7696,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f554,f424,f6550,f6550,f412])).
fof(f7683,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f952,f424,f233,f6550,f412])).
fof(f7667,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f554,f424,f6550,f6550,f412])).
fof(f7654,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f554,f424,f233,f6550,f412])).
fof(f7639,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f547,f6550,f6550,f411])).
fof(f7637,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f551,f233,f6550,f411])).
fof(f7632,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f547,f6550,f6550,f411])).
fof(f7630,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f974,f233,f6550,f411])).
fof(f7625,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f547,f424,f6550,f410])).
fof(f7620,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f547,f424,f424,f6550,f409])).
fof(f7614,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f962,f6550,f407])).
fof(f7612,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f457,f6550,f424,f6550,f405])).
fof(f7610,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f457,f233,f424,f6550,f405])).
fof(f7591,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f457,f6550,f424,f6550,f405])).
fof(f7589,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f461,f233,f424,f6550,f405])).
fof(f7568,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f547,f461,f424,f6550,f404])).
fof(f7564,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f547,f457,f424,f6550,f404])).
fof(f7551,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f547,f461,f424,f6550,f403])).
fof(f7547,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f547,f457,f424,f6550,f403])).
fof(f7534,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f547,f461,f6550,f6550,f402])).
fof(f7532,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f551,f460,f6550,f6550,f402])).
fof(f7530,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f551,f459,f6550,f6550,f402])).
fof(f7528,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f551,f458,f6550,f6550,f402])).
fof(f7526,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f547,f457,f6550,f6550,f402])).
fof(f7508,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f461,f551,f6550,f6550,f402])).
fof(f7506,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f461,f547,f6550,f6550,f402])).
fof(f7496,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f461,f551,f233,f6550,f402])).
fof(f7484,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f952,f424,f6550,f399])).
fof(f7471,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f898,f424,f424,f6550,f395])).
fof(f7459,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f532,f6550,f6550,f394])).
fof(f7457,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f533,f233,f6550,f394])).
fof(f7452,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f532,f6550,f6550,f394])).
fof(f7450,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f920,f233,f6550,f394])).
fof(f7445,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f532,f6550,f6550,f393])).
fof(f7443,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f532,f233,f6550,f393])).
fof(f7438,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f532,f6550,f6550,f393])).
fof(f7436,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f920,f233,f6550,f393])).
fof(f7431,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f910,f6550,f390])).
fof(f7429,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f910,f6550,f389])).
fof(f7427,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f454,f424,f424,f6550,f388])).
fof(f7415,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f532,f454,f424,f6550,f386])).
fof(f7413,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f532,f452,f424,f6550,f386])).
fof(f7403,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f454,f533,f424,f6550,f385])).
fof(f7393,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f898,f424,f6550,f382])).
fof(f7384,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f898,f424,f6550,f381])).
fof(f7375,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f521,f424,f6550,f6550,f380])).
fof(f7366,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f521,f424,f233,f6550,f380])).
fof(f7354,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f521,f424,f6550,f6550,f380])).
fof(f7345,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f528,f424,f233,f6550,f380])).
fof(f7333,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f518,f6550,f6550,f6550,f377])).
fof(f7331,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f519,f233,f6550,f6550,f377])).
fof(f7326,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f518,f6550,f233,f6550,f377])).
fof(f7324,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f851,f233,f233,f6550,f377])).
fof(f7315,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f518,f6550,f6550,f6550,f377])).
fof(f7313,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f518,f233,f6550,f6550,f377])).
fof(f7308,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f518,f6550,f233,f6550,f377])).
fof(f7306,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f518,f233,f233,f6550,f377])).
fof(f7297,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f518,f6550,f6550,f6550,f377])).
fof(f7295,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f518,f233,f6550,f6550,f377])).
fof(f7290,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f519,f6550,f233,f6550,f377])).
fof(f7288,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f519,f233,f233,f6550,f377])).
fof(f7279,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f839,f6550,f372])).
fof(f7277,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f446,f424,f6550,f6550,f371])).
fof(f7268,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f446,f424,f233,f6550,f371])).
fof(f7256,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f446,f424,f6550,f6550,f371])).
fof(f7247,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f449,f424,f233,f6550,f371])).
fof(f7234,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f449,f519,f6550,f6550,f367])).
fof(f7232,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f446,f518,f6550,f6550,f367])).
fof(f7222,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f446,f518,f233,f6550,f367])).
fof(f7209,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f449,f519,f6550,f6550,f367])).
fof(f7207,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f446,f518,f6550,f6550,f367])).
fof(f7197,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f449,f519,f233,f6550,f367])).
fof(f7185,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f528,f424,f6550,f366])).
fof(f7176,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f521,f424,f6550,f365])).
fof(f7167,plain,(
  $false | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4717,f4047,f6550,f362])).
fof(f7165,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f694,f464,f6550,f362])).
fof(f7163,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f693,f466,f6550,f362])).
fof(f7161,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f692,f465,f6550,f362])).
fof(f7159,plain,(
  $false | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4723,f4047,f6550,f362])).
fof(f7157,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f697,f464,f6550,f362])).
fof(f7155,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f696,f466,f6550,f362])).
fof(f7153,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f695,f465,f6550,f362])).
fof(f7127,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f735,f475,f6550,f361])).
fof(f7125,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f734,f474,f6550,f361])).
fof(f7123,plain,(
  $false | ($spl90 | $spl114)),
  inference(unit_resulting_resolution,[],[f4081,f4041,f6550,f361])).
fof(f7121,plain,(
  $false | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f5008,f4712,f6550,f361])).
fof(f7119,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f733,f475,f6550,f361])).
fof(f7117,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f732,f474,f6550,f361])).
fof(f7115,plain,(
  $false | ($spl90 | $spl114)),
  inference(unit_resulting_resolution,[],[f4079,f4041,f6550,f361])).
fof(f7113,plain,(
  $false | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f5006,f4712,f6550,f361])).
fof(f7802,plain,(
  $false | $spl114),
  inference(trivial_inequality_removal,[],[f7104])).
fof(f7104,plain,(
  s(bool,'F_0') != s(bool,'F_0') | $spl114),
  inference(unit_resulting_resolution,[],[f819,f6550,f361])).
fof(f7801,plain,(
  $false | $spl114),
  inference(trivial_inequality_removal,[],[f7102])).
fof(f7102,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl114),
  inference(unit_resulting_resolution,[],[f810,f6550,f361])).
fof(f7093,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f814,f6550,f359])).
fof(f7091,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f814,f6550,f358])).
fof(f7089,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f814,f6550,f357])).
fof(f7087,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f798,f6550,f353])).
fof(f7085,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f436,f424,f6550,f6550,f352])).
fof(f7074,plain,(
  $false | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4810,f424,f233,f6550,f352])).
fof(f7059,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f436,f424,f6550,f6550,f352])).
fof(f7048,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f439,f424,f233,f6550,f352])).
fof(f7033,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f773,f6550,f349])).
fof(f7031,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f429,f424,f6550,f6550,f348])).
fof(f7020,plain,(
  $false | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f5126,f424,f233,f6550,f348])).
fof(f7005,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f429,f424,f6550,f6550,f348])).
fof(f6994,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f432,f424,f233,f6550,f348])).
fof(f6946,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f721,f435,f431,f443,f6550,f345])).
fof(f6944,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f721,f438,f431,f443,f6550,f345])).
fof(f6941,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f720,f435,f430,f443,f6550,f345])).
fof(f6939,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f720,f437,f430,f443,f6550,f345])).
fof(f6936,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f723,f435,f429,f443,f6550,f345])).
fof(f6934,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f723,f436,f429,f443,f6550,f345])).
fof(f6931,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f721,f438,f428,f443,f6550,f345])).
fof(f6929,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f720,f437,f428,f443,f6550,f345])).
fof(f6927,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f723,f436,f428,f443,f6550,f345])).
fof(f6925,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f723,f435,f428,f443,f6550,f345])).
fof(f6906,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f721,f435,f431,f442,f6550,f345])).
fof(f6904,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f721,f438,f431,f442,f6550,f345])).
fof(f6898,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f720,f435,f430,f442,f6550,f345])).
fof(f6896,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f720,f437,f430,f442,f6550,f345])).
fof(f6890,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f723,f435,f429,f442,f6550,f345])).
fof(f6888,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f723,f436,f429,f442,f6550,f345])).
fof(f6885,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f721,f438,f428,f442,f6550,f345])).
fof(f6883,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f720,f437,f428,f442,f6550,f345])).
fof(f6881,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f723,f436,f428,f442,f6550,f345])).
fof(f6879,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f723,f435,f428,f442,f6550,f345])).
fof(f6821,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f697,f424,f6550,f6550,f344])).
fof(f6795,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f1359,f424,f233,f6550,f344])).
fof(f6778,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f697,f424,f6550,f6550,f344])).
fof(f6752,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f697,f424,f233,f6550,f344])).
fof(f6739,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f479,f424,f6550,f321])).
fof(f6735,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f479,f424,f6550,f318])).
fof(f6731,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f501,f6550,f6550,f317])).
fof(f6729,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f501,f233,f6550,f317])).
fof(f6717,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f501,f6550,f6550,f317])).
fof(f6715,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f508,f233,f6550,f317])).
fof(f6703,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f513,f6550,f303])).
fof(f6701,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f513,f6550,f302])).
fof(f6699,plain,(
  $false | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f6550,f4047,f6550,f290])).
fof(f6697,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f6550,f464,f6550,f290])).
fof(f6695,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f6550,f466,f6550,f290])).
fof(f6693,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f6550,f465,f6550,f290])).
fof(f6691,plain,(
  $false | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f233,f4047,f6550,f290])).
fof(f6689,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f233,f464,f6550,f290])).
fof(f6687,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f233,f466,f6550,f290])).
fof(f6685,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f233,f465,f6550,f290])).
fof(f6681,plain,(
  $false | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f6550,f4047,f6550,f290])).
fof(f6679,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f6550,f464,f6550,f290])).
fof(f6677,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f6550,f466,f6550,f290])).
fof(f6675,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f6550,f465,f6550,f290])).
fof(f6673,plain,(
  $false | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f233,f4047,f6550,f290])).
fof(f6671,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f233,f464,f6550,f290])).
fof(f6669,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f233,f466,f6550,f290])).
fof(f6667,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f233,f465,f6550,f290])).
fof(f6663,plain,(
  $false | ($spl99 | $spl114)),
  inference(unit_resulting_resolution,[],[f4712,f6550,f255])).
fof(f6661,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f465,f6550,f252])).
fof(f6659,plain,(
  $false | $spl114),
  inference(unit_resulting_resolution,[],[f424,f6550])).
fof(f6653,plain,(
  ( ! [X35,X34] : (sP1('F_0',X34) | s(bool,'T_0') = s(bool,X35) | s(bool,X34) = s(bool,X35)) ) | $spl116),
  inference(cnf_transformation,[],[f6653_D])).
fof(f6653_D,plain,(
  ( ! [X35,X34] : (sP1('F_0',X34) | s(bool,'T_0') = s(bool,X35) | s(bool,X34) = s(bool,X35)) ) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f6652,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,X33)) | sP1('F_0',X34) | s(bool,X34) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) )),
  inference(subsumption_resolution,[],[f6642,f251])).
fof(f6642,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,X33)) | sP1('F_0',X34) | s(bool,X34) = s(bool,X35) | s(bool,'T_0') = s(bool,X35) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f2288,f241])).
fof(f6549,plain,(
  ( ! [X35,X34] : (sP1(X34,'F_0') | s(bool,'T_0') = s(bool,X35) | s(bool,X34) = s(bool,X35)) ) | $spl112),
  inference(cnf_transformation,[],[f6549_D])).
fof(f6549_D,plain,(
  ( ! [X35,X34] : (sP1(X34,'F_0') | s(bool,'T_0') = s(bool,X35) | s(bool,X34) = s(bool,X35)) ) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f6548,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,X33)) | sP1(X34,'F_0') | s(bool,X34) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) )),
  inference(subsumption_resolution,[],[f6538,f251])).
fof(f6538,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,X33)) | sP1(X34,'F_0') | s(bool,X34) = s(bool,X35) | s(bool,'T_0') = s(bool,X35) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f2287,f241])).
fof(f5764,plain,(
  ( ! [X12] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12)))) ) | $spl110),
  inference(cnf_transformation,[],[f5764_D])).
fof(f5764_D,plain,(
  ( ! [X12] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12)))) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f5763,plain,(
  ( ! [X12,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11)))))) )),
  inference(subsumption_resolution,[],[f5740,f1246])).
fof(f5740,plain,(
  ( ! [X12,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11)))))) )),
  inference(superposition,[],[f1636,f1618])).
fof(f4648,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl107),
  inference(cnf_transformation,[],[f4648_D])).
fof(f4648_D,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ~$spl107),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl107])])).
fof(f3650,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(duplicate_literal_removal,[],[f3649])).
fof(f3649,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(condensation,[],[f3648])).
fof(f3648,plain,(
  ( ! [X10,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9)))))) )),
  inference(subsumption_resolution,[],[f3623,f2992])).
fof(f3623,plain,(
  ( ! [X10,X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9)))))) )),
  inference(superposition,[],[f1629,f1618])).
fof(f4640,plain,(
  $false | ($spl3 | $spl5 | $spl18)),
  inference(subsumption_resolution,[],[f4639,f4515])).
fof(f4515,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl5 | $spl18)),
  inference(global_subsumption,[],[f4308,f232,f231,f230,f233,f240,f241,f242,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1245,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1445,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f2305,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f2970,f2987,f2991,f2992,f3001,f3038,f3039,f3025,f3030,f3031,f3033,f3036,f3173,f3174,f3190,f3179,f3180,f3193,f3198,f3186,f3238,f3338,f3339,f3345,f3362,f3512,f3405,f3406,f3546,f3417,f3419,f3549,f3551,f3555,f3560,f3563,f3566,f3434,f3435,f3439,f3440,f3449,f3453,f3487,f3472,f3568,f3474,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3647,f3654,f3638,f3632,f3633,f3660,f3659,f3658,f3664,f3663,f3662,f2849,f3923,f3924,f3418,f3610,f3040,f3044,f3046,f3043,f3045,f3656,f3628,f3605,f3599,f3547,f3516,f3482,f3481,f3479,f3477,f3471,f3469,f3468,f3466,f3464,f3460,f3459,f3454,f3452,f3451,f3447,f3445,f3444,f3443,f3437,f3414,f3374,f3356,f3184,f3176,f3175,f3054,f2995,f2989,f2988,f2304,f1649,f1640,f1636,f1634,f1631,f1629,f1627,f1618,f292,f291,f264,f263,f262,f261,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039])).
fof(f3054,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl5),
  inference(backward_demodulation,[],[f3038,f2970])).
fof(f2970,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl5),
  inference(unit_resulting_resolution,[],[f1649,f293])).
fof(f4308,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl18),
  inference(equality_factoring,[],[f1665])).
fof(f4639,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f4638,f3038])).
fof(f4638,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f4264,f4519])).
fof(f4519,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl3 | $spl18)),
  inference(backward_demodulation,[],[f4518,f240])).
fof(f4518,plain,(
  ( ! [X13] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X13)))))) ) | ($spl3 | $spl18)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f240,f241,f242,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1245,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1445,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f2305,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f2987,f2991,f2992,f3001,f3038,f3039,f3025,f3030,f3031,f3033,f3036,f3157,f3173,f3174,f3190,f3179,f3180,f3193,f3198,f3186,f3238,f3338,f3339,f3345,f3362,f3511,f3512,f3405,f3406,f3546,f3417,f3419,f3549,f3551,f3555,f3560,f3563,f3566,f3434,f3435,f3439,f3440,f3449,f3453,f3487,f3472,f3568,f3474,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3647,f3654,f3638,f3632,f3633,f3660,f3659,f3658,f3664,f3663,f3662,f1665,f2849,f3922,f3923,f3924,f3418,f3925,f3610,f3040,f3044,f3046,f3043,f3045,f3656,f3628,f3605,f3599,f3547,f3516,f3482,f3481,f3479,f3477,f3471,f3469,f3468,f3466,f3464,f3460,f3459,f3454,f3928,f3452,f3451,f3447,f3445,f3444,f3443,f3437,f3414,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1640,f1636,f1634,f1631,f1629,f1627,f1618,f292,f291,f264,f263,f262,f261,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f4264,f4313,f4314,f4315,f4316,f4317,f4318,f4320,f4321,f4322,f4348,f4324,f4325,f4326,f4327,f4349,f4329,f4350,f4331,f4351,f4352,f4334,f4335,f4353,f4337,f4338,f4268,f4293,f4295,f4297,f4298,f4299,f4308,f4511,f4516,f4306,f4305,f4304,f4302,f4517,f4291,f4290,f4289,f4287,f4285])).
fof(f4285,plain,(
  ( ! [X13] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X13))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X13)))))) ) | $spl18),
  inference(superposition,[],[f240,f1665])).
fof(f4287,plain,(
  ( ! [X17,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X17))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int',X17) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16)))) ) | $spl18),
  inference(superposition,[],[f293,f1665])).
fof(f4289,plain,(
  ( ! [X21,X20] : (s('type.integer.int',X21) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X21))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20)))) ) | $spl18),
  inference(superposition,[],[f294,f1665])).
fof(f4290,plain,(
  ( ! [X23,X22] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22)))) ) | $spl18),
  inference(superposition,[],[f1245,f1665])).
fof(f4291,plain,(
  ( ! [X24,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24)))) ) | $spl18),
  inference(superposition,[],[f1246,f1665])).
fof(f4517,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | ($spl3 | $spl18)),
  inference(subsumption_resolution,[],[f4310,f4293])).
fof(f4310,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl18),
  inference(duplicate_literal_removal,[],[f4309])).
fof(f4309,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl18),
  inference(condensation,[],[f4292])).
fof(f4292,plain,(
  ( ! [X26,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26)))) ) | $spl18),
  inference(superposition,[],[f1632,f1665])).
fof(f4302,plain,(
  ( ! [X17,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X17))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))))) | s('type.integer.int',X17) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16)))) ) | $spl18),
  inference(superposition,[],[f293,f1665])).
fof(f4304,plain,(
  ( ! [X21,X20] : (s('type.integer.int',X21) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X21))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20)))) ) | $spl18),
  inference(superposition,[],[f294,f1665])).
fof(f4305,plain,(
  ( ! [X23,X22] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22)))) ) | $spl18),
  inference(superposition,[],[f1245,f1665])).
fof(f4306,plain,(
  ( ! [X24,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24)))) ) | $spl18),
  inference(superposition,[],[f1246,f1665])).
fof(f4516,plain,(
  ( ! [X26,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27)))) ) | ($spl3 | $spl18)),
  inference(global_subsumption,[],[f232,f231,f230,f233,f240,f241,f242,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1245,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1445,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1632,f1638,f1639,f1646,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f2305,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f2987,f2991,f2992,f3001,f3038,f3039,f3025,f3030,f3031,f3033,f3036,f3157,f3173,f3174,f3190,f3179,f3180,f3193,f3198,f3186,f3238,f3338,f3339,f3345,f3362,f3511,f3512,f3405,f3406,f3546,f3417,f3419,f3549,f3551,f3555,f3560,f3563,f3566,f3434,f3435,f3439,f3440,f3449,f3453,f3487,f3472,f3568,f3474,f3569,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3647,f3654,f3638,f3632,f3633,f3660,f3659,f3658,f3664,f3663,f3662,f1665,f2849,f3922,f3923,f3924,f3418,f3925,f3610,f3040,f3044,f3046,f3043,f3045,f3656,f3628,f3605,f3599,f3547,f3516,f3482,f3481,f3479,f3477,f3471,f3469,f3468,f3466,f3464,f3460,f3459,f3454,f3928,f3452,f3451,f3447,f3445,f3444,f3443,f3437,f3414,f3374,f3356,f3184,f3176,f3175,f2995,f2989,f2988,f2304,f1640,f1636,f1634,f1631,f1629,f1627,f1618,f292,f291,f264,f263,f262,f261,f4007,f4006,f4005,f4028,f4027,f4026,f4035,f4036,f4037,f4038,f4039,f4264,f4313,f4314,f4315,f4316,f4317,f4318,f4320,f4321,f4322,f4348,f4324,f4325,f4326,f4327,f4349,f4329,f4350,f4331,f4351,f4352,f4334,f4335,f4353,f4337,f4338,f4268,f4293,f4295,f4297,f4298,f4299,f4308,f4511])).
fof(f4511,plain,(
  ( ! [X26,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26)))) ) | ($spl3 | $spl18)),
  inference(subsumption_resolution,[],[f4307,f4293])).
fof(f4307,plain,(
  ( ! [X26,X27] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X27))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26)))) ) | $spl18),
  inference(superposition,[],[f1632,f1665])).
fof(f4299,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10)))) ) | $spl18),
  inference(superposition,[],[f293,f1665])).
fof(f4298,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X9))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X9))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8)))) ) | $spl18),
  inference(superposition,[],[f1246,f1665])).
fof(f4297,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6)))) ) | $spl18),
  inference(superposition,[],[f1245,f1665])).
fof(f4295,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2)))) ) | $spl18),
  inference(superposition,[],[f263,f1665])).
fof(f4293,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | ($spl3 | $spl18)),
  inference(superposition,[],[f3922,f1665])).
fof(f4268,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl18),
  inference(superposition,[],[f1665,f1665])).
fof(f4338,plain,(
  ( ! [X21,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f3482])).
fof(f4337,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f3481])).
fof(f4353,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int',X16) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) ) | $spl18),
  inference(forward_demodulation,[],[f4336,f1445])).
fof(f4336,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X16) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f3479])).
fof(f4335,plain,(
  ( ! [X12,X11] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11))))))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X11)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f3477])).
fof(f4334,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f3471])).
fof(f4352,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25)))))) ) | $spl18),
  inference(forward_demodulation,[],[f4333,f1445])).
fof(f4333,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X26))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X26))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X25)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f3469])).
fof(f4351,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) ) | $spl18),
  inference(forward_demodulation,[],[f4332,f4264])).
fof(f4332,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X24))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X24))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f3468])).
fof(f4331,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X20) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f3466])).
fof(f4350,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X16) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) ) | $spl18),
  inference(forward_demodulation,[],[f4330,f1445])).
fof(f4330,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X16) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f3464])).
fof(f4329,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X8) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X7)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f3460])).
fof(f4349,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5)))))) ) | $spl18),
  inference(forward_demodulation,[],[f4328,f1445])).
fof(f4328,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f3459])).
fof(f4327,plain,(
  ( ! [X21,X20] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X21))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X21))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X20))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X20)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f3452])).
fof(f4326,plain,(
  ( ! [X19,X18] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X19))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X18))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X19))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X18)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f3451])).
fof(f4325,plain,(
  ( ! [X10,X11] : (s('type.integer.int',X11) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X10))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X10)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f3447])).
fof(f4324,plain,(
  ( ! [X24,X23] : (s('type.integer.int',X24) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X24))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X23)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f3437])).
fof(f4348,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl18),
  inference(forward_demodulation,[],[f4347,f4264])).
fof(f4347,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl18),
  inference(forward_demodulation,[],[f4323,f1445])).
fof(f4323,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f3414])).
fof(f4322,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f3374])).
fof(f4321,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f3184])).
fof(f4320,plain,(
  ( ! [X8,X7] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X8))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X8))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f3176])).
fof(f4318,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X5))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X4))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f2989])).
fof(f4317,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X7) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f1634])).
fof(f4316,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int',X11) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f1629])).
fof(f4315,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0)))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f1618])).
fof(f4314,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f264])).
fof(f4313,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl18),
  inference(backward_demodulation,[],[f4264,f263])).
fof(f3928,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X0))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl18),
  inference(global_subsumption,[],[f232,f231,f230,f233,f240,f241,f242,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1245,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1445,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1618,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1627,f1629,f1632,f1634,f1636,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2304,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f262,f261,f292,f291,f2305,f264,f263,f1640,f1631,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f2987,f2988,f2989,f2991,f2992,f3001,f2995,f3038,f3039,f3025,f3030,f3031,f3033,f3036,f3173,f3174,f3175,f3176,f3190,f3179,f3180,f3193,f3198,f3184,f3186,f3238,f3338,f3339,f3345,f3356,f3374,f3362,f3512,f3405,f3406,f3546,f3414,f3417,f3419,f3549,f3551,f3555,f3560,f3563,f3566,f3434,f3435,f3437,f3439,f3440,f3443,f3444,f3445,f3447,f3449,f3451,f3452,f3453,f3487,f3472,f3568,f3474,f3586,f3585,f3584,f3590,f3589,f3588,f3602,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3647,f3654,f3638,f3632,f3633,f3660,f3659,f3658,f3664,f3663,f3662,f1665,f2849,f3923,f3924,f3418,f3925,f3610,f3040,f3044,f3046,f3043,f3045,f3656,f3628,f3605,f3599,f3547,f3516,f3482,f3481,f3479,f3477,f3471,f3469,f3468,f3466,f3464,f3460,f3459,f3454])).
fof(f3925,plain,(
  ( ! [X3] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3)))))) ) | $spl18),
  inference(global_subsumption,[],[f232,f231,f230,f233,f240,f241,f242,f252,f251,f260,f259,f286,f290,f287,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1245,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1445,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1618,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1627,f1629,f1632,f1634,f1636,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2304,f2306,f1996,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f262,f261,f292,f291,f2305,f264,f263,f1640,f1631,f1876,f1997,f1548,f1546,f475,f474,f424,f256,f255,f2987,f2988,f2989,f2991,f2992,f3001,f2995,f3038,f3039,f3040,f3043,f3044,f3045,f3046,f3025,f3030,f3031,f3033,f3036,f3173,f3174,f3175,f3176,f3190,f3179,f3180,f3193,f3198,f3184,f3186,f3238,f3338,f3339,f3345,f3356,f3374,f3362,f3512,f3516,f3405,f3406,f3546,f3414,f3417,f3547,f3419,f3549,f3551,f3555,f3560,f3563,f3566,f3434,f3435,f3437,f3439,f3440,f3443,f3444,f3445,f3447,f3449,f3451,f3452,f3453,f3454,f3487,f3459,f3460,f3464,f3466,f3468,f3469,f3471,f3472,f3568,f3474,f3477,f3479,f3481,f3482,f3586,f3585,f3584,f3590,f3589,f3588,f3605,f3602,f3599,f3600,f3614,f3613,f3612,f3618,f3617,f3616,f3647,f3654,f3628,f3638,f3656,f3632,f3633,f3660,f3659,f3658,f3664,f3663,f3662,f1665,f2849,f3923,f3924,f3418])).
fof(f4264,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl18),
  inference(unit_resulting_resolution,[],[f1492,f1665])).
fof(f4628,plain,(
  $false | ($spl3 | $spl5 | $spl18)),
  inference(subsumption_resolution,[],[f4627,f4515])).
fof(f4627,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f4626,f3038])).
fof(f4626,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f4263,f4519])).
fof(f4263,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl18),
  inference(unit_resulting_resolution,[],[f1489,f1665])).
fof(f4625,plain,(
  $false | ($spl3 | $spl5 | $spl18)),
  inference(subsumption_resolution,[],[f4624,f4515])).
fof(f4624,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f4623,f3038])).
fof(f4623,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f4262,f4519])).
fof(f4262,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | $spl18),
  inference(unit_resulting_resolution,[],[f1562,f1665])).
fof(f4622,plain,(
  $false | ($spl3 | $spl18)),
  inference(subsumption_resolution,[],[f4621,f3038])).
fof(f4621,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f4620,f3038])).
fof(f4620,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f3045,f4519])).
fof(f4619,plain,(
  $false | ($spl3 | $spl5 | $spl18)),
  inference(subsumption_resolution,[],[f4618,f4515])).
fof(f4618,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f4617,f3038])).
fof(f4617,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f4261,f4519])).
fof(f4261,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | $spl18),
  inference(unit_resulting_resolution,[],[f1552,f1665])).
fof(f4616,plain,(
  $false | ($spl3 | $spl18)),
  inference(subsumption_resolution,[],[f4615,f3038])).
fof(f4615,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f4614,f3038])).
fof(f4614,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f3043,f4519])).
fof(f4613,plain,(
  $false | ($spl3 | $spl5 | $spl18)),
  inference(subsumption_resolution,[],[f4612,f4515])).
fof(f4612,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f4611,f3038])).
fof(f4611,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f4260,f4519])).
fof(f4260,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl18),
  inference(unit_resulting_resolution,[],[f1566,f1665])).
fof(f4610,plain,(
  $false | ($spl3 | $spl18)),
  inference(subsumption_resolution,[],[f4609,f3038])).
fof(f4609,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f4608,f3038])).
fof(f4608,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f3046,f4519])).
fof(f4607,plain,(
  $false | ($spl3 | $spl5 | $spl18)),
  inference(subsumption_resolution,[],[f4606,f4515])).
fof(f4606,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f4605,f3038])).
fof(f4605,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f4259,f4519])).
fof(f4259,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl18),
  inference(unit_resulting_resolution,[],[f1556,f1665])).
fof(f4604,plain,(
  $false | ($spl3 | $spl18)),
  inference(subsumption_resolution,[],[f4603,f3038])).
fof(f4603,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f4602,f3038])).
fof(f4602,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f3044,f4519])).
fof(f4599,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | $spl102),
  inference(cnf_transformation,[],[f4599_D])).
fof(f4599_D,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f4600,plain,(
  ( ! [X4] : (s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | $spl104),
  inference(cnf_transformation,[],[f4600_D])).
fof(f4600_D,plain,(
  ( ! [X4] : (s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f4598,plain,(
  ( ! [X4,X3] : (s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f4597,f3038])).
fof(f4597,plain,(
  ( ! [X4,X3] : (s('type.integer.int',X4) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f4272,f4518])).
fof(f4272,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X3))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | $spl18),
  inference(superposition,[],[f1245,f1665])).
fof(f4580,plain,(
  $false | ($spl3 | $spl18)),
  inference(subsumption_resolution,[],[f4579,f3038])).
fof(f4579,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f4554,f3038])).
fof(f4554,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl18)),
  inference(backward_demodulation,[],[f4519,f3040])).
fof(f4578,plain,(
  $false | ($spl3 | $spl18 | $spl77)),
  inference(subsumption_resolution,[],[f4553,f4519])).
fof(f4553,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | ($spl3 | $spl18 | $spl77)),
  inference(backward_demodulation,[],[f4519,f3940])).
fof(f3940,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | $spl77),
  inference(forward_demodulation,[],[f3939,f1445])).
fof(f3939,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | $spl77),
  inference(forward_demodulation,[],[f3937,f1445])).
fof(f3937,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | $spl77),
  inference(unit_resulting_resolution,[],[f3880,f293])).
fof(f4577,plain,(
  $false | ($spl3 | $spl18 | $spl77)),
  inference(subsumption_resolution,[],[f4576,f3038])).
fof(f4576,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl18 | $spl77)),
  inference(forward_demodulation,[],[f4552,f3038])).
fof(f4552,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl18 | $spl77)),
  inference(backward_demodulation,[],[f4519,f3880])).
fof(f4575,plain,(
  $false | ($spl3 | $spl18)),
  inference(subsumption_resolution,[],[f4574,f3038])).
fof(f4574,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f4551,f3038])).
fof(f4551,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl3 | $spl18)),
  inference(backward_demodulation,[],[f4519,f3039])).
fof(f4434,plain,(
  $false | ($spl18 | $spl64 | $spl77)),
  inference(subsumption_resolution,[],[f4433,f3880])).
fof(f4433,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | ($spl18 | $spl64)),
  inference(forward_demodulation,[],[f4263,f4354])).
fof(f4354,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl18 | $spl64)),
  inference(forward_demodulation,[],[f4339,f1445])).
fof(f4339,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | ($spl18 | $spl64)),
  inference(backward_demodulation,[],[f4264,f3515])).
fof(f4045,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X4)) ) | $spl96),
  inference(cnf_transformation,[],[f4045_D])).
fof(f4045_D,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X4)) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f4039,plain,(
  ( ! [X12,X13,X11] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X11) = s(fun(bool,bool),X12) | s(bool,'T_0') = s(bool,sK14(X11,X12,bool,bool)) | s(bool,X13) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f1546,f608])).
fof(f4041,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | $spl90),
  inference(cnf_transformation,[],[f4041_D])).
fof(f4041_D,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f4048,plain,(
  ( ! [X5] : (s(bool,X5) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X5)) ) | $spl100),
  inference(cnf_transformation,[],[f4048_D])).
fof(f4048_D,plain,(
  ( ! [X5] : (s(bool,X5) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X5)) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f4038,plain,(
  ( ! [X10,X8,X9] : (s(bool,X8) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X9) = s(fun(bool,bool),X10) | s(bool,'T_0') = s(bool,sK14(X9,X10,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f1546,f608])).
fof(f4037,plain,(
  ( ! [X6,X7,X5] : (s(bool,X5) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X6) = s(fun(bool,bool),X7) | s(bool,'T_0') = s(bool,sK14(X6,X7,bool,bool)) | s(bool,'T_0') = s(bool,X5) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f1546,f608])).
fof(f4036,plain,(
  ( ! [X4,X2,X3] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X2) = s(fun(bool,bool),X3) | s(bool,'T_0') = s(bool,sK14(X2,X3,bool,bool)) | s(bool,X4) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1546,f608])).
fof(f4044,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | $spl95),
  inference(cnf_transformation,[],[f4044_D])).
fof(f4044_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl95),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl95])])).
fof(f4035,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK14(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f1546,f241])).
fof(f3610,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) )),
  inference(forward_demodulation,[],[f3609,f240])).
fof(f3609,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) )),
  inference(subsumption_resolution,[],[f3598,f294])).
fof(f3598,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) )),
  inference(superposition,[],[f1627,f1618])).
fof(f3887,plain,(
  ( ! [X3] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | $spl82),
  inference(cnf_transformation,[],[f3887_D])).
fof(f3887_D,plain,(
  ( ! [X3] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f3889,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | $spl85),
  inference(cnf_transformation,[],[f3889_D])).
fof(f3889_D,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) <=> ~$spl85),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl85])])).
fof(f3860,plain,(
  ( ! [X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | $spl0),
  inference(forward_demodulation,[],[f3859,f1445])).
fof(f3859,plain,(
  ( ! [X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | $spl0),
  inference(forward_demodulation,[],[f3681,f3669])).
fof(f3669,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f1489,f1644])).
fof(f3681,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X3),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3)))) ) | $spl0),
  inference(superposition,[],[f263,f1644])).
fof(f3885,plain,(
  ( ! [X33] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33)))) ) | $spl78),
  inference(cnf_transformation,[],[f3885_D])).
fof(f3885_D,plain,(
  ( ! [X33] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33)))) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f3884,plain,(
  ( ! [X33,X34] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33)))) ) | $spl0),
  inference(forward_demodulation,[],[f3883,f3669])).
fof(f3883,plain,(
  ( ! [X33,X34] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33)))) ) | $spl0),
  inference(subsumption_resolution,[],[f3724,f294])).
fof(f3724,plain,(
  ( ! [X33,X34] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33)))) ) | $spl0),
  inference(superposition,[],[f1627,f1644])).
fof(f3878,plain,(
  ( ! [X33,X34] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34)))) ) | $spl74),
  inference(cnf_transformation,[],[f3878_D])).
fof(f3878_D,plain,(
  ( ! [X33,X34] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34)))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f3880,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | $spl77),
  inference(cnf_transformation,[],[f3880_D])).
fof(f3880_D,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) <=> ~$spl77),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl77])])).
fof(f3877,plain,(
  ( ! [X33,X34] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33)))) ) | $spl0),
  inference(forward_demodulation,[],[f3876,f3669])).
fof(f3876,plain,(
  ( ! [X33,X34] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33)))) ) | $spl0),
  inference(subsumption_resolution,[],[f3705,f3701])).
fof(f3701,plain,(
  ( ! [X26,X25] : (s('type.integer.int',X26) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X26))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X25)))) ) | $spl0),
  inference(superposition,[],[f294,f1644])).
fof(f3705,plain,(
  ( ! [X33,X34] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X34))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X33)))) ) | $spl0),
  inference(superposition,[],[f1627,f1644])).
fof(f3841,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f3840,f3808])).
fof(f3808,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f3751,f1445])).
fof(f3751,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | ($spl0 | $spl3)),
  inference(backward_demodulation,[],[f3670,f1646])).
fof(f3670,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f1492,f1644])).
fof(f3840,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))) | $spl0),
  inference(backward_demodulation,[],[f3669,f3670])).
fof(f3655,plain,(
  ( ! [X15] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | $spl72),
  inference(cnf_transformation,[],[f3655_D])).
fof(f3655_D,plain,(
  ( ! [X15] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f3654,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) )),
  inference(forward_demodulation,[],[f3639,f240])).
fof(f3639,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) )),
  inference(duplicate_literal_removal,[],[f3626])).
fof(f3626,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X16))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X15)))))) )),
  inference(superposition,[],[f1629,f1618])).
fof(f3567,plain,(
  ( ! [X23,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23)))) ) | $spl70),
  inference(cnf_transformation,[],[f3567_D])).
fof(f3567_D,plain,(
  ( ! [X23,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23)))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f3453,plain,(
  ( ! [X23,X22] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X22))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X23))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X22)))))) )),
  inference(superposition,[],[f1632,f1618])).
fof(f3557,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl69),
  inference(cnf_transformation,[],[f3557_D])).
fof(f3557_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) <=> ~$spl69),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl69])])).
fof(f1657,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl10),
  inference(cnf_transformation,[],[f1657_D])).
fof(f1657_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f3566,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(subsumption_resolution,[],[f3565,f1566])).
fof(f3565,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(forward_demodulation,[],[f3564,f286])).
fof(f3564,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))))),
  inference(forward_demodulation,[],[f3432,f286])).
fof(f3432,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))))),
  inference(superposition,[],[f3045,f1618])).
fof(f1654,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl8),
  inference(cnf_transformation,[],[f1654_D])).
fof(f1654_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f3563,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(subsumption_resolution,[],[f3562,f1556])).
fof(f3562,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(forward_demodulation,[],[f3561,f286])).
fof(f3561,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))))))),
  inference(forward_demodulation,[],[f3430,f286])).
fof(f3430,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))))))),
  inference(superposition,[],[f3043,f1618])).
fof(f1663,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | $spl14),
  inference(cnf_transformation,[],[f1663_D])).
fof(f1663_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f3560,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(subsumption_resolution,[],[f3559,f1562])).
fof(f3559,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(forward_demodulation,[],[f3558,f286])).
fof(f3558,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(forward_demodulation,[],[f3428,f286])).
fof(f3428,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(superposition,[],[f3046,f1618])).
fof(f1660,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | $spl12),
  inference(cnf_transformation,[],[f1660_D])).
fof(f1660_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f3555,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(subsumption_resolution,[],[f3554,f1552])).
fof(f3554,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(forward_demodulation,[],[f3553,f286])).
fof(f3553,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(forward_demodulation,[],[f3426,f286])).
fof(f3426,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(superposition,[],[f3044,f1618])).
fof(f3514,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl65),
  inference(cnf_transformation,[],[f3514_D])).
fof(f3514_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl65),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl65])])).
fof(f3552,plain,(
  ( ! [X17,X16] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X16)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X17),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X17),s('type.rat.rat',X16)))))) ) | $spl66),
  inference(cnf_transformation,[],[f3552_D])).
fof(f3552_D,plain,(
  ( ! [X17,X16] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X16)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X17),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X17),s('type.rat.rat',X16)))))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f3551,plain,(
  ( ! [X17,X16] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X17),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X17),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X16))))) )),
  inference(forward_demodulation,[],[f3550,f286])).
fof(f3550,plain,(
  ( ! [X17,X16] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X17),s('type.rat.rat',X16))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X16)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17)))))))) )),
  inference(forward_demodulation,[],[f3425,f286])).
fof(f3425,plain,(
  ( ! [X17,X16] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X17),s('type.rat.rat',X16)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X16),s('type.rat.rat',X17)))))))) )),
  inference(superposition,[],[f292,f1618])).
fof(f3513,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2)))))))) ) | $spl62),
  inference(cnf_transformation,[],[f3513_D])).
fof(f3513_D,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2)))))))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f3546,plain,(
  ( ! [X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1)))))))) )),
  inference(subsumption_resolution,[],[f3412,f3338])).
fof(f3412,plain,(
  ( ! [X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X1)))))))) )),
  inference(superposition,[],[f1618,f1618])).
fof(f3512,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) )),
  inference(subsumption_resolution,[],[f3403,f3338])).
fof(f3403,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_ainv_1'(s('type.rat.rat',X2)))))) )),
  inference(superposition,[],[f1618,f1618])).
fof(f2373,plain,(
  $false | $spl28),
  inference(global_subsumption,[],[f232,f231,f230,f233,f424,f240,f241,f242,f252,f251,f256,f255,f260,f259,f262,f261,f264,f263,f286,f290,f287,f292,f291,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f475,f474,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1245,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1445,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1546,f1548,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1618,f1640,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1627,f1629,f1631,f1632,f1634,f1636,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1876,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2304,f2305,f2306,f1996,f1997,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f2234,f2365,f2368,f2370,f2372])).
fof(f2372,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl28),
  inference(subsumption_resolution,[],[f2362,f233])).
fof(f2362,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl28),
  inference(backward_demodulation,[],[f2234,f262])).
fof(f2370,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))))) ) | $spl28),
  inference(subsumption_resolution,[],[f2359,f233])).
fof(f2359,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))))) ) | $spl28),
  inference(backward_demodulation,[],[f2234,f291])).
fof(f2368,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl28),
  inference(subsumption_resolution,[],[f2357,f233])).
fof(f2357,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl28),
  inference(backward_demodulation,[],[f2234,f264])).
fof(f2365,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl28),
  inference(subsumption_resolution,[],[f2345,f2234])).
fof(f2345,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | $spl28),
  inference(backward_demodulation,[],[f2234,f255])).
fof(f2371,plain,(
  $false | $spl28),
  inference(global_subsumption,[],[f232,f231,f230,f233,f424,f240,f241,f242,f252,f251,f256,f255,f260,f259,f262,f261,f264,f263,f286,f290,f287,f292,f291,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f475,f474,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1245,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1445,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1546,f1548,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1618,f1640,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1627,f1629,f1631,f1632,f1634,f1636,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1876,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2304,f2305,f2306,f1996,f1997,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f2234,f2365,f2368,f2370])).
fof(f2369,plain,(
  $false | $spl28),
  inference(global_subsumption,[],[f232,f231,f230,f233,f424,f240,f241,f242,f252,f251,f256,f255,f260,f259,f262,f261,f264,f263,f286,f290,f287,f292,f291,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f475,f474,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1245,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1445,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1546,f1548,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1618,f1640,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1627,f1629,f1631,f1632,f1634,f1636,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1876,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2304,f2305,f2306,f1996,f1997,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f2234,f2365,f2368])).
fof(f2367,plain,(
  $false | $spl28),
  inference(subsumption_resolution,[],[f2347,f233])).
fof(f2347,plain,(
  ~p(s(bool,'T_0')) | $spl28),
  inference(backward_demodulation,[],[f2234,f424])).
fof(f2366,plain,(
  $false | $spl28),
  inference(global_subsumption,[],[f232,f231,f230,f233,f424,f240,f241,f242,f252,f251,f256,f255,f260,f259,f262,f261,f264,f263,f286,f290,f287,f292,f291,f294,f293,f296,f295,f303,f302,f425,f321,f318,f317,f316,f334,f347,f346,f345,f344,f343,f342,f341,f351,f350,f349,f348,f355,f354,f353,f352,f359,f358,f357,f356,f363,f362,f361,f360,f417,f367,f366,f365,f364,f374,f373,f372,f371,f380,f377,f376,f375,f387,f386,f385,f416,f383,f382,f381,f391,f390,f389,f388,f395,f394,f393,f392,f404,f403,f402,f415,f400,f399,f398,f408,f407,f406,f405,f412,f411,f410,f409,f426,f427,f428,f431,f430,f429,f434,f433,f432,f435,f438,f437,f436,f441,f440,f439,f442,f443,f444,f445,f448,f447,f446,f451,f450,f449,f452,f453,f456,f455,f454,f459,f458,f457,f460,f463,f462,f461,f466,f465,f464,f475,f474,f479,f489,f501,f508,f513,f518,f519,f521,f528,f532,f533,f536,f544,f547,f551,f554,f559,f577,f576,f601,f600,f598,f597,f608,f668,f697,f696,f695,f694,f693,f692,f707,f706,f705,f704,f723,f721,f720,f719,f716,f714,f735,f734,f733,f732,f773,f798,f810,f814,f819,f823,f839,f851,f900,f899,f898,f910,f920,f954,f953,f952,f962,f974,f1017,f1018,f1245,f1246,f1307,f1304,f1303,f1298,f1297,f1296,f1295,f1294,f1293,f1359,f1356,f1355,f1412,f1411,f1445,f1470,f1483,f1482,f1490,f1489,f1488,f1493,f1492,f1491,f1501,f1500,f1536,f1539,f1546,f1548,f1553,f1552,f1551,f1557,f1556,f1555,f1563,f1562,f1561,f1567,f1566,f1565,f1579,f1585,f1602,f1605,f1612,f1615,f1617,f1618,f1640,f1643,f1647,f1650,f1652,f1655,f1658,f1661,f1627,f1629,f1631,f1632,f1634,f1636,f1638,f1639,f1671,f1668,f1682,f1691,f1688,f1727,f1704,f1736,f1719,f1720,f1750,f1754,f1799,f1875,f1876,f1924,f2232,f2236,f2239,f2242,f2245,f2248,f2251,f2254,f2257,f2260,f2263,f2266,f2269,f2272,f2275,f2278,f2281,f2283,f2284,f2285,f2286,f2287,f2288,f2289,f2290,f2291,f2292,f2293,f2294,f2295,f2296,f2297,f2298,f2299,f2300,f2301,f2302,f2303,f2304,f2305,f2306,f1996,f1997,f2312,f2314,f2316,f2318,f2320,f2322,f2324,f2326,f2328,f2330,f2332,f2334,f2336,f2338,f2340,f2342,f2344,f2234,f2365])).
fof(f2282,plain,(
  ( ! [X2,X1] : (sP9('T_0',X1,X2) | ~sP8('T_0',X1,X2)) ) | $spl60),
  inference(cnf_transformation,[],[f2282_D])).
fof(f2282_D,plain,(
  ( ! [X2,X1] : (sP9('T_0',X1,X2) | ~sP8('T_0',X1,X2)) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f2344,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8('T_0',X1,X2) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f2343])).
fof(f2343,plain,(
  ( ! [X94,X95,X93,X96] : (~sP8('T_0',X94,X95) | sP9('T_0',X94,X95) | s(bool,X93) = s(bool,X96) | s(bool,'T_0') = s(bool,X96)) )),
  inference(subsumption_resolution,[],[f2025,f668])).
fof(f2025,plain,(
  ( ! [X94,X95,X93,X96] : (~p(s(bool,X93)) | ~sP8('T_0',X94,X95) | sP9('T_0',X94,X95) | s(bool,X93) = s(bool,X96) | s(bool,'T_0') = s(bool,X96)) )),
  inference(superposition,[],[f416,f608])).
fof(f2279,plain,(
  ( ! [X2,X1] : (sP11('T_0',X1,X2) | ~sP10('T_0',X1,X2)) ) | $spl58),
  inference(cnf_transformation,[],[f2279_D])).
fof(f2279_D,plain,(
  ( ! [X2,X1] : (sP11('T_0',X1,X2) | ~sP10('T_0',X1,X2)) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f2342,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP10('T_0',X1,X2) | sP11('T_0',X1,X2)) )),
  inference(condensation,[],[f2341])).
fof(f2341,plain,(
  ( ! [X92,X90,X91,X89] : (~sP10('T_0',X90,X91) | sP11('T_0',X90,X91) | s(bool,X89) = s(bool,X92) | s(bool,'T_0') = s(bool,X92)) )),
  inference(subsumption_resolution,[],[f2024,f668])).
fof(f2024,plain,(
  ( ! [X92,X90,X91,X89] : (~p(s(bool,X89)) | ~sP10('T_0',X90,X91) | sP11('T_0',X90,X91) | s(bool,X89) = s(bool,X92) | s(bool,'T_0') = s(bool,X92)) )),
  inference(superposition,[],[f415,f608])).
fof(f2276,plain,(
  ( ! [X2,X1] : (~sP11('T_0',X2,X1) | p(s(bool,X2)) | ~p(s(bool,X1))) ) | $spl56),
  inference(cnf_transformation,[],[f2276_D])).
fof(f2276_D,plain,(
  ( ! [X2,X1] : (~sP11('T_0',X2,X1) | p(s(bool,X2)) | ~p(s(bool,X1))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f2340,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f2339])).
fof(f2339,plain,(
  ( ! [X88,X87,X85,X86] : (~p(s(bool,X86)) | p(s(bool,X87)) | ~sP11('T_0',X87,X86) | s(bool,X85) = s(bool,X88) | s(bool,'T_0') = s(bool,X88)) )),
  inference(subsumption_resolution,[],[f2023,f668])).
fof(f2023,plain,(
  ( ! [X88,X87,X85,X86] : (~p(s(bool,X85)) | ~p(s(bool,X86)) | p(s(bool,X87)) | ~sP11('T_0',X87,X86) | s(bool,X85) = s(bool,X88) | s(bool,'T_0') = s(bool,X88)) )),
  inference(superposition,[],[f412,f608])).
fof(f2273,plain,(
  ( ! [X2,X1] : (sP11('T_0',X1,X2) | ~p(s(bool,X1))) ) | $spl54),
  inference(cnf_transformation,[],[f2273_D])).
fof(f2273_D,plain,(
  ( ! [X2,X1] : (sP11('T_0',X1,X2) | ~p(s(bool,X1))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f2338,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP11('T_0',X1,X2)) )),
  inference(condensation,[],[f2337])).
fof(f2337,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,X82)) | sP11('T_0',X82,X83) | s(bool,X81) = s(bool,X84) | s(bool,'T_0') = s(bool,X84)) )),
  inference(subsumption_resolution,[],[f2022,f668])).
fof(f2022,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,X81)) | ~p(s(bool,X82)) | sP11('T_0',X82,X83) | s(bool,X81) = s(bool,X84) | s(bool,'T_0') = s(bool,X84)) )),
  inference(superposition,[],[f411,f608])).
fof(f2270,plain,(
  ( ! [X2,X1] : (sP11('T_0',X2,X1) | p(s(bool,X1))) ) | $spl52),
  inference(cnf_transformation,[],[f2270_D])).
fof(f2270_D,plain,(
  ( ! [X2,X1] : (sP11('T_0',X2,X1) | p(s(bool,X1))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f2336,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f2335])).
fof(f2335,plain,(
  ( ! [X80,X78,X79,X77] : (p(s(bool,X78)) | sP11('T_0',X79,X78) | s(bool,X77) = s(bool,X80) | s(bool,'T_0') = s(bool,X80)) )),
  inference(subsumption_resolution,[],[f2021,f668])).
fof(f2021,plain,(
  ( ! [X80,X78,X79,X77] : (~p(s(bool,X77)) | p(s(bool,X78)) | sP11('T_0',X79,X78) | s(bool,X77) = s(bool,X80) | s(bool,'T_0') = s(bool,X80)) )),
  inference(superposition,[],[f410,f608])).
fof(f2267,plain,(
  ( ! [X2,X1] : (~sP10(X2,X1,'T_0') | ~p(s(bool,X2)) | p(s(bool,X1))) ) | $spl50),
  inference(cnf_transformation,[],[f2267_D])).
fof(f2267_D,plain,(
  ( ! [X2,X1] : (~sP10(X2,X1,'T_0') | ~p(s(bool,X2)) | p(s(bool,X1))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f2334,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10(X2,X1,'T_0')) )),
  inference(condensation,[],[f2333])).
fof(f2333,plain,(
  ( ! [X76,X74,X75,X73] : (p(s(bool,X74)) | ~p(s(bool,X75)) | ~sP10(X75,X74,'T_0') | s(bool,X73) = s(bool,X76) | s(bool,'T_0') = s(bool,X76)) )),
  inference(subsumption_resolution,[],[f2020,f668])).
fof(f2020,plain,(
  ( ! [X76,X74,X75,X73] : (~p(s(bool,X73)) | p(s(bool,X74)) | ~p(s(bool,X75)) | ~sP10(X75,X74,'T_0') | s(bool,X73) = s(bool,X76) | s(bool,'T_0') = s(bool,X76)) )),
  inference(superposition,[],[f405,f608])).
fof(f2264,plain,(
  ( ! [X2,X1] : (~sP9('T_0',X2,X1) | p(s(bool,X2)) | p(s(bool,X1))) ) | $spl48),
  inference(cnf_transformation,[],[f2264_D])).
fof(f2264_D,plain,(
  ( ! [X2,X1] : (~sP9('T_0',X2,X1) | p(s(bool,X2)) | p(s(bool,X1))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f2332,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f2331])).
fof(f2331,plain,(
  ( ! [X70,X72,X71,X69] : (p(s(bool,X70)) | p(s(bool,X71)) | ~sP9('T_0',X71,X70) | s(bool,X69) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(subsumption_resolution,[],[f2019,f668])).
fof(f2019,plain,(
  ( ! [X70,X72,X71,X69] : (~p(s(bool,X69)) | p(s(bool,X70)) | p(s(bool,X71)) | ~sP9('T_0',X71,X70) | s(bool,X69) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(superposition,[],[f395,f608])).
fof(f2261,plain,(
  ( ! [X2,X1] : (sP9('T_0',X1,X2) | ~p(s(bool,X1))) ) | $spl46),
  inference(cnf_transformation,[],[f2261_D])).
fof(f2261_D,plain,(
  ( ! [X2,X1] : (sP9('T_0',X1,X2) | ~p(s(bool,X1))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f2330,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f2329])).
fof(f2329,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,X66)) | sP9('T_0',X66,X67) | s(bool,X65) = s(bool,X68) | s(bool,'T_0') = s(bool,X68)) )),
  inference(subsumption_resolution,[],[f2018,f668])).
fof(f2018,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,X65)) | ~p(s(bool,X66)) | sP9('T_0',X66,X67) | s(bool,X65) = s(bool,X68) | s(bool,'T_0') = s(bool,X68)) )),
  inference(superposition,[],[f394,f608])).
fof(f2258,plain,(
  ( ! [X2,X1] : (sP9('T_0',X2,X1) | ~p(s(bool,X1))) ) | $spl44),
  inference(cnf_transformation,[],[f2258_D])).
fof(f2258_D,plain,(
  ( ! [X2,X1] : (sP9('T_0',X2,X1) | ~p(s(bool,X1))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f2328,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f2327])).
fof(f2327,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,X62)) | sP9('T_0',X63,X62) | s(bool,X61) = s(bool,X64) | s(bool,'T_0') = s(bool,X64)) )),
  inference(subsumption_resolution,[],[f2017,f668])).
fof(f2017,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,X61)) | ~p(s(bool,X62)) | sP9('T_0',X63,X62) | s(bool,X61) = s(bool,X64) | s(bool,'T_0') = s(bool,X64)) )),
  inference(superposition,[],[f393,f608])).
fof(f2255,plain,(
  ( ! [X2,X1] : (~sP8('T_0',X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) ) | $spl42),
  inference(cnf_transformation,[],[f2255_D])).
fof(f2255_D,plain,(
  ( ! [X2,X1] : (~sP8('T_0',X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f2326,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('T_0',X1,X2)) )),
  inference(condensation,[],[f2325])).
fof(f2325,plain,(
  ( ! [X59,X57,X60,X58] : (p(s(bool,X58)) | p(s(bool,X59)) | ~sP8('T_0',X58,X59) | s(bool,X57) = s(bool,X60) | s(bool,'T_0') = s(bool,X60)) )),
  inference(subsumption_resolution,[],[f2016,f668])).
fof(f2016,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,X57)) | p(s(bool,X58)) | p(s(bool,X59)) | ~sP8('T_0',X58,X59) | s(bool,X57) = s(bool,X60) | s(bool,'T_0') = s(bool,X60)) )),
  inference(superposition,[],[f388,f608])).
fof(f2252,plain,(
  ( ! [X2,X1] : (~sP7(X2,X1,'T_0') | p(s(bool,X2)) | ~p(s(bool,X1))) ) | $spl40),
  inference(cnf_transformation,[],[f2252_D])).
fof(f2252_D,plain,(
  ( ! [X2,X1] : (~sP7(X2,X1,'T_0') | p(s(bool,X2)) | ~p(s(bool,X1))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f2324,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X1,'T_0')) )),
  inference(condensation,[],[f2323])).
fof(f2323,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP7(X55,X54,'T_0') | s(bool,X53) = s(bool,X56) | s(bool,'T_0') = s(bool,X56)) )),
  inference(subsumption_resolution,[],[f2015,f668])).
fof(f2015,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,X53)) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP7(X55,X54,'T_0') | s(bool,X53) = s(bool,X56) | s(bool,'T_0') = s(bool,X56)) )),
  inference(superposition,[],[f380,f608])).
fof(f2249,plain,(
  ( ! [X2,X1] : (~sP6(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) | $spl38),
  inference(cnf_transformation,[],[f2249_D])).
fof(f2249_D,plain,(
  ( ! [X2,X1] : (~sP6(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f2322,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6(X1,'T_0',X2)) )),
  inference(condensation,[],[f2321])).
fof(f2321,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,X50)) | p(s(bool,X51)) | ~sP6(X50,'T_0',X51) | s(bool,X49) = s(bool,X52) | s(bool,'T_0') = s(bool,X52)) )),
  inference(subsumption_resolution,[],[f2014,f668])).
fof(f2014,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,X49)) | ~p(s(bool,X50)) | p(s(bool,X51)) | ~sP6(X50,'T_0',X51) | s(bool,X49) = s(bool,X52) | s(bool,'T_0') = s(bool,X52)) )),
  inference(superposition,[],[f371,f608])).
fof(f2246,plain,(
  ( ! [X2,X1] : (~sP3(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) | $spl36),
  inference(cnf_transformation,[],[f2246_D])).
fof(f2246_D,plain,(
  ( ! [X2,X1] : (~sP3(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f2320,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X1,'T_0',X2)) )),
  inference(condensation,[],[f2319])).
fof(f2319,plain,(
  ( ! [X47,X45,X48,X46] : (~p(s(bool,X46)) | p(s(bool,X47)) | ~sP3(X46,'T_0',X47) | s(bool,X45) = s(bool,X48) | s(bool,'T_0') = s(bool,X48)) )),
  inference(subsumption_resolution,[],[f2013,f668])).
fof(f2013,plain,(
  ( ! [X47,X45,X48,X46] : (~p(s(bool,X45)) | ~p(s(bool,X46)) | p(s(bool,X47)) | ~sP3(X46,'T_0',X47) | s(bool,X45) = s(bool,X48) | s(bool,'T_0') = s(bool,X48)) )),
  inference(superposition,[],[f352,f608])).
fof(f2243,plain,(
  ( ! [X2,X1] : (~sP4(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) | $spl34),
  inference(cnf_transformation,[],[f2243_D])).
fof(f2243_D,plain,(
  ( ! [X2,X1] : (~sP4(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f2318,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X1,'T_0',X2)) )),
  inference(condensation,[],[f2317])).
fof(f2317,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,X42)) | p(s(bool,X43)) | ~sP4(X42,'T_0',X43) | s(bool,X41) = s(bool,X44) | s(bool,'T_0') = s(bool,X44)) )),
  inference(subsumption_resolution,[],[f2012,f668])).
fof(f2012,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,X41)) | ~p(s(bool,X42)) | p(s(bool,X43)) | ~sP4(X42,'T_0',X43) | s(bool,X41) = s(bool,X44) | s(bool,'T_0') = s(bool,X44)) )),
  inference(superposition,[],[f348,f608])).
fof(f2240,plain,(
  ( ! [X2,X1] : (~sP5(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) | $spl32),
  inference(cnf_transformation,[],[f2240_D])).
fof(f2240_D,plain,(
  ( ! [X2,X1] : (~sP5(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f2316,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP5(X1,'T_0',X2)) )),
  inference(condensation,[],[f2315])).
fof(f2315,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP5(X38,'T_0',X39) | s(bool,X37) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(subsumption_resolution,[],[f2011,f668])).
fof(f2011,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,X37)) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP5(X38,'T_0',X39) | s(bool,X37) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(superposition,[],[f344,f608])).
fof(f2237,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1(X1,'T_0')) ) | $spl30),
  inference(cnf_transformation,[],[f2237_D])).
fof(f2237_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1(X1,'T_0')) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f2314,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'T_0')) )),
  inference(condensation,[],[f2313])).
fof(f2313,plain,(
  ( ! [X35,X36,X34] : (p(s(bool,X35)) | sP1(X35,'T_0') | s(bool,X34) = s(bool,X36) | s(bool,'T_0') = s(bool,X36)) )),
  inference(subsumption_resolution,[],[f2010,f668])).
fof(f2010,plain,(
  ( ! [X35,X36,X34] : (~p(s(bool,X34)) | p(s(bool,X35)) | sP1(X35,'T_0') | s(bool,X34) = s(bool,X36) | s(bool,'T_0') = s(bool,X36)) )),
  inference(superposition,[],[f321,f608])).
fof(f2233,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1('T_0',X1)) ) | $spl26),
  inference(cnf_transformation,[],[f2233_D])).
fof(f2233_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1('T_0',X1)) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f2312,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('T_0',X1)) )),
  inference(condensation,[],[f2311])).
fof(f2311,plain,(
  ( ! [X33,X31,X32] : (p(s(bool,X32)) | sP1('T_0',X32) | s(bool,X31) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f2009,f668])).
fof(f2009,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,X31)) | p(s(bool,X32)) | sP1('T_0',X32) | s(bool,X31) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f318,f608])).
fof(f2281,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8('T_0',X1,X2) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f2280])).
fof(f2280,plain,(
  ( ! [X94,X95,X93,X96] : (~sP8('T_0',X94,X95) | sP9('T_0',X94,X95) | s(bool,X93) = s(bool,X96) | s(bool,'T_0') = s(bool,X96)) )),
  inference(subsumption_resolution,[],[f1950,f668])).
fof(f1950,plain,(
  ( ! [X94,X95,X93,X96] : (~p(s(bool,X93)) | ~sP8('T_0',X94,X95) | sP9('T_0',X94,X95) | s(bool,X93) = s(bool,X96) | s(bool,'T_0') = s(bool,X96)) )),
  inference(superposition,[],[f416,f608])).
fof(f2278,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP10('T_0',X1,X2) | sP11('T_0',X1,X2)) )),
  inference(condensation,[],[f2277])).
fof(f2277,plain,(
  ( ! [X92,X90,X91,X89] : (~sP10('T_0',X90,X91) | sP11('T_0',X90,X91) | s(bool,X89) = s(bool,X92) | s(bool,'T_0') = s(bool,X92)) )),
  inference(subsumption_resolution,[],[f1949,f668])).
fof(f1949,plain,(
  ( ! [X92,X90,X91,X89] : (~p(s(bool,X89)) | ~sP10('T_0',X90,X91) | sP11('T_0',X90,X91) | s(bool,X89) = s(bool,X92) | s(bool,'T_0') = s(bool,X92)) )),
  inference(superposition,[],[f415,f608])).
fof(f2275,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f2274])).
fof(f2274,plain,(
  ( ! [X88,X87,X85,X86] : (~p(s(bool,X86)) | p(s(bool,X87)) | ~sP11('T_0',X87,X86) | s(bool,X85) = s(bool,X88) | s(bool,'T_0') = s(bool,X88)) )),
  inference(subsumption_resolution,[],[f1948,f668])).
fof(f1948,plain,(
  ( ! [X88,X87,X85,X86] : (~p(s(bool,X85)) | ~p(s(bool,X86)) | p(s(bool,X87)) | ~sP11('T_0',X87,X86) | s(bool,X85) = s(bool,X88) | s(bool,'T_0') = s(bool,X88)) )),
  inference(superposition,[],[f412,f608])).
fof(f2272,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP11('T_0',X1,X2)) )),
  inference(condensation,[],[f2271])).
fof(f2271,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,X82)) | sP11('T_0',X82,X83) | s(bool,X81) = s(bool,X84) | s(bool,'T_0') = s(bool,X84)) )),
  inference(subsumption_resolution,[],[f1947,f668])).
fof(f1947,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,X81)) | ~p(s(bool,X82)) | sP11('T_0',X82,X83) | s(bool,X81) = s(bool,X84) | s(bool,'T_0') = s(bool,X84)) )),
  inference(superposition,[],[f411,f608])).
fof(f2269,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f2268])).
fof(f2268,plain,(
  ( ! [X80,X78,X79,X77] : (p(s(bool,X78)) | sP11('T_0',X79,X78) | s(bool,X77) = s(bool,X80) | s(bool,'T_0') = s(bool,X80)) )),
  inference(subsumption_resolution,[],[f1946,f668])).
fof(f1946,plain,(
  ( ! [X80,X78,X79,X77] : (~p(s(bool,X77)) | p(s(bool,X78)) | sP11('T_0',X79,X78) | s(bool,X77) = s(bool,X80) | s(bool,'T_0') = s(bool,X80)) )),
  inference(superposition,[],[f410,f608])).
fof(f2266,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10(X2,X1,'T_0')) )),
  inference(condensation,[],[f2265])).
fof(f2265,plain,(
  ( ! [X76,X74,X75,X73] : (p(s(bool,X74)) | ~p(s(bool,X75)) | ~sP10(X75,X74,'T_0') | s(bool,X73) = s(bool,X76) | s(bool,'T_0') = s(bool,X76)) )),
  inference(subsumption_resolution,[],[f1945,f668])).
fof(f1945,plain,(
  ( ! [X76,X74,X75,X73] : (~p(s(bool,X73)) | p(s(bool,X74)) | ~p(s(bool,X75)) | ~sP10(X75,X74,'T_0') | s(bool,X73) = s(bool,X76) | s(bool,'T_0') = s(bool,X76)) )),
  inference(superposition,[],[f405,f608])).
fof(f2263,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f2262])).
fof(f2262,plain,(
  ( ! [X70,X72,X71,X69] : (p(s(bool,X70)) | p(s(bool,X71)) | ~sP9('T_0',X71,X70) | s(bool,X69) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(subsumption_resolution,[],[f1944,f668])).
fof(f1944,plain,(
  ( ! [X70,X72,X71,X69] : (~p(s(bool,X69)) | p(s(bool,X70)) | p(s(bool,X71)) | ~sP9('T_0',X71,X70) | s(bool,X69) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(superposition,[],[f395,f608])).
fof(f2260,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f2259])).
fof(f2259,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,X66)) | sP9('T_0',X66,X67) | s(bool,X65) = s(bool,X68) | s(bool,'T_0') = s(bool,X68)) )),
  inference(subsumption_resolution,[],[f1943,f668])).
fof(f1943,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,X65)) | ~p(s(bool,X66)) | sP9('T_0',X66,X67) | s(bool,X65) = s(bool,X68) | s(bool,'T_0') = s(bool,X68)) )),
  inference(superposition,[],[f394,f608])).
fof(f2257,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f2256])).
fof(f2256,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,X62)) | sP9('T_0',X63,X62) | s(bool,X61) = s(bool,X64) | s(bool,'T_0') = s(bool,X64)) )),
  inference(subsumption_resolution,[],[f1942,f668])).
fof(f1942,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,X61)) | ~p(s(bool,X62)) | sP9('T_0',X63,X62) | s(bool,X61) = s(bool,X64) | s(bool,'T_0') = s(bool,X64)) )),
  inference(superposition,[],[f393,f608])).
fof(f2254,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('T_0',X1,X2)) )),
  inference(condensation,[],[f2253])).
fof(f2253,plain,(
  ( ! [X59,X57,X60,X58] : (p(s(bool,X58)) | p(s(bool,X59)) | ~sP8('T_0',X58,X59) | s(bool,X57) = s(bool,X60) | s(bool,'T_0') = s(bool,X60)) )),
  inference(subsumption_resolution,[],[f1941,f668])).
fof(f1941,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,X57)) | p(s(bool,X58)) | p(s(bool,X59)) | ~sP8('T_0',X58,X59) | s(bool,X57) = s(bool,X60) | s(bool,'T_0') = s(bool,X60)) )),
  inference(superposition,[],[f388,f608])).
fof(f2251,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X1,'T_0')) )),
  inference(condensation,[],[f2250])).
fof(f2250,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP7(X55,X54,'T_0') | s(bool,X53) = s(bool,X56) | s(bool,'T_0') = s(bool,X56)) )),
  inference(subsumption_resolution,[],[f1940,f668])).
fof(f1940,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,X53)) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP7(X55,X54,'T_0') | s(bool,X53) = s(bool,X56) | s(bool,'T_0') = s(bool,X56)) )),
  inference(superposition,[],[f380,f608])).
fof(f2248,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6(X1,'T_0',X2)) )),
  inference(condensation,[],[f2247])).
fof(f2247,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,X50)) | p(s(bool,X51)) | ~sP6(X50,'T_0',X51) | s(bool,X49) = s(bool,X52) | s(bool,'T_0') = s(bool,X52)) )),
  inference(subsumption_resolution,[],[f1939,f668])).
fof(f1939,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,X49)) | ~p(s(bool,X50)) | p(s(bool,X51)) | ~sP6(X50,'T_0',X51) | s(bool,X49) = s(bool,X52) | s(bool,'T_0') = s(bool,X52)) )),
  inference(superposition,[],[f371,f608])).
fof(f2245,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X1,'T_0',X2)) )),
  inference(condensation,[],[f2244])).
fof(f2244,plain,(
  ( ! [X47,X45,X48,X46] : (~p(s(bool,X46)) | p(s(bool,X47)) | ~sP3(X46,'T_0',X47) | s(bool,X45) = s(bool,X48) | s(bool,'T_0') = s(bool,X48)) )),
  inference(subsumption_resolution,[],[f1938,f668])).
fof(f1938,plain,(
  ( ! [X47,X45,X48,X46] : (~p(s(bool,X45)) | ~p(s(bool,X46)) | p(s(bool,X47)) | ~sP3(X46,'T_0',X47) | s(bool,X45) = s(bool,X48) | s(bool,'T_0') = s(bool,X48)) )),
  inference(superposition,[],[f352,f608])).
fof(f2242,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X1,'T_0',X2)) )),
  inference(condensation,[],[f2241])).
fof(f2241,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,X42)) | p(s(bool,X43)) | ~sP4(X42,'T_0',X43) | s(bool,X41) = s(bool,X44) | s(bool,'T_0') = s(bool,X44)) )),
  inference(subsumption_resolution,[],[f1937,f668])).
fof(f1937,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,X41)) | ~p(s(bool,X42)) | p(s(bool,X43)) | ~sP4(X42,'T_0',X43) | s(bool,X41) = s(bool,X44) | s(bool,'T_0') = s(bool,X44)) )),
  inference(superposition,[],[f348,f608])).
fof(f2239,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP5(X1,'T_0',X2)) )),
  inference(condensation,[],[f2238])).
fof(f2238,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP5(X38,'T_0',X39) | s(bool,X37) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(subsumption_resolution,[],[f1936,f668])).
fof(f1936,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,X37)) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP5(X38,'T_0',X39) | s(bool,X37) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(superposition,[],[f344,f608])).
fof(f2236,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'T_0')) )),
  inference(condensation,[],[f2235])).
fof(f2235,plain,(
  ( ! [X35,X36,X34] : (p(s(bool,X35)) | sP1(X35,'T_0') | s(bool,X34) = s(bool,X36) | s(bool,'T_0') = s(bool,X36)) )),
  inference(subsumption_resolution,[],[f1935,f668])).
fof(f1935,plain,(
  ( ! [X35,X36,X34] : (~p(s(bool,X34)) | p(s(bool,X35)) | sP1(X35,'T_0') | s(bool,X34) = s(bool,X36) | s(bool,'T_0') = s(bool,X36)) )),
  inference(superposition,[],[f321,f608])).
fof(f2232,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('T_0',X1)) )),
  inference(condensation,[],[f2231])).
fof(f2231,plain,(
  ( ! [X33,X31,X32] : (p(s(bool,X32)) | sP1('T_0',X32) | s(bool,X31) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f1934,f668])).
fof(f1934,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,X31)) | p(s(bool,X32)) | sP1('T_0',X32) | s(bool,X31) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f318,f608])).
fof(f1730,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl23),
  inference(cnf_transformation,[],[f1730_D])).
fof(f1730_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f1738,plain,(
  p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl24),
  inference(cnf_transformation,[],[f1738_D])).
fof(f1738_D,plain,(
  p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f1736,plain,(
  p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(forward_demodulation,[],[f1735,f1500])).
fof(f1735,plain,(
  ( ! [X7] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X7))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f1709,f1470])).
fof(f1709,plain,(
  ( ! [X7] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X7),s('type.rat.rat',X7))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(superposition,[],[f261,f1500])).
fof(f1728,plain,(
  ( ! [X0] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))) ) | $spl20),
  inference(cnf_transformation,[],[f1728_D])).
fof(f1728_D,plain,(
  ( ! [X0] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f1727,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))) )),
  inference(forward_demodulation,[],[f1702,f1470])).
fof(f1702,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',X0))))) )),
  inference(superposition,[],[f292,f1500])).
fof(f1646,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl3),
  inference(cnf_transformation,[],[f1646_D])).
fof(f1646_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f1639,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0)))) )),
  inference(equality_factoring,[],[f242])).
fof(f1664,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl16),
  inference(cnf_transformation,[],[f1664_D])).
fof(f1664_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f1649,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl5),
  inference(cnf_transformation,[],[f1649_D])).
fof(f1649_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f1638,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(equality_factoring,[],[f242])).
fof(f1661,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))),
  inference(subsumption_resolution,[],[f1626,f1562])).
fof(f1626,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12)))))))),
  inference(superposition,[],[f1562,f242])).
fof(f1658,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))))),
  inference(subsumption_resolution,[],[f1625,f1552])).
fof(f1625,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))))))),
  inference(superposition,[],[f1552,f242])).
fof(f1655,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(subsumption_resolution,[],[f1624,f1566])).
fof(f1624,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK13),s('type.rat.rat',sK12))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(superposition,[],[f1566,f242])).
fof(f1652,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(subsumption_resolution,[],[f1623,f1556])).
fof(f1623,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(superposition,[],[f1556,f242])).
fof(f1651,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))) ) | $spl6),
  inference(cnf_transformation,[],[f1651_D])).
fof(f1651_D,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f1650,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))) )),
  inference(subsumption_resolution,[],[f1622,f291])).
fof(f1622,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X5),s('type.rat.rat',X4)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X4),s('type.rat.rat',X5)))))) )),
  inference(superposition,[],[f292,f242])).
fof(f1647,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(subsumption_resolution,[],[f1621,f260])).
fof(f1621,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat',X3) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f259,f242])).
fof(f1643,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(subsumption_resolution,[],[f1620,f262])).
fof(f1620,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.rat.rat_gre_2'(s('type.rat.rat',X2),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X2))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f261,f242])).
% SZS output end Proof for thm.rat
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 803
% Passive clauses: 4450
% Generated clauses: 36312
% Final active clauses: 320
% Final passive clauses: 354
% Input formulas: 45
% Initial clauses: 185
% 
% Duplicate literals: 2161
% Trivial inequalities: 197
% Fw subsumption resolutions: 1838
% Fw demodulations: 5251
% Bw demodulations: 1878
% Condensations: 2134
% Global subsumptions: 217
% 
% Simple tautologies: 315
% Equational tautologies: 847
% Forward subsumptions: 18151
% Fw demodulations to eq. taut.: 26
% Bw demodulations to eq. taut.: 11
% 
% Unit resulting resolution: 6684
% Factoring: 1
% Forward superposition: 7676
% Backward superposition: 5322
% Self superposition: 187
% Equality factoring: 157
% Equality resolution: 42
% 
% Split clauses: 262
% Split components: 542
% SAT solver clauses: 5809
% SAT solver unit clauses: 597
% SAT solver binary clauses: 790
% 
% Sat splits: 262
% Sat splitting refutations: 616
% 
% Memory used [KB]: 14456
% Time elapsed: 2.614 s
% ------------------------------
% ------------------------------
% Success in time 3.932 s
