Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 44
dis+11_7_41 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f117762,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f117725,f22203,f20337,f1971,f2961])).
fof(f2961,plain,(
  ~p(s(bool,'F_0')) | $spl3),
  inference(cnf_transformation,[],[f2961_D])).
fof(f2961_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f1971,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f522])).
fof(f522,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.list.CONS_ACYCLIC|split|0',aHL_FALSITY)).
fof(f20337,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.ZERO_0') | $spl228),
  inference(cnf_transformation,[],[f20337_D])).
fof(f20337_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.ZERO_0') <=> ~$spl228),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl228])])).
fof(f22203,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.ZERO_0') | $spl3),
  inference(subsumption_resolution,[],[f22191,f2961])).
fof(f22191,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.ZERO_0')),
  inference(superposition,[],[f2118,f1989])).
fof(f1989,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f540])).
fof(f540,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f226])).
fof(f226,axiom,(
  ! [X33] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X33),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.list.CONS_ACYCLIC|split|0','thm.numeral.numeral_lt|split|2')).
fof(f2118,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f1577])).
fof(f1577,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)))),
  inference(nnf_transformation,[],[f632])).
fof(f632,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))))),
  inference(flattening,[],[f631])).
fof(f631,plain,(
  ! [X0] : (~s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))))),
  inference(rectify,[],[f448])).
fof(f448,axiom,(
  ! [X33] : (~s('type.num.num','const.num.|48|_0') = s('type.num.num',X33) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X33)))))),
  file('thm.list.CONS_ACYCLIC|split|0','thm.arithmetic.NOT_ZERO_LT_ZERO')).
fof(f117725,plain,(
  $false | $spl228),
  inference(subsumption_resolution,[],[f117286,f85462])).
fof(f85462,plain,(
  ( ! [X3] : (s('type.num.num',X3) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))) ) | $spl228),
  inference(subsumption_resolution,[],[f85080,f2129])).
fof(f2129,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f640])).
fof(f640,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),
  inference(flattening,[],[f639])).
fof(f639,plain,(
  ! [X0] : ~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f106])).
fof(f106,axiom,(
  ! [X33] : ~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X33)))),
  file('thm.list.CONS_ACYCLIC|split|0','thm.num.NOT_SUC')).
fof(f85080,plain,(
  ( ! [X3] : (s('type.num.num',X3) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl228),
  inference(superposition,[],[f2537,f84922])).
fof(f84922,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl228),
  inference(forward_demodulation,[],[f84921,f22205])).
fof(f22205,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl228),
  inference(backward_demodulation,[],[f20337,f1962])).
fof(f1962,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f192])).
fof(f192,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.list.CONS_ACYCLIC|split|0','thm.numeral.numeral_distrib|split|13')).
fof(f84921,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl228),
  inference(forward_demodulation,[],[f2020,f20337])).
fof(f2020,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f571])).
fof(f571,plain,(
  ! [X0] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f362])).
fof(f362,axiom,(
  ! [X69] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X69))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X69),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.list.CONS_ACYCLIC|split|0','thm.arithmetic.ADD|49|')).
fof(f2537,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f1781])).
fof(f1781,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f1058])).
fof(f1058,plain,(
  ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X1))),
  inference(rectify,[],[f440])).
fof(f440,axiom,(
  ! [X69,X33] : (s('type.num.num',X69) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X69),s('type.num.num',X33))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X33))),
  file('thm.list.CONS_ACYCLIC|split|0','thm.arithmetic.ADD_INV_|48|_EQ')).
fof(f117286,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK15),sK16))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK15),sK16)))))),
  inference(superposition,[],[f2228,f1955])).
fof(f1955,plain,(
  s('type.list.list'(sK15),sK16) = s('type.list.list'(sK15),'const.list.CONS_2'(s(sK15,sK17),s('type.list.list'(sK15),sK16)))),
  inference(cnf_transformation,[],[f1527])).
fof(f1527,plain,(
  s('type.list.list'(sK15),sK16) = s('type.list.list'(sK15),'const.list.CONS_2'(s(sK15,sK17),s('type.list.list'(sK15),sK16)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK15,sK16,sK17])],[f1343])).
fof(f1343,plain,(
  ? [X0,X1,X2] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))),
  inference(ennf_transformation,[],[f519])).
fof(f519,plain,(
  ~! [X0,X1,X2] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f518])).
fof(f518,plain,(
  ~! [X0] : ! [X1,X2] : ~s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : ~s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X7)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : ~s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X7)))),
  file('thm.list.CONS_ACYCLIC|split|0','thm.list.CONS_ACYCLIC|split|0')).
fof(f2228,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f778])).
fof(f778,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f777])).
fof(f777,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X6] : ! [X38,X12] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X12))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X38),s('type.list.list'(X6),X12)))))),
  file('thm.list.CONS_ACYCLIC|split|0','thm.list.LENGTH|split|1')).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 1956
% Passive clauses: 20884
% Generated clauses: 115721
% Final active clauses: 1741
% Final passive clauses: 18108
% Input formulas: 516
% Initial clauses: 992
% 
% Duplicate literals: 301
% Trivial inequalities: 470
% Fw subsumption resolutions: 4417
% Fw demodulations: 11600
% Bw demodulations: 209
% 
% Simple tautologies: 520
% Equational tautologies: 38
% Forward subsumptions: 76895
% 
% Binary resolution: 14621
% Factoring: 1053
% Forward superposition: 33288
% Backward superposition: 48257
% Self superposition: 94
% Equality factoring: 2
% Equality resolution: 35
% 
% Split clauses: 881
% Split components: 1764
% SAT solver clauses: 1240
% SAT solver unit clauses: 32
% SAT solver binary clauses: 138
% SAT solver learnt clauses: 1
% 
% Sat splits: 881
% Sat splitting refutations: 15
% 
% TWLsolver clauses: 1235
% TWLsolver calls for satisfiability: 712
% 
% Memory used [KB]: 66267
% Time elapsed: 2.060 s
% ------------------------------
% ------------------------------
% Success in time 2.1 s
