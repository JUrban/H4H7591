Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f7392,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f7389,f197,f349])).
fof(f349,plain,(
  ~p(s(bool,'F_0')) | $spl3),
  inference(cnf_transformation,[],[f349_D])).
fof(f349_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f197,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.rich_list.EVERY2_APPEND_suff',aHL_FALSITY)).
fof(f7389,plain,(
  $false | $spl3),
  inference(subsumption_resolution,[],[f7388,f349])).
fof(f7388,plain,(
  p(s(bool,'F_0'))),
  inference(forward_demodulation,[],[f7358,f3616])).
fof(f3616,plain,(
  s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK12,fun(sK13,bool)),sK18),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK17),s('type.list.list'(sK12),sK15))),s('type.list.list'(sK13),'const.list.APPEND_2'(s('type.list.list'(sK13),sK16),s('type.list.list'(sK13),sK14)))))),
  inference(resolution,[],[f190,f209])).
fof(f209,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X13] : (s(bool,'F_0') = s(bool,X13) <=> ~p(s(bool,X13)))),
  file('thm.rich_list.EVERY2_APPEND_suff','thm.bool.EQ_CLAUSES|split|2')).
fof(f190,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK12,fun(sK13,bool)),sK18),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK17),s('type.list.list'(sK12),sK15))),s('type.list.list'(sK13),'const.list.APPEND_2'(s('type.list.list'(sK13),sK16),s('type.list.list'(sK13),sK14))))))),
  inference(cnf_transformation,[],[f119])).
fof(f119,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK12,fun(sK13,bool)),sK18),s('type.list.list'(sK12),sK17),s('type.list.list'(sK13),sK16)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(sK12,fun(sK13,bool)),sK18),s('type.list.list'(sK12),sK15),s('type.list.list'(sK13),sK14)))) & ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK12,fun(sK13,bool)),sK18),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK17),s('type.list.list'(sK12),sK15))),s('type.list.list'(sK13),'const.list.APPEND_2'(s('type.list.list'(sK13),sK16),s('type.list.list'(sK13),sK14))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18])],[f81])).
fof(f81,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X5),s('type.list.list'(X1),X4)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X3),s('type.list.list'(X1),X2)))) & ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X4),s('type.list.list'(X1),X2)))))))),
  inference(flattening,[],[f80])).
fof(f80,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X5),s('type.list.list'(X1),X4)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X3),s('type.list.list'(X1),X2))))) & ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X4),s('type.list.list'(X1),X2)))))))),
  inference(ennf_transformation,[],[f35])).
fof(f35,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X5),s('type.list.list'(X1),X4)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X3),s('type.list.list'(X1),X2))))) => p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X4),s('type.list.list'(X1),X2)))))))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5,X6] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X5),s('type.list.list'(X1),X4)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X3),s('type.list.list'(X1),X2))))) => p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X4),s('type.list.list'(X1),X2)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11,X12] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X7,bool)),X12),s('type.list.list'(X6),X11),s('type.list.list'(X7),X10)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X7,bool)),X12),s('type.list.list'(X6),X9),s('type.list.list'(X7),X8))))) => p(s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X7,bool)),X12),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X11),s('type.list.list'(X6),X9))),s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X10),s('type.list.list'(X7),X8)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X12] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X7,bool)),X12),s('type.list.list'(X6),X11),s('type.list.list'(X7),X10)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X7,bool)),X12),s('type.list.list'(X6),X9),s('type.list.list'(X7),X8))))) => p(s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X7,bool)),X12),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X11),s('type.list.list'(X6),X9))),s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X10),s('type.list.list'(X7),X8)))))))),
  file('thm.rich_list.EVERY2_APPEND_suff','thm.rich_list.EVERY2_APPEND_suff')).
fof(f7358,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK12,fun(sK13,bool)),sK18),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK17),s('type.list.list'(sK12),sK15))),s('type.list.list'(sK13),'const.list.APPEND_2'(s('type.list.list'(sK13),sK16),s('type.list.list'(sK13),sK14))))))),
  inference(resolution,[],[f3908,f189])).
fof(f189,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK12,fun(sK13,bool)),sK18),s('type.list.list'(sK12),sK15),s('type.list.list'(sK13),sK14))))),
  inference(cnf_transformation,[],[f119])).
fof(f3908,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK12,fun(sK13,bool)),sK18),s('type.list.list'(sK12),X0),s('type.list.list'(sK13),X1)))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK12,fun(sK13,bool)),sK18),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK17),s('type.list.list'(sK12),X0))),s('type.list.list'(sK13),'const.list.APPEND_2'(s('type.list.list'(sK13),sK16),s('type.list.list'(sK13),X1))))))) )),
  inference(resolution,[],[f259,f188])).
fof(f188,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK12,fun(sK13,bool)),sK18),s('type.list.list'(sK12),sK17),s('type.list.list'(sK13),sK16))))),
  inference(cnf_transformation,[],[f119])).
fof(f259,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X5),s('type.list.list'(X1),X4)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X3),s('type.list.list'(X1),X2)))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X4),s('type.list.list'(X1),X2))))))) )),
  inference(cnf_transformation,[],[f150])).
fof(f150,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X5),s('type.list.list'(X1),X4)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X3),s('type.list.list'(X1),X2)))) | (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X4),s('type.list.list'(X1),X2)))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))) & (~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X4),s('type.list.list'(X1),X2)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) | (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X5),s('type.list.list'(X1),X4)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X3),s('type.list.list'(X1),X2)))))))),
  inference(flattening,[],[f149])).
fof(f149,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (((~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X5),s('type.list.list'(X1),X4)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X3),s('type.list.list'(X1),X2))))) | (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X4),s('type.list.list'(X1),X2)))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))) & ((~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X4),s('type.list.list'(X1),X2)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2)))) | (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X5),s('type.list.list'(X1),X4)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X3),s('type.list.list'(X1),X2)))))))),
  inference(nnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X5),s('type.list.list'(X1),X4)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X3),s('type.list.list'(X1),X2))))) <=> (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X4),s('type.list.list'(X1),X2)))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2)))))),
  inference(flattening,[],[f70])).
fof(f70,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X5),s('type.list.list'(X1),X4)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X3),s('type.list.list'(X1),X2))))) <=> (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X4),s('type.list.list'(X1),X2)))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2)))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X12] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X7,bool)),X12),s('type.list.list'(X6),X11),s('type.list.list'(X7),X10)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X7,bool)),X12),s('type.list.list'(X6),X9),s('type.list.list'(X7),X8))))) <=> (p(s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X7,bool)),X12),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X11),s('type.list.list'(X6),X9))),s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X10),s('type.list.list'(X7),X8)))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X11))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X10))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X8)))))),
  file('thm.rich_list.EVERY2_APPEND_suff','thm.rich_list.EVERY2_APPEND')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 462
% Passive clauses: 2177
% Generated clauses: 7171
% Final active clauses: 428
% Final passive clauses: 1408
% Input formulas: 32
% Initial clauses: 153
% 
% Duplicate literals: 221
% Trivial inequalities: 72
% Fw subsumption resolutions: 820
% Fw demodulations: 39
% Bw demodulations: 33
% 
% Simple tautologies: 148
% Equational tautologies: 59
% Forward subsumptions: 3471
% 
% Binary resolution: 3299
% Factoring: 842
% Forward superposition: 536
% Backward superposition: 976
% Self superposition: 24
% Equality factoring: 26
% Equality resolution: 26
% 
% Split clauses: 247
% Split components: 500
% SAT solver clauses: 434
% SAT solver unit clauses: 17
% SAT solver binary clauses: 84
% SAT solver learnt clauses: 1
% 
% Sat splits: 247
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 431
% TWLsolver calls for satisfiability: 234
% 
% Memory used [KB]: 3454
% Time elapsed: 0.152 s
% ------------------------------
% ------------------------------
% Success in time 0.153 s
