Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (20550)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1029
% Passive clauses: 5929
% Generated clauses: 34046
% Final active clauses: 938
% Final passive clauses: 4434
% Input formulas: 261
% Initial clauses: 506
% 
% Duplicate literals: 228
% Trivial inequalities: 69
% Fw subsumption resolutions: 1783
% Fw demodulations: 3414
% Bw demodulations: 82
% 
% Simple tautologies: 283
% Equational tautologies: 29
% Forward subsumptions: 22005
% Fw demodulations to eq. taut.: 18
% 
% Binary resolution: 5566
% Factoring: 1232
% Forward superposition: 8976
% Backward superposition: 11952
% Self superposition: 56
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 387
% Split components: 776
% SAT solver clauses: 613
% SAT solver unit clauses: 15
% SAT solver binary clauses: 84
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 2
% 
% Sat splits: 387
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 612
% TWLsolver calls for satisfiability: 446
% 
% Memory used [KB]: 18549
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (20573)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 671
% Passive clauses: 3135
% Generated clauses: 29244
% Final active clauses: 506
% Final passive clauses: 1971
% Input formulas: 261
% Initial clauses: 506
% 
% Duplicate literals: 158
% Trivial inequalities: 37
% Fw subsumption resolutions: 1118
% Fw demodulations: 3508
% Bw demodulations: 591
% Condensations: 124
% Global subsumptions: 34
% 
% Simple tautologies: 284
% Equational tautologies: 20
% Forward subsumptions: 16815
% Fw demodulations to eq. taut.: 27
% Bw demodulations to eq. taut.: 5
% 
% Binary resolution: 3473
% Factoring: 292
% Forward superposition: 8085
% Backward superposition: 7624
% Self superposition: 93
% Equality factoring: 2
% Equality resolution: 11
% 
% Split clauses: 13
% Split components: 26
% SAT solver clauses: 4016
% SAT solver unit clauses: 658
% SAT solver binary clauses: 190
% SAT solver learnt clauses: 72
% SAT solver learnt literals: 17
% 
% Sat splits: 13
% Sat splitting refutations: 95
% 
% TWLsolver clauses: 3876
% TWLsolver calls for satisfiability: 2840
% 
% Memory used [KB]: 22131
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% (20592)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 798
% Passive clauses: 6231
% Generated clauses: 139800
% Final active clauses: 503
% Final passive clauses: 1642
% Input formulas: 261
% Initial clauses: 506
% Discarded non-redundant clauses: 5147
% 
% Duplicate literals: 18
% Trivial inequalities: 102
% Fw subsumption resolutions: 2481
% Fw demodulations: 50090
% Bw demodulations: 3032
% Condensations: 31
% Global subsumptions: 3259
% 
% Simple tautologies: 197
% Equational tautologies: 62
% Forward subsumptions: 40491
% Fw demodulations to eq. taut.: 15284
% Bw demodulations to eq. taut.: 31
% 
% Unit resulting resolution: 56745
% Factoring: 2
% Forward superposition: 12249
% Backward superposition: 11079
% Self superposition: 139
% Equality factoring: 2
% Equality resolution: 18
% 
% Split clauses: 14
% Split components: 28
% SAT solver clauses: 15346
% SAT solver unit clauses: 6714
% SAT solver binary clauses: 6999
% 
% Sat splits: 14
% Sat splitting refutations: 5826
% 
% Memory used [KB]: 341828
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f9699,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f991,f992,f993,f994,f1151,f1004,f1005,f1006,f1007,f1008,f1010,f1155,f1011,f1090,f1153,f1126,f1127,f1128,f1129,f1179,f1296,f1301,f1303,f1307,f1311,f1342,f1349,f1350,f1353,f1354,f1355,f1344,f1356,f1369,f1149,f1373,f1375,f1377,f1378,f1380,f1381,f1383,f1388,f1391,f1393,f1395,f1399,f1252,f1405,f1403,f1406,f1408,f1410,f1407,f1411,f1409,f1412,f1414,f1415,f1371,f1417,f1268,f1269,f1419,f1298,f1278,f1279,f1280,f1422,f1281,f1423,f1282,f1425,f1285,f1421,f1427,f1490,f1491,f1492,f1493,f1494,f1614,f1495,f1497,f1579,f1613,f1586,f1587,f1588,f1589,f1593,f1621,f1629,f1630,f1631,f1632,f1633,f1753,f1634,f1636,f1718,f1752,f1725,f1726,f1727,f1728,f1732,f1759,f1922,f1920,f1889,f1864,f1982,f1983,f1984,f1989,f1990,f1991,f1998,f2001,f2072,f2071,f2070,f2297,f2291,f2280,f2279,f2398,f2401,f2402,f2403,f2404,f2405,f2414,f2415,f2416,f2417,f2421,f2426,f2435,f2436,f2437,f2438,f2442,f2448,f2492,f2494,f2495,f2496,f2497,f2472,f2473,f2493,f2484,f2485,f2486,f2487,f2506,f2508,f2509,f2510,f2511,f2512,f2513,f2515,f2597,f2628,f2629,f2630,f2631,f2632,f2633,f2635,f2717,f2771,f1177,f2772,f1181,f2773,f1182,f2774,f2791,f1183,f2815,f2816,f2817,f2818,f2819,f2618,f2820,f2822,f2904,f2617,f2933,f2934,f2935,f2936,f2937,f2738,f2938,f2940,f3022,f2737,f3085,f3086,f3087,f3088,f3089,f3224,f3090,f3092,f3174,f3223,f3284,f3551,f3285,f3555,f3286,f3556,f3287,f3553,f3557,f3878,f3880,f3881,f3882,f3883,f3858,f3859,f3879,f3919,f3920,f3921,f3922,f3923,f4068,f3924,f3926,f4008,f4067,f4078,f4081,f4082,f4083,f4084,f4044,f4045,f4080,f4137,f4139,f4140,f4141,f4142,f4117,f4118,f4138,f4152,f4153,f4154,f4155,f4156,f4262,f4157,f4159,f4241,f4261,f4316,f4318,f4319,f4320,f4321,f4296,f4297,f4317,f4351,f4352,f4353,f4354,f4355,f4461,f4356,f4358,f4440,f4460,f4536,f4538,f4539,f4540,f4541,f4515,f4516,f4537,f4629,f4631,f4632,f4633,f4634,f4608,f4609,f4630,f4722,f4724,f4725,f4726,f4727,f4701,f4702,f4723,f4813,f4815,f4816,f4817,f4818,f4794,f4795,f4814,f4828,f4829,f4830,f4831,f4832,f4834,f4962,f4835,f4914,f4961,f5113,f5115,f5116,f5117,f5118,f5094,f5095,f5114,f5359,f5361,f5362,f5363,f5364,f5340,f5341,f5360,f5650,f5652,f5653,f5654,f5655,f5630,f1178,f5631,f5651,f1352,f5809,f5810,f5811,f5812,f5813,f5959,f5814,f5816,f5898,f5958,f6296,f6297,f6298,f6299,f6300,f6450,f6301,f6303,f6385,f6449,f6754,f6755,f6773,f6774,f2075,f7033,f6974,f6892,f6890,f6889,f6888,f6887,f6886,f7063,f6885,f7062,f7661,f7662,f7663,f7664,f1154,f7665,f1156,f7783,f7666,f1158,f7668,f1157,f7750,f1159,f7782,f7902,f7905,f7906,f7907,f7908,f7904,f7909,f7910,f7911,f1384,f7912,f1389,f7913,f1397,f7914,f1386,f1401,f7882,f7928,f7926,f8478,f8479,f8480,f1620,f8481,f1622,f8485,f8644,f1624,f9233,f9698])).
fof(f9698,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f7922,f1001])).
fof(f1001,plain,(
  s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13)))),
  inference(resolution,[],[f652,f749])).
fof(f749,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f471])).
fof(f471,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))))),
  inference(ennf_transformation,[],[f328])).
fof(f328,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) => s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))))),
  inference(flattening,[],[f327])).
fof(f327,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) => s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X6] : ! [X16,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X16))),s('type.num.num',X8)))) => s('type.list.list'(X6),X16) = s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X8),s('type.list.list'(X6),X16))))),
  file('thm.rich_list.TAKE_APPEND2','thm.list.TAKE_LENGTH_TOO_LONG')).
fof(f652,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14))))),
  inference(cnf_transformation,[],[f526])).
fof(f526,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) & s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15])],[f454])).
fof(f454,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) & ? [X3] : s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))),s('type.list.list'(X0),X3))))))),
  inference(ennf_transformation,[],[f264])).
fof(f264,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) => ! [X3] : s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))),s('type.list.list'(X0),X3))))))),
  inference(flattening,[],[f263])).
fof(f263,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) => ! [X3] : s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))),s('type.list.list'(X0),X3))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num',X8)))) => ! [X9] : s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X8),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X9))))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))))),s('type.list.list'(X6),X9))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num',X8)))) => ! [X9] : s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X8),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X9))))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))))),s('type.list.list'(X6),X9))))))),
  file('thm.rich_list.TAKE_APPEND2','thm.rich_list.TAKE_APPEND2')).
fof(f7922,plain,(
  s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))) | $spl2),
  inference(subsumption_resolution,[],[f7921,f952])).
fof(f952,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f418])).
fof(f418,plain,(
  ! [X0] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))),
  inference(rectify,[],[f235])).
fof(f235,axiom,(
  ! [X14] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num',X14))))),
  file('thm.rich_list.TAKE_APPEND2','thm.arithmetic.LESS_EQ_REFL')).
fof(f7921,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num',sK14)))) | s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))) | $spl2),
  inference(forward_demodulation,[],[f7880,f1151])).
fof(f7880,plain,(
  s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) | $spl2),
  inference(superposition,[],[f7363,f748])).
fof(f748,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f470])).
fof(f470,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ! [X3] : s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))),
  inference(ennf_transformation,[],[f326])).
fof(f326,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => ! [X3] : s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))),
  inference(flattening,[],[f325])).
fof(f325,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => ! [X3] : s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6] : ! [X8,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) => ! [X9] : s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X8),s('type.list.list'(X6),X7))) = s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X8),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X9))))))),
  file('thm.rich_list.TAKE_APPEND2','thm.rich_list.TAKE_APPEND|49|')).
fof(f7363,plain,(
  s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | $spl2),
  inference(forward_demodulation,[],[f7362,f769])).
fof(f769,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f352])).
fof(f352,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f351])).
fof(f351,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f68])).
fof(f68,axiom,(
  ! [X6] : ! [X16] : s('type.list.list'(X6),X16) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X16),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.rich_list.TAKE_APPEND2','thm.list.APPEND_NIL')).
fof(f7362,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | $spl2),
  inference(forward_demodulation,[],[f7361,f750])).
fof(f750,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f330])).
fof(f330,plain,(
  ! [X0,X1] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f329])).
fof(f329,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X6] : ! [X16] : s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(X6),X16)))),
  file('thm.rich_list.TAKE_APPEND2','thm.list.TAKE_|48|')).
fof(f7361,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | $spl2),
  inference(forward_demodulation,[],[f7065,f740])).
fof(f740,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f314])).
fof(f314,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))),
  inference(rectify,[],[f229])).
fof(f229,axiom,(
  ! [X29] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)))),
  file('thm.rich_list.TAKE_APPEND2','thm.arithmetic.SUB_EQUAL_|48|')).
fof(f7065,plain,(
  s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num',sK14))),s('type.list.list'(sK12),sK15))))) | $spl2),
  inference(backward_demodulation,[],[f1151,f653])).
fof(f653,plain,(
  s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))))),
  inference(cnf_transformation,[],[f526])).
fof(f9233,plain,(
  $false | $spl51),
  inference(subsumption_resolution,[],[f1386,f1001])).
fof(f1624,plain,(
  s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12)))) | $spl92),
  inference(cnf_transformation,[],[f1624_D])).
fof(f1624_D,plain,(
  s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12)))) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f8644,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') = s('type.list.list'(sK12),'const.list.DROP_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.NIL_0'))) | $spl194),
  inference(cnf_transformation,[],[f8644_D])).
fof(f8644_D,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') = s('type.list.list'(sK12),'const.list.DROP_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.NIL_0'))) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f8485,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') = s('type.list.list'(sK12),'const.list.DROP_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.NIL_0'))) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))),
  inference(superposition,[],[f1000,f983])).
fof(f983,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK27(X1,X0)),s('type.list.list'(X0),sK28(X1,X0)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f651])).
fof(f651,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK27(X1,X0)),s('type.list.list'(X0),sK28(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK27,sK28])],[f453])).
fof(f453,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))),
  inference(flattening,[],[f452])).
fof(f452,plain,(
  ! [X0] : ! [X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X6] : ! [X16] : (s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X16) | ? [X12,X11] : s('type.list.list'(X6),X16) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),X11))))),
  file('thm.rich_list.TAKE_APPEND2','thm.list.list_CASES')).
fof(f1000,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') = s('type.list.list'(sK12),'const.list.DROP_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13)))),
  inference(resolution,[],[f652,f969])).
fof(f969,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f503])).
fof(f503,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))))),
  inference(ennf_transformation,[],[f436])).
fof(f436,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) => s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))))),
  inference(flattening,[],[f435])).
fof(f435,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) => s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X6] : ! [X16,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X16))),s('type.num.num',X8)))) => s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X8),s('type.list.list'(X6),X16))))),
  file('thm.rich_list.TAKE_APPEND2','thm.list.DROP_LENGTH_TOO_LONG')).
fof(f1622,plain,(
  ( ! [X27] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) ) | $spl90),
  inference(cnf_transformation,[],[f1622_D])).
fof(f1622_D,plain,(
  ( ! [X27] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f8481,plain,(
  ( ! [X11] : (s('type.list.list'(sK12),'const.list.NIL_0') = s('type.list.list'(sK12),'const.list.DROP_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.NIL_0'))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X11),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1000,f766])).
fof(f766,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f566])).
fof(f566,plain,(
  ! [X0,X1,X2] : ((s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) | (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2))) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X2) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f565])).
fof(f565,plain,(
  ! [X0,X1,X2] : ((s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) | (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2))) & ((s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X2)) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))))),
  inference(nnf_transformation,[],[f348])).
fof(f348,plain,(
  ! [X0,X1,X2] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) <=> (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2)))),
  inference(flattening,[],[f347])).
fof(f347,plain,(
  ! [X0] : ! [X1,X2] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) <=> (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2)))),
  inference(rectify,[],[f255])).
fof(f255,axiom,(
  ! [X6] : ! [X7,X9] : (s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X9))) <=> (s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7) & s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X9)))),
  file('thm.rich_list.TAKE_APPEND2','thm.list.APPEND_eq_NIL|split|0')).
fof(f1620,plain,(
  ( ! [X23] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X23)))) ) | $spl86),
  inference(cnf_transformation,[],[f1620_D])).
fof(f1620_D,plain,(
  ( ! [X23] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X23)))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f8480,plain,(
  ( ! [X10] : (s('type.list.list'(sK12),'const.list.NIL_0') = s('type.list.list'(sK12),'const.list.DROP_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.NIL_0'))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X10)))) )),
  inference(superposition,[],[f1000,f765])).
fof(f765,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f566])).
fof(f8479,plain,(
  ( ! [X9] : (s('type.list.list'(sK12),'const.list.NIL_0') = s('type.list.list'(sK12),'const.list.DROP_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.NIL_0'))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X9),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1000,f763])).
fof(f763,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f564])).
fof(f564,plain,(
  ! [X0,X1,X2] : ((s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) | (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2))) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X2) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f563])).
fof(f563,plain,(
  ! [X0,X1,X2] : ((s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) | (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2))) & ((s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X2)) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))))),
  inference(nnf_transformation,[],[f346])).
fof(f346,plain,(
  ! [X0,X1,X2] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) <=> (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2)))),
  inference(flattening,[],[f345])).
fof(f345,plain,(
  ! [X0] : ! [X1,X2] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) <=> (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X2)))),
  inference(rectify,[],[f254])).
fof(f254,axiom,(
  ! [X6] : ! [X7,X9] : (s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X9))) <=> (s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7) & s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X9)))),
  file('thm.rich_list.TAKE_APPEND2','thm.list.APPEND_eq_NIL|split|1')).
fof(f8478,plain,(
  ( ! [X8] : (s('type.list.list'(sK12),'const.list.NIL_0') = s('type.list.list'(sK12),'const.list.DROP_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.NIL_0'))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X8)))) )),
  inference(superposition,[],[f1000,f762])).
fof(f762,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f564])).
fof(f7926,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))),s('type.num.num',sK14)))) | $spl191),
  inference(cnf_transformation,[],[f7926_D])).
fof(f7926_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))),s('type.num.num',sK14)))) <=> ~$spl191),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl191])])).
fof(f7928,plain,(
  s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))) | $spl193),
  inference(cnf_transformation,[],[f7928_D])).
fof(f7928_D,plain,(
  s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))) <=> ~$spl193),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl193])])).
fof(f7882,plain,(
  s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))),s('type.num.num',sK14)))) | $spl2),
  inference(superposition,[],[f7363,f749])).
fof(f1401,plain,(
  s('type.list.list'(sK12),sK15) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK15,sK12)),s('type.list.list'(sK12),sK28(sK15,sK12)))) | $spl56),
  inference(cnf_transformation,[],[f1401_D])).
fof(f1401_D,plain,(
  s('type.list.list'(sK12),sK15) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK15,sK12)),s('type.list.list'(sK12),sK28(sK15,sK12)))) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f1386,plain,(
  s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))) | $spl51),
  inference(cnf_transformation,[],[f1386_D])).
fof(f1386_D,plain,(
  s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f7914,plain,(
  s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))) | s('type.list.list'(sK12),sK15) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK15,sK12)),s('type.list.list'(sK12),sK28(sK15,sK12)))) | $spl2),
  inference(forward_demodulation,[],[f7857,f769])).
fof(f7857,plain,(
  s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))))) | s('type.list.list'(sK12),sK15) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK15,sK12)),s('type.list.list'(sK12),sK28(sK15,sK12)))) | $spl2),
  inference(superposition,[],[f7363,f983])).
fof(f1397,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK15))) | $spl55),
  inference(cnf_transformation,[],[f1397_D])).
fof(f1397_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK15))) <=> ~$spl55),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl55])])).
fof(f7913,plain,(
  s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK15))) | $spl2),
  inference(forward_demodulation,[],[f7854,f769])).
fof(f7854,plain,(
  s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK15))) | $spl2),
  inference(superposition,[],[f7363,f973])).
fof(f973,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f644])).
fof(f644,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f444])).
fof(f444,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f443])).
fof(f443,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f217])).
fof(f217,axiom,(
  ! [X6] : ! [X16] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X16))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X16))),
  file('thm.rich_list.TAKE_APPEND2','thm.list.LENGTH_NIL')).
fof(f1389,plain,(
  ( ! [X9] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X9),s('type.list.list'(sK12),sK15)))) ) | $spl52),
  inference(cnf_transformation,[],[f1389_D])).
fof(f1389_D,plain,(
  ( ! [X9] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X9),s('type.list.list'(sK12),sK15)))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f7912,plain,(
  ( ! [X11] : (s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X11),s('type.list.list'(sK12),sK15)))) ) | $spl2),
  inference(forward_demodulation,[],[f7853,f769])).
fof(f7853,plain,(
  ( ! [X11] : (s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X11),s('type.list.list'(sK12),sK15)))) ) | $spl2),
  inference(superposition,[],[f7363,f766])).
fof(f1384,plain,(
  ( ! [X8] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK15),s('type.list.list'(sK12),X8)))) ) | $spl48),
  inference(cnf_transformation,[],[f1384_D])).
fof(f1384_D,plain,(
  ( ! [X8] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK15),s('type.list.list'(sK12),X8)))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f7911,plain,(
  ( ! [X10] : (s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK15),s('type.list.list'(sK12),X10)))) ) | $spl2),
  inference(forward_demodulation,[],[f7852,f769])).
fof(f7852,plain,(
  ( ! [X10] : (s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK15),s('type.list.list'(sK12),X10)))) ) | $spl2),
  inference(superposition,[],[f7363,f765])).
fof(f7910,plain,(
  ( ! [X9] : (s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X9),s('type.list.list'(sK12),sK15)))) ) | $spl2),
  inference(forward_demodulation,[],[f7851,f769])).
fof(f7851,plain,(
  ( ! [X9] : (s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X9),s('type.list.list'(sK12),sK15)))) ) | $spl2),
  inference(superposition,[],[f7363,f763])).
fof(f7909,plain,(
  ( ! [X8] : (s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK15),s('type.list.list'(sK12),X8)))) ) | $spl2),
  inference(forward_demodulation,[],[f7850,f769])).
fof(f7850,plain,(
  ( ! [X8] : (s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK15),s('type.list.list'(sK12),X8)))) ) | $spl2),
  inference(superposition,[],[f7363,f762])).
fof(f7904,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK15))) | $spl189),
  inference(cnf_transformation,[],[f7904_D])).
fof(f7904_D,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK15))) <=> ~$spl189),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl189])])).
fof(f7908,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK15))) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12)))) | $spl2),
  inference(forward_demodulation,[],[f7843,f770])).
fof(f770,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f354])).
fof(f354,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f353])).
fof(f353,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f67])).
fof(f67,axiom,(
  ! [X10] : ! [X16] : s('type.list.list'(X10),X16) = s('type.list.list'(X10),'const.list.APPEND_2'(s('type.list.list'(X10),'const.list.NIL_0'),s('type.list.list'(X10),X16)))),
  file('thm.rich_list.TAKE_APPEND2','thm.rich_list.APPEND_NIL|split|1')).
fof(f7843,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.NIL_0'),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12)))) | $spl2),
  inference(superposition,[],[f7363,f983])).
fof(f7907,plain,(
  ( ! [X11] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK15))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X11),s('type.list.list'(sK12),sK13)))) ) | $spl2),
  inference(forward_demodulation,[],[f7839,f770])).
fof(f7839,plain,(
  ( ! [X11] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.NIL_0'),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X11),s('type.list.list'(sK12),sK13)))) ) | $spl2),
  inference(superposition,[],[f7363,f766])).
fof(f7906,plain,(
  ( ! [X10] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK15))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X10)))) ) | $spl2),
  inference(forward_demodulation,[],[f7838,f770])).
fof(f7838,plain,(
  ( ! [X10] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.NIL_0'),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X10)))) ) | $spl2),
  inference(superposition,[],[f7363,f765])).
fof(f7905,plain,(
  ( ! [X9] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK15))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X9),s('type.list.list'(sK12),sK13)))) ) | $spl2),
  inference(forward_demodulation,[],[f7837,f770])).
fof(f7837,plain,(
  ( ! [X9] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.NIL_0'),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X9),s('type.list.list'(sK12),sK13)))) ) | $spl2),
  inference(superposition,[],[f7363,f763])).
fof(f7902,plain,(
  ( ! [X8] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK15))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X8)))) ) | $spl2),
  inference(forward_demodulation,[],[f7836,f770])).
fof(f7836,plain,(
  ( ! [X8] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.NIL_0'),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X8)))) ) | $spl2),
  inference(superposition,[],[f7363,f762])).
fof(f7782,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num',sK14)))) ) | $spl184),
  inference(cnf_transformation,[],[f7782_D])).
fof(f7782_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num',sK14)))) ) <=> ~$spl184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl184])])).
fof(f1159,plain,(
  ( ! [X17] : (p(s(bool,X17))) ) | $spl16),
  inference(cnf_transformation,[],[f1159_D])).
fof(f1159_D,plain,(
  ( ! [X17] : (p(s(bool,X17))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f7750,plain,(
  ( ! [X156,X157] : (p(s(bool,X156)) | ~p(s(bool,X157)) | s(bool,X157) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num',sK14)))) ) | $spl2),
  inference(resolution,[],[f7066,f984])).
fof(f984,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f658])).
fof(f658,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f528])).
fof(f528,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | ~p(s(bool,X1)) | p(s(bool,X3))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | ~p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(flattening,[],[f527])).
fof(f527,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) | p(s(bool,X3)))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | (~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f456])).
fof(f456,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(flattening,[],[f455])).
fof(f455,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3))) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(ennf_transformation,[],[f265])).
fof(f265,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) = s(bool,X1) & (p(s(bool,X1)) => s(bool,X2) = s(bool,X3))) => ((p(s(bool,X0)) => p(s(bool,X2))) <=> (p(s(bool,X1)) => p(s(bool,X3)))))),
  inference(rectify,[],[f168])).
fof(f168,axiom,(
  ! [X13,X34,X33,X35] : ((s(bool,X13) = s(bool,X34) & (p(s(bool,X34)) => s(bool,X33) = s(bool,X35))) => ((p(s(bool,X13)) => p(s(bool,X33))) <=> (p(s(bool,X34)) => p(s(bool,X35)))))),
  file('thm.rich_list.TAKE_APPEND2','thm.bool.IMP_CONG')).
fof(f7066,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num',sK14)))) | $spl2),
  inference(backward_demodulation,[],[f1151,f998])).
fof(f998,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))),
  inference(resolution,[],[f652,f956])).
fof(f956,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f642])).
fof(f642,plain,(
  ! [X0,X1] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f422])).
fof(f422,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f421])).
fof(f421,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f231])).
fof(f231,axiom,(
  ! [X14,X8] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X14),s('type.num.num',X8)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X14)))))),
  file('thm.rich_list.TAKE_APPEND2','thm.arithmetic.NOT_LESS')).
fof(f1157,plain,(
  ( ! [X12,X13] : (s(bool,X12) != s(bool,X13) | ~p(s(bool,X12))) ) | $spl12),
  inference(cnf_transformation,[],[f1157_D])).
fof(f1157_D,plain,(
  ( ! [X12,X13] : (s(bool,X12) != s(bool,X13) | ~p(s(bool,X12))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f7668,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num',sK14))) | s(bool,X21) != s(bool,X23)) ) | $spl2),
  inference(resolution,[],[f7066,f661])).
fof(f661,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f528])).
fof(f1158,plain,(
  ( ! [X18] : (~p(s(bool,X18))) ) | $spl14),
  inference(cnf_transformation,[],[f1158_D])).
fof(f1158_D,plain,(
  ( ! [X18] : (~p(s(bool,X18))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f7666,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num',sK14)))) ) | $spl2),
  inference(resolution,[],[f7066,f660])).
fof(f660,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f528])).
fof(f7783,plain,(
  ( ! [X5] : (s(bool,X5) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num',sK14)))) ) | $spl186),
  inference(cnf_transformation,[],[f7783_D])).
fof(f7783_D,plain,(
  ( ! [X5] : (s(bool,X5) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num',sK14)))) ) <=> ~$spl186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl186])])).
fof(f1156,plain,(
  ( ! [X8,X9] : (s(bool,X8) != s(bool,X9) | p(s(bool,X8)) | ~p(s(bool,X9))) ) | $spl10),
  inference(cnf_transformation,[],[f1156_D])).
fof(f1156_D,plain,(
  ( ! [X8,X9] : (s(bool,X8) != s(bool,X9) | p(s(bool,X8)) | ~p(s(bool,X9))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f7665,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,X12)) | p(s(bool,X13)) | s(bool,X14) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num',sK14))) | s(bool,X12) != s(bool,X13)) ) | $spl2),
  inference(resolution,[],[f7066,f659])).
fof(f659,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f528])).
fof(f1154,plain,(
  ( ! [X7,X5] : (s(bool,X5) != s(bool,X7) | p(s(bool,X5))) ) | $spl6),
  inference(cnf_transformation,[],[f1154_D])).
fof(f1154_D,plain,(
  ( ! [X7,X5] : (s(bool,X5) != s(bool,X7) | p(s(bool,X5))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f7664,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num',sK14)))) ) | $spl2),
  inference(resolution,[],[f7066,f659])).
fof(f7663,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num',sK14))) | s(bool,X6) != s(bool,X8)) ) | $spl2),
  inference(resolution,[],[f7066,f657])).
fof(f657,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X3)) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f528])).
fof(f7662,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,X3)) | p(s(bool,X4)) | s(bool,X5) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num',sK14))) | s(bool,X3) != s(bool,X4)) ) | $spl2),
  inference(resolution,[],[f7066,f655])).
fof(f655,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X3)) | ~p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f528])).
fof(f7661,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num',sK14)))) ) | $spl2),
  inference(resolution,[],[f7066,f655])).
fof(f7062,plain,(
  ( ! [X157] : (~p(s(bool,X157)) | s(bool,X157) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) ) | $spl180),
  inference(cnf_transformation,[],[f7062_D])).
fof(f7062_D,plain,(
  ( ! [X157] : (~p(s(bool,X157)) | s(bool,X157) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) ) <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f6885,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) )),
  inference(resolution,[],[f1288,f655])).
fof(f1288,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14))))),
  inference(trivial_inequality_removal,[],[f1267])).
fof(f1267,plain,(
  s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14))))),
  inference(superposition,[],[f653,f735])).
fof(f735,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.list.list'(X0),X1))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X3))))) )),
  inference(cnf_transformation,[],[f466])).
fof(f466,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X3)))) | s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.list.list'(X0),X1))))))),
  inference(ennf_transformation,[],[f305])).
fof(f305,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X3)))) => s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.list.list'(X0),X1))))))),
  inference(flattening,[],[f304])).
fof(f304,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X3)))) => s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.list.list'(X0),X1))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X9,X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num',X8)))) => s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X8),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X9))))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))))),s('type.list.list'(X6),X9))))))),
  file('thm.rich_list.TAKE_APPEND2','thm.list.TAKE_APPEND2')).
fof(f7063,plain,(
  ( ! [X14] : (s(bool,X14) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) ) | $spl182),
  inference(cnf_transformation,[],[f7063_D])).
fof(f7063_D,plain,(
  ( ! [X14] : (s(bool,X14) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) ) <=> ~$spl182),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl182])])).
fof(f6886,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,X3)) | p(s(bool,X4)) | s(bool,X5) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14))) | s(bool,X3) != s(bool,X4)) )),
  inference(resolution,[],[f1288,f655])).
fof(f6887,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14))) | s(bool,X6) != s(bool,X8)) )),
  inference(resolution,[],[f1288,f657])).
fof(f6888,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) )),
  inference(resolution,[],[f1288,f659])).
fof(f6889,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,X12)) | p(s(bool,X13)) | s(bool,X14) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14))) | s(bool,X12) != s(bool,X13)) )),
  inference(resolution,[],[f1288,f659])).
fof(f6890,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) )),
  inference(resolution,[],[f1288,f660])).
fof(f6892,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14))) | s(bool,X21) != s(bool,X23)) )),
  inference(resolution,[],[f1288,f661])).
fof(f6974,plain,(
  ( ! [X156,X157] : (p(s(bool,X156)) | ~p(s(bool,X157)) | s(bool,X157) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) )),
  inference(resolution,[],[f1288,f984])).
fof(f7033,plain,(
  $false | $spl1),
  inference(subsumption_resolution,[],[f6884,f1149])).
fof(f6884,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))),
  inference(resolution,[],[f1288,f955])).
fof(f955,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f642])).
fof(f2075,plain,(
  ( ! [X29] : (s(bool,'F_0') != s(bool,X29)) ) | $spl100),
  inference(cnf_transformation,[],[f2075_D])).
fof(f2075_D,plain,(
  ( ! [X29] : (s(bool,'F_0') != s(bool,X29)) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f6774,plain,(
  ( ! [X182,X180,X181] : (s(bool,'F_0') != s(bool,X180) | p(s(bool,X181)) | ~p(s(bool,X182)) | s(bool,X181) != s(bool,X182)) ) | $spl24),
  inference(subsumption_resolution,[],[f6524,f659])).
fof(f6524,plain,(
  ( ! [X182,X180,X181] : (s(bool,'F_0') != s(bool,X180) | p(s(bool,X181)) | ~p(s(bool,X180)) | ~p(s(bool,X182)) | s(bool,X181) != s(bool,X182)) ) | $spl24),
  inference(superposition,[],[f661,f2896])).
fof(f2896,plain,(
  ( ! [X397,X396,X398] : (s(bool,'F_0') = s(bool,sK18(X396,X397,sK14,X398))) ) | $spl24),
  inference(resolution,[],[f1182,f911])).
fof(f911,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f623])).
fof(f623,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,X0)) & (s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0)) | p(s(bool,'F_0'))))),
  inference(flattening,[],[f622])).
fof(f622,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,X0)) & (s(bool,'F_0') != s(bool,X0) | (~p(s(bool,X0)) | p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f492])).
fof(f492,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,'F_0'))) <=> s(bool,'F_0') = s(bool,X0))),
  inference(ennf_transformation,[],[f393])).
fof(f393,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> s(bool,'F_0') = s(bool,X0))),
  inference(rectify,[],[f78])).
fof(f78,axiom,(
  ! [X11] : ((p(s(bool,X11)) => p(s(bool,'F_0'))) <=> s(bool,'F_0') = s(bool,X11))),
  file('thm.rich_list.TAKE_APPEND2','thm.bool.IMP_F_EQ_F')).
fof(f6773,plain,(
  ( ! [X175,X176,X174] : (s(bool,'F_0') != s(bool,X174) | p(s(bool,X175)) | ~p(s(bool,X176)) | s(bool,X175) != s(bool,X176)) ) | $spl24),
  inference(subsumption_resolution,[],[f6523,f984])).
fof(f6523,plain,(
  ( ! [X175,X173,X171,X176,X174,X172] : (s(bool,'F_0') != s(bool,X174) | p(s(bool,X175)) | ~p(s(bool,sK18(X171,X172,sK14,X173))) | ~p(s(bool,X176)) | s(bool,X175) != s(bool,X176)) ) | $spl24),
  inference(superposition,[],[f661,f2896])).
fof(f6755,plain,(
  ( ! [X61,X62,X60] : (s(bool,'F_0') != s(bool,X60) | p(s(bool,X61)) | ~p(s(bool,X62)) | s(bool,X61) != s(bool,X62)) ) | $spl24),
  inference(subsumption_resolution,[],[f6504,f984])).
fof(f6504,plain,(
  ( ! [X61,X59,X57,X62,X60,X58] : (s(bool,'F_0') != s(bool,X60) | p(s(bool,X61)) | ~p(s(bool,sK18(X57,X58,sK14,X59))) | ~p(s(bool,X62)) | s(bool,X61) != s(bool,X62)) ) | $spl24),
  inference(superposition,[],[f657,f2896])).
fof(f6754,plain,(
  ( ! [X54,X56,X55] : (s(bool,'F_0') != s(bool,X54) | p(s(bool,X55)) | ~p(s(bool,X56)) | s(bool,X55) != s(bool,X56)) ) | $spl24),
  inference(subsumption_resolution,[],[f6503,f659])).
fof(f6503,plain,(
  ( ! [X54,X56,X55] : (s(bool,'F_0') != s(bool,X54) | p(s(bool,X55)) | ~p(s(bool,X54)) | ~p(s(bool,X56)) | s(bool,X55) != s(bool,X56)) ) | $spl24),
  inference(superposition,[],[f657,f2896])).
fof(f6449,plain,(
  ( ! [X4] : (~p(s(bool,X4)) | s(bool,X4) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0')))) ) | $spl176),
  inference(cnf_transformation,[],[f6449_D])).
fof(f6449_D,plain,(
  ( ! [X4] : (~p(s(bool,X4)) | s(bool,X4) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl176),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl176])])).
fof(f6385,plain,(
  ( ! [X159,X160] : (p(s(bool,X159)) | ~p(s(bool,X160)) | s(bool,X160) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0')))) ) | $spl21),
  inference(resolution,[],[f1178,f984])).
fof(f6303,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))) | s(bool,X24) != s(bool,X26)) ) | $spl21),
  inference(resolution,[],[f1178,f661])).
fof(f6301,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | ~p(s(bool,X19)) | ~p(s(bool,X20)) | s(bool,X19) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0')))) ) | $spl21),
  inference(resolution,[],[f1178,f660])).
fof(f6450,plain,(
  ( ! [X8] : (s(bool,X8) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0')))) ) | $spl178),
  inference(cnf_transformation,[],[f6450_D])).
fof(f6450_D,plain,(
  ( ! [X8] : (s(bool,X8) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f6300,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X17) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))) | s(bool,X15) != s(bool,X16)) ) | $spl21),
  inference(resolution,[],[f1178,f659])).
fof(f6299,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X12) != s(bool,X14) | s(bool,X13) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0')))) ) | $spl21),
  inference(resolution,[],[f1178,f659])).
fof(f6298,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X10) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))) | s(bool,X9) != s(bool,X11)) ) | $spl21),
  inference(resolution,[],[f1178,f657])).
fof(f6297,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | p(s(bool,X7)) | s(bool,X8) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))) | s(bool,X6) != s(bool,X7)) ) | $spl21),
  inference(resolution,[],[f1178,f655])).
fof(f6296,plain,(
  ( ! [X4,X5,X3] : (p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X4) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0')))) ) | $spl21),
  inference(resolution,[],[f1178,f655])).
fof(f5958,plain,(
  ( ! [X2] : (~p(s(bool,X2)) | s(bool,X2) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) ) | $spl172),
  inference(cnf_transformation,[],[f5958_D])).
fof(f5958_D,plain,(
  ( ! [X2] : (~p(s(bool,X2)) | s(bool,X2) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) ) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f5898,plain,(
  ( ! [X158,X157] : (p(s(bool,X157)) | ~p(s(bool,X158)) | s(bool,X158) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) ) | $spl1),
  inference(resolution,[],[f1149,f984])).
fof(f5816,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X23) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))) | s(bool,X22) != s(bool,X24)) ) | $spl1),
  inference(resolution,[],[f1149,f661])).
fof(f5814,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) ) | $spl1),
  inference(resolution,[],[f1149,f660])).
fof(f5959,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) ) | $spl174),
  inference(cnf_transformation,[],[f5959_D])).
fof(f5959_D,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) ) <=> ~$spl174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl174])])).
fof(f5813,plain,(
  ( ! [X14,X15,X13] : (~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X15) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))) | s(bool,X13) != s(bool,X14)) ) | $spl1),
  inference(resolution,[],[f1149,f659])).
fof(f5812,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) ) | $spl1),
  inference(resolution,[],[f1149,f659])).
fof(f5811,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X8) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))) | s(bool,X7) != s(bool,X9)) ) | $spl1),
  inference(resolution,[],[f1149,f657])).
fof(f5810,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X6) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))) | s(bool,X4) != s(bool,X5)) ) | $spl1),
  inference(resolution,[],[f1149,f655])).
fof(f5809,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) ) | $spl1),
  inference(resolution,[],[f1149,f655])).
fof(f1352,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) | $spl34),
  inference(cnf_transformation,[],[f1352_D])).
fof(f1352_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f5651,plain,(
  ( ! [X17,X16] : (sP8(X16,X17,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) | $spl170),
  inference(cnf_transformation,[],[f5651_D])).
fof(f5651_D,plain,(
  ( ! [X17,X16] : (sP8(X16,X17,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) <=> ~$spl170),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl170])])).
fof(f5631,plain,(
  ( ! [X23,X22] : (sP8(X22,X23,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))) )),
  inference(superposition,[],[f1065,f707])).
fof(f707,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16(X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f547])).
fof(f547,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16(X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK16])],[f283])).
fof(f283,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ? [X1] : s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),
  inference(rectify,[],[f213])).
fof(f213,axiom,(
  ! [X14] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X14) | ? [X8] : s('type.num.num',X14) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))),
  file('thm.rich_list.TAKE_APPEND2','thm.arithmetic.num_CASES')).
fof(f1065,plain,(
  ( ! [X134,X133] : (sP8(X133,X134,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) )),
  inference(resolution,[],[f652,f830])).
fof(f830,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f587])).
fof(f587,plain,(
  ! [X0,X1,X2] : ((~sP8(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP8(X0,X1,X2)))),
  inference(flattening,[],[f586])).
fof(f586,plain,(
  ! [X0,X1,X2] : ((~sP8(X0,X1,X2) | (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP8(X0,X1,X2)))),
  inference(nnf_transformation,[],[f519])).
fof(f519,plain,(
  ! [X0,X1,X2] : (sP8(X0,X1,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP8])])).
fof(f1178,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0')))) | $spl21),
  inference(cnf_transformation,[],[f1178_D])).
fof(f1178_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0')))) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f5630,plain,(
  ( ! [X21,X20] : (sP8(X20,X21,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f1065,f705])).
fof(f705,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) )),
  inference(cnf_transformation,[],[f546])).
fof(f546,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))))),
  inference(nnf_transformation,[],[f282])).
fof(f282,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f202])).
fof(f202,axiom,(
  ! [X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num','const.num.|48|_0')))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X8))),
  file('thm.rich_list.TAKE_APPEND2','thm.arithmetic.LESS_EQ_|48|')).
fof(f5655,plain,(
  ( ! [X41,X40] : (sP8(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(forward_demodulation,[],[f5620,f975])).
fof(f975,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f445])).
fof(f445,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.rich_list.TAKE_APPEND2','thm.list.LENGTH|split|0')).
fof(f5620,plain,(
  ( ! [X41,X40] : (sP8(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(superposition,[],[f1065,f983])).
fof(f5654,plain,(
  ( ! [X26,X27,X25] : (sP8(X25,X26,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f5616,f975])).
fof(f5616,plain,(
  ( ! [X26,X27,X25] : (sP8(X25,X26,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1065,f766])).
fof(f5653,plain,(
  ( ! [X24,X23,X22] : (sP8(X22,X23,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X24)))) )),
  inference(forward_demodulation,[],[f5615,f975])).
fof(f5615,plain,(
  ( ! [X24,X23,X22] : (sP8(X22,X23,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X24)))) )),
  inference(superposition,[],[f1065,f765])).
fof(f5652,plain,(
  ( ! [X21,X19,X20] : (sP8(X19,X20,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X21),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f5614,f975])).
fof(f5614,plain,(
  ( ! [X21,X19,X20] : (sP8(X19,X20,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X21),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1065,f763])).
fof(f5650,plain,(
  ( ! [X17,X18,X16] : (sP8(X16,X17,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X18)))) )),
  inference(forward_demodulation,[],[f5613,f975])).
fof(f5613,plain,(
  ( ! [X17,X18,X16] : (sP8(X16,X17,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X18)))) )),
  inference(superposition,[],[f1065,f762])).
fof(f5360,plain,(
  ( ! [X17,X16] : (sP6(X16,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X17)) ) | $spl168),
  inference(cnf_transformation,[],[f5360_D])).
fof(f5360_D,plain,(
  ( ! [X17,X16] : (sP6(X16,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X17)) ) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f5341,plain,(
  ( ! [X23,X22] : (sP6(X22,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X23) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))) )),
  inference(superposition,[],[f1049,f707])).
fof(f1049,plain,(
  ( ! [X101,X102] : (sP6(X101,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)),X102)) )),
  inference(resolution,[],[f652,f814])).
fof(f814,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f580])).
fof(f580,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(rectify,[],[f579])).
fof(f579,plain,(
  ! [X2,X0,X1] : ((~sP6(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP6(X2,X0,X1)))),
  inference(flattening,[],[f578])).
fof(f578,plain,(
  ! [X2,X0,X1] : ((~sP6(X2,X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP6(X2,X0,X1)))),
  inference(nnf_transformation,[],[f516])).
fof(f516,plain,(
  ! [X2,X0,X1] : (sP6(X2,X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f5340,plain,(
  ( ! [X21,X20] : (sP6(X20,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X21) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f1049,f705])).
fof(f5364,plain,(
  ( ! [X41,X40] : (sP6(X40,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X41) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(forward_demodulation,[],[f5330,f975])).
fof(f5330,plain,(
  ( ! [X41,X40] : (sP6(X40,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X41) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(superposition,[],[f1049,f983])).
fof(f5363,plain,(
  ( ! [X26,X27,X25] : (sP6(X25,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X26) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f5326,f975])).
fof(f5326,plain,(
  ( ! [X26,X27,X25] : (sP6(X25,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X26) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1049,f766])).
fof(f5362,plain,(
  ( ! [X24,X23,X22] : (sP6(X22,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X23) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X24)))) )),
  inference(forward_demodulation,[],[f5325,f975])).
fof(f5325,plain,(
  ( ! [X24,X23,X22] : (sP6(X22,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X23) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X24)))) )),
  inference(superposition,[],[f1049,f765])).
fof(f5361,plain,(
  ( ! [X21,X19,X20] : (sP6(X19,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X20) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X21),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f5324,f975])).
fof(f5324,plain,(
  ( ! [X21,X19,X20] : (sP6(X19,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X20) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X21),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1049,f763])).
fof(f5359,plain,(
  ( ! [X17,X18,X16] : (sP6(X16,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X17) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X18)))) )),
  inference(forward_demodulation,[],[f5323,f975])).
fof(f5323,plain,(
  ( ! [X17,X18,X16] : (sP6(X16,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X17) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X18)))) )),
  inference(superposition,[],[f1049,f762])).
fof(f5114,plain,(
  ( ! [X17,X16] : (sP6(X16,X17,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) | $spl166),
  inference(cnf_transformation,[],[f5114_D])).
fof(f5114_D,plain,(
  ( ! [X17,X16] : (sP6(X16,X17,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) <=> ~$spl166),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl166])])).
fof(f5095,plain,(
  ( ! [X23,X22] : (sP6(X22,X23,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))) )),
  inference(superposition,[],[f1048,f707])).
fof(f1048,plain,(
  ( ! [X99,X100] : (sP6(X99,X100,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) )),
  inference(resolution,[],[f652,f813])).
fof(f813,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f580])).
fof(f5094,plain,(
  ( ! [X21,X20] : (sP6(X20,X21,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f1048,f705])).
fof(f5118,plain,(
  ( ! [X41,X40] : (sP6(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(forward_demodulation,[],[f5084,f975])).
fof(f5084,plain,(
  ( ! [X41,X40] : (sP6(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(superposition,[],[f1048,f983])).
fof(f5117,plain,(
  ( ! [X26,X27,X25] : (sP6(X25,X26,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f5080,f975])).
fof(f5080,plain,(
  ( ! [X26,X27,X25] : (sP6(X25,X26,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1048,f766])).
fof(f5116,plain,(
  ( ! [X24,X23,X22] : (sP6(X22,X23,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X24)))) )),
  inference(forward_demodulation,[],[f5079,f975])).
fof(f5079,plain,(
  ( ! [X24,X23,X22] : (sP6(X22,X23,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X24)))) )),
  inference(superposition,[],[f1048,f765])).
fof(f5115,plain,(
  ( ! [X21,X19,X20] : (sP6(X19,X20,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X21),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f5078,f975])).
fof(f5078,plain,(
  ( ! [X21,X19,X20] : (sP6(X19,X20,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X21),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1048,f763])).
fof(f5113,plain,(
  ( ! [X17,X18,X16] : (sP6(X16,X17,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X18)))) )),
  inference(forward_demodulation,[],[f5077,f975])).
fof(f5077,plain,(
  ( ! [X17,X18,X16] : (sP6(X16,X17,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X18)))) )),
  inference(superposition,[],[f1048,f762])).
fof(f4961,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) | $spl162),
  inference(cnf_transformation,[],[f4961_D])).
fof(f4961_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f4914,plain,(
  ( ! [X156,X157] : (p(s(bool,X156)) | p(s(bool,X157)) | s(bool,X157) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) | $spl19),
  inference(resolution,[],[f3080,f984])).
fof(f3080,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) | $spl19),
  inference(resolution,[],[f1177,f955])).
fof(f4835,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s(bool,X22) != s(bool,X23)) ) | $spl19),
  inference(resolution,[],[f3080,f661])).
fof(f4962,plain,(
  ( ! [X5] : (s(bool,X5) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) | $spl164),
  inference(cnf_transformation,[],[f4962_D])).
fof(f4962_D,plain,(
  ( ! [X5] : (s(bool,X5) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f4834,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,X19) | s(bool,X20) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) | $spl19),
  inference(resolution,[],[f3080,f661])).
fof(f4832,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) | $spl19),
  inference(resolution,[],[f3080,f660])).
fof(f4831,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) | $spl19),
  inference(resolution,[],[f3080,f659])).
fof(f4830,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s(bool,X7) != s(bool,X8)) ) | $spl19),
  inference(resolution,[],[f3080,f657])).
fof(f4829,plain,(
  ( ! [X4,X5,X3] : (p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X4) | s(bool,X5) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) | $spl19),
  inference(resolution,[],[f3080,f657])).
fof(f4828,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) | $spl19),
  inference(resolution,[],[f3080,f655])).
fof(f4814,plain,(
  ( ! [X17,X16] : (sP4(X16,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X17)) ) | $spl160),
  inference(cnf_transformation,[],[f4814_D])).
fof(f4814_D,plain,(
  ( ! [X17,X16] : (sP4(X16,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X17)) ) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f4795,plain,(
  ( ! [X23,X22] : (sP4(X22,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X23) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))) )),
  inference(superposition,[],[f1035,f707])).
fof(f1035,plain,(
  ( ! [X74,X73] : (sP4(X73,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)),X74)) )),
  inference(resolution,[],[f652,f797])).
fof(f797,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f572])).
fof(f572,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | ~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(rectify,[],[f571])).
fof(f571,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(flattening,[],[f570])).
fof(f570,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(nnf_transformation,[],[f513])).
fof(f513,plain,(
  ! [X2,X0,X1] : (sP4(X2,X0,X1) <=> (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f4794,plain,(
  ( ! [X21,X20] : (sP4(X20,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X21) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f1035,f705])).
fof(f4818,plain,(
  ( ! [X41,X40] : (sP4(X40,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X41) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(forward_demodulation,[],[f4784,f975])).
fof(f4784,plain,(
  ( ! [X41,X40] : (sP4(X40,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X41) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(superposition,[],[f1035,f983])).
fof(f4817,plain,(
  ( ! [X26,X27,X25] : (sP4(X25,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X26) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f4780,f975])).
fof(f4780,plain,(
  ( ! [X26,X27,X25] : (sP4(X25,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X26) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1035,f766])).
fof(f4816,plain,(
  ( ! [X24,X23,X22] : (sP4(X22,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X23) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X24)))) )),
  inference(forward_demodulation,[],[f4779,f975])).
fof(f4779,plain,(
  ( ! [X24,X23,X22] : (sP4(X22,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X23) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X24)))) )),
  inference(superposition,[],[f1035,f765])).
fof(f4815,plain,(
  ( ! [X21,X19,X20] : (sP4(X19,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X20) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X21),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f4778,f975])).
fof(f4778,plain,(
  ( ! [X21,X19,X20] : (sP4(X19,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X20) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X21),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1035,f763])).
fof(f4813,plain,(
  ( ! [X17,X18,X16] : (sP4(X16,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X17) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X18)))) )),
  inference(forward_demodulation,[],[f4777,f975])).
fof(f4777,plain,(
  ( ! [X17,X18,X16] : (sP4(X16,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X17) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X18)))) )),
  inference(superposition,[],[f1035,f762])).
fof(f4723,plain,(
  ( ! [X17,X16] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X16,X17)) ) | $spl158),
  inference(cnf_transformation,[],[f4723_D])).
fof(f4723_D,plain,(
  ( ! [X17,X16] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X16,X17)) ) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f4702,plain,(
  ( ! [X23,X22] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X22,X23) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))) )),
  inference(superposition,[],[f1023,f707])).
fof(f1023,plain,(
  ( ! [X52,X51] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)),X51,X52)) )),
  inference(resolution,[],[f652,f680])).
fof(f680,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f539])).
fof(f539,plain,(
  ! [X0,X1,X2] : ((~sP0(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP0(X0,X1,X2)))),
  inference(flattening,[],[f538])).
fof(f538,plain,(
  ! [X0,X1,X2] : ((~sP0(X0,X1,X2) | (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP0(X0,X1,X2)))),
  inference(nnf_transformation,[],[f508])).
fof(f508,plain,(
  ! [X0,X1,X2] : (sP0(X0,X1,X2) <=> (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f4701,plain,(
  ( ! [X21,X20] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X20,X21) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f1023,f705])).
fof(f4727,plain,(
  ( ! [X41,X40] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X40,X41) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(forward_demodulation,[],[f4691,f975])).
fof(f4691,plain,(
  ( ! [X41,X40] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X40,X41) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(superposition,[],[f1023,f983])).
fof(f4726,plain,(
  ( ! [X26,X27,X25] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X25,X26) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f4687,f975])).
fof(f4687,plain,(
  ( ! [X26,X27,X25] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X25,X26) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1023,f766])).
fof(f4725,plain,(
  ( ! [X24,X23,X22] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X22,X23) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X24)))) )),
  inference(forward_demodulation,[],[f4686,f975])).
fof(f4686,plain,(
  ( ! [X24,X23,X22] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X22,X23) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X24)))) )),
  inference(superposition,[],[f1023,f765])).
fof(f4724,plain,(
  ( ! [X21,X19,X20] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X19,X20) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X21),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f4685,f975])).
fof(f4685,plain,(
  ( ! [X21,X19,X20] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X19,X20) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X21),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1023,f763])).
fof(f4722,plain,(
  ( ! [X17,X18,X16] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X16,X17) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X18)))) )),
  inference(forward_demodulation,[],[f4684,f975])).
fof(f4684,plain,(
  ( ! [X17,X18,X16] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X16,X17) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X18)))) )),
  inference(superposition,[],[f1023,f762])).
fof(f4630,plain,(
  ( ! [X17,X16] : (sP0(X16,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X17)) ) | $spl156),
  inference(cnf_transformation,[],[f4630_D])).
fof(f4630_D,plain,(
  ( ! [X17,X16] : (sP0(X16,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X17)) ) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f4609,plain,(
  ( ! [X23,X22] : (sP0(X22,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X23) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))) )),
  inference(superposition,[],[f1022,f707])).
fof(f1022,plain,(
  ( ! [X50,X49] : (sP0(X49,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)),X50)) )),
  inference(resolution,[],[f652,f679])).
fof(f679,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f539])).
fof(f4608,plain,(
  ( ! [X21,X20] : (sP0(X20,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X21) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f1022,f705])).
fof(f4634,plain,(
  ( ! [X41,X40] : (sP0(X40,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X41) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(forward_demodulation,[],[f4598,f975])).
fof(f4598,plain,(
  ( ! [X41,X40] : (sP0(X40,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X41) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(superposition,[],[f1022,f983])).
fof(f4633,plain,(
  ( ! [X26,X27,X25] : (sP0(X25,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X26) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f4594,f975])).
fof(f4594,plain,(
  ( ! [X26,X27,X25] : (sP0(X25,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X26) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1022,f766])).
fof(f4632,plain,(
  ( ! [X24,X23,X22] : (sP0(X22,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X23) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X24)))) )),
  inference(forward_demodulation,[],[f4593,f975])).
fof(f4593,plain,(
  ( ! [X24,X23,X22] : (sP0(X22,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X23) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X24)))) )),
  inference(superposition,[],[f1022,f765])).
fof(f4631,plain,(
  ( ! [X21,X19,X20] : (sP0(X19,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X20) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X21),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f4592,f975])).
fof(f4592,plain,(
  ( ! [X21,X19,X20] : (sP0(X19,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X20) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X21),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1022,f763])).
fof(f4629,plain,(
  ( ! [X17,X18,X16] : (sP0(X16,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X17) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X18)))) )),
  inference(forward_demodulation,[],[f4591,f975])).
fof(f4591,plain,(
  ( ! [X17,X18,X16] : (sP0(X16,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X17) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X18)))) )),
  inference(superposition,[],[f1022,f762])).
fof(f4537,plain,(
  ( ! [X17,X16] : (sP0(X16,X17,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) | $spl154),
  inference(cnf_transformation,[],[f4537_D])).
fof(f4537_D,plain,(
  ( ! [X17,X16] : (sP0(X16,X17,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f4516,plain,(
  ( ! [X23,X22] : (sP0(X22,X23,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))) )),
  inference(superposition,[],[f1021,f707])).
fof(f1021,plain,(
  ( ! [X47,X48] : (sP0(X47,X48,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) )),
  inference(resolution,[],[f652,f678])).
fof(f678,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f539])).
fof(f4515,plain,(
  ( ! [X21,X20] : (sP0(X20,X21,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f1021,f705])).
fof(f4541,plain,(
  ( ! [X41,X40] : (sP0(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(forward_demodulation,[],[f4505,f975])).
fof(f4505,plain,(
  ( ! [X41,X40] : (sP0(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(superposition,[],[f1021,f983])).
fof(f4540,plain,(
  ( ! [X26,X27,X25] : (sP0(X25,X26,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f4501,f975])).
fof(f4501,plain,(
  ( ! [X26,X27,X25] : (sP0(X25,X26,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1021,f766])).
fof(f4539,plain,(
  ( ! [X24,X23,X22] : (sP0(X22,X23,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X24)))) )),
  inference(forward_demodulation,[],[f4500,f975])).
fof(f4500,plain,(
  ( ! [X24,X23,X22] : (sP0(X22,X23,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X24)))) )),
  inference(superposition,[],[f1021,f765])).
fof(f4538,plain,(
  ( ! [X21,X19,X20] : (sP0(X19,X20,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X21),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f4499,f975])).
fof(f4499,plain,(
  ( ! [X21,X19,X20] : (sP0(X19,X20,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X21),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1021,f763])).
fof(f4536,plain,(
  ( ! [X17,X18,X16] : (sP0(X16,X17,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X18)))) )),
  inference(forward_demodulation,[],[f4498,f975])).
fof(f4498,plain,(
  ( ! [X17,X18,X16] : (sP0(X16,X17,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X18)))) )),
  inference(superposition,[],[f1021,f762])).
fof(f4460,plain,(
  ( ! [X4,X5,X3,X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,sK19(X3,X4,sK16(sK14),X5))) ) | $spl150),
  inference(cnf_transformation,[],[f4460_D])).
fof(f4460_D,plain,(
  ( ! [X4,X5,X3,X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,sK19(X3,X4,sK16(sK14),X5))) ) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f4440,plain,(
  ( ! [X408,X405,X407,X409,X406] : (p(s(bool,X405)) | ~p(s(bool,X406)) | s(bool,X406) != s(bool,sK19(X407,X408,sK16(sK14),X409))) ) | $spl132),
  inference(resolution,[],[f3557,f984])).
fof(f4358,plain,(
  ( ! [X39,X43,X41,X44,X42,X40] : (~p(s(bool,X39)) | ~p(s(bool,X40)) | s(bool,X40) != s(bool,sK19(X41,X42,sK16(sK14),X43)) | s(bool,X39) != s(bool,X44)) ) | $spl132),
  inference(resolution,[],[f3557,f661])).
fof(f4356,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X31) != s(bool,sK19(X33,X34,sK16(sK14),X35))) ) | $spl132),
  inference(resolution,[],[f3557,f660])).
fof(f4461,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X8) != s(bool,sK19(X9,X10,sK16(sK14),X11))) ) | $spl152),
  inference(cnf_transformation,[],[f4461_D])).
fof(f4461_D,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X8) != s(bool,sK19(X9,X10,sK16(sK14),X11))) ) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f4355,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | s(bool,X29) != s(bool,sK19(X26,X27,sK16(sK14),X28)) | s(bool,X24) != s(bool,X25)) ) | $spl132),
  inference(resolution,[],[f3557,f659])).
fof(f4354,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,sK19(X21,X22,sK16(sK14),X23))) ) | $spl132),
  inference(resolution,[],[f3557,f659])).
fof(f4353,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X13) != s(bool,sK19(X14,X15,sK16(sK14),X16)) | s(bool,X12) != s(bool,X17)) ) | $spl132),
  inference(resolution,[],[f3557,f657])).
fof(f4352,plain,(
  ( ! [X6,X10,X8,X7,X11,X9] : (~p(s(bool,X6)) | p(s(bool,X7)) | s(bool,X8) != s(bool,sK19(X9,X10,sK16(sK14),X11)) | s(bool,X6) != s(bool,X7)) ) | $spl132),
  inference(resolution,[],[f3557,f655])).
fof(f4351,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,sK19(X3,X4,sK16(sK14),X5))) ) | $spl132),
  inference(resolution,[],[f3557,f655])).
fof(f4317,plain,(
  ( ! [X17,X16] : (sP1(X16,X17,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) | $spl148),
  inference(cnf_transformation,[],[f4317_D])).
fof(f4317_D,plain,(
  ( ! [X17,X16] : (sP1(X16,X17,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f4297,plain,(
  ( ! [X23,X22] : (sP1(X22,X23,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))) )),
  inference(superposition,[],[f1020,f707])).
fof(f1020,plain,(
  ( ! [X45,X46] : (sP1(X45,X46,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) )),
  inference(resolution,[],[f652,f674])).
fof(f674,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f537])).
fof(f537,plain,(
  ! [X0,X1,X2] : ((~sP1(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP1(X0,X1,X2)))),
  inference(rectify,[],[f536])).
fof(f536,plain,(
  ! [X1,X0,X2] : ((~sP1(X1,X0,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP1(X1,X0,X2)))),
  inference(flattening,[],[f535])).
fof(f535,plain,(
  ! [X1,X0,X2] : ((~sP1(X1,X0,X2) | (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP1(X1,X0,X2)))),
  inference(nnf_transformation,[],[f509])).
fof(f509,plain,(
  ! [X1,X0,X2] : (sP1(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f4296,plain,(
  ( ! [X21,X20] : (sP1(X20,X21,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f1020,f705])).
fof(f4321,plain,(
  ( ! [X41,X40] : (sP1(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(forward_demodulation,[],[f4286,f975])).
fof(f4286,plain,(
  ( ! [X41,X40] : (sP1(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(superposition,[],[f1020,f983])).
fof(f4320,plain,(
  ( ! [X26,X27,X25] : (sP1(X25,X26,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f4282,f975])).
fof(f4282,plain,(
  ( ! [X26,X27,X25] : (sP1(X25,X26,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1020,f766])).
fof(f4319,plain,(
  ( ! [X24,X23,X22] : (sP1(X22,X23,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X24)))) )),
  inference(forward_demodulation,[],[f4281,f975])).
fof(f4281,plain,(
  ( ! [X24,X23,X22] : (sP1(X22,X23,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X24)))) )),
  inference(superposition,[],[f1020,f765])).
fof(f4318,plain,(
  ( ! [X21,X19,X20] : (sP1(X19,X20,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X21),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f4280,f975])).
fof(f4280,plain,(
  ( ! [X21,X19,X20] : (sP1(X19,X20,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X21),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1020,f763])).
fof(f4316,plain,(
  ( ! [X17,X18,X16] : (sP1(X16,X17,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X18)))) )),
  inference(forward_demodulation,[],[f4279,f975])).
fof(f4279,plain,(
  ( ! [X17,X18,X16] : (sP1(X16,X17,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X18)))) )),
  inference(superposition,[],[f1020,f762])).
fof(f4261,plain,(
  ( ! [X4,X5,X3,X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,sK18(X3,X4,sK16(sK14),X5))) ) | $spl144),
  inference(cnf_transformation,[],[f4261_D])).
fof(f4261_D,plain,(
  ( ! [X4,X5,X3,X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,sK18(X3,X4,sK16(sK14),X5))) ) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f4241,plain,(
  ( ! [X408,X405,X407,X409,X406] : (p(s(bool,X405)) | ~p(s(bool,X406)) | s(bool,X406) != s(bool,sK18(X407,X408,sK16(sK14),X409))) ) | $spl130),
  inference(resolution,[],[f3556,f984])).
fof(f4159,plain,(
  ( ! [X39,X43,X41,X44,X42,X40] : (~p(s(bool,X39)) | ~p(s(bool,X40)) | s(bool,X40) != s(bool,sK18(X41,X42,sK16(sK14),X43)) | s(bool,X39) != s(bool,X44)) ) | $spl130),
  inference(resolution,[],[f3556,f661])).
fof(f4157,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X31) != s(bool,sK18(X33,X34,sK16(sK14),X35))) ) | $spl130),
  inference(resolution,[],[f3556,f660])).
fof(f4262,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X8) != s(bool,sK18(X9,X10,sK16(sK14),X11))) ) | $spl146),
  inference(cnf_transformation,[],[f4262_D])).
fof(f4262_D,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X8) != s(bool,sK18(X9,X10,sK16(sK14),X11))) ) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f4156,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | s(bool,X29) != s(bool,sK18(X26,X27,sK16(sK14),X28)) | s(bool,X24) != s(bool,X25)) ) | $spl130),
  inference(resolution,[],[f3556,f659])).
fof(f4155,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,sK18(X21,X22,sK16(sK14),X23))) ) | $spl130),
  inference(resolution,[],[f3556,f659])).
fof(f4154,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X13) != s(bool,sK18(X14,X15,sK16(sK14),X16)) | s(bool,X12) != s(bool,X17)) ) | $spl130),
  inference(resolution,[],[f3556,f657])).
fof(f4153,plain,(
  ( ! [X6,X10,X8,X7,X11,X9] : (~p(s(bool,X6)) | p(s(bool,X7)) | s(bool,X8) != s(bool,sK18(X9,X10,sK16(sK14),X11)) | s(bool,X6) != s(bool,X7)) ) | $spl130),
  inference(resolution,[],[f3556,f655])).
fof(f4152,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,sK18(X3,X4,sK16(sK14),X5))) ) | $spl130),
  inference(resolution,[],[f3556,f655])).
fof(f4138,plain,(
  ( ! [X17,X16] : (sP2(X16,X17,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) | $spl142),
  inference(cnf_transformation,[],[f4138_D])).
fof(f4138_D,plain,(
  ( ! [X17,X16] : (sP2(X16,X17,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f4118,plain,(
  ( ! [X23,X22] : (sP2(X22,X23,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))) )),
  inference(superposition,[],[f1017,f707])).
fof(f1017,plain,(
  ( ! [X39,X40] : (sP2(X39,X40,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) )),
  inference(resolution,[],[f652,f670])).
fof(f670,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f534])).
fof(f534,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(rectify,[],[f533])).
fof(f533,plain,(
  ! [X2,X0,X1] : ((~sP2(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP2(X2,X0,X1)))),
  inference(flattening,[],[f532])).
fof(f532,plain,(
  ! [X2,X0,X1] : ((~sP2(X2,X0,X1) | (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP2(X2,X0,X1)))),
  inference(nnf_transformation,[],[f510])).
fof(f510,plain,(
  ! [X2,X0,X1] : (sP2(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f4117,plain,(
  ( ! [X21,X20] : (sP2(X20,X21,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f1017,f705])).
fof(f4142,plain,(
  ( ! [X41,X40] : (sP2(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(forward_demodulation,[],[f4107,f975])).
fof(f4107,plain,(
  ( ! [X41,X40] : (sP2(X40,X41,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(superposition,[],[f1017,f983])).
fof(f4141,plain,(
  ( ! [X26,X27,X25] : (sP2(X25,X26,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f4103,f975])).
fof(f4103,plain,(
  ( ! [X26,X27,X25] : (sP2(X25,X26,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1017,f766])).
fof(f4140,plain,(
  ( ! [X24,X23,X22] : (sP2(X22,X23,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X24)))) )),
  inference(forward_demodulation,[],[f4102,f975])).
fof(f4102,plain,(
  ( ! [X24,X23,X22] : (sP2(X22,X23,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X24)))) )),
  inference(superposition,[],[f1017,f765])).
fof(f4139,plain,(
  ( ! [X21,X19,X20] : (sP2(X19,X20,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X21),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f4101,f975])).
fof(f4101,plain,(
  ( ! [X21,X19,X20] : (sP2(X19,X20,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X21),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1017,f763])).
fof(f4137,plain,(
  ( ! [X17,X18,X16] : (sP2(X16,X17,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X18)))) )),
  inference(forward_demodulation,[],[f4100,f975])).
fof(f4100,plain,(
  ( ! [X17,X18,X16] : (sP2(X16,X17,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X18)))) )),
  inference(superposition,[],[f1017,f762])).
fof(f4080,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) | $spl141),
  inference(cnf_transformation,[],[f4080_D])).
fof(f4080_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) <=> ~$spl141),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl141])])).
fof(f4045,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))),
  inference(superposition,[],[f998,f707])).
fof(f4044,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))))),
  inference(superposition,[],[f998,f705])).
fof(f4084,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))),
  inference(forward_demodulation,[],[f4034,f975])).
fof(f4034,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')))))) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))),
  inference(superposition,[],[f998,f983])).
fof(f4083,plain,(
  ( ! [X11] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X11),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f4030,f975])).
fof(f4030,plain,(
  ( ! [X11] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X11),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f998,f766])).
fof(f4082,plain,(
  ( ! [X10] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X10)))) )),
  inference(forward_demodulation,[],[f4029,f975])).
fof(f4029,plain,(
  ( ! [X10] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X10)))) )),
  inference(superposition,[],[f998,f765])).
fof(f4081,plain,(
  ( ! [X9] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X9),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f4028,f975])).
fof(f4028,plain,(
  ( ! [X9] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X9),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f998,f763])).
fof(f4078,plain,(
  ( ! [X8] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X8)))) )),
  inference(forward_demodulation,[],[f4027,f975])).
fof(f4027,plain,(
  ( ! [X8] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X8)))) )),
  inference(superposition,[],[f998,f762])).
fof(f4067,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) ) | $spl136),
  inference(cnf_transformation,[],[f4067_D])).
fof(f4067_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f4008,plain,(
  ( ! [X156,X157] : (p(s(bool,X156)) | ~p(s(bool,X157)) | s(bool,X157) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) )),
  inference(resolution,[],[f998,f984])).
fof(f3926,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))) | s(bool,X21) != s(bool,X23)) )),
  inference(resolution,[],[f998,f661])).
fof(f3924,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) )),
  inference(resolution,[],[f998,f660])).
fof(f4068,plain,(
  ( ! [X5] : (s(bool,X5) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) ) | $spl138),
  inference(cnf_transformation,[],[f4068_D])).
fof(f4068_D,plain,(
  ( ! [X5] : (s(bool,X5) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f3923,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,X12)) | p(s(bool,X13)) | s(bool,X14) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))) | s(bool,X12) != s(bool,X13)) )),
  inference(resolution,[],[f998,f659])).
fof(f3922,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) )),
  inference(resolution,[],[f998,f659])).
fof(f3921,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))) | s(bool,X6) != s(bool,X8)) )),
  inference(resolution,[],[f998,f657])).
fof(f3920,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,X3)) | p(s(bool,X4)) | s(bool,X5) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))) | s(bool,X3) != s(bool,X4)) )),
  inference(resolution,[],[f998,f655])).
fof(f3919,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) )),
  inference(resolution,[],[f998,f655])).
fof(f3879,plain,(
  ( ! [X12] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X12)) ) | $spl134),
  inference(cnf_transformation,[],[f3879_D])).
fof(f3879_D,plain,(
  ( ! [X12] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X12)) ) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f3859,plain,(
  ( ! [X14] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X14) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))) )),
  inference(superposition,[],[f1082,f707])).
fof(f1082,plain,(
  ( ! [X158] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)),X158)) )),
  inference(resolution,[],[f652,f886])).
fof(f886,plain,(
  ( ! [X0,X1] : (sP11(X0,X1) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f608])).
fof(f608,plain,(
  ! [X0,X1] : ((~sP11(X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP11(X0,X1)))),
  inference(flattening,[],[f607])).
fof(f607,plain,(
  ! [X0,X1] : ((~sP11(X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0')))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP11(X0,X1)))),
  inference(nnf_transformation,[],[f524])).
fof(f524,plain,(
  ! [X0,X1] : (sP11(X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP11])])).
fof(f3858,plain,(
  ( ! [X13] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X13) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f1082,f705])).
fof(f3883,plain,(
  ( ! [X29] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X29) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(forward_demodulation,[],[f3848,f975])).
fof(f3848,plain,(
  ( ! [X29] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X29) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(superposition,[],[f1082,f983])).
fof(f3882,plain,(
  ( ! [X19,X18] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X18) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X19),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f3844,f975])).
fof(f3844,plain,(
  ( ! [X19,X18] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X18) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X19),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1082,f766])).
fof(f3881,plain,(
  ( ! [X17,X16] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X16) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X17)))) )),
  inference(forward_demodulation,[],[f3843,f975])).
fof(f3843,plain,(
  ( ! [X17,X16] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X16) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X17)))) )),
  inference(superposition,[],[f1082,f765])).
fof(f3880,plain,(
  ( ! [X14,X15] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X14) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X15),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f3842,f975])).
fof(f3842,plain,(
  ( ! [X14,X15] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X14) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X15),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1082,f763])).
fof(f3878,plain,(
  ( ! [X12,X13] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)),X12) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X13)))) )),
  inference(forward_demodulation,[],[f3841,f975])).
fof(f3841,plain,(
  ( ! [X12,X13] : (sP11('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14)),X12) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X13)))) )),
  inference(superposition,[],[f1082,f762])).
fof(f3557,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,sK19(X9,X10,sK16(sK14),X11)))) ) | $spl132),
  inference(cnf_transformation,[],[f3557_D])).
fof(f3557_D,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,sK19(X9,X10,sK16(sK14),X11)))) ) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f3553,plain,(
  s('type.num.num',sK14) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl126),
  inference(cnf_transformation,[],[f3553_D])).
fof(f3553_D,plain,(
  s('type.num.num',sK14) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f3287,plain,(
  ( ! [X10,X11,X9] : (s('type.num.num',sK14) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,sK19(X9,X10,sK16(sK14),X11)))) ) | $spl22),
  inference(superposition,[],[f1181,f732])).
fof(f732,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | ~p(s(bool,sK19(X3,X2,X1,X0)))) )),
  inference(cnf_transformation,[],[f558])).
fof(f558,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,sK19(X3,X2,X1,X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | p(s(bool,sK19(X3,X2,X1,X0)))) & s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,sK19(X3,X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))),s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK19])],[f557])).
fof(f557,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : ((~p(s(bool,X4)) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | p(s(bool,X4))) & s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))),s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3))))))),
  inference(flattening,[],[f556])).
fof(f556,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : (((~p(s(bool,X4)) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | p(s(bool,X4)))) & s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))),s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3))))))),
  inference(nnf_transformation,[],[f303])).
fof(f303,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : ((p(s(bool,X4)) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))),s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3))))))),
  inference(flattening,[],[f302])).
fof(f302,plain,(
  ! [X0] : ! [X1,X2,X3] : ? [X4] : ((p(s(bool,X4)) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))),s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3))))))),
  inference(rectify,[],[f208])).
fof(f208,axiom,(
  ! [X6] : ! [X8,X13,X19] : ? [X20] : ((p(s(bool,X20)) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X8)) & s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X8),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X19))))) = s('type.list.list'(X6),'const.bool.COND_3'(s(bool,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X19))),s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X6),X19))))))),
  file('thm.rich_list.TAKE_APPEND2','thm.list.DROP_def|split|1')).
fof(f3556,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,sK18(X6,X7,sK16(sK14),X8)))) ) | $spl130),
  inference(cnf_transformation,[],[f3556_D])).
fof(f3556_D,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,sK18(X6,X7,sK16(sK14),X8)))) ) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f3286,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num',sK14) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,sK18(X6,X7,sK16(sK14),X8)))) ) | $spl22),
  inference(superposition,[],[f1181,f729])).
fof(f729,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | ~p(s(bool,sK18(X3,X2,X1,X0)))) )),
  inference(cnf_transformation,[],[f555])).
fof(f555,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,sK18(X3,X2,X1,X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | p(s(bool,sK18(X3,X2,X1,X0)))) & s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,sK18(X3,X2,X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK18])],[f554])).
fof(f554,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : ((~p(s(bool,X4)) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | p(s(bool,X4))) & s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,X4),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3))))))))),
  inference(flattening,[],[f553])).
fof(f553,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : (((~p(s(bool,X4)) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | p(s(bool,X4)))) & s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,X4),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3))))))))),
  inference(nnf_transformation,[],[f301])).
fof(f301,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : ((p(s(bool,X4)) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,X4),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3))))))))),
  inference(flattening,[],[f300])).
fof(f300,plain,(
  ! [X0] : ! [X1,X2,X3] : ? [X4] : ((p(s(bool,X4)) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) & s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,X4),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X3))))))))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X6] : ! [X8,X13,X19] : ? [X20] : ((p(s(bool,X20)) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X8)) & s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X8),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X19))))) = s('type.list.list'(X6),'const.bool.COND_3'(s(bool,X20),s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X6),X19))))))))),
  file('thm.rich_list.TAKE_APPEND2','thm.list.TAKE_def|split|1')).
fof(f3555,plain,(
  s('type.num.num',sK16(sK14)) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16(sK16(sK14))))) | $spl128),
  inference(cnf_transformation,[],[f3555_D])).
fof(f3555_D,plain,(
  s('type.num.num',sK16(sK14)) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16(sK16(sK14))))) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f3285,plain,(
  s('type.num.num',sK14) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num',sK16(sK14)) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16(sK16(sK14))))) | $spl22),
  inference(superposition,[],[f1181,f707])).
fof(f3551,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK16(sK14)),s('type.num.num','const.num.|48|_0')))) | $spl125),
  inference(cnf_transformation,[],[f3551_D])).
fof(f3551_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK16(sK14)),s('type.num.num','const.num.|48|_0')))) <=> ~$spl125),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl125])])).
fof(f3284,plain,(
  s('type.num.num',sK14) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK16(sK14)),s('type.num.num','const.num.|48|_0')))) | $spl22),
  inference(superposition,[],[f1181,f705])).
fof(f3223,plain,(
  ( ! [X4] : (~p(s(bool,X4)) | s(bool,X4) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) ) | $spl120),
  inference(cnf_transformation,[],[f3223_D])).
fof(f3223_D,plain,(
  ( ! [X4] : (~p(s(bool,X4)) | s(bool,X4) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f3174,plain,(
  ( ! [X159,X160] : (p(s(bool,X159)) | ~p(s(bool,X160)) | s(bool,X160) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) ) | $spl19),
  inference(resolution,[],[f1177,f984])).
fof(f3092,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | s(bool,X24) != s(bool,X26)) ) | $spl19),
  inference(resolution,[],[f1177,f661])).
fof(f3090,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | ~p(s(bool,X19)) | ~p(s(bool,X20)) | s(bool,X19) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) ) | $spl19),
  inference(resolution,[],[f1177,f660])).
fof(f3224,plain,(
  ( ! [X8] : (s(bool,X8) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) ) | $spl122),
  inference(cnf_transformation,[],[f3224_D])).
fof(f3224_D,plain,(
  ( ! [X8] : (s(bool,X8) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f3089,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X17) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | s(bool,X15) != s(bool,X16)) ) | $spl19),
  inference(resolution,[],[f1177,f659])).
fof(f3088,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X12) != s(bool,X14) | s(bool,X13) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) ) | $spl19),
  inference(resolution,[],[f1177,f659])).
fof(f3087,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X10) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | s(bool,X9) != s(bool,X11)) ) | $spl19),
  inference(resolution,[],[f1177,f657])).
fof(f3086,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | p(s(bool,X7)) | s(bool,X8) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))) | s(bool,X6) != s(bool,X7)) ) | $spl19),
  inference(resolution,[],[f1177,f655])).
fof(f3085,plain,(
  ( ! [X4,X5,X3] : (p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X4) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) ) | $spl19),
  inference(resolution,[],[f1177,f655])).
fof(f2737,plain,(
  ( ! [X4,X5,X3,X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,sK19(X3,X4,sK14,X5))) ) | $spl114),
  inference(cnf_transformation,[],[f2737_D])).
fof(f2737_D,plain,(
  ( ! [X4,X5,X3,X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,sK19(X3,X4,sK14,X5))) ) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f3022,plain,(
  ( ! [X408,X405,X407,X409,X406] : (p(s(bool,X405)) | ~p(s(bool,X406)) | s(bool,X406) != s(bool,sK19(X407,X408,sK14,X409))) ) | $spl26),
  inference(resolution,[],[f1183,f984])).
fof(f2940,plain,(
  ( ! [X39,X43,X41,X44,X42,X40] : (~p(s(bool,X39)) | ~p(s(bool,X40)) | s(bool,X40) != s(bool,sK19(X41,X42,sK14,X43)) | s(bool,X39) != s(bool,X44)) ) | $spl26),
  inference(resolution,[],[f1183,f661])).
fof(f2938,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X31) != s(bool,sK19(X33,X34,sK14,X35))) ) | $spl26),
  inference(resolution,[],[f1183,f660])).
fof(f2738,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X8) != s(bool,sK19(X9,X10,sK14,X11))) ) | $spl116),
  inference(cnf_transformation,[],[f2738_D])).
fof(f2738_D,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X8) != s(bool,sK19(X9,X10,sK14,X11))) ) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f2937,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | s(bool,X29) != s(bool,sK19(X26,X27,sK14,X28)) | s(bool,X24) != s(bool,X25)) ) | $spl26),
  inference(resolution,[],[f1183,f659])).
fof(f2936,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,sK19(X21,X22,sK14,X23))) ) | $spl26),
  inference(resolution,[],[f1183,f659])).
fof(f2935,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X13) != s(bool,sK19(X14,X15,sK14,X16)) | s(bool,X12) != s(bool,X17)) ) | $spl26),
  inference(resolution,[],[f1183,f657])).
fof(f2934,plain,(
  ( ! [X6,X10,X8,X7,X11,X9] : (~p(s(bool,X6)) | p(s(bool,X7)) | s(bool,X8) != s(bool,sK19(X9,X10,sK14,X11)) | s(bool,X6) != s(bool,X7)) ) | $spl26),
  inference(resolution,[],[f1183,f655])).
fof(f2933,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,sK19(X3,X4,sK14,X5))) ) | $spl26),
  inference(resolution,[],[f1183,f655])).
fof(f2617,plain,(
  ( ! [X4,X5,X3,X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,sK18(X3,X4,sK14,X5))) ) | $spl110),
  inference(cnf_transformation,[],[f2617_D])).
fof(f2617_D,plain,(
  ( ! [X4,X5,X3,X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,sK18(X3,X4,sK14,X5))) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f2904,plain,(
  ( ! [X408,X405,X407,X409,X406] : (p(s(bool,X405)) | ~p(s(bool,X406)) | s(bool,X406) != s(bool,sK18(X407,X408,sK14,X409))) ) | $spl24),
  inference(resolution,[],[f1182,f984])).
fof(f2822,plain,(
  ( ! [X39,X43,X41,X44,X42,X40] : (~p(s(bool,X39)) | ~p(s(bool,X40)) | s(bool,X40) != s(bool,sK18(X41,X42,sK14,X43)) | s(bool,X39) != s(bool,X44)) ) | $spl24),
  inference(resolution,[],[f1182,f661])).
fof(f2820,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X31) != s(bool,sK18(X33,X34,sK14,X35))) ) | $spl24),
  inference(resolution,[],[f1182,f660])).
fof(f2618,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X8) != s(bool,sK18(X9,X10,sK14,X11))) ) | $spl112),
  inference(cnf_transformation,[],[f2618_D])).
fof(f2618_D,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X8) != s(bool,sK18(X9,X10,sK14,X11))) ) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f2819,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | s(bool,X29) != s(bool,sK18(X26,X27,sK14,X28)) | s(bool,X24) != s(bool,X25)) ) | $spl24),
  inference(resolution,[],[f1182,f659])).
fof(f2818,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,sK18(X21,X22,sK14,X23))) ) | $spl24),
  inference(resolution,[],[f1182,f659])).
fof(f2817,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X13) != s(bool,sK18(X14,X15,sK14,X16)) | s(bool,X12) != s(bool,X17)) ) | $spl24),
  inference(resolution,[],[f1182,f657])).
fof(f2816,plain,(
  ( ! [X6,X10,X8,X7,X11,X9] : (~p(s(bool,X6)) | p(s(bool,X7)) | s(bool,X8) != s(bool,sK18(X9,X10,sK14,X11)) | s(bool,X6) != s(bool,X7)) ) | $spl24),
  inference(resolution,[],[f1182,f655])).
fof(f2815,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,sK18(X3,X4,sK14,X5))) ) | $spl24),
  inference(resolution,[],[f1182,f655])).
fof(f1183,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,sK19(X9,X10,sK14,X11)))) ) | $spl26),
  inference(cnf_transformation,[],[f1183_D])).
fof(f1183_D,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,sK19(X9,X10,sK14,X11)))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f2791,plain,(
  ( ! [X12] : (sP11(X12,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) | $spl118),
  inference(cnf_transformation,[],[f2791_D])).
fof(f2791_D,plain,(
  ( ! [X12] : (sP11(X12,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f2774,plain,(
  ( ! [X21,X19,X20,X18] : (sP11(X18,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,sK19(X19,X20,sK14,X21)))) ) | $spl106),
  inference(superposition,[],[f2493,f732])).
fof(f1182,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,sK18(X6,X7,sK14,X8)))) ) | $spl24),
  inference(cnf_transformation,[],[f1182_D])).
fof(f1182_D,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,sK18(X6,X7,sK14,X8)))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f2773,plain,(
  ( ! [X14,X17,X15,X16] : (sP11(X14,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,sK18(X15,X16,sK14,X17)))) ) | $spl106),
  inference(superposition,[],[f2493,f729])).
fof(f1181,plain,(
  s('type.num.num',sK14) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16(sK14)))) | $spl22),
  inference(cnf_transformation,[],[f1181_D])).
fof(f1181_D,plain,(
  s('type.num.num',sK14) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16(sK14)))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f2772,plain,(
  ( ! [X13] : (sP11(X13,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | s('type.num.num',sK14) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16(sK14))))) ) | $spl106),
  inference(superposition,[],[f2493,f707])).
fof(f1177,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) | $spl19),
  inference(cnf_transformation,[],[f1177_D])).
fof(f1177_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0')))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f2771,plain,(
  ( ! [X12] : (sP11(X12,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))))) ) | $spl106),
  inference(superposition,[],[f2493,f705])).
fof(f2717,plain,(
  ( ! [X408,X405,X407,X409,X406] : (p(s(bool,X405)) | ~p(s(bool,X406)) | s(bool,X406) != s(bool,sK19(X407,X408,sK14,X409))) ) | $spl26),
  inference(resolution,[],[f1183,f984])).
fof(f2635,plain,(
  ( ! [X39,X43,X41,X44,X42,X40] : (~p(s(bool,X39)) | ~p(s(bool,X40)) | s(bool,X40) != s(bool,sK19(X41,X42,sK14,X43)) | s(bool,X39) != s(bool,X44)) ) | $spl26),
  inference(resolution,[],[f1183,f661])).
fof(f2633,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X31) != s(bool,sK19(X33,X34,sK14,X35))) ) | $spl26),
  inference(resolution,[],[f1183,f660])).
fof(f2632,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | s(bool,X29) != s(bool,sK19(X26,X27,sK14,X28)) | s(bool,X24) != s(bool,X25)) ) | $spl26),
  inference(resolution,[],[f1183,f659])).
fof(f2631,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,sK19(X21,X22,sK14,X23))) ) | $spl26),
  inference(resolution,[],[f1183,f659])).
fof(f2630,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X13) != s(bool,sK19(X14,X15,sK14,X16)) | s(bool,X12) != s(bool,X17)) ) | $spl26),
  inference(resolution,[],[f1183,f657])).
fof(f2629,plain,(
  ( ! [X6,X10,X8,X7,X11,X9] : (~p(s(bool,X6)) | p(s(bool,X7)) | s(bool,X8) != s(bool,sK19(X9,X10,sK14,X11)) | s(bool,X6) != s(bool,X7)) ) | $spl26),
  inference(resolution,[],[f1183,f655])).
fof(f2628,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,sK19(X3,X4,sK14,X5))) ) | $spl26),
  inference(resolution,[],[f1183,f655])).
fof(f2597,plain,(
  ( ! [X408,X405,X407,X409,X406] : (p(s(bool,X405)) | ~p(s(bool,X406)) | s(bool,X406) != s(bool,sK18(X407,X408,sK14,X409))) ) | $spl24),
  inference(resolution,[],[f1182,f984])).
fof(f2515,plain,(
  ( ! [X39,X43,X41,X44,X42,X40] : (~p(s(bool,X39)) | ~p(s(bool,X40)) | s(bool,X40) != s(bool,sK18(X41,X42,sK14,X43)) | s(bool,X39) != s(bool,X44)) ) | $spl24),
  inference(resolution,[],[f1182,f661])).
fof(f2513,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X31) != s(bool,sK18(X33,X34,sK14,X35))) ) | $spl24),
  inference(resolution,[],[f1182,f660])).
fof(f2512,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | s(bool,X29) != s(bool,sK18(X26,X27,sK14,X28)) | s(bool,X24) != s(bool,X25)) ) | $spl24),
  inference(resolution,[],[f1182,f659])).
fof(f2511,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,sK18(X21,X22,sK14,X23))) ) | $spl24),
  inference(resolution,[],[f1182,f659])).
fof(f2510,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X13) != s(bool,sK18(X14,X15,sK14,X16)) | s(bool,X12) != s(bool,X17)) ) | $spl24),
  inference(resolution,[],[f1182,f657])).
fof(f2509,plain,(
  ( ! [X6,X10,X8,X7,X11,X9] : (~p(s(bool,X6)) | p(s(bool,X7)) | s(bool,X8) != s(bool,sK18(X9,X10,sK14,X11)) | s(bool,X6) != s(bool,X7)) ) | $spl24),
  inference(resolution,[],[f1182,f655])).
fof(f2508,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,sK18(X3,X4,sK14,X5))) ) | $spl24),
  inference(resolution,[],[f1182,f655])).
fof(f2506,plain,(
  ( ! [X12] : (sP11(X12,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0')))) ) | $spl108),
  inference(cnf_transformation,[],[f2506_D])).
fof(f2506_D,plain,(
  ( ! [X12] : (sP11(X12,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f2487,plain,(
  ( ! [X21,X19,X20,X18] : (sP11(X18,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,sK19(X19,X20,sK14,X21)))) )),
  inference(superposition,[],[f1081,f732])).
fof(f1081,plain,(
  ( ! [X157] : (sP11(X157,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) )),
  inference(resolution,[],[f652,f885])).
fof(f885,plain,(
  ( ! [X0,X1] : (sP11(X0,X1) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f608])).
fof(f2486,plain,(
  ( ! [X14,X17,X15,X16] : (sP11(X14,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,sK18(X15,X16,sK14,X17)))) )),
  inference(superposition,[],[f1081,f729])).
fof(f2485,plain,(
  ( ! [X13] : (sP11(X13,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num',sK14) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16(sK14))))) )),
  inference(superposition,[],[f1081,f707])).
fof(f2484,plain,(
  ( ! [X12] : (sP11(X12,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f1081,f705])).
fof(f2493,plain,(
  ( ! [X12] : (sP11(X12,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) | $spl106),
  inference(cnf_transformation,[],[f2493_D])).
fof(f2493_D,plain,(
  ( ! [X12] : (sP11(X12,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14)))) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f2473,plain,(
  ( ! [X14] : (sP11(X14,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))) )),
  inference(superposition,[],[f1081,f707])).
fof(f2472,plain,(
  ( ! [X13] : (sP11(X13,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f1081,f705])).
fof(f2497,plain,(
  ( ! [X29] : (sP11(X29,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(forward_demodulation,[],[f2462,f975])).
fof(f2462,plain,(
  ( ! [X29] : (sP11(X29,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(superposition,[],[f1081,f983])).
fof(f2496,plain,(
  ( ! [X19,X18] : (sP11(X18,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X19),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f2458,f975])).
fof(f2458,plain,(
  ( ! [X19,X18] : (sP11(X18,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X19),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1081,f766])).
fof(f2495,plain,(
  ( ! [X17,X16] : (sP11(X16,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X17)))) )),
  inference(forward_demodulation,[],[f2457,f975])).
fof(f2457,plain,(
  ( ! [X17,X16] : (sP11(X16,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X17)))) )),
  inference(superposition,[],[f1081,f765])).
fof(f2494,plain,(
  ( ! [X14,X15] : (sP11(X14,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X15),s('type.list.list'(sK12),sK13)))) )),
  inference(forward_demodulation,[],[f2456,f975])).
fof(f2456,plain,(
  ( ! [X14,X15] : (sP11(X14,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X15),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1081,f763])).
fof(f2492,plain,(
  ( ! [X12,X13] : (sP11(X12,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X13)))) )),
  inference(forward_demodulation,[],[f2455,f975])).
fof(f2455,plain,(
  ( ! [X12,X13] : (sP11(X12,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))),s('type.num.num',sK14))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X13)))) )),
  inference(superposition,[],[f1081,f762])).
fof(f2448,plain,(
  ( ! [X30,X28,X31,X29,X32] : (sP2(sK19(X28,X29,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X30),X31,X32)) ) | $spl104),
  inference(cnf_transformation,[],[f2448_D])).
fof(f2448_D,plain,(
  ( ! [X30,X28,X31,X29,X32] : (sP2(sK19(X28,X29,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X30),X31,X32)) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f2442,plain,(
  ( ! [X76,X74,X77,X75,X73] : (sP2(sK19(X73,X74,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X75),X76,X77) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(superposition,[],[f1503,f983])).
fof(f1503,plain,(
  ( ! [X70,X74,X72,X71,X73] : (sP2(sK19(X70,X71,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X72),X73,X74)) )),
  inference(resolution,[],[f1475,f672])).
fof(f672,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f534])).
fof(f1475,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,sK19(X9,X10,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X11)))) )),
  inference(trivial_inequality_removal,[],[f1472])).
fof(f1472,plain,(
  ( ! [X10,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | ~p(s(bool,sK19(X9,X10,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X11)))) )),
  inference(superposition,[],[f1336,f732])).
fof(f1336,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))),
  inference(trivial_inequality_removal,[],[f1335])).
fof(f1335,plain,(
  s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK15))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK15))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))),
  inference(forward_demodulation,[],[f1334,f741])).
fof(f741,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f315])).
fof(f315,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f82])).
fof(f82,axiom,(
  ! [X8] : s('type.num.num',X8) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num','const.num.|48|_0')))),
  file('thm.rich_list.TAKE_APPEND2','thm.numeral.numeral_distrib|split|7')).
fof(f1334,plain,(
  s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK15))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.list.list'(sK12),sK15))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))),
  inference(forward_demodulation,[],[f1333,f770])).
fof(f1333,plain,(
  s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.list.list'(sK12),sK15))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.NIL_0'),s('type.list.list'(sK12),sK15))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))),
  inference(forward_demodulation,[],[f1332,f770])).
fof(f1332,plain,(
  s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.NIL_0'),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.NIL_0'),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.list.list'(sK12),sK15))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))),
  inference(forward_demodulation,[],[f1207,f975])).
fof(f1207,plain,(
  s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.NIL_0'),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.NIL_0'),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0'))))),s('type.list.list'(sK12),sK15))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))),
  inference(superposition,[],[f653,f973])).
fof(f2438,plain,(
  ( ! [X47,X50,X48,X46,X51,X49] : (sP2(sK19(X46,X47,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X48),X49,X50) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X51),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1503,f766])).
fof(f2437,plain,(
  ( ! [X45,X43,X41,X44,X42,X40] : (sP2(sK19(X40,X41,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X42),X43,X44) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X45)))) )),
  inference(superposition,[],[f1503,f765])).
fof(f2436,plain,(
  ( ! [X39,X37,X35,X38,X36,X34] : (sP2(sK19(X34,X35,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X36),X37,X38) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X39),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1503,f763])).
fof(f2435,plain,(
  ( ! [X30,X28,X33,X31,X29,X32] : (sP2(sK19(X28,X29,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X30),X31,X32) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X33)))) )),
  inference(superposition,[],[f1503,f762])).
fof(f2426,plain,(
  ( ! [X30,X28,X31,X29,X32] : (sP2(X28,sK19(X29,X30,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X31),X32)) ) | $spl102),
  inference(cnf_transformation,[],[f2426_D])).
fof(f2426_D,plain,(
  ( ! [X30,X28,X31,X29,X32] : (sP2(X28,sK19(X29,X30,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X31),X32)) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f2421,plain,(
  ( ! [X76,X74,X77,X75,X73] : (sP2(X73,sK19(X74,X75,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X76),X77) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(superposition,[],[f1502,f983])).
fof(f1502,plain,(
  ( ! [X68,X66,X69,X67,X65] : (sP2(X65,sK19(X66,X67,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X68),X69)) )),
  inference(resolution,[],[f1475,f671])).
fof(f671,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f534])).
fof(f2417,plain,(
  ( ! [X47,X50,X48,X46,X51,X49] : (sP2(X46,sK19(X47,X48,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X49),X50) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X51),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1502,f766])).
fof(f2416,plain,(
  ( ! [X45,X43,X41,X44,X42,X40] : (sP2(X40,sK19(X41,X42,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X43),X44) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X45)))) )),
  inference(superposition,[],[f1502,f765])).
fof(f2415,plain,(
  ( ! [X39,X37,X35,X38,X36,X34] : (sP2(X34,sK19(X35,X36,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X37),X38) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X39),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1502,f763])).
fof(f2414,plain,(
  ( ! [X30,X28,X33,X31,X29,X32] : (sP2(X28,sK19(X29,X30,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X31),X32) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X33)))) )),
  inference(superposition,[],[f1502,f762])).
fof(f2405,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f2298,f2159])).
fof(f2159,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl12),
  inference(equality_resolution,[],[f1157])).
fof(f2298,plain,(
  ( ! [X288,X289] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X288),s('type.num.num',X289))))) ) | $spl12),
  inference(resolution,[],[f2159,f955])).
fof(f2404,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f2296,f2159])).
fof(f2296,plain,(
  ( ! [X287,X286] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X286),s('type.num.num',X287))))) ) | $spl12),
  inference(resolution,[],[f2159,f958])).
fof(f958,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f643])).
fof(f643,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f424])).
fof(f424,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f423])).
fof(f423,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f126])).
fof(f126,axiom,(
  ! [X8,X14] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X14)))))) <=> ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num',X8)))))),
  file('thm.rich_list.TAKE_APPEND2','thm.numeral.numeral_lte|split|5')).
fof(f2403,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f2286,f2159])).
fof(f2286,plain,(
  ( ! [X267,X266] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X266))),s('type.num.num',X267))))) ) | $spl12),
  inference(resolution,[],[f2159,f866])).
fof(f866,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f600])).
fof(f600,plain,(
  ! [X0,X1] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f374])).
fof(f374,plain,(
  ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))))),
  inference(flattening,[],[f373])).
fof(f373,plain,(
  ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))))),
  inference(rectify,[],[f192])).
fof(f192,axiom,(
  ! [X14,X8] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num',X8)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num',X14)))))),
  file('thm.rich_list.TAKE_APPEND2','thm.arithmetic.NOT_LEQ')).
fof(f2402,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f2285,f2159])).
fof(f2285,plain,(
  ( ! [X265,X264] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X264),s('type.num.num',X265))))) ) | $spl12),
  inference(resolution,[],[f2159,f955])).
fof(f2401,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f2284,f2159])).
fof(f2284,plain,(
  ( ! [X263,X262] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X262))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X263))))))) ) | $spl12),
  inference(resolution,[],[f2159,f958])).
fof(f2398,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f2281,f2159])).
fof(f2281,plain,(
  ( ! [X257,X256] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X256),s('type.num.num',X257))))) ) | $spl12),
  inference(resolution,[],[f2159,f866])).
fof(f2279,plain,(
  $false | $spl12),
  inference(resolution,[],[f2159,f952])).
fof(f2280,plain,(
  $false | $spl12),
  inference(resolution,[],[f2159,f953])).
fof(f953,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f419])).
fof(f419,plain,(
  ! [X0] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))),
  inference(rectify,[],[f134])).
fof(f134,axiom,(
  ! [X8] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8))))),
  file('thm.rich_list.TAKE_APPEND2','thm.arithmetic.ZERO_LESS_EQ')).
fof(f2291,plain,(
  $false | $spl12),
  inference(resolution,[],[f2159,f970])).
fof(f970,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.dropWhile_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f438])).
fof(f438,plain,(
  ! [X0,X1,X2] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.dropWhile_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))),
  inference(flattening,[],[f437])).
fof(f437,plain,(
  ! [X0] : ! [X1,X2] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.dropWhile_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))),
  inference(rectify,[],[f54])).
fof(f54,axiom,(
  ! [X6] : ! [X15,X27] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.dropWhile_2'(s(fun(X6,bool),X15),s('type.list.list'(X6),X27))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X27))))))),
  file('thm.rich_list.TAKE_APPEND2','thm.list.LENGTH_dropWhile_LESS_EQ')).
fof(f2297,plain,(
  $false | $spl12),
  inference(resolution,[],[f2159,f652])).
fof(f2070,plain,(
  ( ! [X35,X34] : (s(bool,'F_0') != s(bool,X35) | p(s(bool,X34))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f2014])).
fof(f2014,plain,(
  ( ! [X35,X34] : (s(bool,'F_0') != s(bool,X35) | p(s(bool,X34)) | p(s(bool,X34))) ) | $spl6),
  inference(superposition,[],[f1154,f939])).
fof(f939,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f639])).
fof(f639,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f405])).
fof(f405,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f404])).
fof(f404,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f59])).
fof(f59,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.rich_list.TAKE_APPEND2','thm.bool.EQ_CLAUSES|split|3')).
fof(f2071,plain,(
  ( ! [X33,X32] : (s(bool,'F_0') != s(bool,X33) | p(s(bool,X32))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f2013])).
fof(f2013,plain,(
  ( ! [X33,X32] : (s(bool,'F_0') != s(bool,X33) | p(s(bool,X32)) | p(s(bool,X32))) ) | $spl6),
  inference(superposition,[],[f1154,f937])).
fof(f937,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f638])).
fof(f638,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f403])).
fof(f403,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f402])).
fof(f402,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f58])).
fof(f58,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.rich_list.TAKE_APPEND2','thm.bool.EQ_CLAUSES|split|2')).
fof(f2072,plain,(
  ( ! [X28,X29] : (s(bool,'F_0') != s(bool,X29) | p(s(bool,X28))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f2011])).
fof(f2011,plain,(
  ( ! [X28,X29] : (s(bool,'F_0') != s(bool,X29) | p(s(bool,X28)) | p(s(bool,X28))) ) | $spl6),
  inference(superposition,[],[f1154,f911])).
fof(f2001,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f1894,f1159])).
fof(f1894,plain,(
  ( ! [X347,X348] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X347),s('type.num.num',X348))))) ) | $spl16),
  inference(resolution,[],[f1159,f956])).
fof(f1998,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f1892,f1159])).
fof(f1892,plain,(
  ( ! [X341,X340] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X340),s('type.num.num',X341))))) ) | $spl16),
  inference(resolution,[],[f1159,f957])).
fof(f957,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f643])).
fof(f1991,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f1876,f1159])).
fof(f1876,plain,(
  ( ! [X287,X286] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X286))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X287))))))) ) | $spl16),
  inference(resolution,[],[f1159,f957])).
fof(f1990,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f1875,f1159])).
fof(f1875,plain,(
  ( ! [X285,X284] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X284),s('type.num.num',X285))))) ) | $spl16),
  inference(resolution,[],[f1159,f956])).
fof(f1989,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f1874,f1159])).
fof(f1874,plain,(
  ( ! [X282,X283] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X282))),s('type.num.num',X283))))) ) | $spl16),
  inference(resolution,[],[f1159,f867])).
fof(f867,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f600])).
fof(f1984,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f1865,f1159])).
fof(f1865,plain,(
  ( ! [X263,X262] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X262),s('type.num.num',X263))))) ) | $spl16),
  inference(resolution,[],[f1159,f867])).
fof(f1983,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f1862,f1159])).
fof(f1862,plain,(
  ( ! [X260] : (~p(s(bool,X260))) ) | $spl16),
  inference(resolution,[],[f1159,f946])).
fof(f946,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f497])).
fof(f497,plain,(
  ! [X0] : ((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0)))),
  inference(ennf_transformation,[],[f411])).
fof(f411,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) => ~p(s(bool,X0)))),
  inference(flattening,[],[f410])).
fof(f410,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) => ~p(s(bool,X0)))),
  inference(rectify,[],[f234])).
fof(f234,axiom,(
  ! [X11] : ((p(s(bool,X11)) => p(s(bool,'F_0'))) => ~p(s(bool,X11)))),
  file('thm.rich_list.TAKE_APPEND2','thm.bool.IMP_F')).
fof(f1982,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f1854,f1159])).
fof(f1854,plain,(
  ( ! [X252] : (~p(s(bool,X252))) ) | $spl16),
  inference(resolution,[],[f1159,f909])).
fof(f909,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f621])).
fof(f621,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0))) & (p(s(bool,X0)) | ~p(s(bool,X0)) | p(s(bool,'F_0'))))),
  inference(flattening,[],[f620])).
fof(f620,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0))) & (p(s(bool,X0)) | (~p(s(bool,X0)) | p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f491])).
fof(f491,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(ennf_transformation,[],[f392])).
fof(f392,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f391])).
fof(f391,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X11] : ((p(s(bool,X11)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X11)))),
  file('thm.rich_list.TAKE_APPEND2','thm.bool.IMP_CLAUSES|split|4')).
fof(f1864,plain,(
  $false | $spl16),
  inference(resolution,[],[f1159,f954])).
fof(f954,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f420])).
fof(f420,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.rich_list.TAKE_APPEND2',aHL_FALSITY)).
fof(f1889,plain,(
  $false | $spl16),
  inference(resolution,[],[f1159,f905])).
fof(f905,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(cnf_transformation,[],[f388])).
fof(f388,plain,(
  ! [X0] : ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0'))))),
  inference(flattening,[],[f387])).
fof(f387,plain,(
  ! [X0] : ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X8] : ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num','const.num.|48|_0'))))),
  file('thm.rich_list.TAKE_APPEND2','thm.arithmetic.NOT_SUC_LESS_EQ_|48|')).
fof(f1920,plain,(
  $false | $spl16),
  inference(resolution,[],[f1159,f1476])).
fof(f1476,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,sK18(X6,X7,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X8)))) )),
  inference(trivial_inequality_removal,[],[f1471])).
fof(f1471,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | ~p(s(bool,sK18(X6,X7,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X8)))) )),
  inference(superposition,[],[f1336,f729])).
fof(f1922,plain,(
  $false | $spl16),
  inference(resolution,[],[f1159,f1475])).
fof(f1759,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,sK18(X20,X21,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X22)))) ) | $spl98),
  inference(cnf_transformation,[],[f1759_D])).
fof(f1759_D,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,sK18(X20,X21,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X22)))) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f1732,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,sK18(X51,X52,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X53))) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(superposition,[],[f1476,f983])).
fof(f1728,plain,(
  ( ! [X35,X33,X34,X32] : (~p(s(bool,sK18(X32,X33,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X34))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X35),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1476,f766])).
fof(f1727,plain,(
  ( ! [X30,X28,X31,X29] : (~p(s(bool,sK18(X28,X29,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X30))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X31)))) )),
  inference(superposition,[],[f1476,f765])).
fof(f1726,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,sK18(X24,X25,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X26))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1476,f763])).
fof(f1725,plain,(
  ( ! [X23,X21,X22,X20] : (~p(s(bool,sK18(X20,X21,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X22))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X23)))) )),
  inference(superposition,[],[f1476,f762])).
fof(f1752,plain,(
  ( ! [X4,X5,X3,X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,sK18(X3,X4,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X5))) ) | $spl94),
  inference(cnf_transformation,[],[f1752_D])).
fof(f1752_D,plain,(
  ( ! [X4,X5,X3,X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,sK18(X3,X4,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X5))) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f1718,plain,(
  ( ! [X408,X405,X407,X409,X406] : (p(s(bool,X405)) | ~p(s(bool,X406)) | s(bool,X406) != s(bool,sK18(X407,X408,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X409))) )),
  inference(resolution,[],[f1476,f984])).
fof(f1636,plain,(
  ( ! [X39,X43,X41,X44,X42,X40] : (~p(s(bool,X39)) | ~p(s(bool,X40)) | s(bool,X40) != s(bool,sK18(X41,X42,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X43)) | s(bool,X39) != s(bool,X44)) )),
  inference(resolution,[],[f1476,f661])).
fof(f1634,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X31) != s(bool,sK18(X33,X34,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X35))) )),
  inference(resolution,[],[f1476,f660])).
fof(f1753,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X8) != s(bool,sK18(X9,X10,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X11))) ) | $spl96),
  inference(cnf_transformation,[],[f1753_D])).
fof(f1753_D,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X8) != s(bool,sK18(X9,X10,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X11))) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f1633,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | s(bool,X29) != s(bool,sK18(X26,X27,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X28)) | s(bool,X24) != s(bool,X25)) )),
  inference(resolution,[],[f1476,f659])).
fof(f1632,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,sK18(X21,X22,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X23))) )),
  inference(resolution,[],[f1476,f659])).
fof(f1631,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X13) != s(bool,sK18(X14,X15,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X16)) | s(bool,X12) != s(bool,X17)) )),
  inference(resolution,[],[f1476,f657])).
fof(f1630,plain,(
  ( ! [X6,X10,X8,X7,X11,X9] : (~p(s(bool,X6)) | p(s(bool,X7)) | s(bool,X8) != s(bool,sK18(X9,X10,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X11)) | s(bool,X6) != s(bool,X7)) )),
  inference(resolution,[],[f1476,f655])).
fof(f1629,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,sK18(X3,X4,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X5))) )),
  inference(resolution,[],[f1476,f655])).
fof(f1621,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,sK19(X20,X21,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X22)))) ) | $spl88),
  inference(cnf_transformation,[],[f1621_D])).
fof(f1621_D,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,sK19(X20,X21,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X22)))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f1593,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,sK19(X51,X52,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X53))) | s('type.list.list'(sK12),sK13) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK13,sK12)),s('type.list.list'(sK12),sK28(sK13,sK12))))) )),
  inference(superposition,[],[f1475,f983])).
fof(f1589,plain,(
  ( ! [X35,X33,X34,X32] : (~p(s(bool,sK19(X32,X33,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X34))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X35),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1475,f766])).
fof(f1588,plain,(
  ( ! [X30,X28,X31,X29] : (~p(s(bool,sK19(X28,X29,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X30))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X31)))) )),
  inference(superposition,[],[f1475,f765])).
fof(f1587,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,sK19(X24,X25,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X26))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X27),s('type.list.list'(sK12),sK13)))) )),
  inference(superposition,[],[f1475,f763])).
fof(f1586,plain,(
  ( ! [X23,X21,X22,X20] : (~p(s(bool,sK19(X20,X21,'const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.NIL_0')),X22))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X23)))) )),
  inference(superposition,[],[f1475,f762])).
fof(f1613,plain,(
  ( ! [X4,X5,X3,X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,sK19(X3,X4,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X5))) ) | $spl82),
  inference(cnf_transformation,[],[f1613_D])).
fof(f1613_D,plain,(
  ( ! [X4,X5,X3,X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,sK19(X3,X4,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X5))) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f1579,plain,(
  ( ! [X408,X405,X407,X409,X406] : (p(s(bool,X405)) | ~p(s(bool,X406)) | s(bool,X406) != s(bool,sK19(X407,X408,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X409))) )),
  inference(resolution,[],[f1475,f984])).
fof(f1497,plain,(
  ( ! [X39,X43,X41,X44,X42,X40] : (~p(s(bool,X39)) | ~p(s(bool,X40)) | s(bool,X40) != s(bool,sK19(X41,X42,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X43)) | s(bool,X39) != s(bool,X44)) )),
  inference(resolution,[],[f1475,f661])).
fof(f1495,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X31) != s(bool,sK19(X33,X34,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X35))) )),
  inference(resolution,[],[f1475,f660])).
fof(f1614,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X8) != s(bool,sK19(X9,X10,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X11))) ) | $spl84),
  inference(cnf_transformation,[],[f1614_D])).
fof(f1614_D,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X8) != s(bool,sK19(X9,X10,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X11))) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f1494,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | s(bool,X29) != s(bool,sK19(X26,X27,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X28)) | s(bool,X24) != s(bool,X25)) )),
  inference(resolution,[],[f1475,f659])).
fof(f1493,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,sK19(X21,X22,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X23))) )),
  inference(resolution,[],[f1475,f659])).
fof(f1492,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X13) != s(bool,sK19(X14,X15,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X16)) | s(bool,X12) != s(bool,X17)) )),
  inference(resolution,[],[f1475,f657])).
fof(f1491,plain,(
  ( ! [X6,X10,X8,X7,X11,X9] : (~p(s(bool,X6)) | p(s(bool,X7)) | s(bool,X8) != s(bool,sK19(X9,X10,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X11)) | s(bool,X6) != s(bool,X7)) )),
  inference(resolution,[],[f1475,f655])).
fof(f1490,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,sK19(X3,X4,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X5))) )),
  inference(resolution,[],[f1475,f655])).
fof(f1427,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))))) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27('const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))),sK12)),s('type.list.list'(sK12),sK28('const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))),sK12)))) | $spl80),
  inference(cnf_transformation,[],[f1427_D])).
fof(f1427_D,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))))) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27('const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))),sK12)),s('type.list.list'(sK12),sK28('const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))),sK12)))) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f1421,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | $spl73),
  inference(cnf_transformation,[],[f1421_D])).
fof(f1421_D,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) <=> ~$spl73),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl73])])).
fof(f1285,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))))) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27('const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))),sK12)),s('type.list.list'(sK12),sK28('const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))),sK12))))),
  inference(superposition,[],[f653,f983])).
fof(f1425,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))))))) | $spl79),
  inference(cnf_transformation,[],[f1425_D])).
fof(f1425_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))))))) <=> ~$spl79),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl79])])).
fof(f1282,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))))))),
  inference(superposition,[],[f653,f973])).
fof(f1423,plain,(
  ( ! [X13] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X13),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))))))) ) | $spl76),
  inference(cnf_transformation,[],[f1423_D])).
fof(f1423_D,plain,(
  ( ! [X13] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X13),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))))))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f1281,plain,(
  ( ! [X15] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X15),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))))))) )),
  inference(superposition,[],[f653,f766])).
fof(f1422,plain,(
  ( ! [X12] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))))),s('type.list.list'(sK12),X12)))) ) | $spl74),
  inference(cnf_transformation,[],[f1422_D])).
fof(f1422_D,plain,(
  ( ! [X12] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))))),s('type.list.list'(sK12),X12)))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f1280,plain,(
  ( ! [X14] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))))),s('type.list.list'(sK12),X14)))) )),
  inference(superposition,[],[f653,f765])).
fof(f1279,plain,(
  ( ! [X13] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X13),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))))))) )),
  inference(superposition,[],[f653,f763])).
fof(f1278,plain,(
  ( ! [X12] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))))),s('type.list.list'(sK12),X12)))) )),
  inference(superposition,[],[f653,f762])).
fof(f1298,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),sK13) | $spl29),
  inference(cnf_transformation,[],[f1298_D])).
fof(f1298_D,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),sK13) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f1419,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))) | $spl71),
  inference(cnf_transformation,[],[f1419_D])).
fof(f1419_D,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))) <=> ~$spl71),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl71])])).
fof(f1269,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),sK13)),
  inference(superposition,[],[f653,f764])).
fof(f764,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X2) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f564])).
fof(f1268,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),sK13)),
  inference(superposition,[],[f653,f767])).
fof(f767,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X2) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f566])).
fof(f1417,plain,(
  s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27('const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)),sK12)),s('type.list.list'(sK12),sK28('const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)),sK12)))) | $spl68),
  inference(cnf_transformation,[],[f1417_D])).
fof(f1417_D,plain,(
  s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27('const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)),sK12)),s('type.list.list'(sK12),sK28('const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)),sK12)))) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f1371,plain,(
  s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | $spl41),
  inference(cnf_transformation,[],[f1371_D])).
fof(f1371_D,plain,(
  s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) <=> ~$spl41),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl41])])).
fof(f1415,plain,(
  s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27('const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)),sK12)),s('type.list.list'(sK12),sK28('const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)),sK12))))),
  inference(forward_demodulation,[],[f1264,f769])).
fof(f1264,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27('const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)),sK12)),s('type.list.list'(sK12),sK28('const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)),sK12))))),
  inference(superposition,[],[f653,f983])).
fof(f1414,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))))) | $spl67),
  inference(cnf_transformation,[],[f1414_D])).
fof(f1414_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))))) <=> ~$spl67),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl67])])).
fof(f1412,plain,(
  s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))))),
  inference(forward_demodulation,[],[f1261,f769])).
fof(f1261,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))))),
  inference(superposition,[],[f653,f973])).
fof(f1409,plain,(
  ( ! [X9] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X9),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))))) ) | $spl64),
  inference(cnf_transformation,[],[f1409_D])).
fof(f1409_D,plain,(
  ( ! [X9] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X9),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f1411,plain,(
  ( ! [X11] : (s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X11),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))))) )),
  inference(forward_demodulation,[],[f1260,f769])).
fof(f1260,plain,(
  ( ! [X11] : (s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X11),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))))) )),
  inference(superposition,[],[f653,f766])).
fof(f1407,plain,(
  ( ! [X8] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))),s('type.list.list'(sK12),X8)))) ) | $spl62),
  inference(cnf_transformation,[],[f1407_D])).
fof(f1407_D,plain,(
  ( ! [X8] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))),s('type.list.list'(sK12),X8)))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f1410,plain,(
  ( ! [X10] : (s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))),s('type.list.list'(sK12),X10)))) )),
  inference(forward_demodulation,[],[f1259,f769])).
fof(f1259,plain,(
  ( ! [X10] : (s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))),s('type.list.list'(sK12),X10)))) )),
  inference(superposition,[],[f653,f765])).
fof(f1408,plain,(
  ( ! [X9] : (s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X9),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))))) )),
  inference(forward_demodulation,[],[f1258,f769])).
fof(f1258,plain,(
  ( ! [X9] : (s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X9),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15)))))) )),
  inference(superposition,[],[f653,f763])).
fof(f1406,plain,(
  ( ! [X8] : (s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))),s('type.list.list'(sK12),X8)))) )),
  inference(forward_demodulation,[],[f1257,f769])).
fof(f1257,plain,(
  ( ! [X8] : (s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))),s('type.list.list'(sK12),X8)))) )),
  inference(superposition,[],[f653,f762])).
fof(f1403,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK15))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))))) | $spl59),
  inference(cnf_transformation,[],[f1403_D])).
fof(f1403_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK15))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))))) <=> ~$spl59),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl59])])).
fof(f1405,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | $spl61),
  inference(cnf_transformation,[],[f1405_D])).
fof(f1405_D,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) <=> ~$spl61),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl61])])).
fof(f1252,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK15))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))))),
  inference(superposition,[],[f653,f749])).
fof(f1399,plain,(
  s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))) | s('type.list.list'(sK12),sK15) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK15,sK12)),s('type.list.list'(sK12),sK28(sK15,sK12))))),
  inference(forward_demodulation,[],[f1398,f769])).
fof(f1398,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))))) | s('type.list.list'(sK12),sK15) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK15,sK12)),s('type.list.list'(sK12),sK28(sK15,sK12))))),
  inference(forward_demodulation,[],[f1249,f751])).
fof(f751,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f332])).
fof(f332,plain,(
  ! [X0,X1] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f331])).
fof(f331,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X6] : ! [X8] : s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X8),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.rich_list.TAKE_APPEND2','thm.list.TAKE_def|split|0')).
fof(f1249,plain,(
  s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))))) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),'const.list.NIL_0'))))) | s('type.list.list'(sK12),sK15) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK27(sK15,sK12)),s('type.list.list'(sK12),sK28(sK15,sK12))))),
  inference(superposition,[],[f653,f983])).
fof(f1395,plain,(
  s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK15)))),
  inference(forward_demodulation,[],[f1394,f769])).
fof(f1394,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK15)))),
  inference(forward_demodulation,[],[f1246,f751])).
fof(f1246,plain,(
  s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))))) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),'const.list.NIL_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK15)))),
  inference(superposition,[],[f653,f973])).
fof(f1393,plain,(
  ( ! [X11] : (s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X11),s('type.list.list'(sK12),sK15)))) )),
  inference(forward_demodulation,[],[f1392,f769])).
fof(f1392,plain,(
  ( ! [X11] : (s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X11),s('type.list.list'(sK12),sK15)))) )),
  inference(forward_demodulation,[],[f1245,f751])).
fof(f1245,plain,(
  ( ! [X11] : (s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))))) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),'const.list.NIL_0'))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X11),s('type.list.list'(sK12),sK15)))) )),
  inference(superposition,[],[f653,f766])).
fof(f1391,plain,(
  ( ! [X10] : (s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK15),s('type.list.list'(sK12),X10)))) )),
  inference(forward_demodulation,[],[f1390,f769])).
fof(f1390,plain,(
  ( ! [X10] : (s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK15),s('type.list.list'(sK12),X10)))) )),
  inference(forward_demodulation,[],[f1244,f751])).
fof(f1244,plain,(
  ( ! [X10] : (s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))))) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),'const.list.NIL_0'))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK15),s('type.list.list'(sK12),X10)))) )),
  inference(superposition,[],[f653,f765])).
fof(f1388,plain,(
  ( ! [X9] : (s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X9),s('type.list.list'(sK12),sK15)))) )),
  inference(forward_demodulation,[],[f1387,f769])).
fof(f1387,plain,(
  ( ! [X9] : (s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X9),s('type.list.list'(sK12),sK15)))) )),
  inference(forward_demodulation,[],[f1243,f751])).
fof(f1243,plain,(
  ( ! [X9] : (s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))))) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),'const.list.NIL_0'))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),X9),s('type.list.list'(sK12),sK15)))) )),
  inference(superposition,[],[f653,f763])).
fof(f1383,plain,(
  ( ! [X8] : (s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK15),s('type.list.list'(sK12),X8)))) )),
  inference(forward_demodulation,[],[f1382,f769])).
fof(f1382,plain,(
  ( ! [X8] : (s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK15),s('type.list.list'(sK12),X8)))) )),
  inference(forward_demodulation,[],[f1242,f751])).
fof(f1242,plain,(
  ( ! [X8] : (s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))))) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),'const.list.NIL_0'))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK15),s('type.list.list'(sK12),X8)))) )),
  inference(superposition,[],[f653,f762])).
fof(f1381,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,sK19(X9,X10,'const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))),X11)))) ) | $spl46),
  inference(cnf_transformation,[],[f1381_D])).
fof(f1381_D,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,sK19(X9,X10,'const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))),X11)))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f1380,plain,(
  ( ! [X10,X11,X9] : (s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,sK19(X9,X10,'const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))),X11)))) )),
  inference(forward_demodulation,[],[f1379,f769])).
fof(f1379,plain,(
  ( ! [X10,X11,X9] : (s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,sK19(X9,X10,'const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))),X11)))) )),
  inference(forward_demodulation,[],[f1235,f750])).
fof(f1235,plain,(
  ( ! [X10,X11,X9] : (s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,sK19(X9,X10,'const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))),X11)))) )),
  inference(superposition,[],[f653,f732])).
fof(f1378,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,sK18(X6,X7,'const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))),X8)))) ) | $spl44),
  inference(cnf_transformation,[],[f1378_D])).
fof(f1378_D,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,sK18(X6,X7,'const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))),X8)))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f1377,plain,(
  ( ! [X6,X8,X7] : (s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,sK18(X6,X7,'const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))),X8)))) )),
  inference(forward_demodulation,[],[f1376,f769])).
fof(f1376,plain,(
  ( ! [X6,X8,X7] : (s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,sK18(X6,X7,'const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))),X8)))) )),
  inference(forward_demodulation,[],[f1234,f750])).
fof(f1234,plain,(
  ( ! [X6,X8,X7] : (s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,sK18(X6,X7,'const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))),X8)))) )),
  inference(superposition,[],[f653,f729])).
fof(f1375,plain,(
  s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))))) | $spl42),
  inference(cnf_transformation,[],[f1375_D])).
fof(f1375_D,plain,(
  s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f1373,plain,(
  s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))))),
  inference(forward_demodulation,[],[f1372,f769])).
fof(f1372,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))))),
  inference(forward_demodulation,[],[f1233,f750])).
fof(f1233,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))))),
  inference(superposition,[],[f653,f707])).
fof(f1149,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) | $spl1),
  inference(cnf_transformation,[],[f1149_D])).
fof(f1149_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f1369,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) | s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15)))))),
  inference(forward_demodulation,[],[f1368,f708])).
fof(f708,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f284])).
fof(f284,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f73])).
fof(f73,axiom,(
  ! [X8] : s('type.num.num',X8) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))),
  file('thm.rich_list.TAKE_APPEND2','thm.arithmetic.ADD|split|0')).
fof(f1368,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))))) | s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15)))))),
  inference(forward_demodulation,[],[f1367,f702])).
fof(f702,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f279])).
fof(f279,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f72])).
fof(f72,axiom,(
  ! [X14,X8] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X14))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X8)))),
  file('thm.rich_list.TAKE_APPEND2','thm.arithmetic.ADD_SYM')).
fof(f1367,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0')))))) | s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15)))))),
  inference(forward_demodulation,[],[f1366,f723])).
fof(f723,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f292])).
fof(f292,plain,(
  ! [X0,X1,X2] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))),
  inference(rectify,[],[f218])).
fof(f218,axiom,(
  ! [X14,X8,X32] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X32))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X14),s('type.num.num',X8))),s('type.num.num',X32)))),
  file('thm.rich_list.TAKE_APPEND2','thm.arithmetic.SUB_RIGHT_LESS_EQ')).
fof(f1366,plain,(
  s('type.list.list'(sK12),sK13) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.num.num','const.num.|48|_0'))))),
  inference(forward_demodulation,[],[f1365,f769])).
fof(f1365,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.num.num','const.num.|48|_0'))))),
  inference(forward_demodulation,[],[f1232,f750])).
fof(f1232,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.num.num','const.num.|48|_0'))))),
  inference(superposition,[],[f653,f705])).
fof(f1356,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,sK19(X9,X10,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X11)))) ) | $spl38),
  inference(cnf_transformation,[],[f1356_D])).
fof(f1356_D,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,sK19(X9,X10,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X11)))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f1344,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | $spl33),
  inference(cnf_transformation,[],[f1344_D])).
fof(f1344_D,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) <=> ~$spl33),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl33])])).
fof(f1355,plain,(
  ( ! [X10,X11,X9] : (s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,sK19(X9,X10,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X11)))) )),
  inference(forward_demodulation,[],[f1223,f741])).
fof(f1223,plain,(
  ( ! [X10,X11,X9] : (s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,sK19(X9,X10,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X11)))) )),
  inference(superposition,[],[f653,f732])).
fof(f1354,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,sK18(X6,X7,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X8)))) ) | $spl36),
  inference(cnf_transformation,[],[f1354_D])).
fof(f1354_D,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,sK18(X6,X7,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X8)))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f1353,plain,(
  ( ! [X6,X8,X7] : (s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,sK18(X6,X7,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X8)))) )),
  inference(forward_demodulation,[],[f1222,f741])).
fof(f1222,plain,(
  ( ! [X6,X8,X7] : (s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,sK18(X6,X7,'const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)),X8)))) )),
  inference(superposition,[],[f653,f729])).
fof(f1350,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))),
  inference(forward_demodulation,[],[f1221,f741])).
fof(f1221,plain,(
  s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.list.list'(sK12),sK15))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16('const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))),
  inference(superposition,[],[f653,f707])).
fof(f1349,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))))),
  inference(forward_demodulation,[],[f1220,f741])).
fof(f1220,plain,(
  s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0'))))),
  inference(superposition,[],[f653,f705])).
fof(f1342,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),sK13)),
  inference(forward_demodulation,[],[f1213,f741])).
fof(f1213,plain,(
  s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))),s('type.list.list'(sK12),sK15))))) | s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),sK13)),
  inference(superposition,[],[f653,f974])).
fof(f974,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f644])).
fof(f1311,plain,(
  ( ! [X10,X11,X9] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),sK13) | ~p(s(bool,sK19(X9,X10,sK14,X11)))) )),
  inference(forward_demodulation,[],[f1310,f769])).
fof(f1310,plain,(
  ( ! [X10,X11,X9] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) | ~p(s(bool,sK19(X9,X10,sK14,X11)))) )),
  inference(forward_demodulation,[],[f1309,f750])).
fof(f1309,plain,(
  ( ! [X10,X11,X9] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,sK19(X9,X10,sK14,X11)))) )),
  inference(forward_demodulation,[],[f1308,f750])).
fof(f1308,plain,(
  ( ! [X10,X11,X9] : (s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,sK19(X9,X10,sK14,X11)))) )),
  inference(forward_demodulation,[],[f1196,f742])).
fof(f742,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f316])).
fof(f316,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X14] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X14)))),
  file('thm.rich_list.TAKE_APPEND2','thm.arithmetic.SUB|split|0')).
fof(f1196,plain,(
  ( ! [X10,X11,X9] : (s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,sK19(X9,X10,sK14,X11)))) )),
  inference(superposition,[],[f653,f732])).
fof(f1307,plain,(
  ( ! [X6,X8,X7] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),sK13) | ~p(s(bool,sK18(X6,X7,sK14,X8)))) )),
  inference(forward_demodulation,[],[f1306,f769])).
fof(f1306,plain,(
  ( ! [X6,X8,X7] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) | ~p(s(bool,sK18(X6,X7,sK14,X8)))) )),
  inference(forward_demodulation,[],[f1305,f750])).
fof(f1305,plain,(
  ( ! [X6,X8,X7] : (s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,sK18(X6,X7,sK14,X8)))) )),
  inference(forward_demodulation,[],[f1304,f750])).
fof(f1304,plain,(
  ( ! [X6,X8,X7] : (s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,sK18(X6,X7,sK14,X8)))) )),
  inference(forward_demodulation,[],[f1195,f742])).
fof(f1195,plain,(
  ( ! [X6,X8,X7] : (s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,sK18(X6,X7,sK14,X8)))) )),
  inference(superposition,[],[f653,f729])).
fof(f1303,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) | $spl31),
  inference(cnf_transformation,[],[f1303_D])).
fof(f1303_D,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f1301,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) | s('type.num.num',sK14) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16(sK14))))),
  inference(forward_demodulation,[],[f1300,f750])).
fof(f1300,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),sK15))))) | s('type.num.num',sK14) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16(sK14))))),
  inference(forward_demodulation,[],[f1299,f750])).
fof(f1299,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | s('type.num.num',sK14) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16(sK14))))),
  inference(forward_demodulation,[],[f1194,f742])).
fof(f1194,plain,(
  s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))))) | s('type.num.num',sK14) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16(sK14))))),
  inference(superposition,[],[f653,f707])).
fof(f1296,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),sK13) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))))),
  inference(forward_demodulation,[],[f1295,f769])).
fof(f1295,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))))),
  inference(forward_demodulation,[],[f1294,f750])).
fof(f1294,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))))),
  inference(forward_demodulation,[],[f1293,f750])).
fof(f1293,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))))),
  inference(forward_demodulation,[],[f1193,f742])).
fof(f1193,plain,(
  s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))) != s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.list.list'(sK12),sK15))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))))),
  inference(superposition,[],[f653,f705])).
fof(f1179,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0')))) | $spl20),
  inference(cnf_transformation,[],[f1179_D])).
fof(f1179_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0')))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f1129,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,sK19(X9,X10,sK14,X11)))) )),
  inference(superposition,[],[f652,f732])).
fof(f1128,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,sK18(X6,X7,sK14,X8)))) )),
  inference(superposition,[],[f652,f729])).
fof(f1127,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num',sK14) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK16(sK14))))),
  inference(superposition,[],[f652,f707])).
fof(f1126,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.num.|48|_0'))))),
  inference(superposition,[],[f652,f705])).
fof(f1153,plain,(
  ( ! [X6] : (p(s(bool,X6)) | s(bool,X6) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) ) | $spl4),
  inference(cnf_transformation,[],[f1153_D])).
fof(f1153_D,plain,(
  ( ! [X6] : (p(s(bool,X6)) | s(bool,X6) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f1090,plain,(
  ( ! [X161,X162] : (p(s(bool,X161)) | p(s(bool,X162)) | s(bool,X162) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) )),
  inference(resolution,[],[f652,f984])).
fof(f1011,plain,(
  ( ! [X28,X26,X27] : (p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14))) | s(bool,X27) != s(bool,X28)) )),
  inference(resolution,[],[f652,f661])).
fof(f1155,plain,(
  ( ! [X10] : (s(bool,X10) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) ) | $spl8),
  inference(cnf_transformation,[],[f1155_D])).
fof(f1155_D,plain,(
  ( ! [X10] : (s(bool,X10) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f1010,plain,(
  ( ! [X24,X23,X25] : (p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X23) != s(bool,X24) | s(bool,X25) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) )),
  inference(resolution,[],[f652,f661])).
fof(f1008,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X19) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) )),
  inference(resolution,[],[f652,f660])).
fof(f1007,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X14) != s(bool,X16) | s(bool,X15) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) )),
  inference(resolution,[],[f652,f659])).
fof(f1006,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14))) | s(bool,X12) != s(bool,X13)) )),
  inference(resolution,[],[f652,f657])).
fof(f1005,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X8) != s(bool,X9) | s(bool,X10) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) )),
  inference(resolution,[],[f652,f657])).
fof(f1004,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,X5)) | p(s(bool,X6)) | s(bool,X5) != s(bool,X7) | s(bool,X6) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14)))) )),
  inference(resolution,[],[f652,f655])).
fof(f1151,plain,(
  s('type.num.num',sK14) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) | $spl2),
  inference(cnf_transformation,[],[f1151_D])).
fof(f1151_D,plain,(
  s('type.num.num',sK14) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f994,plain,(
  s('type.num.num',sK14) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))),
  inference(resolution,[],[f652,f697])).
fof(f697,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f460])).
fof(f460,plain,(
  ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1))),
  inference(flattening,[],[f459])).
fof(f459,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) | s('type.num.num',X0) = s('type.num.num',X1))),
  inference(ennf_transformation,[],[f274])).
fof(f274,plain,(
  ! [X0,X1] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) => s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f230])).
fof(f230,axiom,(
  ! [X8,X14] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X14)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num',X8))))) => s('type.num.num',X8) = s('type.num.num',X14))),
  file('thm.rich_list.TAKE_APPEND2','thm.arithmetic.LESS_EQUAL_ANTISYM')).
fof(f993,plain,(
  s('type.num.num',sK14) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))),
  inference(resolution,[],[f652,f697])).
fof(f992,plain,(
  s('type.num.num',sK14) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))),
  inference(resolution,[],[f652,f692])).
fof(f692,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f544])).
fof(f544,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) != s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(flattening,[],[f543])).
fof(f543,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) != s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))) & ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(nnf_transformation,[],[f272])).
fof(f272,plain,(
  ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))))),
  inference(rectify,[],[f181])).
fof(f181,axiom,(
  ! [X14,X8] : (s('type.num.num',X8) = s('type.num.num',X14) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num',X8)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X14))))))),
  file('thm.rich_list.TAKE_APPEND2','thm.arithmetic.EQ_LESS_EQ')).
fof(f991,plain,(
  s('type.num.num',sK14) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))),
  inference(resolution,[],[f652,f692])).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 372
% Passive clauses: 3337
% Generated clauses: 8780
% Final active clauses: 347
% Final passive clauses: 2860
% Input formulas: 261
% Initial clauses: 332
% 
% Selected by SInE selection: 127
% SInE iterations: 1
% 
% Duplicate literals: 107
% Trivial inequalities: 48
% Fw subsumption resolutions: 875
% Fw demodulations: 1517
% Bw demodulations: 18
% 
% Simple tautologies: 197
% Forward subsumptions: 2265
% Fw demodulations to eq. taut.: 7
% 
% Binary resolution: 2263
% Forward superposition: 2499
% Backward superposition: 1256
% Equality resolution: 3
% 
% Split clauses: 310
% Split components: 638
% SAT solver clauses: 336
% SAT solver unit clauses: 25
% SAT solver binary clauses: 188
% 
% Sat splits: 310
% Sat splitting refutations: 25
% 
% Memory used [KB]: 6140
% Time elapsed: 0.131 s
% ------------------------------
% ------------------------------
% Success in time 11.894 s
