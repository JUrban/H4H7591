Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.option
% SZS output start Proof for thm.option
fof(f236,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f232])).
fof(f232,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.NONE_0')),
  inference(superposition,[],[f84,f106])).
fof(f106,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X2),s('type.option.option'(X0),'const.option.NONE_0')))) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0,X1,X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X2),s('type.option.option'(X0),'const.option.NONE_0')))),
  inference(flattening,[],[f59])).
fof(f59,plain,(
  ! [X0,X1] : ! [X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X2),s('type.option.option'(X0),'const.option.NONE_0')))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6,X7] : ! [X10] : s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),'const.option.OPTION_MAP_2'(s(fun(X6,X7),X10),s('type.option.option'(X6),'const.option.NONE_0')))),
  file('thm.option.option_CLAUSES|split|17','thm.option.OPTION_MAP_DEF|split|1')).
fof(f84,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK0,sK1),sK2),s('type.option.option'(sK0),'const.option.NONE_0')))),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK0,sK1),sK2),s('type.option.option'(sK0),'const.option.NONE_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f73])).
fof(f73,plain,(
  ? [X0,X1,X2] : s('type.option.option'(X1),'const.option.NONE_0') != s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X2),s('type.option.option'(X0),'const.option.NONE_0')))),
  inference(ennf_transformation,[],[f29])).
fof(f29,plain,(
  ~! [X0,X1,X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X2),s('type.option.option'(X0),'const.option.NONE_0')))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ~! [X0,X1] : ! [X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X2),s('type.option.option'(X0),'const.option.NONE_0')))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),'const.option.OPTION_MAP_2'(s(fun(X6,X7),X8),s('type.option.option'(X6),'const.option.NONE_0')))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),'const.option.OPTION_MAP_2'(s(fun(X6,X7),X8),s('type.option.option'(X6),'const.option.NONE_0')))),
  file('thm.option.option_CLAUSES|split|17','thm.option.option_CLAUSES|split|17')).
% SZS output end Proof for thm.option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 21
% Passive clauses: 46
% Generated clauses: 144
% Final active clauses: 18
% Final passive clauses: 20
% Input formulas: 26
% Initial clauses: 29
% 
% Duplicate literals: 1
% Trivial inequalities: 3
% Fw subsumption resolutions: 4
% Fw demodulations: 12
% Bw demodulations: 1
% 
% Simple tautologies: 3
% Equational tautologies: 3
% Forward subsumptions: 68
% 
% Binary resolution: 7
% Forward superposition: 42
% Backward superposition: 39
% Self superposition: 7
% Equality factoring: 2
% Equality resolution: 1
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 2
% SAT solver unit clauses: 1
% SAT solver binary clauses: 1
% 
% Sat splits: 1
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 767
% Time elapsed: 0.015 s
% ------------------------------
% ------------------------------
% Success in time 0.017 s
