Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.int_arith
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.int_arith
% SZS output start Proof for thm.int_arith
fof(f578,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f551])).
fof(f551,plain,(
  s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK2),s('type.integer.int',sK1))))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK2),s('type.integer.int',sK1)))))),
  inference(superposition,[],[f37,f316])).
fof(f316,plain,(
  ( ! [X6,X8,X7] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X8),s('type.integer.int',X7))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X8)))) )),
  inference(forward_demodulation,[],[f292,f226])).
fof(f226,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',X3))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X3))),s('type.integer.int',X2)))) )),
  inference(superposition,[],[f48,f47])).
fof(f47,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X13,X11] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X11),s('type.integer.int',X13))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X13),s('type.integer.int',X11)))),
  file('thm.int_arith.int_arith_59_prove_ltb','thm.integer.INT_ADD_SYM')).
fof(f48,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X11,X13] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X11),s('type.integer.int',X13))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X13)))))),
  file('thm.int_arith.int_arith_59_prove_ltb','thm.integer.int_sub')).
fof(f292,plain,(
  ( ! [X6,X8,X7] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X8))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))),s('type.integer.int',X8)))))) )),
  inference(superposition,[],[f50,f48])).
fof(f50,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int',X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X14,X13,X11] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X13),s('type.integer.int',X14))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X11),s('type.integer.int',X13))),s('type.integer.int',X14)))),
  file('thm.int_arith.int_arith_59_prove_ltb','thm.integer.INT_ADD_ASSOC')).
fof(f37,plain,(
  s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK2),s('type.integer.int',sK1)))))),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK2),s('type.integer.int',sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f26])).
fof(f26,plain,(
  ? [X0,X1,X2] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))),
  inference(ennf_transformation,[],[f14])).
fof(f14,plain,(
  ~! [X0,X1,X2] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X8),s('type.integer.int',X7))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X8)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X8),s('type.integer.int',X7))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X8)))),
  file('thm.int_arith.int_arith_59_prove_ltb','thm.int_arith.int_arith_59_prove_ltb')).
% SZS output end Proof for thm.int_arith
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 20
% Passive clauses: 100
% Generated clauses: 489
% Final active clauses: 18
% Final passive clauses: 65
% Input formulas: 12
% Initial clauses: 14
% 
% Duplicate literals: 37
% Trivial inequalities: 4
% Fw demodulations: 35
% 
% Simple tautologies: 18
% Equational tautologies: 15
% Forward subsumptions: 260
% Fw demodulations to eq. taut.: 3
% 
% Binary resolution: 4
% Forward superposition: 199
% Backward superposition: 149
% Self superposition: 59
% Equality factoring: 26
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 2
% SAT solver unit clauses: 1
% SAT solver binary clauses: 1
% 
% Sat splits: 1
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 1279
% Time elapsed: 0.026 s
% ------------------------------
% ------------------------------
% Success in time 0.028 s
