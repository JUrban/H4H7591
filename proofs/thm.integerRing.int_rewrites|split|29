Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.integerRing
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integerRing
% SZS output start Proof for thm.integerRing
fof(f1418,plain,(
  $false),
  inference(subsumption_resolution,[],[f128,f166])).
fof(f166,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X9,X10] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X10))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10)))))),
  file('thm.integerRing.int_rewrites|split|29','thm.numeral.numeral_lte|split|6')).
fof(f128,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f106])).
fof(f106,plain,(
  ? [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f55])).
fof(f55,plain,(
  ~! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))),
  file('thm.integerRing.int_rewrites|split|29','thm.integerRing.int_rewrites|split|29')).
% SZS output end Proof for thm.integerRing
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 59
% Passive clauses: 276
% Generated clauses: 1283
% Final active clauses: 39
% Final passive clauses: 171
% Input formulas: 53
% Initial clauses: 71
% 
% Duplicate literals: 104
% Trivial inequalities: 15
% Fw subsumption resolutions: 38
% Fw demodulations: 125
% Bw demodulations: 13
% 
% Simple tautologies: 43
% Equational tautologies: 19
% Forward subsumptions: 656
% 
% Binary resolution: 3
% Forward superposition: 454
% Backward superposition: 344
% Self superposition: 44
% Equality factoring: 32
% Equality resolution: 3
% 
% Split clauses: 25
% Split components: 52
% SAT solver clauses: 39
% SAT solver unit clauses: 3
% SAT solver binary clauses: 20
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 25
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 36
% TWLsolver calls for satisfiability: 13
% 
% Memory used [KB]: 1407
% Time elapsed: 0.036 s
% ------------------------------
% ------------------------------
% Success in time 0.039 s
