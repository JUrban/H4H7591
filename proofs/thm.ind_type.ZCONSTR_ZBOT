Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.ind_type
% (115610)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 107
% Passive clauses: 3160
% Generated clauses: 16667
% Final active clauses: 101
% Final passive clauses: 2776
% Input formulas: 23
% Initial clauses: 43
% 
% Duplicate literals: 1014
% Trivial inequalities: 205
% Fw subsumption resolutions: 2492
% Fw demodulations: 1036
% Bw demodulations: 2
% 
% Simple tautologies: 330
% Equational tautologies: 86
% Forward subsumptions: 6991
% 
% Binary resolution: 162
% Factoring: 2
% Forward superposition: 6810
% Backward superposition: 4244
% Self superposition: 278
% Equality factoring: 207
% Equality resolution: 29
% 
% Split clauses: 578
% Split components: 1159
% SAT solver clauses: 1528
% SAT solver unit clauses: 5
% SAT solver binary clauses: 167
% 
% Sat splits: 577
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1528
% TWLsolver calls for satisfiability: 235
% 
% Memory used [KB]: 8699
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 294 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.ind_type
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.ind_type
% SZS output start Proof for thm.ind_type
fof(f4454,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4453,f106,f139,f4380,f4427,f109,f141,f4284,f4288,f86,f132,f4102,f4202,f78,f123,f2726,f2765,f111,f142,f112,f145])).
fof(f145,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X1),s(fun('type.num.num',fun(X0,bool)),X3))) != s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',fun(X0,bool)),X4))) | s(fun('type.num.num',fun(X0,bool)),X1) = s(fun('type.num.num',fun(X0,bool)),X2)) ) | $spl22),
  inference(cnf_transformation,[],[f145_D])).
fof(f145_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X1),s(fun('type.num.num',fun(X0,bool)),X3))) != s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',fun(X0,bool)),X4))) | s(fun('type.num.num',fun(X0,bool)),X1) = s(fun('type.num.num',fun(X0,bool)),X2)) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f112,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(fun('type.num.num',fun(X0,bool)),X1) = s(fun('type.num.num',fun(X0,bool)),X2) | s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X1),s(fun('type.num.num',fun(X0,bool)),X3))) != s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',fun(X0,bool)),X4)))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1,X2,X3,X4] : ((s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X1),s(fun('type.num.num',fun(X0,bool)),X3))) != s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',fun(X0,bool)),X4))) | (s(fun('type.num.num',fun(X0,bool)),X1) = s(fun('type.num.num',fun(X0,bool)),X2) & s(fun('type.num.num',fun(X0,bool)),X3) = s(fun('type.num.num',fun(X0,bool)),X4))) & (s(fun('type.num.num',fun(X0,bool)),X1) != s(fun('type.num.num',fun(X0,bool)),X2) | s(fun('type.num.num',fun(X0,bool)),X3) != s(fun('type.num.num',fun(X0,bool)),X4) | s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X1),s(fun('type.num.num',fun(X0,bool)),X3))) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',fun(X0,bool)),X4)))))),
  inference(flattening,[],[f75])).
fof(f75,plain,(
  ! [X0,X1,X2,X3,X4] : ((s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X1),s(fun('type.num.num',fun(X0,bool)),X3))) != s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',fun(X0,bool)),X4))) | (s(fun('type.num.num',fun(X0,bool)),X1) = s(fun('type.num.num',fun(X0,bool)),X2) & s(fun('type.num.num',fun(X0,bool)),X3) = s(fun('type.num.num',fun(X0,bool)),X4))) & ((s(fun('type.num.num',fun(X0,bool)),X1) != s(fun('type.num.num',fun(X0,bool)),X2) | s(fun('type.num.num',fun(X0,bool)),X3) != s(fun('type.num.num',fun(X0,bool)),X4)) | s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X1),s(fun('type.num.num',fun(X0,bool)),X3))) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',fun(X0,bool)),X4)))))),
  inference(nnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2,X3,X4] : (s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X1),s(fun('type.num.num',fun(X0,bool)),X3))) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',fun(X0,bool)),X4))) <=> (s(fun('type.num.num',fun(X0,bool)),X1) = s(fun('type.num.num',fun(X0,bool)),X2) & s(fun('type.num.num',fun(X0,bool)),X3) = s(fun('type.num.num',fun(X0,bool)),X4)))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : (s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X1),s(fun('type.num.num',fun(X0,bool)),X3))) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',fun(X0,bool)),X4))) <=> (s(fun('type.num.num',fun(X0,bool)),X1) = s(fun('type.num.num',fun(X0,bool)),X2) & s(fun('type.num.num',fun(X0,bool)),X3) = s(fun('type.num.num',fun(X0,bool)),X4)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6] : ! [X16,X17,X18,X19] : (s(fun('type.num.num',fun(X6,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X6,bool)),X16),s(fun('type.num.num',fun(X6,bool)),X18))) = s(fun('type.num.num',fun(X6,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X6,bool)),X17),s(fun('type.num.num',fun(X6,bool)),X19))) <=> (s(fun('type.num.num',fun(X6,bool)),X16) = s(fun('type.num.num',fun(X6,bool)),X17) & s(fun('type.num.num',fun(X6,bool)),X18) = s(fun('type.num.num',fun(X6,bool)),X19)))),
  file('thm.ind_type.ZCONSTR_ZBOT','thm.ind_type.INJP_INJ')).
fof(f142,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X1),s(X0,X2),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X3))) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJA_1'(s(X0,X2))),s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJF_1'(s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X3)))))))) ) | $spl16),
  inference(cnf_transformation,[],[f142_D])).
fof(f142_D,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X1),s(X0,X2),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X3))) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJA_1'(s(X0,X2))),s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJF_1'(s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X3)))))))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f111,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X1),s(X0,X2),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X3))) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJA_1'(s(X0,X2))),s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJF_1'(s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X3)))))))) )),
  inference(cnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1,X2,X3] : s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X1),s(X0,X2),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X3))) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJA_1'(s(X0,X2))),s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJF_1'(s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X3)))))))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ! [X0] : ! [X1,X2,X3] : s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X1),s(X0,X2),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X3))) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJA_1'(s(X0,X2))),s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJF_1'(s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X3)))))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6] : ! [X7,X8,X9] : s(fun('type.num.num',fun(X6,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X7),s(X6,X8),s(fun('type.num.num',fun('type.num.num',fun(X6,bool))),X9))) = s(fun('type.num.num',fun(X6,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X6,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))),s(fun('type.num.num',fun(X6,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X6,bool)),'const.ind_type.INJA_1'(s(X6,X8))),s(fun('type.num.num',fun(X6,bool)),'const.ind_type.INJF_1'(s(fun('type.num.num',fun('type.num.num',fun(X6,bool))),X9)))))))),
  file('thm.ind_type.ZCONSTR_ZBOT','thm.ind_type.ZCONSTR')).
fof(f2765,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X4),s(fun('type.num.num',fun(X0,bool)),X5))) != s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X1),s(X0,X2),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X3))) | s(fun('type.num.num',fun(X0,bool)),X4) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) ) | $spl214),
  inference(cnf_transformation,[],[f2765_D])).
fof(f2765_D,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X4),s(fun('type.num.num',fun(X0,bool)),X5))) != s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X1),s(X0,X2),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X3))) | s(fun('type.num.num',fun(X0,bool)),X4) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) ) <=> ~$spl214),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl214])])).
fof(f2726,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),X4),s(fun('type.num.num',fun(X0,bool)),X5))) != s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X1),s(X0,X2),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X3))) | s(fun('type.num.num',fun(X0,bool)),X4) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) ) | ($spl16 | $spl22)),
  inference(superposition,[],[f145,f142])).
fof(f123,plain,(
  s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK1),s(sK0,sK2),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK3))) | $spl0),
  inference(cnf_transformation,[],[f123_D])).
fof(f123_D,plain,(
  s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK1),s(sK0,sK2),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK3))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f78,plain,(
  s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK1),s(sK0,sK2),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK3)))),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',sK1),s(sK0,sK2),s(fun('type.num.num',fun('type.num.num',fun(sK0,bool))),sK3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f53])).
fof(f53,plain,(
  ? [X0,X1,X2,X3] : s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X1),s(X0,X2),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X3)))),
  inference(ennf_transformation,[],[f26])).
fof(f26,plain,(
  ~! [X0,X1,X2,X3] : s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0') != s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X1),s(X0,X2),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X3)))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ~! [X0] : ! [X1,X2,X3] : ~s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X1),s(X0,X2),s(fun('type.num.num',fun('type.num.num',fun(X0,bool))),X3)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : ~s(fun('type.num.num',fun(X6,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(X6,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X7),s(X6,X8),s(fun('type.num.num',fun('type.num.num',fun(X6,bool))),X9)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : ~s(fun('type.num.num',fun(X6,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(X6,bool)),'const.ind_type.ZCONSTR_3'(s('type.num.num',X7),s(X6,X8),s(fun('type.num.num',fun('type.num.num',fun(X6,bool))),X9)))),
  file('thm.ind_type.ZCONSTR_ZBOT','thm.ind_type.ZCONSTR_ZBOT')).
fof(f4202,plain,(
  ( ! [X0,X1] : (s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') != s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(sK0,bool)),X0),s(fun('type.num.num',fun(sK0,bool)),X1))) | s(fun('type.num.num',fun(sK0,bool)),X0) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))) ) | $spl382),
  inference(cnf_transformation,[],[f4202_D])).
fof(f4202_D,plain,(
  ( ! [X0,X1] : (s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') != s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(sK0,bool)),X0),s(fun('type.num.num',fun(sK0,bool)),X1))) | s(fun('type.num.num',fun(sK0,bool)),X0) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))) ) <=> ~$spl382),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl382])])).
fof(f4102,plain,(
  ( ! [X0,X1] : (s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') != s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(sK0,bool)),X0),s(fun('type.num.num',fun(sK0,bool)),X1))) | s(fun('type.num.num',fun(sK0,bool)),X0) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))) ) | ($spl0 | $spl214)),
  inference(superposition,[],[f2765,f123])).
fof(f132,plain,(
  ( ! [X0] : (s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num',fun(X0,bool)),'const.min.@_1'(s(fun(fun('type.num.num',fun(X0,bool)),bool),'_dst_x0_1'(s(bool,'T_0')))))))) ) | $spl6),
  inference(cnf_transformation,[],[f132_D])).
fof(f132_D,plain,(
  ( ! [X0] : (s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num',fun(X0,bool)),'const.min.@_1'(s(fun(fun('type.num.num',fun(X0,bool)),bool),'_dst_x0_1'(s(bool,'T_0')))))))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f86,plain,(
  ( ! [X0] : (s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num',fun(X0,bool)),'const.min.@_1'(s(fun(fun('type.num.num',fun(X0,bool)),bool),'_dst_x0_1'(s(bool,'T_0')))))))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0] : s(fun('type.num.num',fun(X0,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num',fun(X0,bool)),'const.min.@_1'(s(fun(fun('type.num.num',fun(X0,bool)),bool),'_dst_x0_1'(s(bool,'T_0')))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : s(fun('type.num.num',fun(X6,bool)),'const.ind_type.ZBOT_0') = s(fun('type.num.num',fun(X6,bool)),'const.ind_type.INJP_2'(s(fun('type.num.num',fun(X6,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num',fun(X6,bool)),'const.min.@_1'(s(fun(fun('type.num.num',fun(X6,bool)),bool),'_dst_x0_1'(s(bool,'T_0')))))))),
  file('thm.ind_type.ZCONSTR_ZBOT','thm.ind_type.ZBOT')).
fof(f4288,plain,(
  s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.|48|_0'))) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) | $spl412),
  inference(cnf_transformation,[],[f4288_D])).
fof(f4288_D,plain,(
  s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.|48|_0'))) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) <=> ~$spl412),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl412])])).
fof(f4284,plain,(
  s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.|48|_0'))) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) | ($spl6 | $spl382)),
  inference(trivial_inequality_removal,[],[f4282])).
fof(f4282,plain,(
  s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') != s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.ZBOT_0') | s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.|48|_0'))) = s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) | ($spl6 | $spl382)),
  inference(superposition,[],[f4202,f132])).
fof(f141,plain,(
  ( ! [X2,X0,X1] : (s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num',X1))) != s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num',X2))) | s('type.num.num',X1) = s('type.num.num',X2)) ) | $spl14),
  inference(cnf_transformation,[],[f141_D])).
fof(f141_D,plain,(
  ( ! [X2,X0,X1] : (s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num',X1))) != s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num',X2))) | s('type.num.num',X1) = s('type.num.num',X2)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f109,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X1) = s('type.num.num',X2) | s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num',X1))) != s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0,X1,X2] : ((s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num',X1))) != s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num',X2))) | s('type.num.num',X1) = s('type.num.num',X2)) & (s('type.num.num',X1) != s('type.num.num',X2) | s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num',X1))) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num',X2)))))),
  inference(nnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0,X1,X2] : (s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num',X1))) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num',X2))) <=> s('type.num.num',X1) = s('type.num.num',X2))),
  inference(flattening,[],[f42])).
fof(f42,plain,(
  ! [X0] : ! [X1,X2] : (s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num',X1))) = s(fun('type.num.num',fun(X0,bool)),'const.ind_type.INJN_1'(s('type.num.num',X2))) <=> s('type.num.num',X1) = s('type.num.num',X2))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : ! [X14,X15] : (s(fun('type.num.num',fun(X6,bool)),'const.ind_type.INJN_1'(s('type.num.num',X14))) = s(fun('type.num.num',fun(X6,bool)),'const.ind_type.INJN_1'(s('type.num.num',X15))) <=> s('type.num.num',X14) = s('type.num.num',X15))),
  file('thm.ind_type.ZCONSTR_ZBOT','thm.ind_type.INJN_INJ')).
fof(f4427,plain,(
  ( ! [X8] : (s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.|48|_0'))) != s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.INJN_1'(s('type.num.num',X8))) | s('type.num.num',X8) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))) ) | $spl466),
  inference(cnf_transformation,[],[f4427_D])).
fof(f4427_D,plain,(
  ( ! [X8] : (s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.|48|_0'))) != s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.INJN_1'(s('type.num.num',X8))) | s('type.num.num',X8) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))) ) <=> ~$spl466),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl466])])).
fof(f4380,plain,(
  ( ! [X8] : (s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.INJN_1'(s('type.num.num','const.num.|48|_0'))) != s(fun('type.num.num',fun(sK0,bool)),'const.ind_type.INJN_1'(s('type.num.num',X8))) | s('type.num.num',X8) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))) ) | ($spl14 | $spl412)),
  inference(superposition,[],[f141,f4288])).
fof(f139,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) ) | $spl10),
  inference(cnf_transformation,[],[f139_D])).
fof(f139_D,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f106,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ! [X0] : ~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X20] : ~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X20)))),
  file('thm.ind_type.ZCONSTR_ZBOT','thm.num.NOT_SUC')).
fof(f4453,plain,(
  $false | ($spl10 | $spl466)),
  inference(subsumption_resolution,[],[f4452,f139])).
fof(f4452,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))) | $spl466),
  inference(equality_resolution,[],[f4427])).
% SZS output end Proof for thm.ind_type
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 70
% Passive clauses: 223
% Generated clauses: 4241
% Final active clauses: 59
% Final passive clauses: 150
% Input formulas: 23
% Initial clauses: 43
% 
% Duplicate literals: 439
% Trivial inequalities: 60
% Fw subsumption resolutions: 285
% Fw demodulations: 143
% Bw demodulations: 4
% Condensations: 774
% Global subsumptions: 9
% 
% Simple tautologies: 109
% Equational tautologies: 44
% Forward subsumptions: 1772
% 
% Binary resolution: 36
% Factoring: 1
% Forward superposition: 1130
% Backward superposition: 873
% Self superposition: 105
% Equality factoring: 96
% Equality resolution: 17
% 
% Split clauses: 38
% Split components: 91
% SAT solver clauses: 460
% SAT solver unit clauses: 62
% SAT solver binary clauses: 37
% SAT solver learnt clauses: 20
% SAT solver learnt literals: 1
% 
% Sat splits: 38
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 422
% TWLsolver calls for satisfiability: 185
% 
% Memory used [KB]: 4221
% Time elapsed: 0.250 s
% ------------------------------
% ------------------------------
% Success in time 0.851 s
