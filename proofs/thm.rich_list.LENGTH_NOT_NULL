Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f1566,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1551,f254,f398,f396,f1522,f1179,f393,f404,f253,f397,f395,f1550,f1546,f257,f400])).
fof(f400,plain,(
  ~p(s(bool,'F_0')) | $spl5),
  inference(cnf_transformation,[],[f400_D])).
fof(f400_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f257,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.rich_list.LENGTH_NOT_NULL',aHL_FALSITY)).
fof(f1546,plain,(
  $false | ($spl3 | $spl5 | $spl22)),
  inference(subsumption_resolution,[],[f1545,f400])).
fof(f1545,plain,(
  p(s(bool,'F_0')) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f1543,f424])).
fof(f424,plain,(
  s(bool,'F_0') = s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1))) | $spl3),
  inference(resolution,[],[f271,f397])).
fof(f271,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f211])).
fof(f211,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f83])).
fof(f83,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X16] : (s(bool,'F_0') = s(bool,X16) <=> ~p(s(bool,X16)))),
  file('thm.rich_list.LENGTH_NOT_NULL','thm.bool.EQ_CLAUSES|split|3')).
fof(f1543,plain,(
  p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))) | $spl22),
  inference(trivial_inequality_removal,[],[f1530])).
fof(f1530,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))) | $spl22),
  inference(superposition,[],[f317,f1179])).
fof(f317,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1))))) )),
  inference(cnf_transformation,[],[f237])).
fof(f237,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) & (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1))))))),
  inference(nnf_transformation,[],[f117])).
fof(f117,plain,(
  ! [X0,X1] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))),
  inference(flattening,[],[f116])).
fof(f116,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X6),X7)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))))),
  file('thm.rich_list.LENGTH_NOT_NULL','thm.list.NULL_LENGTH')).
fof(f1550,plain,(
  $false | ($spl0 | $spl5 | $spl22)),
  inference(subsumption_resolution,[],[f1549,f400])).
fof(f1549,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl22)),
  inference(forward_demodulation,[],[f1548,f423])).
fof(f423,plain,(
  ( ! [X2] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) )),
  inference(resolution,[],[f271,f305])).
fof(f305,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),
  inference(flattening,[],[f100])).
fof(f100,plain,(
  ! [X0] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X14] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X14),s('type.num.num','const.num.|48|_0'))))),
  file('thm.rich_list.LENGTH_NOT_NULL','thm.prim_rec.NOT_LESS_|48|')).
fof(f1548,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) | ($spl0 | $spl22)),
  inference(forward_demodulation,[],[f395,f1179])).
fof(f395,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) | $spl0),
  inference(cnf_transformation,[],[f395_D])).
fof(f395_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f397,plain,(
  ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))) | $spl3),
  inference(cnf_transformation,[],[f397_D])).
fof(f397_D,plain,(
  ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f253,plain,(
  ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))))))),
  inference(cnf_transformation,[],[f207])).
fof(f207,plain,(
  (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) | ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) | p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f206])).
fof(f206,plain,(
  ? [X0,X1] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1))))))),
  inference(nnf_transformation,[],[f178])).
fof(f178,plain,(
  ? [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <~> ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) <=> ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(X6),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) <=> ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(X6),X7)))))),
  file('thm.rich_list.LENGTH_NOT_NULL','thm.rich_list.LENGTH_NOT_NULL')).
fof(f404,plain,(
  p(s(bool,'T_0')) | $spl10),
  inference(cnf_transformation,[],[f404_D])).
fof(f404_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f393,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f312])).
fof(f312,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f235])).
fof(f235,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f112])).
fof(f112,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : ! [X13] : (s(X6,X13) = s(X6,X13) <=> p(s(bool,'T_0')))),
  file('thm.rich_list.LENGTH_NOT_NULL','thm.bool.REFL_CLAUSE')).
fof(f1179,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | $spl22),
  inference(cnf_transformation,[],[f1179_D])).
fof(f1179_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f1522,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | ($spl1 | $spl10)),
  inference(subsumption_resolution,[],[f1490,f416])).
fof(f416,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl10),
  inference(resolution,[],[f270,f404])).
fof(f270,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f211])).
fof(f1490,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | $spl1),
  inference(superposition,[],[f694,f440])).
fof(f440,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))))) | $spl1),
  inference(resolution,[],[f396,f271])).
fof(f694,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(superposition,[],[f432,f264])).
fof(f264,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f208])).
fof(f208,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK2])],[f79])).
fof(f79,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ? [X1] : s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),
  inference(rectify,[],[f69])).
fof(f69,axiom,(
  ! [X27] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X27) | ? [X14] : s('type.num.num',X27) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))))),
  file('thm.rich_list.LENGTH_NOT_NULL','thm.arithmetic.num_CASES')).
fof(f432,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(resolution,[],[f260,f267])).
fof(f267,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f209])).
fof(f209,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X16] : (s(bool,'T_0') = s(bool,X16) <=> p(s(bool,X16)))),
  file('thm.rich_list.LENGTH_NOT_NULL','thm.bool.EQ_CLAUSES|split|0')).
fof(f260,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X14] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))))))),
  file('thm.rich_list.LENGTH_NOT_NULL','thm.prim_rec.LESS_|48|')).
fof(f396,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) | $spl1),
  inference(cnf_transformation,[],[f396_D])).
fof(f396_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f398,plain,(
  p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))) | $spl2),
  inference(cnf_transformation,[],[f398_D])).
fof(f398_D,plain,(
  p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f254,plain,(
  p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))))))),
  inference(cnf_transformation,[],[f207])).
fof(f1551,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | $spl2),
  inference(resolution,[],[f398,f316])).
fof(f316,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f237])).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 54
% Passive clauses: 243
% Generated clauses: 1294
% Final active clauses: 42
% Final passive clauses: 135
% Input formulas: 69
% Initial clauses: 139
% 
% Duplicate literals: 13
% Trivial inequalities: 21
% Fw subsumption resolutions: 102
% Fw demodulations: 159
% Bw demodulations: 6
% 
% Simple tautologies: 67
% Equational tautologies: 8
% Forward subsumptions: 656
% 
% Binary resolution: 74
% Factoring: 1
% Forward superposition: 330
% Backward superposition: 402
% Self superposition: 21
% Equality factoring: 6
% Equality resolution: 5
% 
% Split clauses: 26
% Split components: 54
% SAT solver clauses: 45
% SAT solver unit clauses: 5
% SAT solver binary clauses: 25
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 26
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 39
% TWLsolver calls for satisfiability: 9
% 
% Memory used [KB]: 1407
% Time elapsed: 0.034 s
% ------------------------------
% ------------------------------
% Success in time 0.031 s
