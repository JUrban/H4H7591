Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.frac
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.frac
% SZS output start Proof for thm.frac
fof(f249,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f246])).
fof(f246,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK0))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK0)))),
  inference(superposition,[],[f26,f240])).
fof(f240,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',sK1)))))))) )),
  inference(superposition,[],[f30,f235])).
fof(f235,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',sK1)))))))) )),
  inference(subsumption_resolution,[],[f228,f27])).
fof(f27,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.frac.FRAC_SGN_CALCULATE',aHL_TRUTH)).
fof(f228,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',sK1)))))))) )),
  inference(superposition,[],[f34,f44])).
fof(f44,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK1)))),
  inference(subsumption_resolution,[],[f41,f29])).
fof(f29,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f12])).
fof(f12,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.frac.FRAC_SGN_CALCULATE',aHL_FALSITY)).
fof(f41,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK1)))),
  inference(superposition,[],[f25,f31])).
fof(f31,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.frac.FRAC_SGN_CALCULATE',aHL_BOOL_CASES)).
fof(f25,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK1))))),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK1)))) & s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK0))) != s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f19])).
fof(f19,plain,(
  ? [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) & s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) != s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(ennf_transformation,[],[f11])).
fof(f11,plain,(
  ~! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X7)))) => s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X6),s('type.integer.int',X7))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X7)))) => s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X6),s('type.integer.int',X7))))))))),
  file('thm.frac.FRAC_SGN_CALCULATE','thm.frac.FRAC_SGN_CALCULATE')).
fof(f34,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))) )),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(ennf_transformation,[],[f16])).
fof(f16,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X11,X12] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X12)))) => s('type.integer.int',X11) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int',X12))))))))),
  file('thm.frac.FRAC_SGN_CALCULATE','thm.frac.NMR')).
fof(f30,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))))) )),
  inference(cnf_transformation,[],[f13])).
fof(f13,plain,(
  ! [X0] : s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X10] : s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X10))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X10)))))),
  file('thm.frac.FRAC_SGN_CALCULATE','thm.frac.frac_sgn_def')).
fof(f26,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK0))) != s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))))),
  inference(cnf_transformation,[],[f22])).
% SZS output end Proof for thm.frac
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 17
% Passive clauses: 43
% Generated clauses: 210
% Final active clauses: 14
% Final passive clauses: 17
% Input formulas: 9
% Initial clauses: 11
% 
% Duplicate literals: 41
% Trivial inequalities: 4
% Fw subsumption resolutions: 6
% Fw demodulations: 2
% Bw demodulations: 2
% 
% Simple tautologies: 16
% Equational tautologies: 15
% Forward subsumptions: 83
% 
% Binary resolution: 5
% Forward superposition: 47
% Backward superposition: 40
% Self superposition: 26
% Equality factoring: 26
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 2
% SAT solver unit clauses: 1
% SAT solver binary clauses: 1
% 
% Sat splits: 1
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 767
% Time elapsed: 0.016 s
% ------------------------------
% ------------------------------
% Success in time 0.018 s
