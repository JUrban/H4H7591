Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.real
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.real
% SZS output start Proof for thm.real
fof(f241,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f239,f27,f42,f40,f70,f26,f41,f39])).
fof(f39,plain,(
  s('type.realax.real',sK0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))) | $spl0),
  inference(cnf_transformation,[],[f39_D])).
fof(f39_D,plain,(
  s('type.realax.real',sK0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f41,plain,(
  s('type.realax.real',sK1) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK2))) | $spl2),
  inference(cnf_transformation,[],[f41_D])).
fof(f41_D,plain,(
  s('type.realax.real',sK1) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK2))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f26,plain,(
  s('type.realax.real',sK1) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK2))) | s('type.realax.real',sK0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',sK1),s('type.realax.real',sK2)))),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  (s('type.realax.real',sK0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))) | s('type.realax.real',sK1) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK2)))) & (s('type.realax.real',sK0) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))) | s('type.realax.real',sK1) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f21])).
fof(f21,plain,(
  ? [X0,X1,X2] : ((s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X1),s('type.realax.real',X2))) | s('type.realax.real',X1) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2)))) & (s('type.realax.real',X0) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X1),s('type.realax.real',X2))) | s('type.realax.real',X1) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2)))))),
  inference(nnf_transformation,[],[f19])).
fof(f19,plain,(
  ? [X0,X1,X2] : (s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X1),s('type.realax.real',X2))) <~> s('type.realax.real',X1) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2))))),
  inference(ennf_transformation,[],[f11])).
fof(f11,plain,(
  ~! [X0,X1,X2] : (s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X1),s('type.realax.real',X2))) <=> s('type.realax.real',X1) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (s('type.realax.real',X6) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X7),s('type.realax.real',X8))) <=> s('type.realax.real',X7) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real',X8))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (s('type.realax.real',X6) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X7),s('type.realax.real',X8))) <=> s('type.realax.real',X7) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real',X8))))),
  file('thm.real.REAL_EQ_SUB_LADD','thm.real.REAL_EQ_SUB_LADD')).
fof(f70,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f67,f42])).
fof(f67,plain,(
  s('type.realax.real',sK1) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK2))) | $spl0),
  inference(superposition,[],[f34,f39])).
fof(f34,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X0) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.realax.real',X1)))) )),
  inference(cnf_transformation,[],[f15])).
fof(f15,plain,(
  ! [X0,X1] : s('type.realax.real',X0) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.realax.real',X1)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6,X7] : s('type.realax.real',X6) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X6),s('type.realax.real',X7))),s('type.realax.real',X7)))),
  file('thm.real.REAL_EQ_SUB_LADD','thm.real.REAL_SUB_ADD')).
fof(f40,plain,(
  s('type.realax.real',sK0) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))) | $spl1),
  inference(cnf_transformation,[],[f40_D])).
fof(f40_D,plain,(
  s('type.realax.real',sK0) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f42,plain,(
  s('type.realax.real',sK1) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK2))) | $spl3),
  inference(cnf_transformation,[],[f42_D])).
fof(f42_D,plain,(
  s('type.realax.real',sK1) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK2))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f27,plain,(
  s('type.realax.real',sK1) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK2))) | s('type.realax.real',sK0) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',sK1),s('type.realax.real',sK2)))),
  inference(cnf_transformation,[],[f22])).
fof(f239,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f238,f40])).
fof(f238,plain,(
  s('type.realax.real',sK0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))) | $spl2),
  inference(forward_demodulation,[],[f236,f41])).
fof(f236,plain,(
  s('type.realax.real',sK0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK2))),s('type.realax.real',sK2))) | $spl2),
  inference(trivial_inequality_removal,[],[f234])).
fof(f234,plain,(
  s('type.realax.real',sK1) != s('type.realax.real',sK1) | s('type.realax.real',sK0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real',sK2))),s('type.realax.real',sK2))) | $spl2),
  inference(superposition,[],[f230,f41])).
fof(f230,plain,(
  ( ! [X0] : (s('type.realax.real',sK1) != s('type.realax.real',X0) | s('type.realax.real',sK0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X0),s('type.realax.real',sK2)))) ) | $spl2),
  inference(superposition,[],[f218,f34])).
fof(f218,plain,(
  ( ! [X3] : (s('type.realax.real',sK1) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X3),s('type.realax.real',sK2))) | s('type.realax.real',sK0) = s('type.realax.real',X3)) ) | $spl2),
  inference(superposition,[],[f36,f41])).
fof(f36,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X1),s('type.realax.real',X2))) | s('type.realax.real',X0) = s('type.realax.real',X1)) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2] : ((s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X1),s('type.realax.real',X2))) | s('type.realax.real',X0) = s('type.realax.real',X1)) & (s('type.realax.real',X0) != s('type.realax.real',X1) | s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X1),s('type.realax.real',X2)))))),
  inference(nnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0,X1,X2] : (s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X1),s('type.realax.real',X2))) <=> s('type.realax.real',X0) = s('type.realax.real',X1))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6,X7,X8] : (s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real',X8))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X7),s('type.realax.real',X8))) <=> s('type.realax.real',X6) = s('type.realax.real',X7))),
  file('thm.real.REAL_EQ_SUB_LADD','thm.real.REAL_EQ_RADD')).
% SZS output end Proof for thm.real
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 17
% Passive clauses: 35
% Generated clauses: 201
% Final active clauses: 13
% Final passive clauses: 11
% Input formulas: 9
% Initial clauses: 12
% 
% Duplicate literals: 37
% Trivial inequalities: 4
% Fw subsumption resolutions: 3
% Fw demodulations: 5
% 
% Simple tautologies: 16
% Equational tautologies: 16
% Forward subsumptions: 82
% 
% Binary resolution: 4
% Forward superposition: 44
% Backward superposition: 32
% Self superposition: 26
% Equality factoring: 26
% Equality resolution: 2
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 9
% SAT solver unit clauses: 2
% SAT solver binary clauses: 6
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 3
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 6
% TWLsolver calls for satisfiability: 4
% 
% Memory used [KB]: 639
% Time elapsed: 0.015 s
% ------------------------------
% ------------------------------
% Success in time 0.017 s
