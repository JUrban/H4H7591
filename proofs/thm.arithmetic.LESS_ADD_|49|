Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.arithmetic
% (56903)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1319
% Passive clauses: 13974
% Generated clauses: 50566
% Final active clauses: 1279
% Final passive clauses: 12046
% Input formulas: 261
% Initial clauses: 473
% 
% Duplicate literals: 287
% Trivial inequalities: 77
% Fw subsumption resolutions: 3543
% Fw demodulations: 6720
% Bw demodulations: 34
% 
% Simple tautologies: 276
% Equational tautologies: 31
% Forward subsumptions: 25987
% Fw demodulations to eq. taut.: 17
% 
% Binary resolution: 11406
% Factoring: 1152
% Forward superposition: 14072
% Backward superposition: 12889
% Self superposition: 63
% Equality factoring: 2
% Equality resolution: 12
% 
% Split clauses: 108
% Split components: 218
% SAT solver clauses: 131
% SAT solver unit clauses: 6
% SAT solver binary clauses: 69
% 
% Sat splits: 108
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 131
% TWLsolver calls for satisfiability: 73
% 
% Memory used [KB]: 29551
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f23380,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f23277,f1878,f1925,f922,f1421,f949,f1460,f5552,f5554,f920,f1419,f1175,f1618,f2047,f2053,f918,f1417,f989,f1487,f21385,f21396,f20385,f20387,f1799,f1802,f1155,f1600,f1188,f1630,f20603,f20605,f6356,f6417,f1881,f1929,f976,f1483,f1987,f1988,f1836,f1848,f940,f1451,f967,f1475,f1971,f1972,f919,f1415])).
fof(f1415,plain,(
  ( ! [X2] : (s('type.num.num',sK8) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK9),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl0),
  inference(cnf_transformation,[],[f1415_D])).
fof(f1415_D,plain,(
  ( ! [X2] : (s('type.num.num',sK8) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK9),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f919,plain,(
  ( ! [X2] : (s('type.num.num',sK8) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK9),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f730])).
fof(f730,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK9),s('type.num.num',sK8)))) & ! [X2] : s('type.num.num',sK8) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK9),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8,sK9])],[f610])).
fof(f610,plain,(
  ? [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) & ! [X2] : s('type.num.num',X0) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(ennf_transformation,[],[f263])).
fof(f263,plain,(
  ~! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) => ? [X2] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6)))) => ? [X8] : s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6)))) => ? [X8] : s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  file('thm.arithmetic.LESS_ADD_|49|','thm.arithmetic.LESS_ADD_|49|')).
fof(f1972,plain,(
  ( ! [X2] : (s('type.num.num',sK8) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK9),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl810),
  inference(cnf_transformation,[],[f1972_D])).
fof(f1972_D,plain,(
  ( ! [X2] : (s('type.num.num',sK8) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK9),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl810),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl810])])).
fof(f1971,plain,(
  ( ! [X2] : (s('type.num.num',sK8) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK9),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl0 | $spl34)),
  inference(forward_demodulation,[],[f1415,f1451])).
fof(f1475,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl82),
  inference(cnf_transformation,[],[f1475_D])).
fof(f1475_D,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f967,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f296])).
fof(f296,plain,(
  ! [X0] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.arithmetic.LESS_ADD_|49|','thm.arithmetic.ADD|49|')).
fof(f1451,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl34),
  inference(cnf_transformation,[],[f1451_D])).
fof(f1451_D,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f940,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f269])).
fof(f269,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X10] : s('type.num.num',X10) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))),
  file('thm.arithmetic.LESS_ADD_|49|','thm.arithmetic.NUMERAL_DEF')).
fof(f1848,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl700),
  inference(cnf_transformation,[],[f1848_D])).
fof(f1848_D,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl700),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl700])])).
fof(f1836,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl34 | $spl82)),
  inference(backward_demodulation,[],[f1451,f1475])).
fof(f1988,plain,(
  ( ! [X2] : (s('type.num.num',sK8) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) ) | $spl824),
  inference(cnf_transformation,[],[f1988_D])).
fof(f1988_D,plain,(
  ( ! [X2] : (s('type.num.num',sK8) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) ) <=> ~$spl824),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl824])])).
fof(f1987,plain,(
  ( ! [X2] : (s('type.num.num',sK8) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) ) | ($spl700 | $spl810)),
  inference(backward_demodulation,[],[f1848,f1972])).
fof(f1483,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK10(X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl98),
  inference(cnf_transformation,[],[f1483_D])).
fof(f1483_D,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK10(X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f976,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK10(X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f733])).
fof(f733,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK10(X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10])],[f305])).
fof(f305,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ? [X1] : s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X6] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X6) | ? [X7] : s('type.num.num',X6) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))),
  file('thm.arithmetic.LESS_ADD_|49|','thm.arithmetic.num_CASES')).
fof(f1929,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK10(X0)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) ) | $spl740),
  inference(cnf_transformation,[],[f1929_D])).
fof(f1929_D,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK10(X0)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) ) <=> ~$spl740),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl740])])).
fof(f1881,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK10(X0))))) ) | ($spl6 | $spl98)),
  inference(backward_demodulation,[],[f1421,f1483])).
fof(f6417,plain,(
  ( ! [X4] : (s('type.num.num',sK8) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK9),s('type.num.num',X4))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X4)) ) | $spl1736),
  inference(cnf_transformation,[],[f6417_D])).
fof(f6417_D,plain,(
  ( ! [X4] : (s('type.num.num',sK8) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK9),s('type.num.num',X4))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X4)) ) <=> ~$spl1736),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1736])])).
fof(f6356,plain,(
  ( ! [X4] : (s('type.num.num',sK8) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK9),s('type.num.num',X4))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X4)) ) | ($spl740 | $spl824)),
  inference(superposition,[],[f1988,f1929])).
fof(f20605,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK41(sK9,sK8)) | $spl5056),
  inference(cnf_transformation,[],[f20605_D])).
fof(f20605_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK41(sK9,sK8)) <=> ~$spl5056),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5056])])).
fof(f20603,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK41(sK9,sK8)) | ($spl1736 | $spl5054)),
  inference(trivial_inequality_removal,[],[f20388])).
fof(f20388,plain,(
  s('type.num.num',sK8) != s('type.num.num',sK8) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK41(sK9,sK8)) | ($spl1736 | $spl5054)),
  inference(superposition,[],[f6417,f20387])).
fof(f1630,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK41(X1,X0)),s('type.num.num',X1))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | $spl366),
  inference(cnf_transformation,[],[f1630_D])).
fof(f1630_D,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK41(X1,X0)),s('type.num.num',X1))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) <=> ~$spl366),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl366])])).
fof(f1188,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK41(X1,X0)),s('type.num.num',X1))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f837])).
fof(f837,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK41(X1,X0)),s('type.num.num',X1))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK41])],[f656])).
fof(f656,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ? [X2] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))))),
  inference(ennf_transformation,[],[f487])).
fof(f487,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) => ? [X2] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))))),
  inference(rectify,[],[f81])).
fof(f81,axiom,(
  ! [X6,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6)))) => ? [X8] : s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X7))))),
  file('thm.arithmetic.LESS_ADD_|49|','thm.arithmetic.LESS_ADD')).
fof(f1600,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) ) | $spl306),
  inference(cnf_transformation,[],[f1600_D])).
fof(f1600_D,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) ) <=> ~$spl306),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl306])])).
fof(f1155,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f452])).
fof(f452,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))),
  file('thm.arithmetic.LESS_ADD_|49|','thm.arithmetic.ADD_SYM')).
fof(f1802,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',sK41(X1,X0))))) ) | $spl666),
  inference(cnf_transformation,[],[f1802_D])).
fof(f1802_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',sK41(X1,X0))))) ) <=> ~$spl666),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl666])])).
fof(f1799,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',sK41(X1,X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | ($spl306 | $spl366)),
  inference(backward_demodulation,[],[f1600,f1630])).
fof(f20387,plain,(
  s('type.num.num',sK8) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK9),s('type.num.num',sK41(sK9,sK8)))) | $spl5054),
  inference(cnf_transformation,[],[f20387_D])).
fof(f20387_D,plain,(
  s('type.num.num',sK8) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK9),s('type.num.num',sK41(sK9,sK8)))) <=> ~$spl5054),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5054])])).
fof(f20385,plain,(
  s('type.num.num',sK8) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK9),s('type.num.num',sK41(sK9,sK8)))) | ($spl4 | $spl666 | $spl836)),
  inference(subsumption_resolution,[],[f20177,f1419])).
fof(f20177,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num',sK8) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK9),s('type.num.num',sK41(sK9,sK8)))) | ($spl666 | $spl836)),
  inference(superposition,[],[f1802,f2053])).
fof(f21396,plain,(
  s('type.num.num',sK8) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK9),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl5566),
  inference(cnf_transformation,[],[f21396_D])).
fof(f21396_D,plain,(
  s('type.num.num',sK8) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK9),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl5566),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5566])])).
fof(f21385,plain,(
  s('type.num.num',sK8) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK9),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl5054 | $spl5056)),
  inference(backward_demodulation,[],[f20605,f20387])).
fof(f1487,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl104),
  inference(cnf_transformation,[],[f1487_D])).
fof(f1487_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f989,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f736])).
fof(f736,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f316])).
fof(f316,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X16] : (s(bool,'T_0') = s(bool,X16) <=> p(s(bool,X16)))),
  file('thm.arithmetic.LESS_ADD_|49|','thm.bool.EQ_CLAUSES|split|1')).
fof(f1417,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK9),s('type.num.num',sK8)))) | $spl2),
  inference(cnf_transformation,[],[f1417_D])).
fof(f1417_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK9),s('type.num.num',sK8)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f918,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK9),s('type.num.num',sK8))))),
  inference(cnf_transformation,[],[f730])).
fof(f2053,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK9),s('type.num.num',sK8))) | $spl836),
  inference(cnf_transformation,[],[f2053_D])).
fof(f2053_D,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK9),s('type.num.num',sK8))) <=> ~$spl836),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl836])])).
fof(f2047,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK9),s('type.num.num',sK8))) | ($spl2 | $spl104)),
  inference(resolution,[],[f1487,f1417])).
fof(f1618,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) != s('type.num.num',X1)) ) | $spl342),
  inference(cnf_transformation,[],[f1618_D])).
fof(f1618_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) != s('type.num.num',X1)) ) <=> ~$spl342),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl342])])).
fof(f1175,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f644])).
fof(f644,plain,(
  ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f473])).
fof(f473,plain,(
  ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) => ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(flattening,[],[f472])).
fof(f472,plain,(
  ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) => ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(rectify,[],[f119])).
fof(f119,axiom,(
  ! [X6,X7] : (s('type.num.num',X6) = s('type.num.num',X7) => ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7)))))),
  file('thm.arithmetic.LESS_ADD_|49|','thm.prim_rec.NOT_LESS_EQ')).
fof(f1419,plain,(
  p(s(bool,'T_0')) | $spl4),
  inference(cnf_transformation,[],[f1419_D])).
fof(f1419_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f920,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.arithmetic.LESS_ADD_|49|',aHL_TRUTH)).
fof(f5554,plain,(
  s('type.num.num',sK8) != s('type.num.num',sK9) | $spl1565),
  inference(cnf_transformation,[],[f5554_D])).
fof(f5554_D,plain,(
  s('type.num.num',sK8) != s('type.num.num',sK9) <=> ~$spl1565),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1565])])).
fof(f5552,plain,(
  s('type.num.num',sK8) != s('type.num.num',sK9) | ($spl4 | $spl342 | $spl836)),
  inference(subsumption_resolution,[],[f5494,f1419])).
fof(f5494,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num',sK8) != s('type.num.num',sK9) | ($spl342 | $spl836)),
  inference(superposition,[],[f1618,f2053])).
fof(f1460,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl52),
  inference(cnf_transformation,[],[f1460_D])).
fof(f1460_D,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f949,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f278])).
fof(f278,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))),
  file('thm.arithmetic.LESS_ADD_|49|','thm.arithmetic.ADD_|48|')).
fof(f1421,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0') | $spl6),
  inference(cnf_transformation,[],[f1421_D])).
fof(f1421_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0') <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f922,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  inference(cnf_transformation,[],[f21])).
fof(f21,axiom,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  file('thm.arithmetic.LESS_ADD_|49|','thm.arithmetic.ALT_ZERO')).
fof(f1925,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl734),
  inference(cnf_transformation,[],[f1925_D])).
fof(f1925_D,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl734),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl734])])).
fof(f1878,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl6 | $spl52)),
  inference(backward_demodulation,[],[f1421,f1460])).
fof(f23277,plain,(
  $false | ($spl734 | $spl1565 | $spl5566)),
  inference(subsumption_resolution,[],[f23124,f5554])).
fof(f23124,plain,(
  s('type.num.num',sK8) = s('type.num.num',sK9) | ($spl734 | $spl5566)),
  inference(superposition,[],[f21396,f1925])).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 438
% Passive clauses: 3241
% Generated clauses: 22470
% Final active clauses: 318
% Final passive clauses: 2256
% Input formulas: 261
% Initial clauses: 473
% 
% Duplicate literals: 78
% Trivial inequalities: 39
% Fw subsumption resolutions: 543
% Fw demodulations: 4460
% Bw demodulations: 664
% Condensations: 80
% Global subsumptions: 18
% 
% Simple tautologies: 181
% Equational tautologies: 12
% Forward subsumptions: 9952
% Fw demodulations to eq. taut.: 14
% 
% Binary resolution: 1493
% Factoring: 125
% Forward superposition: 7156
% Backward superposition: 3967
% Self superposition: 52
% Equality factoring: 2
% Equality resolution: 7
% 
% Split clauses: 70
% Split components: 140
% SAT solver clauses: 4230
% SAT solver unit clauses: 584
% SAT solver binary clauses: 155
% SAT solver learnt clauses: 37
% SAT solver learnt literals: 2
% 
% Sat splits: 70
% Sat splitting refutations: 16
% 
% TWLsolver clauses: 4156
% TWLsolver calls for satisfiability: 2945
% 
% Memory used [KB]: 21620
% Time elapsed: 0.634 s
% ------------------------------
% ------------------------------
% Success in time 1.26 s
