Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.list
% (117835)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 629
% Passive clauses: 8182
% Generated clauses: 18387
% Final active clauses: 598
% Final passive clauses: 7034
% Input formulas: 47
% Initial clauses: 203
% 
% Duplicate literals: 379
% Trivial inequalities: 110
% Fw subsumption resolutions: 1754
% Fw demodulations: 332
% Bw demodulations: 28
% 
% Simple tautologies: 245
% Equational tautologies: 59
% Forward subsumptions: 6707
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 9207
% Factoring: 1136
% Forward superposition: 2544
% Backward superposition: 2368
% Self superposition: 32
% Equality factoring: 28
% Equality resolution: 29
% 
% Split clauses: 620
% Split components: 1254
% SAT solver clauses: 987
% SAT solver unit clauses: 29
% SAT solver binary clauses: 199
% 
% Sat splits: 620
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 981
% TWLsolver calls for satisfiability: 368
% 
% Memory used [KB]: 10618
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f2507,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2506,f259,f485,f608,f610,f257,f483,f275,f494,f2463,f2465,f2327,f2368,f258,f481,f343,f522])).
fof(f522,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))) ) | $spl48),
  inference(cnf_transformation,[],[f522_D])).
fof(f522_D,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f343,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))) )),
  inference(cnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))),
  inference(flattening,[],[f101])).
fof(f101,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X7,X6] : ! [X8,X9] : s(X6,X8) = s(X6,'const.pair.FST_1'(s('type.pair.prod'(X6,X7),'const.pair.,_2'(s(X6,X8),s(X7,X9)))))),
  file('thm.list.mem_exists_set','thm.pair.FST')).
fof(f481,plain,(
  ( ! [X5] : (s(sK13,sK15) != s(sK13,'const.pair.FST_1'(s('type.pair.prod'(sK13,sK14),X5))) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(sK13,sK14),X5),s(fun('type.pair.prod'(sK13,sK14),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(sK13,sK14)),sK17))))))) ) | $spl0),
  inference(cnf_transformation,[],[f481_D])).
fof(f481_D,plain,(
  ( ! [X5] : (s(sK13,sK15) != s(sK13,'const.pair.FST_1'(s('type.pair.prod'(sK13,sK14),X5))) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(sK13,sK14),X5),s(fun('type.pair.prod'(sK13,sK14),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(sK13,sK14)),sK17))))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f258,plain,(
  ( ! [X5] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(sK13,sK14),X5),s(fun('type.pair.prod'(sK13,sK14),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(sK13,sK14)),sK17)))))) | s(sK13,sK15) != s(sK13,'const.pair.FST_1'(s('type.pair.prod'(sK13,sK14),X5)))) )),
  inference(cnf_transformation,[],[f178])).
fof(f178,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(sK13,sK14),'const.pair.,_2'(s(sK13,sK15),s(sK14,sK16))),s(fun('type.pair.prod'(sK13,sK14),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(sK13,sK14)),sK17)))))) & ! [X5] : (s(sK13,sK15) != s(sK13,'const.pair.FST_1'(s('type.pair.prod'(sK13,sK14),X5))) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(sK13,sK14),X5),s(fun('type.pair.prod'(sK13,sK14),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(sK13,sK14)),sK17)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14,sK15,sK16,sK17])],[f120])).
fof(f120,plain,(
  ? [X0,X1,X2,X3,X4] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(X0,X1)),X4)))))) & ! [X5] : (s(X0,X2) != s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X5))) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),X5),s(fun('type.pair.prod'(X0,X1),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(X0,X1)),X4))))))))),
  inference(ennf_transformation,[],[f50])).
fof(f50,plain,(
  ~! [X0,X1,X2,X3,X4] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(X0,X1)),X4)))))) => ? [X5] : (s(X0,X2) = s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X5))) & p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),X5),s(fun('type.pair.prod'(X0,X1),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(X0,X1)),X4))))))))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(X0,X1)),X4)))))) => ? [X5] : (s(X0,X2) = s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X5))) & p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),X5),s(fun('type.pair.prod'(X0,X1),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(X0,X1)),X4))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X6,X7),'const.pair.,_2'(s(X6,X8),s(X7,X9))),s(fun('type.pair.prod'(X6,X7),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(X6,X7)),X10)))))) => ? [X11] : (s(X6,X8) = s(X6,'const.pair.FST_1'(s('type.pair.prod'(X6,X7),X11))) & p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X6,X7),X11),s(fun('type.pair.prod'(X6,X7),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(X6,X7)),X10))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X6,X7),'const.pair.,_2'(s(X6,X8),s(X7,X9))),s(fun('type.pair.prod'(X6,X7),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(X6,X7)),X10)))))) => ? [X11] : (s(X6,X8) = s(X6,'const.pair.FST_1'(s('type.pair.prod'(X6,X7),X11))) & p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X6,X7),X11),s(fun('type.pair.prod'(X6,X7),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(X6,X7)),X10))))))))),
  file('thm.list.mem_exists_set','thm.list.mem_exists_set')).
fof(f2368,plain,(
  ( ! [X163,X162] : (s(sK13,sK15) != s(sK13,X162) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(sK13,sK14),'const.pair.,_2'(s(sK13,X162),s(sK14,X163))),s(fun('type.pair.prod'(sK13,sK14),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(sK13,sK14)),sK17))))))) ) | $spl860),
  inference(cnf_transformation,[],[f2368_D])).
fof(f2368_D,plain,(
  ( ! [X163,X162] : (s(sK13,sK15) != s(sK13,X162) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(sK13,sK14),'const.pair.,_2'(s(sK13,X162),s(sK14,X163))),s(fun('type.pair.prod'(sK13,sK14),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(sK13,sK14)),sK17))))))) ) <=> ~$spl860),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl860])])).
fof(f2327,plain,(
  ( ! [X163,X162] : (s(sK13,sK15) != s(sK13,X162) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(sK13,sK14),'const.pair.,_2'(s(sK13,X162),s(sK14,X163))),s(fun('type.pair.prod'(sK13,sK14),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(sK13,sK14)),sK17))))))) ) | ($spl0 | $spl48)),
  inference(superposition,[],[f481,f522])).
fof(f2465,plain,(
  ( ! [X0] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(sK13,sK14),'const.pair.,_2'(s(sK13,sK15),s(sK14,X0))),s(fun('type.pair.prod'(sK13,sK14),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(sK13,sK14)),sK17))))))) ) | $spl894),
  inference(cnf_transformation,[],[f2465_D])).
fof(f2465_D,plain,(
  ( ! [X0] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(sK13,sK14),'const.pair.,_2'(s(sK13,sK15),s(sK14,X0))),s(fun('type.pair.prod'(sK13,sK14),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(sK13,sK14)),sK17))))))) ) <=> ~$spl894),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl894])])).
fof(f2463,plain,(
  ( ! [X0] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(sK13,sK14),'const.pair.,_2'(s(sK13,sK15),s(sK14,X0))),s(fun('type.pair.prod'(sK13,sK14),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(sK13,sK14)),sK17))))))) ) | $spl860),
  inference(equality_resolution,[],[f2368])).
fof(f494,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl10),
  inference(cnf_transformation,[],[f494_D])).
fof(f494_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f275,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f181])).
fof(f181,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.list.mem_exists_set','thm.bool.EQ_CLAUSES|split|1')).
fof(f483,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(sK13,sK14),'const.pair.,_2'(s(sK13,sK15),s(sK14,sK16))),s(fun('type.pair.prod'(sK13,sK14),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(sK13,sK14)),sK17)))))) | $spl2),
  inference(cnf_transformation,[],[f483_D])).
fof(f483_D,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(sK13,sK14),'const.pair.,_2'(s(sK13,sK15),s(sK14,sK16))),s(fun('type.pair.prod'(sK13,sK14),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(sK13,sK14)),sK17)))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f257,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(sK13,sK14),'const.pair.,_2'(s(sK13,sK15),s(sK14,sK16))),s(fun('type.pair.prod'(sK13,sK14),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(sK13,sK14)),sK17))))))),
  inference(cnf_transformation,[],[f178])).
fof(f610,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.pair.prod'(sK13,sK14),'const.pair.,_2'(s(sK13,sK15),s(sK14,sK16))),s(fun('type.pair.prod'(sK13,sK14),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(sK13,sK14)),sK17))))) | $spl208),
  inference(cnf_transformation,[],[f610_D])).
fof(f610_D,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.pair.prod'(sK13,sK14),'const.pair.,_2'(s(sK13,sK15),s(sK14,sK16))),s(fun('type.pair.prod'(sK13,sK14),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(sK13,sK14)),sK17))))) <=> ~$spl208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl208])])).
fof(f608,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.pair.prod'(sK13,sK14),'const.pair.,_2'(s(sK13,sK15),s(sK14,sK16))),s(fun('type.pair.prod'(sK13,sK14),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'(sK13,sK14)),sK17))))) | ($spl2 | $spl10)),
  inference(resolution,[],[f494,f483])).
fof(f485,plain,(
  p(s(bool,'T_0')) | $spl4),
  inference(cnf_transformation,[],[f485_D])).
fof(f485_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f259,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.list.mem_exists_set',aHL_TRUTH)).
fof(f2506,plain,(
  $false | ($spl4 | $spl208 | $spl894)),
  inference(subsumption_resolution,[],[f2487,f485])).
fof(f2487,plain,(
  ~p(s(bool,'T_0')) | ($spl208 | $spl894)),
  inference(superposition,[],[f2465,f610])).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 205
% Passive clauses: 460
% Generated clauses: 2252
% Final active clauses: 196
% Final passive clauses: 234
% Input formulas: 47
% Initial clauses: 203
% 
% Duplicate literals: 79
% Trivial inequalities: 6
% Fw subsumption resolutions: 184
% Fw demodulations: 35
% Bw demodulations: 25
% Condensations: 39
% Global subsumptions: 14
% 
% Simple tautologies: 182
% Equational tautologies: 7
% Forward subsumptions: 705
% 
% Binary resolution: 869
% Factoring: 58
% Forward superposition: 120
% Backward superposition: 135
% Self superposition: 5
% Equality factoring: 2
% Equality resolution: 6
% 
% Split clauses: 4
% Split components: 8
% SAT solver clauses: 753
% SAT solver unit clauses: 195
% SAT solver binary clauses: 63
% SAT solver learnt clauses: 29
% SAT solver learnt literals: 10
% 
% Sat splits: 4
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 696
% TWLsolver calls for satisfiability: 1772
% 
% Memory used [KB]: 2302
% Time elapsed: 0.053 s
% ------------------------------
% ------------------------------
% Success in time 0.668 s
