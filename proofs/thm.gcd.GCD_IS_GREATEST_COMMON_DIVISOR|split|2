Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.gcd
% (104758)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 121
% Passive clauses: 1563
% Generated clauses: 23999
% Final active clauses: 103
% Final passive clauses: 1263
% Input formulas: 7
% Initial clauses: 14
% 
% Duplicate literals: 1343
% Trivial inequalities: 350
% Fw subsumption resolutions: 3265
% Fw demodulations: 3207
% Bw demodulations: 15
% 
% Simple tautologies: 409
% Equational tautologies: 66
% Forward subsumptions: 11288
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 63
% Forward superposition: 8863
% Backward superposition: 6191
% Self superposition: 278
% Equality factoring: 193
% Equality resolution: 19
% 
% Split clauses: 1136
% Split components: 2305
% SAT solver clauses: 1809
% SAT solver unit clauses: 30
% SAT solver binary clauses: 227
% 
% Sat splits: 1136
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1795
% TWLsolver calls for satisfiability: 139
% 
% Memory used [KB]: 9978
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.gcd
% (104780)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 80
% Passive clauses: 314
% Generated clauses: 10853
% Final active clauses: 70
% Final passive clauses: 197
% Input formulas: 7
% Initial clauses: 14
% 
% Duplicate literals: 1424
% Trivial inequalities: 73
% Fw subsumption resolutions: 845
% Fw demodulations: 799
% Bw demodulations: 44
% Condensations: 1833
% 
% Simple tautologies: 166
% Equational tautologies: 50
% Forward subsumptions: 4177
% 
% Binary resolution: 59
% Factoring: 1
% Forward superposition: 3032
% Backward superposition: 2710
% Self superposition: 182
% Equality factoring: 156
% Equality resolution: 3
% 
% Split clauses: 163
% Split components: 354
% SAT solver clauses: 930
% SAT solver unit clauses: 20
% SAT solver binary clauses: 65
% 
% Sat splits: 163
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 930
% TWLsolver calls for satisfiability: 188
% 
% Memory used [KB]: 6652
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.gcd
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.gcd
% SZS output start Proof for thm.gcd
fof(f5363,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f48,f55,f53,f325,f356,f354,f668,f673,f677,f675,f877,f880,f879,f846,f847,f848,f849,f850,f882,f888,f889,f890,f909,f913,f911,f1398,f1400,f1401,f1402,f1399,f1332,f1331,f1405,f1309,f1308,f1408,f828,f1406,f827,f1407,f1410,f580,f1415,f587,f592,f1417,f593,f1414,f1418,f599,f1416,f1424,f457,f462,f1426,f1427,f468,f1425,f1413,f1434,f1457,f1460,f1465,f1468,f1540,f1563,f1575,f1578,f1583,f1600,f1662,f1665,f1668,f1671,f1674,f1675,f1678,f1679,f1680,f1681,f1683,f1684,f1685,f1687,f1708,f1718,f1719,f1720,f1721,f1723,f1725,f1728,f1766,f1769,f1770,f1771,f1780,f1783,f1784,f1334,f672,f670,f2143,f2147,f2145,f2148,f2152,f2150,f2939,f2997,f4635,f886,f3055,f3221,f4680,f5027,f5026,f5025,f5024,f5021,f5020,f5032,f5017,f5033,f5034,f5035,f5036,f5031,f5029,f5002,f5003,f5042,f5041,f3279,f3113,f5055,f5056,f5057,f5058,f2269,f2268,f887,f2266,f5059,f5060,f5061,f885,f883,f5350])).
fof(f5350,plain,(
  $false | $spl3),
  inference(subsumption_resolution,[],[f5349,f30])).
fof(f30,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f10])).
fof(f10,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.gcd.GCD_IS_GREATEST_COMMON_DIVISOR|split|2',aHL_FALSITY)).
fof(f5349,plain,(
  p(s(bool,'F_0')) | $spl3),
  inference(forward_demodulation,[],[f5348,f1796])).
fof(f1796,plain,(
  s(bool,'F_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) | $spl3),
  inference(global_subsumption,[],[f28,f27,f26,f29,f31,f32,f33,f40,f42,f49,f51,f48,f55,f59,f67,f77,f103,f149,f277,f280,f281,f282,f284,f292,f325,f444,f573,f668,f673,f749,f750,f877,f846,f847,f848,f849,f850,f888,f989,f1044,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f1415,f587,f592,f593,f1418,f599,f518,f430,f1424,f457,f462,f1427,f468,f400,f431,f558,f1342,f1114,f678,f690,f629,f495,f376,f279,f278,f287,f868,f811,f286,f30,f331,f1785,f316,f34,f35,f36,f37,f38,f39,f748,f493,f494,f627,f628,f1334,f289,f291,f341])).
fof(f341,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(duplicate_literal_removal,[],[f297])).
fof(f297,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f277,f31])).
fof(f291,plain,(
  ( ! [X17,X18,X16] : (s(bool,'T_0') = s(bool,g(s(X16,sK3(X17,X18,bool,X16)))) | s(fun(X16,bool),X17) = s(fun(X16,bool),X18) | s(bool,'F_0') != s(bool,f(s(X16,sK3(X17,X18,bool,X16))))) )),
  inference(superposition,[],[f33,f31])).
fof(f289,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X11) != s(bool,f(s(X8,sK3(X9,X10,bool,X8)))) | s(fun(X8,bool),X9) = s(fun(X8,bool),X10) | s(bool,'T_0') = s(bool,g(s(X8,sK3(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f33,f40])).
fof(f628,plain,(
  ( ! [X1] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',X1)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,X1,sK1)),s('type.num.num',X1)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK1),s('type.num.num',X1),s('type.num.num',sK2))))) )),
  inference(subsumption_resolution,[],[f616,f29])).
fof(f616,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,X1,sK1)),s('type.num.num',X1)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',X1)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK1),s('type.num.num',X1),s('type.num.num',sK2))))) )),
  inference(superposition,[],[f38,f51])).
fof(f627,plain,(
  ( ! [X0] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',X0)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,X0,sK0)),s('type.num.num',X0)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',X0),s('type.num.num',sK2))))) )),
  inference(subsumption_resolution,[],[f615,f29])).
fof(f615,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,X0,sK0)),s('type.num.num',X0)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',X0)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',X0),s('type.num.num',sK2))))) )),
  inference(superposition,[],[f38,f49])).
fof(f494,plain,(
  ( ! [X1] : (p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK1),s('type.num.num',X1),s('type.num.num',sK2)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',X1)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,X1,sK1)),s('type.num.num',sK1))))) )),
  inference(subsumption_resolution,[],[f483,f29])).
fof(f483,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,X1,sK1)),s('type.num.num',sK1)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',X1)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK1),s('type.num.num',X1),s('type.num.num',sK2))))) )),
  inference(superposition,[],[f37,f51])).
fof(f493,plain,(
  ( ! [X0] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',X0)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,X0,sK0)),s('type.num.num',sK0)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',X0),s('type.num.num',sK2))))) )),
  inference(subsumption_resolution,[],[f482,f29])).
fof(f482,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,X0,sK0)),s('type.num.num',sK0)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',X0)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',X0),s('type.num.num',sK2))))) )),
  inference(superposition,[],[f37,f49])).
fof(f748,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X0)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X1)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))))))) )),
  inference(subsumption_resolution,[],[f730,f29])).
fof(f730,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X1)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X0)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))))))) )),
  inference(superposition,[],[f36,f59])).
fof(f39,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(X2,X1,X0)),s('type.num.num',X2)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X1)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | (p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X0)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X1)))) & ! [X4] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X4),s('type.num.num',X0)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X4),s('type.num.num',X1)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X4),s('type.num.num',X2))))))) & (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X0)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X1)))) | (p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(X2,X1,X0)),s('type.num.num',X0)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(X2,X1,X0)),s('type.num.num',X1)))) & ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(X2,X1,X0)),s('type.num.num',X2))))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4])],[f24])).
fof(f24,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | (p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X0)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X1)))) & ! [X4] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X4),s('type.num.num',X0)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X4),s('type.num.num',X1)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X4),s('type.num.num',X2))))))) & (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X0)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X1)))) | ? [X3] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X0)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X1)))) & ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X2))))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2))))))),
  inference(rectify,[],[f23])).
fof(f23,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | (p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X0)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X1)))) & ! [X3] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X0)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X1)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X2))))))) & (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X0)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X1)))) | ? [X3] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X0)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X1)))) & ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X2))))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2))))))),
  inference(flattening,[],[f22])).
fof(f22,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | (p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X0)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X1)))) & ! [X3] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X0)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X1)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X2))))))) & ((~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X0)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X1)))) | ? [X3] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X0)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X1)))) & ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X2)))))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2))))))),
  inference(nnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) <=> (p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X0)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X1)))) & ! [X3] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X0)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X1)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X2)))))))),
  inference(flattening,[],[f18])).
fof(f18,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) <=> (p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X0)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X1)))) & ! [X3] : ((~p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X0)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X1))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X2)))))))),
  inference(ennf_transformation,[],[f14])).
fof(f14,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) <=> (p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X0)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X1)))) & ! [X3] : ((p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X0)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X1))))) => p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X2)))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7,X9] : (p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X6),s('type.num.num',X7),s('type.num.num',X9)))) <=> (p(s(bool,'const.divides.divides_2'(s('type.num.num',X9),s('type.num.num',X6)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X9),s('type.num.num',X7)))) & ! [X8] : ((p(s(bool,'const.divides.divides_2'(s('type.num.num',X8),s('type.num.num',X6)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X8),s('type.num.num',X7))))) => p(s(bool,'const.divides.divides_2'(s('type.num.num',X8),s('type.num.num',X9)))))))),
  file('thm.gcd.GCD_IS_GREATEST_COMMON_DIVISOR|split|2','thm.gcd.is_gcd_def')).
fof(f38,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X0)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(X2,X1,X0)),s('type.num.num',X1)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X1)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f25])).
fof(f37,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X0)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(X2,X1,X0)),s('type.num.num',X0)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X1)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f25])).
fof(f36,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X4),s('type.num.num',X1)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X4),s('type.num.num',X0)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X4),s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f25])).
fof(f35,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f25])).
fof(f34,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f25])).
fof(f316,plain,(
  ( ! [X23,X21,X22] : (s(X23,f(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) != s(X23,g(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) | s(fun(bool,X23),X21) = s(fun(bool,X23),X22) | s(bool,'T_0') = s(bool,sK3(X21,X22,X23,bool))) )),
  inference(superposition,[],[f33,f277])).
fof(f1785,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))),
  inference(global_subsumption,[],[f28,f27,f26,f29,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f280,f281,f282,f284,f289,f291,f325,f444,f493,f494,f573,f627,f628,f668,f673,f748,f749,f750,f877,f846,f847,f848,f849,f850,f989,f1044,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f1342,f1114,f678,f690,f629,f495,f376,f279,f278,f287,f868,f811,f286,f30,f331])).
fof(f331,plain,(
  ( ! [X9] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(duplicate_literal_removal,[],[f310])).
fof(f310,plain,(
  ( ! [X9] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f42,f277])).
fof(f286,plain,(
  ( ! [X17,X18,X16] : (s(bool,'T_0') = s(bool,sK3(X16,X17,X18,bool)) | s(fun(bool,X18),X16) = s(fun(bool,X18),X17) | s(X18,f(s(bool,'F_0'))) != s(X18,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f33,f31])).
fof(f811,plain,(
  ( ! [X33,X31,X32] : (s(X33,f(s(bool,'T_0'))) != s(X33,g(s(bool,'T_0'))) | s(fun(bool,X33),X31) = s(fun(bool,X33),X32) | s(X33,f(s(bool,'F_0'))) != s(X33,g(s(bool,'F_0')))) )),
  inference(duplicate_literal_removal,[],[f810])).
fof(f810,plain,(
  ( ! [X33,X31,X32] : (s(X33,f(s(bool,'T_0'))) != s(X33,g(s(bool,'T_0'))) | s(fun(bool,X33),X31) = s(fun(bool,X33),X32) | s(fun(bool,X33),X31) = s(fun(bool,X33),X32) | s(X33,f(s(bool,'F_0'))) != s(X33,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f33,f286])).
fof(f868,plain,(
  ( ! [X33,X31,X32] : (s(bool,'T_0') != s(bool,f(s(X31,sK3(X32,X33,bool,X31)))) | s(fun(X31,bool),X32) = s(fun(X31,bool),X33) | s(bool,'F_0') != s(bool,f(s(X31,sK3(X32,X33,bool,X31))))) )),
  inference(duplicate_literal_removal,[],[f867])).
fof(f867,plain,(
  ( ! [X33,X31,X32] : (s(bool,'T_0') != s(bool,f(s(X31,sK3(X32,X33,bool,X31)))) | s(fun(X31,bool),X32) = s(fun(X31,bool),X33) | s(fun(X31,bool),X32) = s(fun(X31,bool),X33) | s(bool,'F_0') != s(bool,f(s(X31,sK3(X32,X33,bool,X31))))) )),
  inference(superposition,[],[f33,f291])).
fof(f287,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,f(s(X0,sK3(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,X3) = s(bool,g(s(X0,sK3(X1,X2,bool,X0)))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f33,f40])).
fof(f278,plain,(
  ( ! [X12,X10,X13,X11] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',X11)))) | s(bool,X13) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X10),s('type.num.num',X11),s('type.num.num',X12))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(subsumption_resolution,[],[f158,f29])).
fof(f158,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',X11)))) | s(bool,X13) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X10),s('type.num.num',X11),s('type.num.num',X12))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f35,f40])).
fof(f279,plain,(
  ( ! [X14,X17,X15,X16] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X16),s('type.num.num',X14)))) | s(bool,X17) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X14),s('type.num.num',X15),s('type.num.num',X16))) | s(bool,'T_0') = s(bool,X17)) )),
  inference(subsumption_resolution,[],[f159,f29])).
fof(f159,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X16),s('type.num.num',X14)))) | s(bool,X17) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X14),s('type.num.num',X15),s('type.num.num',X16))) | s(bool,'T_0') = s(bool,X17)) )),
  inference(superposition,[],[f34,f40])).
fof(f376,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X7),s('type.num.num',X5)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X7),s('type.num.num',X4)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X7),s('type.num.num',X6)))) | s(bool,X8) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X4),s('type.num.num',X5),s('type.num.num',X6))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(subsumption_resolution,[],[f370,f29])).
fof(f370,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X7),s('type.num.num',X5)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X7),s('type.num.num',X4)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X7),s('type.num.num',X6)))) | s(bool,X8) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X4),s('type.num.num',X5),s('type.num.num',X6))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f36,f40])).
fof(f495,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(X8,X10,X9)),s('type.num.num',X9)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X8),s('type.num.num',X10)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X8)))) | s(bool,X11) = s(bool,'const.divides.divides_2'(s('type.num.num',X8),s('type.num.num',X9))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(subsumption_resolution,[],[f487,f29])).
fof(f487,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(X8,X10,X9)),s('type.num.num',X9)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X8),s('type.num.num',X10)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X8)))) | s(bool,X11) = s(bool,'const.divides.divides_2'(s('type.num.num',X8),s('type.num.num',X9))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f37,f40])).
fof(f629,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(X8,X10,X9)),s('type.num.num',X10)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X8),s('type.num.num',X10)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X8)))) | s(bool,X11) = s(bool,'const.divides.divides_2'(s('type.num.num',X8),s('type.num.num',X9))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(subsumption_resolution,[],[f620,f29])).
fof(f620,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(X8,X10,X9)),s('type.num.num',X10)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X8),s('type.num.num',X10)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X8)))) | s(bool,X11) = s(bool,'const.divides.divides_2'(s('type.num.num',X8),s('type.num.num',X9))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f38,f40])).
fof(f690,plain,(
  ( ! [X6,X4,X5,X3] : (p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X5),s('type.num.num',X4),s('type.num.num',X3)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X4)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X5)))) | s(bool,X6) = s(bool,'const.divides.divides_2'(s('type.num.num',sK4(X3,X4,X5)),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(subsumption_resolution,[],[f683,f29])).
fof(f683,plain,(
  ( ! [X6,X4,X5,X3] : (~p(s(bool,'T_0')) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X5),s('type.num.num',X4),s('type.num.num',X3)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X4)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X3),s('type.num.num',X5)))) | s(bool,X6) = s(bool,'const.divides.divides_2'(s('type.num.num',sK4(X3,X4,X5)),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f39,f40])).
fof(f678,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,X2,sK0)),s('type.num.num',sK0)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',X2),s('type.num.num',sK2)))) | s(bool,X3) = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(subsumption_resolution,[],[f661,f29])).
fof(f661,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,X2,sK0)),s('type.num.num',sK0)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',X2),s('type.num.num',sK2)))) | s(bool,X3) = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f493,f40])).
fof(f1114,plain,(
  ( ! [X1] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',X1)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,X1,sK1)),s('type.num.num',sK1)))) | s(bool,'T_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK1),s('type.num.num',X1),s('type.num.num',sK2)))) )),
  inference(subsumption_resolution,[],[f1102,f30])).
fof(f1102,plain,(
  ( ! [X1] : (p(s(bool,'F_0')) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',X1)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,X1,sK1)),s('type.num.num',sK1)))) | s(bool,'T_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK1),s('type.num.num',X1),s('type.num.num',sK2)))) )),
  inference(superposition,[],[f494,f31])).
fof(f1342,plain,(
  ( ! [X4,X5] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,X4,sK0)),s('type.num.num',X4)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',X4),s('type.num.num',sK2)))) | s(bool,X5) = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',X4))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(subsumption_resolution,[],[f1326,f29])).
fof(f1326,plain,(
  ( ! [X4,X5] : (~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,X4,sK0)),s('type.num.num',X4)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',X4),s('type.num.num',sK2)))) | s(bool,X5) = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',X4))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f627,f40])).
fof(f558,plain,(
  ( ! [X68,X66,X69,X67] : (s(bool,f(s(X66,sK3(X67,X68,bool,X66)))) != s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X69),s('type.num.num',sK2))) | s(fun(X66,bool),X67) = s(fun(X66,bool),X68) | s(bool,'T_0') = s(bool,g(s(X66,sK3(X67,X68,bool,X66))))) )),
  inference(superposition,[],[f33,f281])).
fof(f431,plain,(
  ( ! [X59,X57,X58,X56] : (s(bool,f(s(X56,sK3(X57,X58,bool,X56)))) != s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X59),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(fun(X56,bool),X57) = s(fun(X56,bool),X58) | s(bool,'T_0') = s(bool,g(s(X56,sK3(X57,X58,bool,X56))))) )),
  inference(superposition,[],[f33,f280])).
fof(f400,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f55,f280])).
fof(f430,plain,(
  ( ! [X54,X52,X55,X53] : (s(X54,f(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X55),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))))) != s(X54,g(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X55),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))))) | s(fun(bool,X54),X52) = s(fun(bool,X54),X53) | s(bool,'T_0') = s(bool,sK3(X52,X53,X54,bool))) )),
  inference(superposition,[],[f33,f280])).
fof(f518,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X0),s('type.num.num',sK2)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f55,f281])).
fof(f557,plain,(
  ( ! [X64,X62,X65,X63] : (s(X64,f(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X65),s('type.num.num',sK2))))) != s(X64,g(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X65),s('type.num.num',sK2))))) | s(fun(bool,X64),X62) = s(fun(bool,X64),X63) | s(bool,'T_0') = s(bool,sK3(X62,X63,X64,bool))) )),
  inference(superposition,[],[f33,f281])).
fof(f1412,plain,(
  ( ! [X25] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X25),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))))) )),
  inference(global_subsumption,[],[f28,f27,f26,f29,f30,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f286,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f811,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688])).
fof(f688,plain,(
  ( ! [X24,X23,X25,X22] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X25),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X24),s('type.num.num',X23),s('type.num.num',X22)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X22),s('type.num.num',X23)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X22),s('type.num.num',X24)))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK4(X22,X23,X24)),s('type.num.num',X22)))) )),
  inference(superposition,[],[f39,f280])).
fof(f1411,plain,(
  ( ! [X29] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X29),s('type.num.num',sK2))))) )),
  inference(global_subsumption,[],[f28,f27,f26,f29,f30,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f286,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f811,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689])).
fof(f689,plain,(
  ( ! [X28,X26,X29,X27] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X29),s('type.num.num',sK2)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X28),s('type.num.num',X27),s('type.num.num',X26)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X26),s('type.num.num',X27)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X26),s('type.num.num',X28)))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK4(X26,X27,X28)),s('type.num.num',X26)))) )),
  inference(superposition,[],[f39,f281])).
fof(f1044,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f750,f42])).
fof(f989,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f749,f42])).
fof(f750,plain,(
  ( ! [X6,X5] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X5))))) )),
  inference(subsumption_resolution,[],[f732,f29])).
fof(f732,plain,(
  ( ! [X6,X5] : (~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X5))))) )),
  inference(superposition,[],[f34,f59])).
fof(f749,plain,(
  ( ! [X4,X3] : (p(s(bool,'const.divides.divides_2'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X3),s('type.num.num',X4))),s('type.num.num',X4))))) )),
  inference(subsumption_resolution,[],[f731,f29])).
fof(f731,plain,(
  ( ! [X4,X3] : (~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X3),s('type.num.num',X4))),s('type.num.num',X4))))) )),
  inference(superposition,[],[f35,f59])).
fof(f573,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X1),s('type.num.num',sK2))) | s(bool,X0) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X1),s('type.num.num',sK2)))) )),
  inference(equality_factoring,[],[f281])).
fof(f444,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X1),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,X0) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X1),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) )),
  inference(equality_factoring,[],[f280])).
fof(f292,plain,(
  s(bool,'F_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) | $spl3),
  inference(unit_resulting_resolution,[],[f55,f277])).
fof(f284,plain,(
  ( ! [X10,X8,X11,X9] : (s(X10,f(s(bool,X11))) != s(X10,g(s(bool,X11))) | s(fun(bool,X10),X8) = s(fun(bool,X10),X9) | s(bool,'T_0') = s(bool,sK3(X8,X9,X10,bool)) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f33,f40])).
fof(f282,plain,(
  ( ! [X2,X0,X3,X1] : (s(X2,f(s(bool,'T_0'))) != s(X2,g(s(bool,'T_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,X3) = s(bool,sK3(X0,X1,X2,bool)) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f33,f40])).
fof(f281,plain,(
  ( ! [X21,X20] : (s(bool,X21) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X20),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X21)) )),
  inference(subsumption_resolution,[],[f161,f29])).
fof(f161,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | s(bool,X21) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X20),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f67,f40])).
fof(f280,plain,(
  ( ! [X19,X18] : (s(bool,X19) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X18),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X19)) )),
  inference(subsumption_resolution,[],[f160,f29])).
fof(f160,plain,(
  ( ! [X19,X18] : (~p(s(bool,'T_0')) | s(bool,X19) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X18),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X19)) )),
  inference(superposition,[],[f77,f40])).
fof(f277,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(subsumption_resolution,[],[f157,f29])).
fof(f157,plain,(
  ( ! [X9] : (~p(s(bool,'T_0')) | s(bool,X9) = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f28,f40])).
fof(f149,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f29,f40])).
fof(f103,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f40,f40])).
fof(f77,plain,(
  ( ! [X0] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))))) )),
  inference(unit_resulting_resolution,[],[f28,f35])).
fof(f67,plain,(
  ( ! [X0] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X0),s('type.num.num',sK2))))) )),
  inference(unit_resulting_resolution,[],[f28,f34])).
fof(f59,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(subsumption_resolution,[],[f58,f30])).
fof(f58,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(superposition,[],[f32,f31])).
fof(f51,plain,(
  s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',sK1)))),
  inference(subsumption_resolution,[],[f45,f30])).
fof(f45,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',sK1)))),
  inference(superposition,[],[f27,f31])).
fof(f49,plain,(
  s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',sK0)))),
  inference(subsumption_resolution,[],[f44,f30])).
fof(f44,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',sK0)))),
  inference(superposition,[],[f26,f31])).
fof(f42,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f30,f31])).
fof(f40,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f31,f31])).
fof(f33,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK3(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK3(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK3(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK3(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3])],[f17])).
fof(f17,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f13])).
fof(f13,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f12])).
fof(f12,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.gcd.GCD_IS_GREATEST_COMMON_DIVISOR|split|2',aHL_EXT)).
fof(f32,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f11])).
fof(f11,plain,(
  ! [X0,X1] : p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7] : p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X6),s('type.num.num',X7),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X6),s('type.num.num',X7))))))),
  file('thm.gcd.GCD_IS_GREATEST_COMMON_DIVISOR|split|2','thm.gcd.GCD_IS_GCD')).
fof(f31,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.gcd.GCD_IS_GREATEST_COMMON_DIVISOR|split|2',aHL_BOOL_CASES)).
fof(f29,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.gcd.GCD_IS_GREATEST_COMMON_DIVISOR|split|2',aHL_TRUTH)).
fof(f26,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',sK0)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',sK1)))) & ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f16])).
fof(f16,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X0)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X1)))) & ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1)))))))),
  inference(flattening,[],[f15])).
fof(f15,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X0)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X1))))) & ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1)))))))),
  inference(ennf_transformation,[],[f9])).
fof(f9,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X0)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X1))))) => p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ((p(s(bool,'const.divides.divides_2'(s('type.num.num',X8),s('type.num.num',X6)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X8),s('type.num.num',X7))))) => p(s(bool,'const.divides.divides_2'(s('type.num.num',X8),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X6),s('type.num.num',X7)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ((p(s(bool,'const.divides.divides_2'(s('type.num.num',X8),s('type.num.num',X6)))) & p(s(bool,'const.divides.divides_2'(s('type.num.num',X8),s('type.num.num',X7))))) => p(s(bool,'const.divides.divides_2'(s('type.num.num',X8),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X6),s('type.num.num',X7)))))))),
  file('thm.gcd.GCD_IS_GREATEST_COMMON_DIVISOR|split|2','thm.gcd.GCD_IS_GREATEST_COMMON_DIVISOR|split|2')).
fof(f27,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',sK1))))),
  inference(cnf_transformation,[],[f20])).
fof(f28,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))),
  inference(cnf_transformation,[],[f20])).
fof(f5348,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))),
  inference(subsumption_resolution,[],[f5329,f29])).
fof(f5329,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))),
  inference(superposition,[],[f4850,f51])).
fof(f4850,plain,(
  ( ! [X3] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',X3)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',X3))))))) )),
  inference(subsumption_resolution,[],[f4829,f29])).
fof(f4829,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',X3)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',X3))))))) )),
  inference(superposition,[],[f748,f49])).
fof(f883,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') != s(bool,f(s(bool,sK3(X2,X3,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X2,X3,bool,bool)) | s(fun(bool,bool),X2) = s(fun(bool,bool),X3)) ) | $spl22),
  inference(cnf_transformation,[],[f883_D])).
fof(f883_D,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') != s(bool,f(s(bool,sK3(X2,X3,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X2,X3,bool,bool)) | s(fun(bool,bool),X2) = s(fun(bool,bool),X3)) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f885,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | $spl24),
  inference(cnf_transformation,[],[f885_D])).
fof(f885_D,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f5061,plain,(
  ( ! [X21,X22] : (s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(fun(bool,bool),X21) = s(fun(bool,bool),X22) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X21,X22,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X21,X22,bool,bool))) ) | $spl54),
  inference(forward_demodulation,[],[f853,f1416])).
fof(f853,plain,(
  ( ! [X23,X21,X22] : (s(bool,'T_0') = s(bool,g(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X23),s('type.num.num',sK2))))) | s(fun(bool,bool),X21) = s(fun(bool,bool),X22) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X21,X22,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X21,X22,bool,bool))) )),
  inference(superposition,[],[f291,f281])).
fof(f5060,plain,(
  ( ! [X19,X18] : (s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(fun(bool,bool),X18) = s(fun(bool,bool),X19) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X18,X19,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X18,X19,bool,bool))) ) | $spl58),
  inference(forward_demodulation,[],[f852,f1425])).
fof(f852,plain,(
  ( ! [X19,X20,X18] : (s(bool,'T_0') = s(bool,g(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X20),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))))) | s(fun(bool,bool),X18) = s(fun(bool,bool),X19) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X18,X19,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X18,X19,bool,bool))) )),
  inference(superposition,[],[f291,f280])).
fof(f5059,plain,(
  ( ! [X17,X16] : (s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(fun(bool,bool),X16) = s(fun(bool,bool),X17) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X16,X17,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X16,X17,bool,bool))) ) | $spl3),
  inference(forward_demodulation,[],[f851,f1796])).
fof(f851,plain,(
  ( ! [X17,X16] : (s(bool,'T_0') = s(bool,g(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) | s(fun(bool,bool),X16) = s(fun(bool,bool),X17) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X16,X17,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X16,X17,bool,bool))) )),
  inference(superposition,[],[f291,f277])).
fof(f2266,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(fun(bool,bool),X2) = s(fun(bool,bool),X3) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X2,X3,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X2,X3,bool,bool))) )),
  inference(superposition,[],[f291,f31])).
fof(f887,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,g(s(bool,X9))) | s(bool,'T_0') = s(bool,X9)) ) | $spl28),
  inference(cnf_transformation,[],[f887_D])).
fof(f887_D,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,g(s(bool,X9))) | s(bool,'T_0') = s(bool,X9)) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f2268,plain,(
  ( ! [X8,X7,X9] : (s(bool,'T_0') = s(bool,g(s(bool,X9))) | s(fun(bool,bool),X7) = s(fun(bool,bool),X8) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X7,X8,bool,bool)))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,sK3(X7,X8,bool,bool))) )),
  inference(superposition,[],[f291,f40])).
fof(f2269,plain,(
  ( ! [X12,X10,X11] : (s(bool,'T_0') = s(bool,g(s(bool,X12))) | s(fun(bool,bool),X10) = s(fun(bool,bool),X11) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X10,X11,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X10,X11,bool,bool)) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f291,f40])).
fof(f5058,plain,(
  ( ! [X17,X16] : (s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(fun(bool,bool),X16) = s(fun(bool,bool),X17) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X16,X17,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X16,X17,bool,bool))) ) | $spl3),
  inference(forward_demodulation,[],[f2271,f1796])).
fof(f2271,plain,(
  ( ! [X17,X16] : (s(bool,'T_0') = s(bool,g(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) | s(fun(bool,bool),X16) = s(fun(bool,bool),X17) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X16,X17,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X16,X17,bool,bool))) )),
  inference(superposition,[],[f291,f277])).
fof(f5057,plain,(
  ( ! [X19,X18] : (s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(fun(bool,bool),X18) = s(fun(bool,bool),X19) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X18,X19,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X18,X19,bool,bool))) ) | $spl58),
  inference(forward_demodulation,[],[f2272,f1425])).
fof(f2272,plain,(
  ( ! [X19,X20,X18] : (s(bool,'T_0') = s(bool,g(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X20),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))))) | s(fun(bool,bool),X18) = s(fun(bool,bool),X19) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X18,X19,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X18,X19,bool,bool))) )),
  inference(superposition,[],[f291,f280])).
fof(f5056,plain,(
  ( ! [X21,X22] : (s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(fun(bool,bool),X21) = s(fun(bool,bool),X22) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X21,X22,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X21,X22,bool,bool))) ) | $spl54),
  inference(forward_demodulation,[],[f2273,f1416])).
fof(f2273,plain,(
  ( ! [X23,X21,X22] : (s(bool,'T_0') = s(bool,g(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X23),s('type.num.num',sK2))))) | s(fun(bool,bool),X21) = s(fun(bool,bool),X22) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X21,X22,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X21,X22,bool,bool))) )),
  inference(superposition,[],[f291,f281])).
fof(f5055,plain,(
  ( ! [X255,X254,X256] : (s(bool,'T_0') = s(bool,g(s(bool,X254))) | s(bool,'T_0') = s(bool,X256) | s(bool,X255) = s(bool,X256) | s(bool,X254) = s(bool,X255)) ) | $spl86),
  inference(cnf_transformation,[],[f5055_D])).
fof(f5055_D,plain,(
  ( ! [X255,X254,X256] : (s(bool,'T_0') = s(bool,g(s(bool,X254))) | s(bool,'T_0') = s(bool,X256) | s(bool,X255) = s(bool,X256) | s(bool,X254) = s(bool,X255)) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f3113,plain,(
  ( ! [X251,X249,X252,X250,X248] : (s(bool,'T_0') = s(bool,g(s(bool,X250))) | s(fun(bool,bool),X248) = s(fun(bool,bool),X249) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X248,X249,bool,bool)))) | s(bool,X250) = s(bool,X251) | s(bool,'T_0') = s(bool,sK3(X248,X249,bool,bool)) | s(bool,X251) = s(bool,X252) | s(bool,'T_0') = s(bool,X252)) )),
  inference(superposition,[],[f291,f103])).
fof(f3279,plain,(
  ( ! [X255,X253,X254,X252,X256] : (s(bool,'T_0') = s(bool,g(s(bool,X254))) | s(fun(bool,bool),X252) = s(fun(bool,bool),X253) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X252,X253,bool,bool)))) | s(bool,X254) = s(bool,X255) | s(bool,X255) = s(bool,X256) | s(bool,'T_0') = s(bool,X256) | s(bool,'T_0') = s(bool,sK3(X252,X253,bool,bool))) )),
  inference(superposition,[],[f291,f103])).
fof(f5041,plain,(
  ( ! [X14,X15,X18] : (s(bool,'T_0') = s(bool,sK3(X14,X15,bool,bool)) | s(bool,'T_0') = s(bool,X18) | s(bool,X18) = s(bool,f(s(bool,sK3(X14,X15,bool,bool)))) | s(fun(bool,bool),X14) = s(fun(bool,bool),X15)) ) | $spl82),
  inference(cnf_transformation,[],[f5041_D])).
fof(f5041_D,plain,(
  ( ! [X14,X15,X18] : (s(bool,'T_0') = s(bool,sK3(X14,X15,bool,bool)) | s(bool,'T_0') = s(bool,X18) | s(bool,X18) = s(bool,f(s(bool,sK3(X14,X15,bool,bool)))) | s(fun(bool,bool),X14) = s(fun(bool,bool),X15)) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f5042,plain,(
  ( ! [X17,X16] : (s(bool,'F_0') != s(bool,X16) | s(bool,'T_0') = s(bool,X17) | s(bool,X16) = s(bool,X17)) ) | $spl84),
  inference(cnf_transformation,[],[f5042_D])).
fof(f5042_D,plain,(
  ( ! [X17,X16] : (s(bool,'F_0') != s(bool,X16) | s(bool,'T_0') = s(bool,X17) | s(bool,X16) = s(bool,X17)) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f5003,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'F_0') != s(bool,X21) | s(bool,'T_0') = s(bool,sK3(X19,X20,bool,bool)) | s(fun(bool,bool),X19) = s(fun(bool,bool),X20) | s(bool,X22) = s(bool,f(s(bool,sK3(X19,X20,bool,bool)))) | s(bool,'T_0') = s(bool,X22) | s(bool,X21) = s(bool,X23) | s(bool,'T_0') = s(bool,X23)) ) | $spl22),
  inference(superposition,[],[f883,f103])).
fof(f5002,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'F_0') != s(bool,X16) | s(bool,'T_0') = s(bool,sK3(X14,X15,bool,bool)) | s(fun(bool,bool),X14) = s(fun(bool,bool),X15) | s(bool,X16) = s(bool,X17) | s(bool,'T_0') = s(bool,X17) | s(bool,X18) = s(bool,f(s(bool,sK3(X14,X15,bool,bool)))) | s(bool,'T_0') = s(bool,X18)) ) | $spl22),
  inference(superposition,[],[f883,f103])).
fof(f5029,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') = s(bool,sK3(X2,X3,bool,bool)) | s(fun(bool,bool),X2) = s(fun(bool,bool),X3)) ) | $spl74),
  inference(cnf_transformation,[],[f5029_D])).
fof(f5029_D,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') = s(bool,sK3(X2,X3,bool,bool)) | s(fun(bool,bool),X2) = s(fun(bool,bool),X3)) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f5031,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | $spl77),
  inference(cnf_transformation,[],[f5031_D])).
fof(f5031_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl77),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl77])])).
fof(f5036,plain,(
  ( ! [X61,X62] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,sK3(X61,X62,bool,bool)) | s(fun(bool,bool),X61) = s(fun(bool,bool),X62)) ) | ($spl22 | $spl54)),
  inference(forward_demodulation,[],[f5014,f1416])).
fof(f5014,plain,(
  ( ! [X61,X62,X63] : (s(bool,'F_0') != s(bool,f(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X63),s('type.num.num',sK2))))) | s(bool,'T_0') = s(bool,sK3(X61,X62,bool,bool)) | s(fun(bool,bool),X61) = s(fun(bool,bool),X62)) ) | $spl22),
  inference(duplicate_literal_removal,[],[f4996])).
fof(f4996,plain,(
  ( ! [X61,X62,X63] : (s(bool,'F_0') != s(bool,f(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X63),s('type.num.num',sK2))))) | s(bool,'T_0') = s(bool,sK3(X61,X62,bool,bool)) | s(fun(bool,bool),X61) = s(fun(bool,bool),X62) | s(bool,'T_0') = s(bool,sK3(X61,X62,bool,bool))) ) | $spl22),
  inference(superposition,[],[f883,f281])).
fof(f5035,plain,(
  ( ! [X59,X58] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,sK3(X58,X59,bool,bool)) | s(fun(bool,bool),X58) = s(fun(bool,bool),X59)) ) | ($spl22 | $spl58)),
  inference(forward_demodulation,[],[f5015,f1425])).
fof(f5015,plain,(
  ( ! [X59,X60,X58] : (s(bool,'F_0') != s(bool,f(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X60),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))))) | s(bool,'T_0') = s(bool,sK3(X58,X59,bool,bool)) | s(fun(bool,bool),X58) = s(fun(bool,bool),X59)) ) | $spl22),
  inference(duplicate_literal_removal,[],[f4995])).
fof(f4995,plain,(
  ( ! [X59,X60,X58] : (s(bool,'F_0') != s(bool,f(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X60),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))))) | s(bool,'T_0') = s(bool,sK3(X58,X59,bool,bool)) | s(fun(bool,bool),X58) = s(fun(bool,bool),X59) | s(bool,'T_0') = s(bool,sK3(X58,X59,bool,bool))) ) | $spl22),
  inference(superposition,[],[f883,f280])).
fof(f5034,plain,(
  ( ! [X57,X56] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,sK3(X56,X57,bool,bool)) | s(fun(bool,bool),X56) = s(fun(bool,bool),X57)) ) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f5016,f1796])).
fof(f5016,plain,(
  ( ! [X57,X56] : (s(bool,'F_0') != s(bool,f(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) | s(bool,'T_0') = s(bool,sK3(X56,X57,bool,bool)) | s(fun(bool,bool),X56) = s(fun(bool,bool),X57)) ) | $spl22),
  inference(duplicate_literal_removal,[],[f4994])).
fof(f4994,plain,(
  ( ! [X57,X56] : (s(bool,'F_0') != s(bool,f(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) | s(bool,'T_0') = s(bool,sK3(X56,X57,bool,bool)) | s(fun(bool,bool),X56) = s(fun(bool,bool),X57) | s(bool,'T_0') = s(bool,sK3(X56,X57,bool,bool))) ) | $spl22),
  inference(superposition,[],[f883,f277])).
fof(f5033,plain,(
  ( ! [X39,X38,X40] : (s(bool,'F_0') != s(bool,f(s(bool,X38))) | s(bool,'T_0') = s(bool,X40) | s(bool,X39) = s(bool,X40) | s(bool,X38) = s(bool,X39)) ) | $spl80),
  inference(cnf_transformation,[],[f5033_D])).
fof(f5033_D,plain,(
  ( ! [X39,X38,X40] : (s(bool,'F_0') != s(bool,f(s(bool,X38))) | s(bool,'T_0') = s(bool,X40) | s(bool,X39) = s(bool,X40) | s(bool,X38) = s(bool,X39)) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f5017,plain,(
  ( ! [X54,X52,X55,X53,X51] : (s(bool,'F_0') != s(bool,f(s(bool,X53))) | s(bool,'T_0') = s(bool,sK3(X51,X52,bool,bool)) | s(fun(bool,bool),X51) = s(fun(bool,bool),X52) | s(bool,X53) = s(bool,X54) | s(bool,X54) = s(bool,X55) | s(bool,'T_0') = s(bool,X55)) ) | $spl22),
  inference(duplicate_literal_removal,[],[f4993])).
fof(f4993,plain,(
  ( ! [X54,X52,X55,X53,X51] : (s(bool,'F_0') != s(bool,f(s(bool,X53))) | s(bool,'T_0') = s(bool,sK3(X51,X52,bool,bool)) | s(fun(bool,bool),X51) = s(fun(bool,bool),X52) | s(bool,X53) = s(bool,X54) | s(bool,X54) = s(bool,X55) | s(bool,'T_0') = s(bool,X55) | s(bool,'T_0') = s(bool,sK3(X51,X52,bool,bool))) ) | $spl22),
  inference(superposition,[],[f883,f103])).
fof(f5032,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,f(s(bool,X9))) | s(bool,'T_0') = s(bool,X9)) ) | $spl78),
  inference(cnf_transformation,[],[f5032_D])).
fof(f5032_D,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,f(s(bool,X9))) | s(bool,'T_0') = s(bool,X9)) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f5020,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,sK3(X0,X1,bool,bool)) | s(bool,'F_0') != s(bool,f(s(bool,X2))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X2)) ) | $spl22),
  inference(condensation,[],[f5019])).
fof(f5019,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,sK3(X0,X1,bool,bool)) | s(bool,'F_0') != s(bool,f(s(bool,X2))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) ) | $spl22),
  inference(duplicate_literal_removal,[],[f5018])).
fof(f5018,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,sK3(X0,X1,bool,bool)) | s(bool,'F_0') != s(bool,f(s(bool,X2))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) ) | $spl22),
  inference(condensation,[],[f4992])).
fof(f4992,plain,(
  ( ! [X47,X50,X48,X46,X49] : (s(bool,'F_0') != s(bool,f(s(bool,X48))) | s(bool,'T_0') = s(bool,sK3(X46,X47,bool,bool)) | s(fun(bool,bool),X46) = s(fun(bool,bool),X47) | s(bool,X49) = s(bool,sK3(X46,X47,bool,bool)) | s(bool,X49) = s(bool,X50) | s(bool,'T_0') = s(bool,X50) | s(bool,'T_0') = s(bool,X48)) ) | $spl22),
  inference(superposition,[],[f883,f103])).
fof(f5021,plain,(
  ( ! [X39,X37,X38,X36,X40] : (s(bool,'F_0') != s(bool,f(s(bool,X38))) | s(bool,'T_0') = s(bool,sK3(X36,X37,bool,bool)) | s(fun(bool,bool),X36) = s(fun(bool,bool),X37) | s(bool,X38) = s(bool,X39) | s(bool,X39) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) ) | $spl22),
  inference(duplicate_literal_removal,[],[f4990])).
fof(f4990,plain,(
  ( ! [X39,X37,X38,X36,X40] : (s(bool,'F_0') != s(bool,f(s(bool,X38))) | s(bool,'T_0') = s(bool,sK3(X36,X37,bool,bool)) | s(fun(bool,bool),X36) = s(fun(bool,bool),X37) | s(bool,X38) = s(bool,X39) | s(bool,'T_0') = s(bool,sK3(X36,X37,bool,bool)) | s(bool,X39) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) ) | $spl22),
  inference(superposition,[],[f883,f103])).
fof(f5024,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,sK3(X0,X1,bool,bool)) | s(bool,'F_0') != s(bool,f(s(bool,X2))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X2)) ) | $spl22),
  inference(condensation,[],[f5023])).
fof(f5023,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,sK3(X0,X1,bool,bool)) | s(bool,'F_0') != s(bool,f(s(bool,X2))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X3)) ) | $spl22),
  inference(duplicate_literal_removal,[],[f5022])).
fof(f5022,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,sK3(X0,X1,bool,bool)) | s(bool,'F_0') != s(bool,f(s(bool,X2))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl22),
  inference(condensation,[],[f4989])).
fof(f4989,plain,(
  ( ! [X35,X33,X31,X34,X32] : (s(bool,'F_0') != s(bool,f(s(bool,X33))) | s(bool,'T_0') = s(bool,sK3(X31,X32,bool,bool)) | s(fun(bool,bool),X31) = s(fun(bool,bool),X32) | s(bool,X34) = s(bool,sK3(X31,X32,bool,bool)) | s(bool,'T_0') = s(bool,X33) | s(bool,X34) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) ) | $spl22),
  inference(superposition,[],[f883,f103])).
fof(f5025,plain,(
  ( ! [X12,X10,X11] : (s(bool,'F_0') != s(bool,f(s(bool,X12))) | s(bool,'T_0') = s(bool,sK3(X10,X11,bool,bool)) | s(fun(bool,bool),X10) = s(fun(bool,bool),X11) | s(bool,'T_0') = s(bool,X12)) ) | $spl22),
  inference(duplicate_literal_removal,[],[f4984])).
fof(f4984,plain,(
  ( ! [X12,X10,X11] : (s(bool,'F_0') != s(bool,f(s(bool,X12))) | s(bool,'T_0') = s(bool,sK3(X10,X11,bool,bool)) | s(fun(bool,bool),X10) = s(fun(bool,bool),X11) | s(bool,'T_0') = s(bool,sK3(X10,X11,bool,bool)) | s(bool,'T_0') = s(bool,X12)) ) | $spl22),
  inference(superposition,[],[f883,f40])).
fof(f5026,plain,(
  ( ! [X8,X7,X9] : (s(bool,'F_0') != s(bool,f(s(bool,X9))) | s(bool,'T_0') = s(bool,sK3(X7,X8,bool,bool)) | s(fun(bool,bool),X7) = s(fun(bool,bool),X8) | s(bool,'T_0') = s(bool,X9)) ) | $spl22),
  inference(duplicate_literal_removal,[],[f4983])).
fof(f4983,plain,(
  ( ! [X8,X7,X9] : (s(bool,'F_0') != s(bool,f(s(bool,X9))) | s(bool,'T_0') = s(bool,sK3(X7,X8,bool,bool)) | s(fun(bool,bool),X7) = s(fun(bool,bool),X8) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,sK3(X7,X8,bool,bool))) ) | $spl22),
  inference(superposition,[],[f883,f40])).
fof(f5027,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,sK3(X2,X3,bool,bool)) | s(fun(bool,bool),X2) = s(fun(bool,bool),X3)) ) | $spl22),
  inference(duplicate_literal_removal,[],[f4981])).
fof(f4981,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,sK3(X2,X3,bool,bool)) | s(fun(bool,bool),X2) = s(fun(bool,bool),X3) | s(bool,'T_0') = s(bool,sK3(X2,X3,bool,bool))) ) | $spl22),
  inference(superposition,[],[f883,f31])).
fof(f4680,plain,(
  ( ! [X255,X253,X252,X256] : (s(fun(bool,bool),X252) = s(fun(bool,bool),X253) | s(bool,'T_0') = s(bool,X256) | s(bool,X255) = s(bool,X256) | s(bool,X255) = s(bool,sK3(X252,X253,bool,bool)) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X252,X253,bool,bool))))) ) | $spl72),
  inference(cnf_transformation,[],[f4680_D])).
fof(f4680_D,plain,(
  ( ! [X255,X253,X252,X256] : (s(fun(bool,bool),X252) = s(fun(bool,bool),X253) | s(bool,'T_0') = s(bool,X256) | s(bool,X255) = s(bool,X256) | s(bool,X255) = s(bool,sK3(X252,X253,bool,bool)) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X252,X253,bool,bool))))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f3221,plain,(
  ( ! [X255,X253,X254,X252,X256] : (s(bool,'T_0') = s(bool,g(s(bool,X254))) | s(fun(bool,bool),X252) = s(fun(bool,bool),X253) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X252,X253,bool,bool)))) | s(bool,X255) = s(bool,sK3(X252,X253,bool,bool)) | s(bool,X255) = s(bool,X256) | s(bool,'T_0') = s(bool,X256) | s(bool,'T_0') = s(bool,X254)) )),
  inference(superposition,[],[f291,f103])).
fof(f3055,plain,(
  ( ! [X255,X253,X254,X252,X256] : (s(bool,'T_0') = s(bool,g(s(bool,X254))) | s(fun(bool,bool),X252) = s(fun(bool,bool),X253) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X252,X253,bool,bool)))) | s(bool,X255) = s(bool,sK3(X252,X253,bool,bool)) | s(bool,'T_0') = s(bool,X254) | s(bool,X255) = s(bool,X256) | s(bool,'T_0') = s(bool,X256)) )),
  inference(superposition,[],[f291,f103])).
fof(f886,plain,(
  ( ! [X6,X4,X5] : (s(fun(bool,bool),X4) = s(fun(bool,bool),X5) | s(bool,'T_0') = s(bool,X6) | s(bool,X6) = s(bool,sK3(X4,X5,bool,bool)) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X4,X5,bool,bool))))) ) | $spl26),
  inference(cnf_transformation,[],[f886_D])).
fof(f886_D,plain,(
  ( ! [X6,X4,X5] : (s(fun(bool,bool),X4) = s(fun(bool,bool),X5) | s(bool,'T_0') = s(bool,X6) | s(bool,X6) = s(bool,sK3(X4,X5,bool,bool)) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X4,X5,bool,bool))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f4635,plain,(
  ( ! [X255,X254] : (s(bool,'T_0') = s(bool,g(s(bool,X254))) | s(bool,'T_0') = s(bool,X255) | s(bool,X254) = s(bool,X255)) ) | $spl70),
  inference(cnf_transformation,[],[f4635_D])).
fof(f4635_D,plain,(
  ( ! [X255,X254] : (s(bool,'T_0') = s(bool,g(s(bool,X254))) | s(bool,'T_0') = s(bool,X255) | s(bool,X254) = s(bool,X255)) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f2997,plain,(
  ( ! [X255,X253,X254,X252,X256] : (s(bool,'T_0') = s(bool,g(s(bool,X254))) | s(fun(bool,bool),X252) = s(fun(bool,bool),X253) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X252,X253,bool,bool)))) | s(bool,X255) = s(bool,sK3(X252,X253,bool,bool)) | s(bool,'T_0') = s(bool,X255) | s(bool,X254) = s(bool,X256) | s(bool,'T_0') = s(bool,X256)) )),
  inference(superposition,[],[f291,f103])).
fof(f2939,plain,(
  ( ! [X255,X253,X254,X252,X256] : (s(bool,'T_0') = s(bool,g(s(bool,X254))) | s(fun(bool,bool),X252) = s(fun(bool,bool),X253) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X252,X253,bool,bool)))) | s(bool,X254) = s(bool,X255) | s(bool,'T_0') = s(bool,X255) | s(bool,X256) = s(bool,sK3(X252,X253,bool,bool)) | s(bool,'T_0') = s(bool,X256)) )),
  inference(superposition,[],[f291,f103])).
fof(f2150,plain,(
  p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK1),s('type.num.num',sK1),s('type.num.num',sK2)))) | $spl66),
  inference(cnf_transformation,[],[f2150_D])).
fof(f2150_D,plain,(
  p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK1),s('type.num.num',sK1),s('type.num.num',sK2)))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f2152,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK1,sK1)),s('type.num.num',sK1)))) | $spl68),
  inference(cnf_transformation,[],[f2152_D])).
fof(f2152_D,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK1,sK1)),s('type.num.num',sK1)))) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f2148,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK1,sK1)),s('type.num.num',sK1)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK1),s('type.num.num',sK1),s('type.num.num',sK2))))),
  inference(subsumption_resolution,[],[f2133,f29])).
fof(f2133,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK1,sK1)),s('type.num.num',sK1)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK1),s('type.num.num',sK1),s('type.num.num',sK2))))),
  inference(superposition,[],[f628,f51])).
fof(f2145,plain,(
  p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK1),s('type.num.num',sK0),s('type.num.num',sK2)))) | $spl62),
  inference(cnf_transformation,[],[f2145_D])).
fof(f2145_D,plain,(
  p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK1),s('type.num.num',sK0),s('type.num.num',sK2)))) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f2147,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK0,sK1)),s('type.num.num',sK0)))) | $spl64),
  inference(cnf_transformation,[],[f2147_D])).
fof(f2147_D,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK0,sK1)),s('type.num.num',sK0)))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f2143,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK0,sK1)),s('type.num.num',sK0)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK1),s('type.num.num',sK0),s('type.num.num',sK2))))),
  inference(subsumption_resolution,[],[f2132,f29])).
fof(f2132,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK0,sK1)),s('type.num.num',sK0)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK1),s('type.num.num',sK0),s('type.num.num',sK2))))),
  inference(superposition,[],[f628,f49])).
fof(f670,plain,(
  p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',sK0),s('type.num.num',sK2)))) | $spl8),
  inference(cnf_transformation,[],[f670_D])).
fof(f670_D,plain,(
  p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',sK0),s('type.num.num',sK2)))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f672,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK0,sK0)),s('type.num.num',sK0)))) | $spl10),
  inference(cnf_transformation,[],[f672_D])).
fof(f672_D,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK0,sK0)),s('type.num.num',sK0)))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f1334,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK0,sK0)),s('type.num.num',sK0)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',sK0),s('type.num.num',sK2))))),
  inference(subsumption_resolution,[],[f1320,f29])).
fof(f1320,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK0,sK0)),s('type.num.num',sK0)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',sK0),s('type.num.num',sK2))))),
  inference(superposition,[],[f627,f49])).
fof(f1784,plain,(
  $false | ($spl0 | $spl34)),
  inference(global_subsumption,[],[f1399,f28,f27,f26,f29,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1707,f1717,f30,f286,f811,f1722,f1727,f1598,f1768])).
fof(f1768,plain,(
  p(s(bool,'F_0')) | $spl0),
  inference(duplicate_literal_removal,[],[f1767])).
fof(f1767,plain,(
  p(s(bool,'F_0')) | p(s(bool,'F_0')) | $spl0),
  inference(forward_demodulation,[],[f1596,f53])).
fof(f1596,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',sK0),s('type.num.num',sK2)))) | $spl0),
  inference(forward_demodulation,[],[f1334,f53])).
fof(f1598,plain,(
  ~p(s(bool,'F_0')) | $spl0),
  inference(forward_demodulation,[],[f28,f53])).
fof(f1727,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,X3) = s(bool,g(s(X0,sK3(X1,X2,bool,X0)))) | s(bool,'T_0') = s(bool,X3)) ) | $spl0),
  inference(subsumption_resolution,[],[f1726,f53])).
fof(f1726,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'F_0') | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,X3) = s(bool,g(s(X0,sK3(X1,X2,bool,X0)))) | s(bool,'T_0') = s(bool,X3)) ) | $spl0),
  inference(forward_demodulation,[],[f287,f53])).
fof(f1722,plain,(
  ( ! [X33,X31,X32] : (s(bool,'T_0') != s(bool,f(s(X31,sK3(X32,X33,bool,X31)))) | s(fun(X31,bool),X32) = s(fun(X31,bool),X33)) ) | $spl0),
  inference(subsumption_resolution,[],[f868,f53])).
fof(f1717,plain,(
  ( ! [X9] : (~p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,X9)) ) | $spl0),
  inference(forward_demodulation,[],[f331,f53])).
fof(f1707,plain,(
  ( ! [X23,X21,X22] : (s(X23,f(s(bool,'F_0'))) != s(X23,g(s(bool,'F_0'))) | s(fun(bool,X23),X21) = s(fun(bool,X23),X22) | s(bool,'T_0') = s(bool,sK3(X21,X22,X23,bool))) ) | $spl0),
  inference(forward_demodulation,[],[f316,f53])).
fof(f1783,plain,(
  $false | ($spl0 | $spl4 | $spl42)),
  inference(global_subsumption,[],[f1782,f28,f27,f26,f29,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1707,f1717,f30,f286,f811,f1722,f1727,f1598,f1768])).
fof(f1782,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl4 | $spl42)),
  inference(forward_demodulation,[],[f1781,f53])).
fof(f1781,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) | ($spl4 | $spl42)),
  inference(forward_demodulation,[],[f1406,f354])).
fof(f1780,plain,(
  $false | ($spl0 | $spl4 | $spl44)),
  inference(global_subsumption,[],[f1779,f28,f27,f26,f29,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1707,f1717,f30,f286,f811,f1722,f1727,f1598,f1768])).
fof(f1779,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl4 | $spl44)),
  inference(forward_demodulation,[],[f1778,f53])).
fof(f1778,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) | ($spl4 | $spl44)),
  inference(forward_demodulation,[],[f1407,f354])).
fof(f1771,plain,(
  $false | ($spl0 | $spl30)),
  inference(global_subsumption,[],[f1592,f28,f27,f26,f29,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1707,f1717,f30,f286,f811,f1722,f1727,f1598,f1768])).
fof(f1592,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl30)),
  inference(forward_demodulation,[],[f916,f53])).
fof(f916,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',sK2)))) | $spl30),
  inference(unit_resulting_resolution,[],[f911,f35])).
fof(f1770,plain,(
  $false | ($spl0 | $spl30)),
  inference(global_subsumption,[],[f1594,f28,f27,f26,f29,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1707,f1717,f30,f286,f811,f1722,f1727,f1598,f1768])).
fof(f1594,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl30)),
  inference(forward_demodulation,[],[f974,f53])).
fof(f974,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',sK2)))) | $spl30),
  inference(subsumption_resolution,[],[f960,f29])).
fof(f960,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',sK2)))) | $spl30),
  inference(superposition,[],[f35,f918])).
fof(f918,plain,(
  s(bool,'T_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',sK2),s('type.num.num',sK2))) | $spl30),
  inference(unit_resulting_resolution,[],[f911,f42])).
fof(f1769,plain,(
  $false | $spl0),
  inference(global_subsumption,[],[f28,f27,f26,f29,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1707,f1717,f30,f286,f811,f1722,f1727,f1598,f1768])).
fof(f1766,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f28,f27,f26,f29,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1577,f1707,f1717,f30,f286,f811,f1722,f1727,f1598])).
fof(f1577,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl10)),
  inference(forward_demodulation,[],[f672,f53])).
fof(f1728,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f28,f27,f26,f29,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1577,f1707,f1717,f30,f286,f811,f1722,f1727])).
fof(f1725,plain,(
  $false | ($spl0 | $spl10 | $spl22)),
  inference(global_subsumption,[],[f1724,f28,f27,f26,f29,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1577,f1707,f1717,f30,f286,f811,f1722])).
fof(f1724,plain,(
  ( ! [X2,X3] : (s(fun(bool,bool),X2) = s(fun(bool,bool),X3) | s(bool,'T_0') = s(bool,sK3(X2,X3,bool,bool))) ) | ($spl0 | $spl22)),
  inference(subsumption_resolution,[],[f883,f53])).
fof(f1723,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f28,f27,f26,f29,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1577,f1707,f1717,f30,f286,f811,f1722])).
fof(f1721,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f28,f27,f26,f29,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1577,f1707,f1717,f30,f286,f811])).
fof(f1720,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f28,f27,f26,f29,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f811,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1577,f1707,f1717,f30,f286])).
fof(f1719,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f28,f27,f26,f29,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f286,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f811,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1577,f1707,f1717,f30])).
fof(f1718,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f28,f27,f26,f29,f30,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f286,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f811,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1577,f1707,f1717])).
fof(f1708,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f28,f27,f26,f29,f30,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f286,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f811,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1577,f1707])).
fof(f1687,plain,(
  $false | ($spl0 | $spl4 | $spl10)),
  inference(global_subsumption,[],[f1686,f28,f27,f26,f29,f30,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f286,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f811,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1577])).
fof(f1686,plain,(
  ( ! [X64,X62,X63] : (s(X64,f(s(bool,'F_0'))) != s(X64,g(s(bool,'F_0'))) | s(fun(bool,X64),X62) = s(fun(bool,X64),X63) | s(bool,'T_0') = s(bool,sK3(X62,X63,X64,bool))) ) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f1469,f53])).
fof(f1469,plain,(
  ( ! [X64,X62,X63] : (s(X64,f(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) != s(X64,g(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) | s(fun(bool,X64),X62) = s(fun(bool,X64),X63) | s(bool,'T_0') = s(bool,sK3(X62,X63,X64,bool))) ) | $spl4),
  inference(forward_demodulation,[],[f557,f354])).
fof(f1685,plain,(
  $false | ($spl0 | $spl4 | $spl10)),
  inference(global_subsumption,[],[f1663,f28,f27,f26,f29,f30,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f286,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f811,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1577])).
fof(f1663,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f1466,f53])).
fof(f1466,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) | $spl4),
  inference(forward_demodulation,[],[f1411,f354])).
fof(f1684,plain,(
  $false | ($spl0 | $spl4 | $spl10)),
  inference(global_subsumption,[],[f1666,f28,f27,f26,f29,f30,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f286,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f811,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1577])).
fof(f1666,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f1463,f53])).
fof(f1463,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) | $spl4),
  inference(forward_demodulation,[],[f67,f354])).
fof(f1683,plain,(
  $false | ($spl0 | $spl4 | $spl10)),
  inference(global_subsumption,[],[f1682,f28,f27,f26,f29,f30,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f286,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f811,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1577])).
fof(f1682,plain,(
  ( ! [X54,X52,X53] : (s(X54,f(s(bool,'F_0'))) != s(X54,g(s(bool,'F_0'))) | s(fun(bool,X54),X52) = s(fun(bool,X54),X53) | s(bool,'T_0') = s(bool,sK3(X52,X53,X54,bool))) ) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f1461,f53])).
fof(f1461,plain,(
  ( ! [X54,X52,X53] : (s(X54,f(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) != s(X54,g(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) | s(fun(bool,X54),X52) = s(fun(bool,X54),X53) | s(bool,'T_0') = s(bool,sK3(X52,X53,X54,bool))) ) | $spl4),
  inference(forward_demodulation,[],[f430,f354])).
fof(f1681,plain,(
  $false | ($spl0 | $spl4 | $spl10)),
  inference(global_subsumption,[],[f1669,f28,f27,f26,f29,f30,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f286,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f811,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1577])).
fof(f1669,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f1458,f53])).
fof(f1458,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) | $spl4),
  inference(forward_demodulation,[],[f1412,f354])).
fof(f1680,plain,(
  $false | ($spl0 | $spl4 | $spl10)),
  inference(global_subsumption,[],[f1672,f28,f27,f26,f29,f30,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f286,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f811,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1577])).
fof(f1672,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f1455,f53])).
fof(f1455,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) | $spl4),
  inference(forward_demodulation,[],[f77,f354])).
fof(f1679,plain,(
  $false | ($spl4 | $spl7)),
  inference(subsumption_resolution,[],[f356,f354])).
fof(f1678,plain,(
  $false | ($spl0 | $spl10)),
  inference(global_subsumption,[],[f28,f27,f26,f29,f30,f31,f32,f33,f39,f38,f37,f36,f35,f34,f40,f42,f49,f51,f48,f59,f67,f77,f103,f149,f277,f278,f279,f280,f281,f282,f284,f286,f287,f289,f291,f325,f376,f444,f493,f494,f495,f573,f627,f628,f629,f668,f673,f678,f690,f748,f749,f750,f811,f877,f846,f847,f848,f849,f850,f868,f989,f1044,f1114,f1342,f1332,f1331,f689,f1411,f688,f1412,f557,f580,f587,f592,f593,f599,f430,f457,f462,f468,f431,f558,f53,f1577])).
fof(f1675,plain,(
  $false | ($spl7 | $spl50)),
  inference(subsumption_resolution,[],[f356,f1413])).
fof(f1674,plain,(
  $false | ($spl0 | $spl4 | $spl50)),
  inference(subsumption_resolution,[],[f1673,f29])).
fof(f1673,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl4 | $spl50)),
  inference(forward_demodulation,[],[f1672,f1413])).
fof(f1671,plain,(
  $false | ($spl0 | $spl4 | $spl50)),
  inference(subsumption_resolution,[],[f1670,f29])).
fof(f1670,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl4 | $spl50)),
  inference(forward_demodulation,[],[f1669,f1413])).
fof(f1668,plain,(
  $false | ($spl0 | $spl4 | $spl50)),
  inference(subsumption_resolution,[],[f1667,f29])).
fof(f1667,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl4 | $spl50)),
  inference(forward_demodulation,[],[f1666,f1413])).
fof(f1665,plain,(
  $false | ($spl0 | $spl4 | $spl50)),
  inference(subsumption_resolution,[],[f1664,f29])).
fof(f1664,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl4 | $spl50)),
  inference(forward_demodulation,[],[f1663,f1413])).
fof(f1662,plain,(
  $false | $spl50),
  inference(subsumption_resolution,[],[f1661,f29])).
fof(f1661,plain,(
  ~p(s(bool,'T_0')) | $spl50),
  inference(forward_demodulation,[],[f30,f1413])).
fof(f1600,plain,(
  $false | ($spl0 | $spl50)),
  inference(subsumption_resolution,[],[f1599,f29])).
fof(f1599,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl50)),
  inference(forward_demodulation,[],[f1598,f1413])).
fof(f1583,plain,(
  $false | ($spl0 | $spl9 | $spl50)),
  inference(subsumption_resolution,[],[f1582,f29])).
fof(f1582,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl9 | $spl50)),
  inference(backward_demodulation,[],[f1413,f1576])).
fof(f1576,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl9)),
  inference(forward_demodulation,[],[f669,f53])).
fof(f669,plain,(
  ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',sK0),s('type.num.num',sK2)))) | $spl9),
  inference(cnf_transformation,[],[f669_D])).
fof(f669_D,plain,(
  ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',sK0),s('type.num.num',sK2)))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f1578,plain,(
  $false | ($spl0 | $spl9 | $spl10)),
  inference(subsumption_resolution,[],[f1577,f1576])).
fof(f1575,plain,(
  $false | ($spl6 | $spl9)),
  inference(subsumption_resolution,[],[f1574,f29])).
fof(f1574,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl9)),
  inference(forward_demodulation,[],[f669,f1500])).
fof(f1500,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) | $spl6),
  inference(subsumption_resolution,[],[f1499,f29])).
fof(f1499,plain,(
  ( ! [X9] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,X9)) ) | $spl6),
  inference(forward_demodulation,[],[f331,f355])).
fof(f355,plain,(
  s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) | $spl6),
  inference(cnf_transformation,[],[f355_D])).
fof(f355_D,plain,(
  s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f1563,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f1562,f29])).
fof(f1562,plain,(
  ~p(s(bool,'T_0')) | $spl6),
  inference(forward_demodulation,[],[f28,f355])).
fof(f1540,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f1501,f29])).
fof(f1501,plain,(
  ~p(s(bool,'T_0')) | $spl6),
  inference(backward_demodulation,[],[f1500,f30])).
fof(f1468,plain,(
  $false | ($spl4 | $spl6)),
  inference(subsumption_resolution,[],[f1467,f29])).
fof(f1467,plain,(
  ~p(s(bool,'T_0')) | ($spl4 | $spl6)),
  inference(forward_demodulation,[],[f1466,f355])).
fof(f1465,plain,(
  $false | ($spl4 | $spl6)),
  inference(subsumption_resolution,[],[f1464,f29])).
fof(f1464,plain,(
  ~p(s(bool,'T_0')) | ($spl4 | $spl6)),
  inference(forward_demodulation,[],[f1463,f355])).
fof(f1460,plain,(
  $false | ($spl4 | $spl6)),
  inference(subsumption_resolution,[],[f1459,f29])).
fof(f1459,plain,(
  ~p(s(bool,'T_0')) | ($spl4 | $spl6)),
  inference(forward_demodulation,[],[f1458,f355])).
fof(f1457,plain,(
  $false | ($spl4 | $spl6)),
  inference(subsumption_resolution,[],[f1456,f29])).
fof(f1456,plain,(
  ~p(s(bool,'T_0')) | ($spl4 | $spl6)),
  inference(forward_demodulation,[],[f1455,f355])).
fof(f1434,plain,(
  $false | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f1433,f55])).
fof(f1433,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl3 | $spl6)),
  inference(backward_demodulation,[],[f355,f292])).
fof(f1413,plain,(
  ( ! [X18] : (s(bool,'T_0') = s(bool,X18)) ) | $spl50),
  inference(cnf_transformation,[],[f1413_D])).
fof(f1413_D,plain,(
  ( ! [X18] : (s(bool,'T_0') = s(bool,X18)) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f1425,plain,(
  ( ! [X17] : (s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X17),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) ) | $spl58),
  inference(cnf_transformation,[],[f1425_D])).
fof(f1425_D,plain,(
  ( ! [X17] : (s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X17),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f468,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X1),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f402])).
fof(f402,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X1),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f280,f31])).
fof(f1427,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X15),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X14)) ) | $spl3),
  inference(forward_demodulation,[],[f463,f292])).
fof(f463,plain,(
  ( ! [X14,X15] : (s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X15),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(duplicate_literal_removal,[],[f407])).
fof(f407,plain,(
  ( ! [X14,X15] : (s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X15),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X14) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f280,f277])).
fof(f1426,plain,(
  ( ! [X17,X18] : (s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X17),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X18),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) ) | $spl60),
  inference(cnf_transformation,[],[f1426_D])).
fof(f1426_D,plain,(
  ( ! [X17,X18] : (s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X17),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X18),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f462,plain,(
  ( ! [X17,X18,X16] : (s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X17),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X18),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(duplicate_literal_removal,[],[f408])).
fof(f408,plain,(
  ( ! [X17,X18,X16] : (s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X17),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X18),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f280,f280])).
fof(f457,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X1),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f418])).
fof(f418,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X1),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f31,f280])).
fof(f1424,plain,(
  ( ! [X17,X16] : (s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X17),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X16)) ) | $spl3),
  inference(forward_demodulation,[],[f451,f292])).
fof(f451,plain,(
  ( ! [X17,X16] : (s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X17),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(duplicate_literal_removal,[],[f424])).
fof(f424,plain,(
  ( ! [X17,X16] : (s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X17),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f277,f280])).
fof(f1416,plain,(
  ( ! [X17] : (s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X17),s('type.num.num',sK2)))) ) | $spl54),
  inference(cnf_transformation,[],[f1416_D])).
fof(f1416_D,plain,(
  ( ! [X17] : (s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X17),s('type.num.num',sK2)))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f599,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X1),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f520])).
fof(f520,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X1),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f281,f31])).
fof(f1418,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X15),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X14)) ) | $spl3),
  inference(forward_demodulation,[],[f594,f292])).
fof(f594,plain,(
  ( ! [X14,X15] : (s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X15),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(duplicate_literal_removal,[],[f525])).
fof(f525,plain,(
  ( ! [X14,X15] : (s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X15),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X14) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f281,f277])).
fof(f1414,plain,(
  ( ! [X19,X20] : (s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X20),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X19),s('type.num.num',sK2)))) ) | $spl52),
  inference(cnf_transformation,[],[f1414_D])).
fof(f1414_D,plain,(
  ( ! [X19,X20] : (s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X20),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X19),s('type.num.num',sK2)))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f593,plain,(
  ( ! [X17,X18,X16] : (s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X17),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X18),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(duplicate_literal_removal,[],[f526])).
fof(f526,plain,(
  ( ! [X17,X18,X16] : (s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X17),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X18),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f281,f280])).
fof(f1417,plain,(
  ( ! [X21,X20] : (s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X20),s('type.num.num',sK2))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X21),s('type.num.num',sK2)))) ) | $spl56),
  inference(cnf_transformation,[],[f1417_D])).
fof(f1417_D,plain,(
  ( ! [X21,X20] : (s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X20),s('type.num.num',sK2))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X21),s('type.num.num',sK2)))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f592,plain,(
  ( ! [X21,X19,X20] : (s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X20),s('type.num.num',sK2))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X21),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X19)) )),
  inference(duplicate_literal_removal,[],[f527])).
fof(f527,plain,(
  ( ! [X21,X19,X20] : (s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X20),s('type.num.num',sK2))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X21),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X19) | s(bool,'T_0') = s(bool,X19)) )),
  inference(superposition,[],[f281,f281])).
fof(f587,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X1),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f542])).
fof(f542,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X1),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f31,f281])).
fof(f1415,plain,(
  ( ! [X17,X16] : (s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X17),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X16)) ) | $spl3),
  inference(forward_demodulation,[],[f581,f292])).
fof(f581,plain,(
  ( ! [X17,X16] : (s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X17),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(duplicate_literal_removal,[],[f548])).
fof(f548,plain,(
  ( ! [X17,X16] : (s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X17),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f277,f281])).
fof(f580,plain,(
  ( ! [X19,X20,X18] : (s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X20),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X19),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X18)) )),
  inference(duplicate_literal_removal,[],[f549])).
fof(f549,plain,(
  ( ! [X19,X20,X18] : (s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X20),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X19),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f280,f281])).
fof(f1410,plain,(
  ( ! [X12] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',sK2)))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',sK0)))) ) | $spl48),
  inference(cnf_transformation,[],[f1410_D])).
fof(f1410_D,plain,(
  ( ! [X12] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',sK2)))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',sK0)))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f1407,plain,(
  ( ! [X14] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X14),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))))) ) | $spl44),
  inference(cnf_transformation,[],[f1407_D])).
fof(f1407_D,plain,(
  ( ! [X14] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X14),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f827,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X11),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X10),s('type.num.num',sK2)))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X10),s('type.num.num',sK0)))) ) | $spl8),
  inference(superposition,[],[f770,f280])).
fof(f770,plain,(
  ( ! [X0] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',sK0)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',sK2))))) ) | $spl8),
  inference(subsumption_resolution,[],[f765,f29])).
fof(f765,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',sK0)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',sK2))))) ) | $spl8),
  inference(duplicate_literal_removal,[],[f754])).
fof(f754,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',sK0)))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',sK0)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',sK2))))) ) | $spl8),
  inference(superposition,[],[f36,f696])).
fof(f696,plain,(
  s(bool,'T_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',sK0),s('type.num.num',sK2))) | $spl8),
  inference(unit_resulting_resolution,[],[f670,f42])).
fof(f1406,plain,(
  ( ! [X16] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X16),s('type.num.num',sK2))))) ) | $spl42),
  inference(cnf_transformation,[],[f1406_D])).
fof(f1406_D,plain,(
  ( ! [X16] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X16),s('type.num.num',sK2))))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f828,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X13),s('type.num.num',sK2)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',sK2)))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',sK0)))) ) | $spl8),
  inference(superposition,[],[f770,f281])).
fof(f1408,plain,(
  ( ! [X14] : (s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X14),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X14),s('type.num.num',sK0)))) ) | $spl46),
  inference(cnf_transformation,[],[f1408_D])).
fof(f1408_D,plain,(
  ( ! [X14] : (s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X14),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X14),s('type.num.num',sK0)))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f1308,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X13),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',sK0)))) ) | $spl8),
  inference(superposition,[],[f1252,f280])).
fof(f1252,plain,(
  ( ! [X0] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',sK0)))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',sK2)))) ) | $spl8),
  inference(condensation,[],[f1251])).
fof(f1251,plain,(
  ( ! [X14,X15] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X15),s('type.num.num',sK0)))) | s(bool,'T_0') = s(bool,X14) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X15),s('type.num.num',sK2)))) ) | $spl8),
  inference(duplicate_literal_removal,[],[f1166])).
fof(f1166,plain,(
  ( ! [X14,X15] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X15),s('type.num.num',sK0)))) | s(bool,'T_0') = s(bool,X14) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X15),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X14)) ) | $spl8),
  inference(superposition,[],[f42,f987])).
fof(f987,plain,(
  ( ! [X2,X1] : (s(bool,X2) = s(bool,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X2)) ) | $spl8),
  inference(subsumption_resolution,[],[f979,f30])).
fof(f979,plain,(
  ( ! [X2,X1] : (p(s(bool,'F_0')) | s(bool,X2) = s(bool,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',sK2)))) ) | $spl8),
  inference(superposition,[],[f830,f31])).
fof(f830,plain,(
  ( ! [X2,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',sK2)))) | s(bool,X2) = s(bool,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,X2)) ) | $spl8),
  inference(subsumption_resolution,[],[f822,f29])).
fof(f822,plain,(
  ( ! [X2,X1] : (~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',sK2)))) | s(bool,X2) = s(bool,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,X2)) ) | $spl8),
  inference(superposition,[],[f770,f40])).
fof(f1309,plain,(
  ( ! [X14,X15] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X15),s('type.num.num',sK2)))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X14),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X14),s('type.num.num',sK0)))) ) | $spl8),
  inference(superposition,[],[f1252,f281])).
fof(f1405,plain,(
  ( ! [X15] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,X15,sK0)),s('type.num.num',X15)))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',X15))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',X15),s('type.num.num',sK2))))) ) | $spl40),
  inference(cnf_transformation,[],[f1405_D])).
fof(f1405_D,plain,(
  ( ! [X15] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,X15,sK0)),s('type.num.num',X15)))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',X15))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',X15),s('type.num.num',sK2))))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f1331,plain,(
  ( ! [X14,X13] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X14),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,X13,sK0)),s('type.num.num',X13)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',X13),s('type.num.num',sK2)))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',X13)))) )),
  inference(superposition,[],[f627,f280])).
fof(f1332,plain,(
  ( ! [X15,X16] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X16),s('type.num.num',sK2)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,X15,sK0)),s('type.num.num',X15)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',X15),s('type.num.num',sK2)))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',X15)))) )),
  inference(superposition,[],[f627,f281])).
fof(f1399,plain,(
  ( ! [X12] : (s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',sK2)))) ) | $spl34),
  inference(cnf_transformation,[],[f1399_D])).
fof(f1399_D,plain,(
  ( ! [X12] : (s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',sK2)))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f1402,plain,(
  ( ! [X15] : (s(bool,'T_0') != s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X15),s('type.num.num',sK2)))) ) | $spl38),
  inference(cnf_transformation,[],[f1402_D])).
fof(f1402_D,plain,(
  ( ! [X15] : (s(bool,'T_0') != s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X15),s('type.num.num',sK2)))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f1401,plain,(
  ( ! [X14,X15] : (s(bool,'T_0') != s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X15),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X14),s('type.num.num',sK2)))) ) | ($spl7 | $spl8)),
  inference(subsumption_resolution,[],[f1392,f1290])).
fof(f1290,plain,(
  ( ! [X57] : (s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num',X57),s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X57),s('type.num.num',sK2)))) ) | ($spl7 | $spl8)),
  inference(subsumption_resolution,[],[f1178,f356])).
fof(f1178,plain,(
  ( ! [X57] : (s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num',X57),s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X57),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) ) | ($spl7 | $spl8)),
  inference(superposition,[],[f356,f987])).
fof(f1392,plain,(
  ( ! [X14,X15] : (s(bool,'T_0') != s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X15),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X14),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X14),s('type.num.num',sK0)))) ) | ($spl7 | $spl8)),
  inference(superposition,[],[f1290,f281])).
fof(f1400,plain,(
  ( ! [X13] : (s(bool,'T_0') != s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X13),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) ) | $spl36),
  inference(cnf_transformation,[],[f1400_D])).
fof(f1400_D,plain,(
  ( ! [X13] : (s(bool,'T_0') != s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X13),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f1398,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') != s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X13),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',sK2)))) ) | ($spl7 | $spl8)),
  inference(subsumption_resolution,[],[f1391,f1290])).
fof(f1391,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') != s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X13),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',X12),s('type.num.num',sK0)))) ) | ($spl7 | $spl8)),
  inference(superposition,[],[f1290,f280])).
fof(f911,plain,(
  p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',sK2),s('type.num.num',sK2)))) | $spl30),
  inference(cnf_transformation,[],[f911_D])).
fof(f911_D,plain,(
  p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',sK2),s('type.num.num',sK2)))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f913,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK2,sK0)),s('type.num.num',sK0)))) | $spl32),
  inference(cnf_transformation,[],[f913_D])).
fof(f913_D,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK2,sK0)),s('type.num.num',sK0)))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f909,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK2,sK0)),s('type.num.num',sK0)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',sK2),s('type.num.num',sK2)))) | $spl8),
  inference(subsumption_resolution,[],[f894,f29])).
fof(f894,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK2,sK0)),s('type.num.num',sK0)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',sK2),s('type.num.num',sK2)))) | $spl8),
  inference(superposition,[],[f493,f834])).
fof(f834,plain,(
  s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',sK2))) | $spl8),
  inference(unit_resulting_resolution,[],[f829,f42])).
fof(f829,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',sK2)))) | $spl8),
  inference(subsumption_resolution,[],[f820,f29])).
fof(f820,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num',sK2)))) | $spl8),
  inference(superposition,[],[f770,f49])).
fof(f890,plain,(
  ( ! [X21,X22] : (s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(fun(bool,bool),X21) = s(fun(bool,bool),X22) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X21,X22,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X21,X22,bool,bool))) ) | ($spl3 | $spl7)),
  inference(forward_demodulation,[],[f853,f600])).
fof(f600,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X0),s('type.num.num',sK2)))) ) | ($spl3 | $spl7)),
  inference(forward_demodulation,[],[f519,f292])).
fof(f519,plain,(
  ( ! [X0] : (s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',X0),s('type.num.num',sK2)))) ) | $spl7),
  inference(unit_resulting_resolution,[],[f356,f281])).
fof(f889,plain,(
  ( ! [X19,X18] : (s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(fun(bool,bool),X18) = s(fun(bool,bool),X19) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X18,X19,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X18,X19,bool,bool))) ) | ($spl3 | $spl7)),
  inference(forward_demodulation,[],[f852,f469])).
fof(f469,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) ) | ($spl3 | $spl7)),
  inference(forward_demodulation,[],[f401,f292])).
fof(f401,plain,(
  ( ! [X0] : (s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK2)))) ) | $spl7),
  inference(unit_resulting_resolution,[],[f356,f280])).
fof(f888,plain,(
  ( ! [X17,X16] : (s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(fun(bool,bool),X16) = s(fun(bool,bool),X17) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X16,X17,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X16,X17,bool,bool))) ) | $spl3),
  inference(forward_demodulation,[],[f851,f292])).
fof(f882,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | $spl20),
  inference(cnf_transformation,[],[f882_D])).
fof(f882_D,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f850,plain,(
  ( ! [X14,X15,X13] : (s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | s(fun(bool,bool),X13) = s(fun(bool,bool),X14) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X13,X14,bool,bool)))) | s(bool,X15) = s(bool,sK3(X13,X14,bool,bool)) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f291,f40])).
fof(f849,plain,(
  ( ! [X12,X10,X11] : (s(bool,'T_0') = s(bool,g(s(bool,X12))) | s(fun(bool,bool),X10) = s(fun(bool,bool),X11) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X10,X11,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X10,X11,bool,bool)) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f291,f40])).
fof(f848,plain,(
  ( ! [X8,X7,X9] : (s(bool,'T_0') = s(bool,g(s(bool,X9))) | s(fun(bool,bool),X7) = s(fun(bool,bool),X8) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X7,X8,bool,bool)))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,sK3(X7,X8,bool,bool))) )),
  inference(superposition,[],[f291,f40])).
fof(f847,plain,(
  ( ! [X6,X4,X5] : (s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | s(fun(bool,bool),X4) = s(fun(bool,bool),X5) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X4,X5,bool,bool)))) | s(bool,X6) = s(bool,sK3(X4,X5,bool,bool)) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f291,f40])).
fof(f846,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(fun(bool,bool),X2) = s(fun(bool,bool),X3) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X2,X3,bool,bool)))) | s(bool,'T_0') = s(bool,sK3(X2,X3,bool,bool))) )),
  inference(superposition,[],[f291,f31])).
fof(f879,plain,(
  s(bool,f(s(bool,'F_0'))) != s(bool,g(s(bool,'F_0'))) | $spl17),
  inference(cnf_transformation,[],[f879_D])).
fof(f879_D,plain,(
  s(bool,f(s(bool,'F_0'))) != s(bool,g(s(bool,'F_0'))) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f880,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X0,X1,bool,bool))))) ) | $spl18),
  inference(cnf_transformation,[],[f880_D])).
fof(f880_D,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X0,X1,bool,bool))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f877,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X0,X1,bool,bool)))) | s(bool,f(s(bool,'F_0'))) != s(bool,g(s(bool,'F_0')))) )),
  inference(duplicate_literal_removal,[],[f845])).
fof(f845,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'F_0') != s(bool,f(s(bool,sK3(X0,X1,bool,bool)))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,f(s(bool,'F_0'))) != s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f291,f286])).
fof(f675,plain,(
  p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',sK1),s('type.num.num',sK2)))) | $spl12),
  inference(cnf_transformation,[],[f675_D])).
fof(f675_D,plain,(
  p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',sK1),s('type.num.num',sK2)))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f677,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK1,sK0)),s('type.num.num',sK0)))) | $spl14),
  inference(cnf_transformation,[],[f677_D])).
fof(f677_D,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK1,sK0)),s('type.num.num',sK0)))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f673,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK1,sK0)),s('type.num.num',sK0)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',sK1),s('type.num.num',sK2))))),
  inference(subsumption_resolution,[],[f657,f29])).
fof(f657,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK1,sK0)),s('type.num.num',sK0)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',sK1),s('type.num.num',sK2))))),
  inference(superposition,[],[f493,f51])).
fof(f668,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK0,sK0)),s('type.num.num',sK0)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',sK0),s('type.num.num',sK2))))),
  inference(subsumption_resolution,[],[f656,f29])).
fof(f656,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK4(sK2,sK0,sK0)),s('type.num.num',sK0)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK0),s('type.num.num',sK0),s('type.num.num',sK2))))),
  inference(superposition,[],[f493,f49])).
fof(f354,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) ) | $spl4),
  inference(cnf_transformation,[],[f354_D])).
fof(f354_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f356,plain,(
  s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) | $spl7),
  inference(cnf_transformation,[],[f356_D])).
fof(f356_D,plain,(
  s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f325,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) | s(bool,X0) = s(bool,'const.divides.divides_2'(s('type.num.num',sK2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) )),
  inference(equality_factoring,[],[f277])).
fof(f53,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl0),
  inference(cnf_transformation,[],[f53_D])).
fof(f53_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f55,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl3),
  inference(cnf_transformation,[],[f55_D])).
fof(f55_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f48,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f31])).
% SZS output end Proof for thm.gcd
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 102
% Passive clauses: 274
% Generated clauses: 5547
% Final active clauses: 56
% Final passive clauses: 101
% Input formulas: 7
% Initial clauses: 14
% 
% Duplicate literals: 814
% Trivial inequalities: 28
% Fw subsumption resolutions: 306
% Fw demodulations: 419
% Bw demodulations: 68
% Condensations: 1149
% Global subsumptions: 26
% 
% Simple tautologies: 89
% Equational tautologies: 89
% Forward subsumptions: 2284
% Bw demodulations to eq. taut.: 4
% 
% Unit resulting resolution: 112
% Forward superposition: 1155
% Backward superposition: 935
% Self superposition: 123
% Equality factoring: 116
% 
% Split clauses: 64
% Split components: 129
% SAT solver clauses: 471
% SAT solver unit clauses: 26
% SAT solver binary clauses: 133
% 
% Sat splits: 64
% Sat splitting refutations: 41
% 
% Memory used [KB]: 3070
% Time elapsed: 0.304 s
% ------------------------------
% ------------------------------
% Success in time 1.621 s
