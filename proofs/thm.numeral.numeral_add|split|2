Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.numeral
% (117166)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 180
% Passive clauses: 4104
% Generated clauses: 17784
% Final active clauses: 55
% Final passive clauses: 476
% Input formulas: 28
% Initial clauses: 44
% 
% Duplicate literals: 58
% Trivial inequalities: 47
% Fw subsumption resolutions: 43
% Fw demodulations: 7078
% Bw demodulations: 26
% 
% Simple tautologies: 69
% Equational tautologies: 25
% Forward subsumptions: 6556
% Fw demodulations to eq. taut.: 81
% 
% Binary resolution: 16
% Forward superposition: 5456
% Backward superposition: 4652
% Self superposition: 131
% Equality factoring: 26
% Equality resolution: 71
% 
% Split clauses: 7
% Split components: 14
% SAT solver clauses: 25
% SAT solver unit clauses: 7
% SAT solver binary clauses: 14
% 
% Sat splits: 7
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 25
% TWLsolver calls for satisfiability: 13
% 
% Memory used [KB]: 12792
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.numeral
% (117183)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 145
% Passive clauses: 1178
% Generated clauses: 14868
% Final active clauses: 88
% Final passive clauses: 889
% Input formulas: 28
% Initial clauses: 44
% 
% Duplicate literals: 46
% Trivial inequalities: 127
% Fw subsumption resolutions: 80
% Fw demodulations: 5208
% Bw demodulations: 138
% Condensations: 41
% Global subsumptions: 4
% 
% Simple tautologies: 56
% Equational tautologies: 21
% Forward subsumptions: 5570
% Fw demodulations to eq. taut.: 60
% 
% Binary resolution: 12
% Forward superposition: 3764
% Backward superposition: 3146
% Self superposition: 102
% Equality factoring: 26
% Equality resolution: 48
% 
% Split clauses: 4
% Split components: 8
% SAT solver clauses: 2221
% SAT solver unit clauses: 60
% SAT solver binary clauses: 40
% SAT solver learnt clauses: 9
% SAT solver learnt literals: 2
% 
% Sat splits: 4
% Sat splitting refutations: 46
% 
% TWLsolver clauses: 2204
% TWLsolver calls for satisfiability: 251
% 
% Memory used [KB]: 14967
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f2782,plain,(
  $false),
  inference(subsumption_resolution,[],[f2781,f115])).
fof(f115,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X7,X6] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))),
  file('thm.numeral.numeral_add|split|2','thm.arithmetic.ADD_SYM')).
fof(f2781,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0)))))),
  inference(forward_demodulation,[],[f2768,f551])).
fof(f551,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f550,f415])).
fof(f415,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f399,f86])).
fof(f86,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0] : s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6] : s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X6))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))),
  file('thm.numeral.numeral_add|split|2','thm.numeral.iiSUC')).
fof(f399,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) )),
  inference(superposition,[],[f116,f372])).
fof(f372,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f348,f128])).
fof(f128,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f87,f81])).
fof(f81,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  file('thm.numeral.numeral_add|split|2','thm.arithmetic.ALT_ZERO')).
fof(f87,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.numeral.numeral_add|split|2','thm.arithmetic.BIT|49|')).
fof(f348,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f116,f126])).
fof(f126,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f84,f81])).
fof(f84,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))),
  file('thm.numeral.numeral_add|split|2','thm.arithmetic.ADD_|48|')).
fof(f116,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.numeral.numeral_add|split|2','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f550,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f548,f130])).
fof(f130,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f129,f81])).
fof(f129,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f88,f86])).
fof(f88,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  file('thm.numeral.numeral_add|split|2','thm.arithmetic.BIT2')).
fof(f548,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f547,f86])).
fof(f547,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f528,f439])).
fof(f439,plain,(
  s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f419,f86])).
fof(f419,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f398,f119])).
fof(f119,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X7,X6] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))) <=> s('type.num.num',X6) = s('type.num.num',X7))),
  file('thm.numeral.numeral_add|split|2','thm.prim_rec.INV_SUC_EQ')).
fof(f398,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f372,f127])).
fof(f127,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f85,f81])).
fof(f85,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))),
  file('thm.numeral.numeral_add|split|2','thm.arithmetic.ADD_CLAUSES|split|0')).
fof(f528,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f116,f414])).
fof(f414,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(backward_demodulation,[],[f398,f348])).
fof(f2768,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0)))))))),
  inference(superposition,[],[f2672,f282])).
fof(f282,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(forward_demodulation,[],[f262,f116])).
fof(f262,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f115,f119])).
fof(f2672,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))))),
  inference(backward_demodulation,[],[f2670,f1029])).
fof(f1029,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))))),
  inference(forward_demodulation,[],[f1020,f116])).
fof(f1020,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))))),
  inference(backward_demodulation,[],[f1016,f553])).
fof(f553,plain,(
  s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))))),
  inference(backward_demodulation,[],[f551,f244])).
fof(f244,plain,(
  s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1)))))))))),
  inference(forward_demodulation,[],[f243,f86])).
fof(f243,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1)))))))))),
  inference(forward_demodulation,[],[f242,f116])).
fof(f242,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1)))))))))),
  inference(unit_resulting_resolution,[],[f217,f118])).
fof(f118,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f76])).
fof(f217,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1)))))))),
  inference(unit_resulting_resolution,[],[f125,f118])).
fof(f125,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1)))))),
  inference(forward_demodulation,[],[f124,f83])).
fof(f83,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X11] : s('type.num.num',X11) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X11)))),
  file('thm.numeral.numeral_add|split|2','thm.numeral.iZ')).
fof(f124,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))))),
  inference(backward_demodulation,[],[f83,f78])).
fof(f78,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1)))))))),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f58])).
fof(f58,plain,(
  ? [X0,X1] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))),
  inference(ennf_transformation,[],[f30])).
fof(f30,plain,(
  ~! [X0,X1] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))))),
  file('thm.numeral.numeral_add|split|2','thm.numeral.numeral_add|split|2')).
fof(f1016,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f1015,f551])).
fof(f1015,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) )),
  inference(forward_demodulation,[],[f968,f86])).
fof(f968,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f762,f119])).
fof(f762,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f761,f609])).
fof(f609,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0)))))))) )),
  inference(superposition,[],[f116,f550])).
fof(f761,plain,(
  ( ! [X8] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X8)))))))) )),
  inference(forward_demodulation,[],[f760,f179])).
fof(f179,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f86,f86])).
fof(f760,plain,(
  ( ! [X8] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))))))) )),
  inference(forward_demodulation,[],[f721,f86])).
fof(f721,plain,(
  ( ! [X8] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))))))))) )),
  inference(superposition,[],[f131,f372])).
fof(f131,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f117,f116])).
fof(f117,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num',X6))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.numeral.numeral_add|split|2','thm.arithmetic.ADD_CLAUSES|split|2')).
fof(f2670,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))) )),
  inference(forward_demodulation,[],[f2669,f2668])).
fof(f2668,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X1)))))))) )),
  inference(forward_demodulation,[],[f2664,f1459])).
fof(f1459,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X12))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13)))))) )),
  inference(forward_demodulation,[],[f1458,f86])).
fof(f1458,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X12)))))))) )),
  inference(forward_demodulation,[],[f1414,f370])).
fof(f370,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) )),
  inference(forward_demodulation,[],[f329,f86])).
fof(f329,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f116,f119])).
fof(f1414,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.num.SUC_1'(s('type.num.num',X13)))))))) )),
  inference(superposition,[],[f282,f131])).
fof(f2664,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))))) )),
  inference(backward_demodulation,[],[f2657,f1688])).
fof(f1688,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f1641,f121])).
fof(f121,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X7,X6,X8] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X8)))),
  file('thm.numeral.numeral_add|split|2','thm.arithmetic.ADD_ASSOC')).
fof(f1641,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))),s('type.num.num',X2)))))) )),
  inference(superposition,[],[f121,f559])).
fof(f559,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f555,f486])).
fof(f486,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))))) )),
  inference(superposition,[],[f130,f115])).
fof(f555,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(backward_demodulation,[],[f551,f439])).
fof(f2657,plain,(
  ( ! [X10] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X10))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10)))) )),
  inference(forward_demodulation,[],[f2656,f86])).
fof(f2656,plain,(
  ( ! [X10] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10)))) )),
  inference(forward_demodulation,[],[f2655,f555])).
fof(f2655,plain,(
  ( ! [X10] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10)))) )),
  inference(forward_demodulation,[],[f2557,f525])).
fof(f525,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))) )),
  inference(superposition,[],[f414,f115])).
fof(f2557,plain,(
  ( ! [X10] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10)))))) )),
  inference(superposition,[],[f700,f398])).
fof(f700,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X6))),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f131,f86])).
fof(f2669,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4))),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X3)))))))) )),
  inference(backward_demodulation,[],[f2668,f2151])).
fof(f2151,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X3))),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X4)))))))))) )),
  inference(forward_demodulation,[],[f2150,f116])).
fof(f2150,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X3))),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X4)))))))))) )),
  inference(forward_demodulation,[],[f2149,f1459])).
fof(f2149,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X3)))))))))))) )),
  inference(forward_demodulation,[],[f2104,f1459])).
fof(f2104,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4)))))))))))) )),
  inference(superposition,[],[f777,f121])).
fof(f777,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X9)))))))) )),
  inference(forward_demodulation,[],[f776,f86])).
fof(f776,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X9)))))))))) )),
  inference(forward_demodulation,[],[f722,f179])).
fof(f722,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9)))))))))) )),
  inference(superposition,[],[f131,f550])).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 79
% Passive clauses: 319
% Generated clauses: 2692
% Final active clauses: 62
% Final passive clauses: 180
% Input formulas: 28
% Initial clauses: 44
% 
% Duplicate literals: 40
% Trivial inequalities: 7
% Fw subsumption resolutions: 9
% Fw demodulations: 833
% Bw demodulations: 77
% Condensations: 32
% 
% Simple tautologies: 32
% Equational tautologies: 26
% Forward subsumptions: 1340
% Fw demodulations to eq. taut.: 52
% 
% Unit resulting resolution: 152
% Forward superposition: 769
% Backward superposition: 639
% Self superposition: 59
% Equality factoring: 26
% Equality resolution: 5
% 
% SAT solver clauses: 321
% SAT solver unit clauses: 193
% SAT solver binary clauses: 115
% 
% Memory used [KB]: 3326
% Time elapsed: 0.093 s
% ------------------------------
% ------------------------------
% Success in time 1.413 s
