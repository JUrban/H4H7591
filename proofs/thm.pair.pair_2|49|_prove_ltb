Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.pair
% (103412)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 59
% Passive clauses: 2070
% Generated clauses: 12696
% Final active clauses: 57
% Final passive clauses: 1959
% Input formulas: 11
% Initial clauses: 12
% 
% Duplicate literals: 884
% Trivial inequalities: 158
% Fw subsumption resolutions: 1589
% Fw demodulations: 481
% 
% Simple tautologies: 268
% Equational tautologies: 99
% Forward subsumptions: 5511
% 
% Binary resolution: 38
% Forward superposition: 5483
% Backward superposition: 3321
% Self superposition: 361
% Equality factoring: 283
% Equality resolution: 13
% 
% Split clauses: 582
% Split components: 1176
% SAT solver clauses: 1693
% SAT solver unit clauses: 276
% SAT solver binary clauses: 528
% 
% Sat splits: 582
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1685
% TWLsolver calls for satisfiability: 62
% 
% Memory used [KB]: 7547
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.pair
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.pair
% SZS output start Proof for thm.pair
fof(f5419,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f5345,f58,f60,f33,f47,f42,f55,f2989,f3094,f43,f56,f44,f57])).
fof(f57,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.pair.CURRY_3'(s(fun('type.pair.prod'(X1,X2),X0),X3),s(X1,X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(X1,X2),X0),X3))),s(X1,X4))),s(X2,X5)))) ) | $spl16),
  inference(cnf_transformation,[],[f57_D])).
fof(f57_D,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.pair.CURRY_3'(s(fun('type.pair.prod'(X1,X2),X0),X3),s(X1,X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(X1,X2),X0),X3))),s(X1,X4))),s(X2,X5)))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f44,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.pair.CURRY_3'(s(fun('type.pair.prod'(X1,X2),X0),X3),s(X1,X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(X1,X2),X0),X3))),s(X1,X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,'const.pair.CURRY_3'(s(fun('type.pair.prod'(X1,X2),X0),X3),s(X1,X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(X1,X2),X0),X3))),s(X1,X4))),s(X2,X5)))),
  inference(flattening,[],[f26])).
fof(f26,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,'const.pair.CURRY_3'(s(fun('type.pair.prod'(X1,X2),X0),X3),s(X1,X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(X1,X2),X0),X3))),s(X1,X4))),s(X2,X5)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6,X7,X8] : ! [X12,X13,X14] : s(X6,'const.pair.CURRY_3'(s(fun('type.pair.prod'(X7,X8),X6),X12),s(X7,X13),s(X8,X14))) = s(X6,happ(s(fun(X8,X6),happ(s(fun(X7,fun(X8,X6)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(X7,X8),X6),X12))),s(X7,X13))),s(X8,X14)))),
  file('thm.pair.pair_2|49|_prove_ltb','ARITY_1_3_const.pair.CURRY')).
fof(f56,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.pair.UNCURRY_2'(s(fun(X1,fun(X2,X0)),X3),s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X4))),s(X2,X5)))) ) | $spl14),
  inference(cnf_transformation,[],[f56_D])).
fof(f56_D,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.pair.UNCURRY_2'(s(fun(X1,fun(X2,X0)),X3),s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X4))),s(X2,X5)))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f43,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.pair.UNCURRY_2'(s(fun(X1,fun(X2,X0)),X3),s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,'const.pair.UNCURRY_2'(s(fun(X1,fun(X2,X0)),X3),s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X4))),s(X2,X5)))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,'const.pair.UNCURRY_2'(s(fun(X1,fun(X2,X0)),X3),s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X4))),s(X2,X5)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6,X7,X8] : ! [X11,X10,X9] : s(X6,'const.pair.UNCURRY_2'(s(fun(X7,fun(X8,X6)),X11),s('type.pair.prod'(X7,X8),'const.pair.,_2'(s(X7,X10),s(X8,X9))))) = s(X6,happ(s(fun(X8,X6),happ(s(fun(X7,fun(X8,X6)),X11),s(X7,X10))),s(X8,X9)))),
  file('thm.pair.pair_2|49|_prove_ltb','thm.pair.UNCURRY_DEF')).
fof(f3094,plain,(
  ( ! [X154,X152,X151,X149,X153,X150] : (s(X149,'const.pair.CURRY_3'(s(fun('type.pair.prod'(X151,X150),X149),X152),s(X151,X153),s(X150,X154))) = s(X149,'const.pair.UNCURRY_2'(s(fun(X151,fun(X150,X149)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(X151,X150),X149),X152))),s('type.pair.prod'(X151,X150),'const.pair.,_2'(s(X151,X153),s(X150,X154)))))) ) | $spl266),
  inference(cnf_transformation,[],[f3094_D])).
fof(f3094_D,plain,(
  ( ! [X154,X152,X151,X149,X153,X150] : (s(X149,'const.pair.CURRY_3'(s(fun('type.pair.prod'(X151,X150),X149),X152),s(X151,X153),s(X150,X154))) = s(X149,'const.pair.UNCURRY_2'(s(fun(X151,fun(X150,X149)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(X151,X150),X149),X152))),s('type.pair.prod'(X151,X150),'const.pair.,_2'(s(X151,X153),s(X150,X154)))))) ) <=> ~$spl266),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl266])])).
fof(f2989,plain,(
  ( ! [X154,X152,X151,X149,X153,X150] : (s(X149,'const.pair.CURRY_3'(s(fun('type.pair.prod'(X151,X150),X149),X152),s(X151,X153),s(X150,X154))) = s(X149,'const.pair.UNCURRY_2'(s(fun(X151,fun(X150,X149)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(X151,X150),X149),X152))),s('type.pair.prod'(X151,X150),'const.pair.,_2'(s(X151,X153),s(X150,X154)))))) ) | ($spl14 | $spl16)),
  inference(superposition,[],[f57,f56])).
fof(f55,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.pair.CURRY_3'(s(fun('type.pair.prod'(X1,X2),X0),X3),s(X1,X4),s(X2,X5))) = s(X0,happ(s(fun('type.pair.prod'(X1,X2),X0),X3),s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X5)))))) ) | $spl12),
  inference(cnf_transformation,[],[f55_D])).
fof(f55_D,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.pair.CURRY_3'(s(fun('type.pair.prod'(X1,X2),X0),X3),s(X1,X4),s(X2,X5))) = s(X0,happ(s(fun('type.pair.prod'(X1,X2),X0),X3),s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X5)))))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f42,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.pair.CURRY_3'(s(fun('type.pair.prod'(X1,X2),X0),X3),s(X1,X4),s(X2,X5))) = s(X0,happ(s(fun('type.pair.prod'(X1,X2),X0),X3),s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X5)))))) )),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,'const.pair.CURRY_3'(s(fun('type.pair.prod'(X1,X2),X0),X3),s(X1,X4),s(X2,X5))) = s(X0,happ(s(fun('type.pair.prod'(X1,X2),X0),X3),s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X5)))))),
  inference(flattening,[],[f22])).
fof(f22,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,'const.pair.CURRY_3'(s(fun('type.pair.prod'(X1,X2),X0),X3),s(X1,X4),s(X2,X5))) = s(X0,happ(s(fun('type.pair.prod'(X1,X2),X0),X3),s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X5)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6,X7,X8] : ! [X11,X10,X9] : s(X6,'const.pair.CURRY_3'(s(fun('type.pair.prod'(X7,X8),X6),X11),s(X7,X10),s(X8,X9))) = s(X6,happ(s(fun('type.pair.prod'(X7,X8),X6),X11),s('type.pair.prod'(X7,X8),'const.pair.,_2'(s(X7,X10),s(X8,X9)))))),
  file('thm.pair.pair_2|49|_prove_ltb','thm.pair.CURRY_DEF')).
fof(f47,plain,(
  s(sK0,happ(s(fun('type.pair.prod'(sK1,sK2),sK0),sK5),s('type.pair.prod'(sK1,sK2),'const.pair.,_2'(s(sK1,sK4),s(sK2,sK3))))) != s(sK0,'const.pair.UNCURRY_2'(s(fun(sK1,fun(sK2,sK0)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(sK1,sK2),sK0),sK5))),s('type.pair.prod'(sK1,sK2),'const.pair.,_2'(s(sK1,sK4),s(sK2,sK3))))) | $spl1),
  inference(cnf_transformation,[],[f47_D])).
fof(f47_D,plain,(
  s(sK0,happ(s(fun('type.pair.prod'(sK1,sK2),sK0),sK5),s('type.pair.prod'(sK1,sK2),'const.pair.,_2'(s(sK1,sK4),s(sK2,sK3))))) != s(sK0,'const.pair.UNCURRY_2'(s(fun(sK1,fun(sK2,sK0)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(sK1,sK2),sK0),sK5))),s('type.pair.prod'(sK1,sK2),'const.pair.,_2'(s(sK1,sK4),s(sK2,sK3))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f33,plain,(
  s(sK0,happ(s(fun('type.pair.prod'(sK1,sK2),sK0),sK5),s('type.pair.prod'(sK1,sK2),'const.pair.,_2'(s(sK1,sK4),s(sK2,sK3))))) != s(sK0,'const.pair.UNCURRY_2'(s(fun(sK1,fun(sK2,sK0)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(sK1,sK2),sK0),sK5))),s('type.pair.prod'(sK1,sK2),'const.pair.,_2'(s(sK1,sK4),s(sK2,sK3)))))),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  s(sK0,happ(s(fun('type.pair.prod'(sK1,sK2),sK0),sK5),s('type.pair.prod'(sK1,sK2),'const.pair.,_2'(s(sK1,sK4),s(sK2,sK3))))) != s(sK0,'const.pair.UNCURRY_2'(s(fun(sK1,fun(sK2,sK0)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(sK1,sK2),sK0),sK5))),s('type.pair.prod'(sK1,sK2),'const.pair.,_2'(s(sK1,sK4),s(sK2,sK3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f28])).
fof(f28,plain,(
  ? [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun('type.pair.prod'(X1,X2),X0),X5),s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X3))))) != s(X0,'const.pair.UNCURRY_2'(s(fun(X1,fun(X2,X0)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(X1,X2),X0),X5))),s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X3)))))),
  inference(ennf_transformation,[],[f14])).
fof(f14,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun('type.pair.prod'(X1,X2),X0),X5),s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X3))))) = s(X0,'const.pair.UNCURRY_2'(s(fun(X1,fun(X2,X0)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(X1,X2),X0),X5))),s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X3)))))),
  inference(flattening,[],[f13])).
fof(f13,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun('type.pair.prod'(X1,X2),X0),X5),s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X3))))) = s(X0,'const.pair.UNCURRY_2'(s(fun(X1,fun(X2,X0)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(X1,X2),X0),X5))),s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11] : s(X6,happ(s(fun('type.pair.prod'(X7,X8),X6),X11),s('type.pair.prod'(X7,X8),'const.pair.,_2'(s(X7,X10),s(X8,X9))))) = s(X6,'const.pair.UNCURRY_2'(s(fun(X7,fun(X8,X6)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(X7,X8),X6),X11))),s('type.pair.prod'(X7,X8),'const.pair.,_2'(s(X7,X10),s(X8,X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11] : s(X6,happ(s(fun('type.pair.prod'(X7,X8),X6),X11),s('type.pair.prod'(X7,X8),'const.pair.,_2'(s(X7,X10),s(X8,X9))))) = s(X6,'const.pair.UNCURRY_2'(s(fun(X7,fun(X8,X6)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(X7,X8),X6),X11))),s('type.pair.prod'(X7,X8),'const.pair.,_2'(s(X7,X10),s(X8,X9)))))),
  file('thm.pair.pair_2|49|_prove_ltb','thm.pair.pair_2|49|_prove_ltb')).
fof(f60,plain,(
  s(sK0,'const.pair.CURRY_3'(s(fun('type.pair.prod'(sK1,sK2),sK0),sK5),s(sK1,sK4),s(sK2,sK3))) != s(sK0,'const.pair.UNCURRY_2'(s(fun(sK1,fun(sK2,sK0)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(sK1,sK2),sK0),sK5))),s('type.pair.prod'(sK1,sK2),'const.pair.,_2'(s(sK1,sK4),s(sK2,sK3))))) | $spl19),
  inference(cnf_transformation,[],[f60_D])).
fof(f60_D,plain,(
  s(sK0,'const.pair.CURRY_3'(s(fun('type.pair.prod'(sK1,sK2),sK0),sK5),s(sK1,sK4),s(sK2,sK3))) != s(sK0,'const.pair.UNCURRY_2'(s(fun(sK1,fun(sK2,sK0)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(sK1,sK2),sK0),sK5))),s('type.pair.prod'(sK1,sK2),'const.pair.,_2'(s(sK1,sK4),s(sK2,sK3))))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f58,plain,(
  s(sK0,'const.pair.CURRY_3'(s(fun('type.pair.prod'(sK1,sK2),sK0),sK5),s(sK1,sK4),s(sK2,sK3))) != s(sK0,'const.pair.UNCURRY_2'(s(fun(sK1,fun(sK2,sK0)),'const.pair.CURRY_1'(s(fun('type.pair.prod'(sK1,sK2),sK0),sK5))),s('type.pair.prod'(sK1,sK2),'const.pair.,_2'(s(sK1,sK4),s(sK2,sK3))))) | ($spl1 | $spl12)),
  inference(forward_demodulation,[],[f47,f55])).
fof(f5345,plain,(
  $false | ($spl19 | $spl266)),
  inference(trivial_inequality_removal,[],[f5344])).
fof(f5344,plain,(
  s(sK0,'const.pair.CURRY_3'(s(fun('type.pair.prod'(sK1,sK2),sK0),sK5),s(sK1,sK4),s(sK2,sK3))) != s(sK0,'const.pair.CURRY_3'(s(fun('type.pair.prod'(sK1,sK2),sK0),sK5),s(sK1,sK4),s(sK2,sK3))) | ($spl19 | $spl266)),
  inference(superposition,[],[f60,f3094])).
% SZS output end Proof for thm.pair
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 35
% Passive clauses: 274
% Generated clauses: 5284
% Final active clauses: 32
% Final passive clauses: 237
% Input formulas: 11
% Initial clauses: 12
% 
% Duplicate literals: 786
% Trivial inequalities: 33
% Fw subsumption resolutions: 115
% Fw demodulations: 123
% Bw demodulations: 1
% Condensations: 1320
% 
% Simple tautologies: 65
% Equational tautologies: 48
% Forward subsumptions: 1864
% 
% Binary resolution: 12
% Forward superposition: 1325
% Backward superposition: 999
% Self superposition: 189
% Equality factoring: 154
% 
% Split clauses: 62
% Split components: 125
% SAT solver clauses: 687
% SAT solver unit clauses: 20
% SAT solver binary clauses: 68
% SAT solver learnt clauses: 1
% 
% Sat splits: 62
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 686
% TWLsolver calls for satisfiability: 51
% 
% Memory used [KB]: 5756
% Time elapsed: 0.602 s
% ------------------------------
% ------------------------------
% Success in time 1.216 s
