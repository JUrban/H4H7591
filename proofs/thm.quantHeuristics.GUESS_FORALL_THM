Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f6094,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f6043,f243,f418,f414,f244,f417,f415,f5892,f5895,f251,f420])).
fof(f420,plain,(
  ~p(s(bool,'F_0')) | $spl7),
  inference(cnf_transformation,[],[f420_D])).
fof(f420_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f251,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quantHeuristics.GUESS_FORALL_THM',aHL_FALSITY)).
fof(f5895,plain,(
  $false | ($spl3 | $spl4)),
  inference(subsumption_resolution,[],[f417,f418])).
fof(f5892,plain,(
  $false | ($spl1 | $spl4 | $spl7)),
  inference(subsumption_resolution,[],[f5891,f420])).
fof(f5891,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f5840,f441])).
fof(f441,plain,(
  s(bool,'F_0') = s(bool,'|dollar|forall_1'(s(fun(sK10,bool),sK13))) | $spl1),
  inference(resolution,[],[f263,f415])).
fof(f263,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f163])).
fof(f163,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X15] : (s(bool,'F_0') = s(bool,X15) <=> ~p(s(bool,X15)))),
  file('thm.quantHeuristics.GUESS_FORALL_THM','thm.bool.EQ_CLAUSES|split|3')).
fof(f5840,plain,(
  p(s(bool,'|dollar|forall_1'(s(fun(sK10,bool),sK13)))) | $spl4),
  inference(resolution,[],[f5836,f287])).
fof(f287,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X1,X0))))) | p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f179])).
fof(f179,plain,(
  ! [X0,X1] : ((~p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X1)))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X1,X0))))) | p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK15])],[f178])).
fof(f178,plain,(
  ! [X0,X1] : ((~p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X1)))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) & (? [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X1))))))),
  inference(rectify,[],[f177])).
fof(f177,plain,(
  ! [X0,X1] : ((~p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X1)))) | ! [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (? [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X1))))))),
  inference(nnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1] : (p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X1)))) <=> ! [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X1)))) <=> ! [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X7] : ! [X14] : (p(s(bool,'|dollar|forall_1'(s(fun(X7,bool),X14)))) <=> ! [X11] : p(s(bool,happ(s(fun(X7,bool),X14),s(X7,X11)))))),
  file('thm.quantHeuristics.GUESS_FORALL_THM','thm.bool.FORALL_THM')).
fof(f5836,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun(sK10,bool),sK13),s(sK10,X0))))) ) | $spl4),
  inference(subsumption_resolution,[],[f5807,f418])).
fof(f5807,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun(sK10,bool),sK13),s(sK10,X0)))) | ~p(s(bool,happ(s(fun(sK10,bool),sK13),s(sK10,happ(s(fun(sK11,sK10),sK12),s(sK11,sK24(X0,sK13,sK12,sK11,sK10)))))))) )),
  inference(resolution,[],[f334,f242])).
fof(f242,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(sK11,sK10),sK12),s(fun(sK10,bool),sK13))))),
  inference(cnf_transformation,[],[f158])).
fof(f158,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(sK11,sK10),sK12),s(fun(sK10,bool),sK13)))) & (p(s(bool,'|dollar|forall_1'(s(fun(sK10,bool),sK13)))) | ! [X5] : p(s(bool,happ(s(fun(sK10,bool),sK13),s(sK10,happ(s(fun(sK11,sK10),sK12),s(sK11,X5))))))) & (~p(s(bool,'|dollar|forall_1'(s(fun(sK10,bool),sK13)))) | ~p(s(bool,happ(s(fun(sK10,bool),sK13),s(sK10,happ(s(fun(sK11,sK10),sK12),s(sK11,sK14)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12,sK13,sK14])],[f157])).
fof(f157,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) & (p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X3)))) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) & (~p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X3)))) | ? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))))))))),
  inference(rectify,[],[f156])).
fof(f156,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) & (p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X3)))) | ! [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))))))) & (~p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X3)))) | ? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))))))))),
  inference(flattening,[],[f155])).
fof(f155,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) & ((p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X3)))) | ! [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))))))) & (~p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X3)))) | ? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))))))),
  inference(nnf_transformation,[],[f109])).
fof(f109,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) & (p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X3)))) <~> ! [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))))))))),
  inference(ennf_transformation,[],[f45])).
fof(f45,plain,(
  ~! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) => (p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X3)))) <=> ! [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))))))))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ~! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) => (p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X3)))) <=> ! [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X7,X6),X8),s(fun(X6,bool),X9)))) => (p(s(bool,'|dollar|forall_1'(s(fun(X6,bool),X9)))) <=> ! [X10] : p(s(bool,happ(s(fun(X6,bool),X9),s(X6,happ(s(fun(X7,X6),X8),s(X7,X10))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X7,X6),X8),s(fun(X6,bool),X9)))) => (p(s(bool,'|dollar|forall_1'(s(fun(X6,bool),X9)))) <=> ! [X10] : p(s(bool,happ(s(fun(X6,bool),X9),s(X6,happ(s(fun(X7,X6),X8),s(X7,X10))))))))),
  file('thm.quantHeuristics.GUESS_FORALL_THM','thm.quantHeuristics.GUESS_FORALL_THM')).
fof(f334,plain,(
  ( ! [X6,X2,X0,X3,X1] : (~p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X6)))) | ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK24(X6,X3,X2,X1,X0)))))))) )),
  inference(cnf_transformation,[],[f206])).
fof(f206,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X6] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X6)))) | ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK24(X6,X3,X2,X1,X0))))))))) & ((~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,sK25(X3,X2,X1,X0))))) & ! [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK24,sK25])],[f205])).
fof(f205,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X6] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X6)))) | ? [X7] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X7)))))))) & (? [X4] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) & ! [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f204])).
fof(f204,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) | ? [X5] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))))) & (? [X4] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) & ! [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(nnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) | ? [X5] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))))),
  inference(ennf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) => ? [X5] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))))),
  inference(flattening,[],[f97])).
fof(f97,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) => ? [X5] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6,X7] : ! [X8,X9] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X7,X6),X8),s(fun(X6,bool),X9)))) <=> ! [X20] : (~p(s(bool,happ(s(fun(X6,bool),X9),s(X6,X20)))) => ? [X10] : ~p(s(bool,happ(s(fun(X6,bool),X9),s(X6,happ(s(fun(X7,X6),X8),s(X7,X10))))))))),
  file('thm.quantHeuristics.GUESS_FORALL_THM','thm.quantHeuristics.GUESS_EXISTS_FORALL_REWRITES|split|1')).
fof(f415,plain,(
  ~p(s(bool,'|dollar|forall_1'(s(fun(sK10,bool),sK13)))) | $spl1),
  inference(cnf_transformation,[],[f415_D])).
fof(f415_D,plain,(
  ~p(s(bool,'|dollar|forall_1'(s(fun(sK10,bool),sK13)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f417,plain,(
  ~p(s(bool,happ(s(fun(sK10,bool),sK13),s(sK10,happ(s(fun(sK11,sK10),sK12),s(sK11,sK14)))))) | $spl3),
  inference(cnf_transformation,[],[f417_D])).
fof(f417_D,plain,(
  ~p(s(bool,happ(s(fun(sK10,bool),sK13),s(sK10,happ(s(fun(sK11,sK10),sK12),s(sK11,sK14)))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f244,plain,(
  ~p(s(bool,happ(s(fun(sK10,bool),sK13),s(sK10,happ(s(fun(sK11,sK10),sK12),s(sK11,sK14)))))) | ~p(s(bool,'|dollar|forall_1'(s(fun(sK10,bool),sK13))))),
  inference(cnf_transformation,[],[f158])).
fof(f414,plain,(
  p(s(bool,'|dollar|forall_1'(s(fun(sK10,bool),sK13)))) | $spl0),
  inference(cnf_transformation,[],[f414_D])).
fof(f414_D,plain,(
  p(s(bool,'|dollar|forall_1'(s(fun(sK10,bool),sK13)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f418,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun(sK10,bool),sK13),s(sK10,happ(s(fun(sK11,sK10),sK12),s(sK11,X5))))))) ) | $spl4),
  inference(cnf_transformation,[],[f418_D])).
fof(f418_D,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun(sK10,bool),sK13),s(sK10,happ(s(fun(sK11,sK10),sK12),s(sK11,X5))))))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f243,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun(sK10,bool),sK13),s(sK10,happ(s(fun(sK11,sK10),sK12),s(sK11,X5)))))) | p(s(bool,'|dollar|forall_1'(s(fun(sK10,bool),sK13))))) )),
  inference(cnf_transformation,[],[f158])).
fof(f6043,plain,(
  $false | ($spl0 | $spl3)),
  inference(resolution,[],[f5904,f417])).
fof(f5904,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun(sK10,bool),sK13),s(sK10,X0))))) ) | $spl0),
  inference(resolution,[],[f414,f286])).
fof(f286,plain,(
  ( ! [X0,X3,X1] : (~p(s(bool,'|dollar|forall_1'(s(fun(X0,bool),X1)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) )),
  inference(cnf_transformation,[],[f179])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 402
% Passive clauses: 2555
% Generated clauses: 5877
% Final active clauses: 333
% Final passive clauses: 1672
% Input formulas: 42
% Initial clauses: 168
% 
% Duplicate literals: 144
% Trivial inequalities: 20
% Fw subsumption resolutions: 376
% Fw demodulations: 73
% Bw demodulations: 2
% 
% Simple tautologies: 120
% Equational tautologies: 20
% Forward subsumptions: 2522
% 
% Binary resolution: 3735
% Factoring: 758
% Forward superposition: 267
% Backward superposition: 235
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 8
% 
% Split clauses: 113
% Split components: 232
% SAT solver clauses: 225
% SAT solver unit clauses: 7
% SAT solver binary clauses: 38
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 113
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 219
% TWLsolver calls for satisfiability: 171
% 
% Memory used [KB]: 3326
% Time elapsed: 0.144 s
% ------------------------------
% ------------------------------
% Success in time 0.147 s
