Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (24972)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1116
% Passive clauses: 8980
% Generated clauses: 40367
% Final active clauses: 807
% Final passive clauses: 7442
% Input formulas: 261
% Initial clauses: 478
% 
% Duplicate literals: 233
% Trivial inequalities: 65
% Fw subsumption resolutions: 2300
% Fw demodulations: 3488
% Bw demodulations: 302
% 
% Simple tautologies: 206
% Equational tautologies: 35
% Forward subsumptions: 24754
% Fw demodulations to eq. taut.: 16
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 8145
% Factoring: 1279
% Forward superposition: 10976
% Backward superposition: 12814
% Self superposition: 60
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 256
% Split components: 514
% SAT solver clauses: 527
% SAT solver unit clauses: 21
% SAT solver binary clauses: 89
% 
% Sat splits: 256
% Sat splitting refutations: 10
% 
% TWLsolver clauses: 523
% TWLsolver calls for satisfiability: 401
% 
% Memory used [KB]: 19701
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (24989)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 578
% Passive clauses: 3385
% Generated clauses: 29484
% Final active clauses: 545
% Final passive clauses: 2712
% Input formulas: 261
% Initial clauses: 478
% 
% Duplicate literals: 79
% Trivial inequalities: 43
% Fw subsumption resolutions: 988
% Fw demodulations: 5032
% Bw demodulations: 127
% Condensations: 81
% Global subsumptions: 24
% 
% Simple tautologies: 218
% Equational tautologies: 13
% Forward subsumptions: 15632
% Fw demodulations to eq. taut.: 28
% 
% Binary resolution: 2298
% Factoring: 97
% Forward superposition: 9442
% Backward superposition: 7561
% Self superposition: 110
% Equality factoring: 2
% Equality resolution: 9
% 
% Split clauses: 20
% Split components: 40
% SAT solver clauses: 4432
% SAT solver unit clauses: 599
% SAT solver binary clauses: 138
% SAT solver learnt clauses: 48
% SAT solver learnt literals: 12
% 
% Sat splits: 20
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 4336
% TWLsolver calls for satisfiability: 2430
% 
% Memory used [KB]: 30703
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% (25005)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1226
% Passive clauses: 6407
% Generated clauses: 165442
% Final active clauses: 717
% Final passive clauses: 2798
% Input formulas: 261
% Initial clauses: 478
% 
% Duplicate literals: 23
% Trivial inequalities: 72
% Fw subsumption resolutions: 2231
% Fw demodulations: 65090
% Bw demodulations: 2490
% Condensations: 23
% Global subsumptions: 2
% 
% Simple tautologies: 128
% Equational tautologies: 52
% Forward subsumptions: 89427
% Fw demodulations to eq. taut.: 457
% Bw demodulations to eq. taut.: 20
% 
% Unit resulting resolution: 45839
% Factoring: 3
% Forward superposition: 26025
% Backward superposition: 20605
% Self superposition: 265
% Equality factoring: 2
% Equality resolution: 12
% 
% Split clauses: 11
% Split components: 22
% SAT solver clauses: 7952
% SAT solver unit clauses: 1802
% SAT solver binary clauses: 4389
% 
% Sat splits: 11
% Sat splitting refutations: 1519
% 
% Memory used [KB]: 301914
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f59196,plain,(
  $false),
  inference(subsumption_resolution,[],[f59195,f955])).
fof(f955,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f8])).
fof(f8,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rich_list.EVERY_LASTN','thm.bool.TRUTH')).
fof(f59195,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f59194,f1211])).
fof(f1211,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK7),sK9)))))),
  inference(resolution,[],[f672,f937])).
fof(f937,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f642])).
fof(f642,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f410])).
fof(f410,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X13] : (s(bool,'T_0') = s(bool,X13) <=> p(s(bool,X13)))),
  file('thm.rich_list.EVERY_LASTN','thm.bool.EQ_CLAUSES|split|0')).
fof(f672,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK7),sK9))))))),
  inference(cnf_transformation,[],[f538])).
fof(f538,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun(sK7,bool),sK8),s('type.list.list'(sK7),sK9)))) & (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK7),sK9)))))) & ~p(s(bool,'const.list.EVERY_2'(s(fun(sK7,bool),sK8),s('type.list.list'(sK7),'const.rich_list.LASTN_2'(s('type.num.num',sK10),s('type.list.list'(sK7),sK9)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7,sK8,sK9,sK10])],[f457])).
fof(f457,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))) & ? [X3] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) & ~p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X3),s('type.list.list'(X0),X2))))))))),
  inference(ennf_transformation,[],[f264])).
fof(f264,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))) => ! [X3] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X3),s('type.list.list'(X0),X2))))))))),
  inference(flattening,[],[f263])).
fof(f263,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))) => ! [X3] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X3),s('type.list.list'(X0),X2))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.list.EVERY_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),X8)))) => ! [X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) => p(s(bool,'const.list.EVERY_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num',X9),s('type.list.list'(X6),X8))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.list.EVERY_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),X8)))) => ! [X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) => p(s(bool,'const.list.EVERY_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num',X9),s('type.list.list'(X6),X8))))))))),
  file('thm.rich_list.EVERY_LASTN','thm.rich_list.EVERY_LASTN')).
fof(f59194,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK7),sK9))))))),
  inference(subsumption_resolution,[],[f59193,f995])).
fof(f995,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f878])).
fof(f878,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f604])).
fof(f604,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f384])).
fof(f384,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f383])).
fof(f383,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : ! [X12] : (s(X6,X12) = s(X6,X12) <=> p(s(bool,'T_0')))),
  file('thm.rich_list.EVERY_LASTN','thm.bool.REFL_CLAUSE')).
fof(f59193,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK7),sK9))))))),
  inference(forward_demodulation,[],[f59159,f1083])).
fof(f1083,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun(sK7,bool),sK8),s('type.list.list'(sK7),sK9)))),
  inference(resolution,[],[f671,f937])).
fof(f671,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun(sK7,bool),sK8),s('type.list.list'(sK7),sK9))))),
  inference(cnf_transformation,[],[f538])).
fof(f59159,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun(sK7,bool),sK8),s('type.list.list'(sK7),sK9)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK7),sK9))))))),
  inference(superposition,[],[f2898,f683])).
fof(f683,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f468])).
fof(f468,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))))),
  inference(ennf_transformation,[],[f284])).
fof(f284,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))))),
  inference(flattening,[],[f283])).
fof(f283,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X6] : ! [X10,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) => s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.rich_list.BUTLASTN_2'(s('type.num.num',X10),s('type.list.list'(X6),X8))),s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num',X10),s('type.list.list'(X6),X8))))))),
  file('thm.rich_list.EVERY_LASTN','thm.rich_list.APPEND_BUTLASTN_LASTN')).
fof(f2898,plain,(
  ( ! [X1] : (~p(s(bool,'const.list.EVERY_2'(s(fun(sK7,bool),sK8),s('type.list.list'(sK7),'const.list.APPEND_2'(s('type.list.list'(sK7),X1),s('type.list.list'(sK7),'const.rich_list.LASTN_2'(s('type.num.num',sK10),s('type.list.list'(sK7),sK9))))))))) )),
  inference(resolution,[],[f673,f967])).
fof(f967,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X3)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))) )),
  inference(cnf_transformation,[],[f657])).
fof(f657,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))))) | (p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))) & p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X3)))))) & (~p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X3)))) | p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))))),
  inference(flattening,[],[f656])).
fof(f656,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))))) | (p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))) & p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X3)))))) & ((~p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X3))))) | p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))))),
  inference(nnf_transformation,[],[f432])).
fof(f432,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))))) <=> (p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))) & p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X3))))))),
  inference(flattening,[],[f431])).
fof(f431,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))))) <=> (p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))) & p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X3))))))),
  inference(rectify,[],[f72])).
fof(f72,axiom,(
  ! [X6] : ! [X7,X19,X18] : (p(s(bool,'const.list.EVERY_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X19),s('type.list.list'(X6),X18)))))) <=> (p(s(bool,'const.list.EVERY_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),X19)))) & p(s(bool,'const.list.EVERY_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),X18))))))),
  file('thm.rich_list.EVERY_LASTN','thm.list.EVERY_APPEND')).
fof(f673,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun(sK7,bool),sK8),s('type.list.list'(sK7),'const.rich_list.LASTN_2'(s('type.num.num',sK10),s('type.list.list'(sK7),sK9))))))),
  inference(cnf_transformation,[],[f538])).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 988
% Passive clauses: 20196
% Generated clauses: 58745
% Final active clauses: 623
% Final passive clauses: 11532
% Input formulas: 261
% Initial clauses: 320
% 
% Selected by SInE selection: 129
% SInE iterations: 1
% 
% Duplicate literals: 1003
% Trivial inequalities: 164
% Fw subsumption resolutions: 6500
% Fw demodulations: 9819
% Bw demodulations: 119
% 
% Simple tautologies: 2096
% Equational tautologies: 39
% Forward subsumptions: 18812
% 
% Binary resolution: 14896
% Forward superposition: 15888
% Backward superposition: 9574
% Equality resolution: 3
% 
% Split clauses: 759
% Split components: 1607
% SAT solver clauses: 783
% SAT solver unit clauses: 13
% SAT solver binary clauses: 120
% 
% Sat splits: 759
% Sat splitting refutations: 23
% 
% Memory used [KB]: 17910
% Time elapsed: 0.875 s
% ------------------------------
% ------------------------------
% Success in time 12.651 s
