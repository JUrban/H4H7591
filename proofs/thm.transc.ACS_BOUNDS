Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.transc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.transc
% SZS output start Proof for thm.transc
fof(f882,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f872,f57,f93,f91,f107,f641,f691,f58,f96,f60,f98,f148,f326])).
fof(f326,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl12),
  inference(cnf_transformation,[],[f326_D])).
fof(f326_D,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f148,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(resolution,[],[f56,f66])).
fof(f66,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X7] : (s(bool,'T_0') = s(bool,X7) <=> p(s(bool,X7)))),
  file('thm.transc.ACS_BOUNDS','thm.bool.EQ_CLAUSES|split|0')).
fof(f56,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',sK0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0)))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.pi_0')))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f35])).
fof(f35,plain,(
  ? [X0] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0)))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.pi_0'))))))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ? [X0] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) & (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0)))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.pi_0'))))))),
  inference(ennf_transformation,[],[f18])).
fof(f18,plain,(
  ~! [X0] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) => (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0)))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.pi_0'))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X6)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X6),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) => (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X6)))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X6))),s('type.realax.real','const.transc.pi_0'))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X6)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X6),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) => (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X6)))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X6))),s('type.realax.real','const.transc.pi_0'))))))),
  file('thm.transc.ACS_BOUNDS','thm.transc.ACS_BOUNDS')).
fof(f98,plain,(
  ~p(s(bool,'F_0')) | $spl9),
  inference(cnf_transformation,[],[f98_D])).
fof(f98_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f60,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.transc.ACS_BOUNDS',aHL_FALSITY)).
fof(f96,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f96_D])).
fof(f96_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f58,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.transc.ACS_BOUNDS',aHL_TRUTH)).
fof(f691,plain,(
  $false | ($spl6 | $spl9 | $spl12 | $spl20)),
  inference(subsumption_resolution,[],[f690,f98])).
fof(f690,plain,(
  p(s(bool,'F_0')) | ($spl6 | $spl12 | $spl20)),
  inference(forward_demodulation,[],[f689,f641])).
fof(f689,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.pi_0')))) | ($spl6 | $spl12)),
  inference(subsumption_resolution,[],[f688,f96])).
fof(f688,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.pi_0')))) | $spl12),
  inference(forward_demodulation,[],[f678,f326])).
fof(f678,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.pi_0'))))),
  inference(resolution,[],[f63,f55])).
fof(f55,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',sK0))))),
  inference(cnf_transformation,[],[f39])).
fof(f63,plain,(
  ( ! [X0] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X0)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.pi_0'))))) )),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X0)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0)))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.pi_0')))) & s('type.realax.real',X0) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0)))))))),
  inference(flattening,[],[f36])).
fof(f36,plain,(
  ! [X0] : ((~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X0)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0)))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.pi_0')))) & s('type.realax.real',X0) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0)))))))),
  inference(ennf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) => (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0)))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.pi_0')))) & s('type.realax.real',X0) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0)))))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X6)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X6),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) => (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X6)))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X6))),s('type.realax.real','const.transc.pi_0')))) & s('type.realax.real',X6) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X6)))))))),
  file('thm.transc.ACS_BOUNDS','thm.transc.ACS')).
fof(f641,plain,(
  s(bool,'F_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.pi_0'))) | $spl20),
  inference(cnf_transformation,[],[f641_D])).
fof(f641_D,plain,(
  s(bool,'F_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.pi_0'))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f107,plain,(
  s(bool,'F_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.pi_0'))) | $spl3),
  inference(resolution,[],[f93,f70])).
fof(f70,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X7] : (s(bool,'F_0') = s(bool,X7) <=> ~p(s(bool,X7)))),
  file('thm.transc.ACS_BOUNDS','thm.bool.EQ_CLAUSES|split|3')).
fof(f91,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0)))))) | $spl1),
  inference(cnf_transformation,[],[f91_D])).
fof(f91_D,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f93,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.pi_0')))) | $spl3),
  inference(cnf_transformation,[],[f93_D])).
fof(f93_D,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.pi_0')))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f57,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0))),s('type.realax.real','const.transc.pi_0')))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0))))))),
  inference(cnf_transformation,[],[f39])).
fof(f872,plain,(
  $false | ($spl1 | $spl6 | $spl9 | $spl12)),
  inference(subsumption_resolution,[],[f871,f98])).
fof(f871,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl6 | $spl12)),
  inference(forward_demodulation,[],[f870,f707])).
fof(f707,plain,(
  s(bool,'F_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0))))) | $spl1),
  inference(resolution,[],[f91,f70])).
fof(f870,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0)))))) | ($spl6 | $spl12)),
  inference(subsumption_resolution,[],[f869,f96])).
fof(f869,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0)))))) | $spl12),
  inference(forward_demodulation,[],[f859,f326])).
fof(f859,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0))))))),
  inference(resolution,[],[f62,f55])).
fof(f62,plain,(
  ( ! [X0] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X0)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0))))))) )),
  inference(cnf_transformation,[],[f37])).
% SZS output end Proof for thm.transc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 39
% Passive clauses: 129
% Generated clauses: 801
% Final active clauses: 24
% Final passive clauses: 55
% Input formulas: 16
% Initial clauses: 34
% 
% Duplicate literals: 77
% Trivial inequalities: 25
% Fw subsumption resolutions: 96
% Fw demodulations: 33
% Bw demodulations: 9
% 
% Simple tautologies: 63
% Equational tautologies: 17
% Forward subsumptions: 340
% 
% Binary resolution: 41
% Forward superposition: 206
% Backward superposition: 200
% Self superposition: 26
% Equality factoring: 28
% Equality resolution: 6
% 
% Split clauses: 20
% Split components: 40
% SAT solver clauses: 49
% SAT solver unit clauses: 5
% SAT solver binary clauses: 21
% SAT solver learnt clauses: 1
% 
% Sat splits: 20
% Sat splitting refutations: 10
% 
% TWLsolver clauses: 46
% TWLsolver calls for satisfiability: 21
% 
% Memory used [KB]: 895
% Time elapsed: 0.024 s
% ------------------------------
% ------------------------------
% Success in time 0.026 s
