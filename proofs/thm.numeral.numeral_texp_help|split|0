Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f122,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f118])).
fof(f118,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0)))),
  inference(superposition,[],[f43,f111])).
fof(f111,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f52,f46])).
fof(f46,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  file('thm.numeral.numeral_texp_help|split|0','thm.arithmetic.ALT_ZERO')).
fof(f52,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))) = s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))),
  file('thm.numeral.numeral_texp_help|split|0','thm.numeral.texp_help_def|split|0')).
fof(f43,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))) != s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK0)))),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))) != s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK0)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f37])).
fof(f37,plain,(
  ? [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) != s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))),
  inference(ennf_transformation,[],[f21])).
fof(f21,plain,(
  ~! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))) = s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X6)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))) = s('type.num.num','const.numeral.texp_help_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X6)))),
  file('thm.numeral.numeral_texp_help|split|0','thm.numeral.numeral_texp_help|split|0')).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 14
% Passive clauses: 32
% Generated clauses: 73
% Final active clauses: 12
% Final passive clauses: 9
% Input formulas: 19
% Initial clauses: 21
% 
% Duplicate literals: 1
% Trivial inequalities: 2
% Fw demodulations: 4
% 
% Simple tautologies: 2
% Equational tautologies: 3
% Forward subsumptions: 29
% 
% Binary resolution: 2
% Forward superposition: 24
% Backward superposition: 13
% Self superposition: 8
% Equality factoring: 2
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 2
% SAT solver unit clauses: 1
% SAT solver binary clauses: 1
% 
% Sat splits: 1
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 639
% Time elapsed: 0.013 s
% ------------------------------
% ------------------------------
% Success in time 0.015 s
