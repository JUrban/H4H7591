Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.transc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.transc
% SZS output start Proof for thm.transc
fof(f283,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f280,f51,f76,f53,f79])).
fof(f79,plain,(
  ~p(s(bool,'F_0')) | $spl5),
  inference(cnf_transformation,[],[f79_D])).
fof(f79_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f53,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.transc.SQRT_POW_2',aHL_FALSITY)).
fof(f76,plain,(
  p(s(bool,'T_0')) | $spl0),
  inference(cnf_transformation,[],[f76_D])).
fof(f76_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f51,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.transc.SQRT_POW_2',aHL_TRUTH)).
fof(f280,plain,(
  $false | ($spl0 | $spl5)),
  inference(subsumption_resolution,[],[f279,f50])).
fof(f50,plain,(
  s('type.realax.real',sK0) != s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK0)))) & s('type.realax.real',sK0) != s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f27])).
fof(f27,plain,(
  ? [X0] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) & s('type.realax.real',X0) != s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(ennf_transformation,[],[f15])).
fof(f15,plain,(
  ~! [X0] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) => s('type.realax.real',X0) = s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X6)))) => s('type.realax.real',X6) = s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X6)))) => s('type.realax.real',X6) = s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  file('thm.transc.SQRT_POW_2','thm.transc.SQRT_POW_2')).
fof(f279,plain,(
  s('type.realax.real',sK0) = s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl5)),
  inference(subsumption_resolution,[],[f273,f76])).
fof(f273,plain,(
  ~p(s(bool,'T_0')) | s('type.realax.real',sK0) = s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl5),
  inference(superposition,[],[f56,f90])).
fof(f90,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK0))) | $spl5),
  inference(subsumption_resolution,[],[f87,f79])).
fof(f87,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK0)))),
  inference(superposition,[],[f49,f54])).
fof(f54,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.transc.SQRT_POW_2',aHL_BOOL_CASES)).
fof(f49,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK0))))),
  inference(cnf_transformation,[],[f34])).
fof(f56,plain,(
  ( ! [X0] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) | s('type.realax.real',X0) = s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0] : ((s('type.realax.real',X0) != s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0))))) & (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) | s('type.realax.real',X0) = s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(nnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0] : (s('type.realax.real',X0) = s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6] : (s('type.realax.real',X6) = s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X6)))))),
  file('thm.transc.SQRT_POW_2','thm.transc.SQRT_POW2')).
% SZS output end Proof for thm.transc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 17
% Passive clauses: 45
% Generated clauses: 222
% Final active clauses: 12
% Final passive clauses: 17
% Input formulas: 13
% Initial clauses: 26
% 
% Duplicate literals: 41
% Trivial inequalities: 2
% Fw subsumption resolutions: 8
% Bw demodulations: 2
% 
% Simple tautologies: 25
% Equational tautologies: 14
% Forward subsumptions: 77
% 
% Binary resolution: 6
% Forward superposition: 43
% Backward superposition: 35
% Self superposition: 24
% Equality factoring: 26
% 
% Split clauses: 9
% Split components: 19
% SAT solver clauses: 18
% SAT solver unit clauses: 3
% SAT solver binary clauses: 12
% SAT solver learnt clauses: 1
% 
% Sat splits: 9
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 17
% TWLsolver calls for satisfiability: 8
% 
% Memory used [KB]: 767
% Time elapsed: 0.016 s
% ------------------------------
% ------------------------------
% Success in time 0.017 s
