Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.complex
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.complex
% SZS output start Proof for thm.complex
fof(f267,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f266,f34,f53,f51,f251,f33,f52,f50])).
fof(f50,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',sK0))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',sK1))) | $spl0),
  inference(cnf_transformation,[],[f50_D])).
fof(f50_D,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',sK0))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',sK1))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f52,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) | $spl2),
  inference(cnf_transformation,[],[f52_D])).
fof(f52_D,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f33,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) | s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',sK0))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',sK1)))),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',sK0))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',sK1))) | s('type.num.num',sK0) = s('type.num.num',sK1)) & (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',sK0))) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',sK1))) | s('type.num.num',sK0) != s('type.num.num',sK1))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f25])).
fof(f25,plain,(
  ? [X0,X1] : ((s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',X0))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',X0))) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X0) != s('type.num.num',X1)))),
  inference(nnf_transformation,[],[f23])).
fof(f23,plain,(
  ? [X0,X1] : (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',X0))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',X1))) <~> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(ennf_transformation,[],[f13])).
fof(f13,plain,(
  ~! [X0,X1] : (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',X0))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',X6))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',X7))) <=> s('type.num.num',X6) = s('type.num.num',X7))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',X6))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',X7))) <=> s('type.num.num',X6) = s('type.num.num',X7))),
  file('thm.complex.COMPLEX_OF_NUM_EQ','thm.complex.COMPLEX_OF_NUM_EQ')).
fof(f251,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f250,f53])).
fof(f250,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) | $spl0),
  inference(equality_resolution,[],[f231])).
fof(f231,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',sK0))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) | s('type.num.num',sK1) = s('type.num.num',X0)) ) | $spl0),
  inference(superposition,[],[f44,f229])).
fof(f229,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',sK0))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',sK1))) | $spl0),
  inference(equality_resolution,[],[f225])).
fof(f225,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',sK0))) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',X0))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',sK1))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0)))) ) | $spl0),
  inference(superposition,[],[f224,f50])).
fof(f224,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',X0))) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',X1))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1)))) )),
  inference(superposition,[],[f220,f38])).
fof(f38,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',X0))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_real_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f15])).
fof(f15,plain,(
  ! [X0] : s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',X0))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_real_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X7] : s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',X7))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_real_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X7)))))),
  file('thm.complex.COMPLEX_OF_NUM_EQ','thm.complex.complex_of_num')).
fof(f220,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',X0))) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_real_1'(s('type.realax.real',X1))) | s('type.realax.real',X1) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0)))) )),
  inference(superposition,[],[f46,f38])).
fof(f46,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_real_1'(s('type.realax.real',X0))) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_real_1'(s('type.realax.real',X1))) | s('type.realax.real',X0) = s('type.realax.real',X1)) )),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1] : ((s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_real_1'(s('type.realax.real',X0))) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_real_1'(s('type.realax.real',X1))) | s('type.realax.real',X0) = s('type.realax.real',X1)) & (s('type.realax.real',X0) != s('type.realax.real',X1) | s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_real_1'(s('type.realax.real',X0))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_real_1'(s('type.realax.real',X1)))))),
  inference(nnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1] : (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_real_1'(s('type.realax.real',X0))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_real_1'(s('type.realax.real',X1))) <=> s('type.realax.real',X0) = s('type.realax.real',X1))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X10,X11] : (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_real_1'(s('type.realax.real',X10))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_real_1'(s('type.realax.real',X11))) <=> s('type.realax.real',X10) = s('type.realax.real',X11))),
  file('thm.complex.COMPLEX_OF_NUM_EQ','thm.complex.COMPLEX_OF_REAL_EQ')).
fof(f44,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1] : ((s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0,X1] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6,X7] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X6))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X7))) <=> s('type.num.num',X6) = s('type.num.num',X7))),
  file('thm.complex.COMPLEX_OF_NUM_EQ','thm.real.REAL_INJ')).
fof(f51,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',sK0))) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',sK1))) | $spl1),
  inference(cnf_transformation,[],[f51_D])).
fof(f51_D,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',sK0))) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',sK1))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f53,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) | $spl3),
  inference(cnf_transformation,[],[f53_D])).
fof(f53_D,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f34,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',sK0))) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',sK1)))),
  inference(cnf_transformation,[],[f26])).
fof(f266,plain,(
  $false | ($spl1 | $spl2)),
  inference(trivial_inequality_removal,[],[f265])).
fof(f265,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',sK0))) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num',sK0))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f51,f52])).
% SZS output end Proof for thm.complex
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 22
% Passive clauses: 39
% Generated clauses: 219
% Final active clauses: 15
% Final passive clauses: 5
% Input formulas: 11
% Initial clauses: 16
% 
% Duplicate literals: 37
% Trivial inequalities: 4
% Fw subsumption resolutions: 1
% Fw demodulations: 17
% Bw demodulations: 1
% 
% Simple tautologies: 18
% Equational tautologies: 20
% Forward subsumptions: 82
% 
% Binary resolution: 4
% Forward superposition: 31
% Backward superposition: 45
% Self superposition: 24
% Equality factoring: 26
% Equality resolution: 7
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 8
% SAT solver unit clauses: 2
% SAT solver binary clauses: 5
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 3
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 6
% TWLsolver calls for satisfiability: 4
% 
% Memory used [KB]: 639
% Time elapsed: 0.015 s
% ------------------------------
% ------------------------------
% Success in time 0.017 s
