Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f9089,plain,(
  $false),
  inference(subsumption_resolution,[],[f9048,f262])).
fof(f262,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f117])).
fof(f117,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X22,X23] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X23))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X23),s('type.num.num',X22)))),
  file('thm.numeral.enumeral_mult|split|2','thm.arithmetic.MULT_SYM')).
fof(f9048,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0)))))),
  inference(superposition,[],[f7981,f8719])).
fof(f8719,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.numeral.internal_mult_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(forward_demodulation,[],[f8718,f265])).
fof(f265,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.*_0'),s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f120])).
fof(f120,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.*_0'),s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X20,X21] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num',X21))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.*_0'),s('type.num.num',X20))),s('type.num.num',X21)))),
  file('thm.numeral.enumeral_mult|split|2','ARITY_0_2_const.arithmetic.*')).
fof(f8718,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.numeral.internal_mult_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.*_0'),s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(forward_demodulation,[],[f266,f206])).
fof(f206,plain,(
  s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.*_0') = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.numeral.internal_mult_0')),
  inference(cnf_transformation,[],[f33])).
fof(f33,axiom,(
  s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.*_0') = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.numeral.internal_mult_0')),
  file('thm.numeral.enumeral_mult|split|2','thm.numeral.internal_mult_def')).
fof(f266,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.numeral.internal_mult_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.numeral.internal_mult_0'),s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0,X1] : s('type.num.num','const.numeral.internal_mult_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.numeral.internal_mult_0'),s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X20,X21] : s('type.num.num','const.numeral.internal_mult_2'(s('type.num.num',X20),s('type.num.num',X21))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.numeral.internal_mult_0'),s('type.num.num',X20))),s('type.num.num',X21)))),
  file('thm.numeral.enumeral_mult|split|2','ARITY_0_2_const.numeral.internal_mult')).
fof(f7981,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))) != s('type.num.num','const.numeral.internal_mult_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0)))))),
  inference(forward_demodulation,[],[f201,f262])).
fof(f201,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))) != s('type.num.num','const.numeral.internal_mult_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0)))))),
  inference(cnf_transformation,[],[f169])).
fof(f169,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))) != s('type.num.num','const.numeral.internal_mult_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f158])).
fof(f158,plain,(
  ? [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) != s('type.num.num','const.numeral.internal_mult_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(ennf_transformation,[],[f71])).
fof(f71,plain,(
  ~! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) = s('type.num.num','const.numeral.internal_mult_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))))) = s('type.num.num','const.numeral.internal_mult_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))))) = s('type.num.num','const.numeral.internal_mult_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6)))))),
  file('thm.numeral.enumeral_mult|split|2','thm.numeral.enumeral_mult|split|2')).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 192
% Passive clauses: 692
% Generated clauses: 8836
% Final active clauses: 151
% Final passive clauses: 379
% Input formulas: 69
% Initial clauses: 107
% 
% Duplicate literals: 13
% Trivial inequalities: 289
% Fw subsumption resolutions: 428
% Fw demodulations: 1434
% Bw demodulations: 38
% 
% Simple tautologies: 62
% Equational tautologies: 9
% Forward subsumptions: 5890
% Fw demodulations to eq. taut.: 1
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 228
% Factoring: 1
% Forward superposition: 2582
% Backward superposition: 3598
% Self superposition: 38
% Equality factoring: 2
% Equality resolution: 7
% 
% Split clauses: 66
% Split components: 132
% SAT solver clauses: 76
% SAT solver unit clauses: 4
% SAT solver binary clauses: 19
% 
% Sat splits: 66
% 
% TWLsolver clauses: 75
% TWLsolver calls for satisfiability: 51
% 
% Memory used [KB]: 4861
% Time elapsed: 0.126 s
% ------------------------------
% ------------------------------
% Success in time 0.111 s
