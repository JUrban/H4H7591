Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.numeral
% (91208)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 690
% Passive clauses: 9761
% Generated clauses: 23183
% Final active clauses: 594
% Final passive clauses: 8584
% Input formulas: 50
% Initial clauses: 124
% 
% Duplicate literals: 257
% Trivial inequalities: 199
% Fw subsumption resolutions: 1819
% Fw demodulations: 1793
% Bw demodulations: 94
% 
% Simple tautologies: 150
% Equational tautologies: 64
% Forward subsumptions: 9006
% Fw demodulations to eq. taut.: 6
% 
% Binary resolution: 7379
% Factoring: 1012
% Forward superposition: 4774
% Backward superposition: 5463
% Self superposition: 34
% Equality factoring: 26
% Equality resolution: 32
% 
% Split clauses: 256
% Split components: 512
% SAT solver clauses: 542
% SAT solver unit clauses: 24
% SAT solver binary clauses: 126
% 
% Sat splits: 256
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 540
% TWLsolver calls for satisfiability: 349
% 
% Memory used [KB]: 10618
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.numeral
% (91223)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 316
% Passive clauses: 3327
% Generated clauses: 15997
% Final active clauses: 207
% Final passive clauses: 1308
% Input formulas: 50
% Initial clauses: 124
% 
% Duplicate literals: 147
% Trivial inequalities: 32
% Fw subsumption resolutions: 1302
% Fw demodulations: 1159
% Bw demodulations: 2245
% Condensations: 198
% Global subsumptions: 14
% 
% Simple tautologies: 142
% Equational tautologies: 17
% Forward subsumptions: 6085
% Fw demodulations to eq. taut.: 6
% Bw demodulations to eq. taut.: 67
% 
% Binary resolution: 2170
% Factoring: 177
% Forward superposition: 1887
% Backward superposition: 1785
% Self superposition: 35
% Equality factoring: 26
% Equality resolution: 4
% 
% Split clauses: 148
% Split components: 296
% SAT solver clauses: 3144
% SAT solver unit clauses: 150
% SAT solver binary clauses: 80
% SAT solver learnt clauses: 29
% SAT solver learnt literals: 11
% 
% Sat splits: 148
% Sat splitting refutations: 38
% 
% TWLsolver clauses: 3087
% TWLsolver calls for satisfiability: 882
% 
% Memory used [KB]: 12537
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f6910,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f187,f316,f314,f186,f315,f313,f4411,f4415,f4418,f4421,f4438,f4412,f4440,f4416,f4442,f4419,f4444,f4413,f4422,f4604,f4605,f4607,f4609,f4611,f4613,f4615,f4617,f4620,f4622,f4624,f4626,f4628,f4630,f4632,f4634,f4636,f4638,f4640,f4642,f4644,f4646,f4648,f4650,f4652,f4654,f4656,f4659,f4662,f4665,f4668,f4671,f4674,f4677,f4680,f4682,f4684,f4686,f4688,f4690,f4692,f4695,f4698,f4699,f4701,f4703,f4705,f4707,f4709,f4711,f4713,f4715,f4717,f4719,f4721,f4723,f4725,f4727,f4729,f4731,f4733,f4735,f4737,f4739,f4741,f4743,f4745,f4747,f4748,f5250,f6900])).
fof(f6900,plain,(
  $false | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f6899,f188])).
fof(f188,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.numeral.numeral_lt|split|5',aHL_TRUTH)).
fof(f6899,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f6898,f5256])).
fof(f5256,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7),s('type.num.num',sK6))) | $spl2),
  inference(unit_resulting_resolution,[],[f188,f316,f256])).
fof(f256,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f122])).
fof(f122,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f121])).
fof(f121,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f100])).
fof(f100,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X8,X9] : ((p(s(bool,X8)) => p(s(bool,X9))) => ((p(s(bool,X9)) => p(s(bool,X8))) => s(bool,X8) = s(bool,X9)))),
  file('thm.numeral.numeral_lt|split|5','thm.bool.IMP_ANTISYM_AX')).
fof(f6898,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7),s('type.num.num',sK6)))) | $spl0),
  inference(subsumption_resolution,[],[f6869,f188])).
fof(f6869,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7),s('type.num.num',sK6)))) | $spl0),
  inference(superposition,[],[f3307,f5346])).
fof(f5346,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK6),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK7))))) | $spl0),
  inference(unit_resulting_resolution,[],[f188,f5251,f256])).
fof(f5251,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK6),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK7)))))) | $spl0),
  inference(forward_demodulation,[],[f313,f1230])).
fof(f1230,plain,(
  ( ! [X2,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f1229,f1101])).
fof(f1101,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f1100,f1062])).
fof(f1062,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(superposition,[],[f244,f326])).
fof(f326,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f324,f319])).
fof(f319,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f197,f190])).
fof(f190,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  file('thm.numeral.numeral_lt|split|5','thm.arithmetic.ALT_ZERO')).
fof(f197,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))),
  file('thm.numeral.numeral_lt|split|5','thm.arithmetic.ADD_|48|')).
fof(f324,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(backward_demodulation,[],[f244,f321])).
fof(f321,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f199,f190])).
fof(f199,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.numeral.numeral_lt|split|5','thm.arithmetic.BIT|49|')).
fof(f244,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0,X1] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6,X7] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))),
  file('thm.numeral.numeral_lt|split|5','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f1100,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f1063,f244])).
fof(f1063,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))) )),
  inference(superposition,[],[f244,f328])).
fof(f328,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) )),
  inference(forward_demodulation,[],[f327,f319])).
fof(f327,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f325,f244])).
fof(f325,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(backward_demodulation,[],[f244,f322])).
fof(f322,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f200,f190])).
fof(f200,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  file('thm.numeral.numeral_lt|split|5','thm.arithmetic.BIT2')).
fof(f1229,plain,(
  ( ! [X2,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f1228,f1062])).
fof(f1228,plain,(
  ( ! [X2,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))))))))) )),
  inference(forward_demodulation,[],[f1209,f243])).
fof(f243,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0,X1] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6,X7] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num',X6)))),
  file('thm.numeral.numeral_lt|split|5','thm.arithmetic.ADD_CLAUSES|split|2')).
fof(f1209,plain,(
  ( ! [X2,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X2)))))))) )),
  inference(superposition,[],[f1090,f244])).
fof(f1090,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(backward_demodulation,[],[f1062,f248])).
fof(f248,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f95])).
fof(f95,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X12,X13] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X12),s('type.num.num',X13))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X12))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X13)))))),
  file('thm.numeral.numeral_lt|split|5','thm.numeral.numeral_|49||48|_prove_ltb|split|0')).
fof(f3307,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(forward_demodulation,[],[f3306,f1230])).
fof(f3306,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(forward_demodulation,[],[f3300,f1101])).
fof(f3300,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(backward_demodulation,[],[f3183,f1095])).
fof(f1095,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(backward_demodulation,[],[f1062,f257])).
fof(f257,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))))))))) )),
  inference(cnf_transformation,[],[f161])).
fof(f161,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))))))))))),
  inference(nnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f101])).
fof(f101,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X12,X13] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X12))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X13)))))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num',X12)))))),
  file('thm.numeral.numeral_lt|split|5','thm.numeral.numeral_|49||48|_prove_ltb|split|2')).
fof(f3183,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(superposition,[],[f242,f1062])).
fof(f242,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X7,X6] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))),
  file('thm.numeral.numeral_lt|split|5','thm.prim_rec.LESS_MONO_EQ')).
fof(f5250,plain,(
  $false | ($spl1 | $spl3)),
  inference(subsumption_resolution,[],[f5249,f5086])).
fof(f5086,plain,(
  s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK6),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK7))))) | $spl1),
  inference(unit_resulting_resolution,[],[f4995,f208])).
fof(f208,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f141])).
fof(f141,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.numeral.numeral_lt|split|5','thm.bool.EQ_CLAUSES|split|0')).
fof(f4995,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK6),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK7)))))) | $spl1),
  inference(forward_demodulation,[],[f4897,f1230])).
fof(f4897,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK7)))))) | $spl1),
  inference(unit_resulting_resolution,[],[f342,f188,f317,f298])).
fof(f298,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP3(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f182])).
fof(f182,plain,(
  ! [X0,X1,X2] : ((~sP3(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP3(X0,X1,X2)))),
  inference(rectify,[],[f181])).
fof(f181,plain,(
  ! [X1,X0,X2] : ((~sP3(X1,X0,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP3(X1,X0,X2)))),
  inference(flattening,[],[f180])).
fof(f180,plain,(
  ! [X1,X0,X2] : ((~sP3(X1,X0,X2) | (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP3(X1,X0,X2)))),
  inference(nnf_transformation,[],[f133])).
fof(f133,plain,(
  ! [X1,X0,X2] : (sP3(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f317,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f192,f188])).
fof(f192,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f54])).
fof(f54,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f25])).
fof(f25,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.numeral.numeral_lt|split|5','thm.bool.NOT_CLAUSES|split|1')).
fof(f342,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK7)))),X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f314,f300])).
fof(f300,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f182])).
fof(f5249,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK6),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK7))))) | ($spl1 | $spl3)),
  inference(subsumption_resolution,[],[f5211,f3303])).
fof(f3303,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(forward_demodulation,[],[f3302,f1230])).
fof(f3302,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(forward_demodulation,[],[f3298,f1101])).
fof(f3298,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(backward_demodulation,[],[f3183,f1385])).
fof(f1385,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(subsumption_resolution,[],[f1345,f317])).
fof(f1345,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f1096,f201])).
fof(f201,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.numeral.numeral_lt|split|5',aHL_BOOL_CASES)).
fof(f1096,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(backward_demodulation,[],[f1062,f258])).
fof(f258,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f161])).
fof(f5211,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7),s('type.num.num',sK6)))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK6),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK7))))) | ($spl1 | $spl3)),
  inference(superposition,[],[f4995,f3143])).
fof(f3143,plain,(
  ( ! [X26] : (s(bool,X26) = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7),s('type.num.num',sK6))) | s(bool,'T_0') = s(bool,X26)) ) | $spl3),
  inference(subsumption_resolution,[],[f3129,f317])).
fof(f3129,plain,(
  ( ! [X26] : (p(s(bool,'F_0')) | s(bool,X26) = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7),s('type.num.num',sK6))) | s(bool,'T_0') = s(bool,X26)) ) | $spl3),
  inference(superposition,[],[f520,f366])).
fof(f366,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7),s('type.num.num',sK6))) | $spl3),
  inference(unit_resulting_resolution,[],[f315,f213])).
fof(f213,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f143])).
fof(f143,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f69])).
fof(f69,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X10] : (s(bool,'F_0') = s(bool,X10) <=> ~p(s(bool,X10)))),
  file('thm.numeral.numeral_lt|split|5','thm.bool.EQ_CLAUSES|split|2')).
fof(f520,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f511,f317])).
fof(f511,plain,(
  ( ! [X4,X5] : (p(s(bool,'F_0')) | p(s(bool,X5)) | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f253,f201])).
fof(f253,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f122])).
fof(f4748,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f4583,f188])).
fof(f4583,plain,(
  ~p(s(bool,'T_0')) | $spl6),
  inference(backward_demodulation,[],[f4413,f2307])).
fof(f2307,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(unit_resulting_resolution,[],[f1349,f1097])).
fof(f1097,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(backward_demodulation,[],[f1062,f259])).
fof(f259,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))))))))) )),
  inference(cnf_transformation,[],[f162])).
fof(f162,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))))))))))),
  inference(nnf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f103])).
fof(f103,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X12,X13] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X12))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X13)))))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num',X12)))))),
  file('thm.numeral.numeral_lt|split|5','thm.numeral.numeral_|49||48|_prove_ltb|split|3')).
fof(f1349,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) )),
  inference(subsumption_resolution,[],[f1348,f317])).
fof(f1348,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) )),
  inference(forward_demodulation,[],[f1347,f368])).
fof(f368,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f323,f213])).
fof(f323,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(forward_demodulation,[],[f235,f190])).
fof(f235,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) )),
  inference(cnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),
  inference(flattening,[],[f82])).
fof(f82,plain,(
  ! [X0] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X6] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0'))))),
  file('thm.numeral.numeral_lt|split|5','thm.prim_rec.NOT_LESS_|48|')).
fof(f1347,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) )),
  inference(forward_demodulation,[],[f1346,f190])).
fof(f1346,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f1327,f318])).
fof(f318,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f196,f190])).
fof(f196,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))),
  file('thm.numeral.numeral_lt|split|5','thm.arithmetic.ADD_CLAUSES|split|0')).
fof(f1327,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f1096,f190])).
fof(f4747,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706,f4708,f4710,f4712,f4714,f4716,f4718,f4720,f4722,f4724,f4726,f4728,f4730,f4732,f4734,f4736,f4738,f4740,f4742,f4744,f4746])).
fof(f4746,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X36)))),X38)) ) | $spl6),
  inference(subsumption_resolution,[],[f4581,f188])).
fof(f4581,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X36)))),X38)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1890])).
fof(f4744,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X32)))),X34)) ) | $spl6),
  inference(subsumption_resolution,[],[f4580,f188])).
fof(f4580,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X32)))),X34)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1889])).
fof(f4742,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X30)) | sP1(X30,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X29)))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4579,f188])).
fof(f4579,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X30)) | sP1(X30,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X29)))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1888])).
fof(f4740,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X27)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26)))),X27)) ) | $spl6),
  inference(subsumption_resolution,[],[f4578,f188])).
fof(f4578,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X27)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26)))),X27)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1887])).
fof(f4738,plain,(
  ( ! [X24,X23,X22] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X23)))),X24)) ) | $spl6),
  inference(subsumption_resolution,[],[f4577,f188])).
fof(f4577,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X23)))),X24)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1886])).
fof(f4736,plain,(
  ( ! [X21,X19,X20] : (sP0(X21,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X20)))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4576,f188])).
fof(f4576,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | sP0(X21,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X20)))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1885])).
fof(f4734,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num',X35))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X36)))),X38)) ) | $spl6),
  inference(subsumption_resolution,[],[f4568,f188])).
fof(f4568,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num',X35))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X36)))),X38)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1950])).
fof(f4732,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X31))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32)))),X34)) ) | $spl6),
  inference(subsumption_resolution,[],[f4567,f188])).
fof(f4567,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X31))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32)))),X34)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1949])).
fof(f4730,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X30)) | sP1(X30,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29)))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4566,f188])).
fof(f4566,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X30)) | sP1(X30,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29)))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1948])).
fof(f4728,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X27)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X25))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X26)))),X27)) ) | $spl6),
  inference(subsumption_resolution,[],[f4565,f188])).
fof(f4565,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X27)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X25))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X26)))),X27)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1947])).
fof(f4726,plain,(
  ( ! [X24,X23,X22] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))),X24)) ) | $spl6),
  inference(subsumption_resolution,[],[f4564,f188])).
fof(f4564,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))),X24)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1946])).
fof(f4724,plain,(
  ( ! [X21,X19,X20] : (sP0(X21,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X19))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20)))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4563,f188])).
fof(f4563,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | sP0(X21,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X19))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20)))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1945])).
fof(f4722,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num',X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X36)))),X38)) ) | $spl6),
  inference(subsumption_resolution,[],[f4560,f188])).
fof(f4560,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num',X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X36)))),X38)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1732])).
fof(f4720,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X32)))),X34)) ) | $spl6),
  inference(subsumption_resolution,[],[f4559,f188])).
fof(f4559,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X32)))),X34)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1731])).
fof(f4718,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X30)) | sP1(X30,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X29)))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4558,f188])).
fof(f4558,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X30)) | sP1(X30,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X29)))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1730])).
fof(f4716,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X27)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X25))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26)))),X27)) ) | $spl6),
  inference(subsumption_resolution,[],[f4557,f188])).
fof(f4557,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X27)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X25))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26)))),X27)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1729])).
fof(f4714,plain,(
  ( ! [X24,X23,X22] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num',X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X23)))),X24)) ) | $spl6),
  inference(subsumption_resolution,[],[f4556,f188])).
fof(f4556,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num',X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X23)))),X24)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1728])).
fof(f4712,plain,(
  ( ! [X21,X19,X20] : (sP0(X21,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X20)))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4555,f188])).
fof(f4555,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | sP0(X21,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X20)))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1727])).
fof(f4710,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X36)))),X38)) ) | $spl6),
  inference(subsumption_resolution,[],[f4552,f188])).
fof(f4552,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X36)))),X38)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f2024])).
fof(f4708,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X32)))),X34)) ) | $spl6),
  inference(subsumption_resolution,[],[f4551,f188])).
fof(f4551,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X32)))),X34)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f2023])).
fof(f4706,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X30)) | sP1(X30,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X29)))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4550,f188])).
fof(f4550,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X30)) | sP1(X30,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X29)))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f2022])).
fof(f4704,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X27)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26)))),X27)) ) | $spl6),
  inference(subsumption_resolution,[],[f4549,f188])).
fof(f4549,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X27)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26)))),X27)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f2021])).
fof(f4702,plain,(
  ( ! [X24,X23,X22] : (sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X23)))),X24)) ) | $spl6),
  inference(subsumption_resolution,[],[f4548,f188])).
fof(f4548,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X23)))),X24)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f2020])).
fof(f4700,plain,(
  ( ! [X21,X19,X20] : (sP0(X21,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X20)))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4547,f188])).
fof(f4547,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | sP0(X21,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X20)))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f2019])).
fof(f4691,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num',X35))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X36)))),X38)) ) | $spl6),
  inference(subsumption_resolution,[],[f4532,f188])).
fof(f4532,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num',X35))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X36)))),X38)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1812])).
fof(f4689,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X31))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32)))),X34)) ) | $spl6),
  inference(subsumption_resolution,[],[f4531,f188])).
fof(f4531,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X31))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32)))),X34)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1811])).
fof(f4687,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X30)) | sP1(X30,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29)))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4530,f188])).
fof(f4530,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X30)) | sP1(X30,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29)))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1810])).
fof(f4685,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X27)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X25))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X26)))),X27)) ) | $spl6),
  inference(subsumption_resolution,[],[f4529,f188])).
fof(f4529,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X27)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X25))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X26)))),X27)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1809])).
fof(f4683,plain,(
  ( ! [X24,X23,X22] : (sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))),X24)) ) | $spl6),
  inference(subsumption_resolution,[],[f4528,f188])).
fof(f4528,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))),X24)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1808])).
fof(f4681,plain,(
  ( ! [X21,X19,X20] : (sP0(X21,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X19))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20)))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4527,f188])).
fof(f4527,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | sP0(X21,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X19))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20)))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1807])).
fof(f4655,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num',X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X36)))),X38)) ) | $spl6),
  inference(subsumption_resolution,[],[f4496,f188])).
fof(f4496,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num',X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X36)))),X38)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1640])).
fof(f4653,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X32)))),X34)) ) | $spl6),
  inference(subsumption_resolution,[],[f4495,f188])).
fof(f4495,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X32)))),X34)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1639])).
fof(f4651,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X30)) | sP1(X30,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X29)))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4494,f188])).
fof(f4494,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X30)) | sP1(X30,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X29)))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1638])).
fof(f4649,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X27)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X25))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26)))),X27)) ) | $spl6),
  inference(subsumption_resolution,[],[f4493,f188])).
fof(f4493,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X27)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X25))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26)))),X27)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1637])).
fof(f4647,plain,(
  ( ! [X24,X23,X22] : (sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num',X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X23)))),X24)) ) | $spl6),
  inference(subsumption_resolution,[],[f4492,f188])).
fof(f4492,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num',X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X23)))),X24)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1636])).
fof(f4645,plain,(
  ( ! [X21,X19,X20] : (sP0(X21,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X20)))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4491,f188])).
fof(f4491,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | sP0(X21,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X20)))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1635])).
fof(f4643,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X36)))),X38)) ) | $spl6),
  inference(subsumption_resolution,[],[f4489,f188])).
fof(f4489,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X36)))),X38)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1225])).
fof(f4641,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X32)))),X34)) ) | $spl6),
  inference(subsumption_resolution,[],[f4488,f188])).
fof(f4488,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X32)))),X34)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1224])).
fof(f4639,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X30)) | sP1(X30,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X29)))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4487,f188])).
fof(f4487,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X30)) | sP1(X30,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X29)))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1223])).
fof(f4637,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X27)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26)))),X27)) ) | $spl6),
  inference(subsumption_resolution,[],[f4486,f188])).
fof(f4486,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X27)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26)))),X27)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1222])).
fof(f4635,plain,(
  ( ! [X24,X23,X22] : (sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X23)))),X24)) ) | $spl6),
  inference(subsumption_resolution,[],[f4485,f188])).
fof(f4485,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X23)))),X24)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1221])).
fof(f4633,plain,(
  ( ! [X21,X19,X20] : (sP0(X21,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X20)))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4484,f188])).
fof(f4484,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | sP0(X21,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X20)))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1220])).
fof(f4631,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X36)))),X38)) ) | $spl6),
  inference(subsumption_resolution,[],[f4483,f188])).
fof(f4483,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X36)))),X38)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1156])).
fof(f4629,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X32)))),X34)) ) | $spl6),
  inference(subsumption_resolution,[],[f4482,f188])).
fof(f4482,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X32)))),X34)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1155])).
fof(f4627,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X30)) | sP1(X30,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X29)))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4481,f188])).
fof(f4481,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X30)) | sP1(X30,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X29)))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1154])).
fof(f4625,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X27)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26)))),X27)) ) | $spl6),
  inference(subsumption_resolution,[],[f4480,f188])).
fof(f4480,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X27)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26)))),X27)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1153])).
fof(f4623,plain,(
  ( ! [X24,X23,X22] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X23)))),X24)) ) | $spl6),
  inference(subsumption_resolution,[],[f4479,f188])).
fof(f4479,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X23)))),X24)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1152])).
fof(f4621,plain,(
  ( ! [X21,X19,X20] : (sP0(X21,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X20)))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4478,f188])).
fof(f4478,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | sP0(X21,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X20)))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1151])).
fof(f4616,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X35))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X36)))),X38)) ) | $spl6),
  inference(subsumption_resolution,[],[f4473,f188])).
fof(f4473,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X35))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X36)))),X38)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f974])).
fof(f4614,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X32)))),X34)) ) | $spl6),
  inference(subsumption_resolution,[],[f4472,f188])).
fof(f4472,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X32)))),X34)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f973])).
fof(f4612,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X30)) | sP1(X30,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X29)))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4471,f188])).
fof(f4471,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X30)) | sP1(X30,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X29)))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f972])).
fof(f4610,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X27)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X26)))),X27)) ) | $spl6),
  inference(subsumption_resolution,[],[f4470,f188])).
fof(f4470,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X27)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X26)))),X27)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f971])).
fof(f4608,plain,(
  ( ! [X24,X23,X22] : (sP0('const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X23)))),X24)) ) | $spl6),
  inference(subsumption_resolution,[],[f4469,f188])).
fof(f4469,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0('const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X23)))),X24)) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f970])).
fof(f4606,plain,(
  ( ! [X21,X19,X20] : (sP0(X21,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X19))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X20)))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4468,f188])).
fof(f4468,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | sP0(X21,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X19))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X20)))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f969])).
fof(f4603,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl6),
  inference(subsumption_resolution,[],[f4445,f4413])).
fof(f4445,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f212])).
fof(f4176,plain,(
  ( ! [X114,X112,X115,X113] : (s(bool,'T_0') != s(bool,f(s(X112,sK8(X113,X114,bool,X112)))) | s(fun(X112,bool),X113) = s(fun(X112,bool),X114) | s(bool,X115) = s(bool,g(s(X112,sK8(X113,X114,bool,X112)))) | s(bool,'T_0') = s(bool,X115)) )),
  inference(superposition,[],[f286,f466])).
fof(f4175,plain,(
  ( ! [X111,X109,X110,X108] : (s(X110,f(s(bool,'T_0'))) != s(X110,g(s(bool,'T_0'))) | s(fun(bool,X110),X108) = s(fun(bool,X110),X109) | s(bool,X111) = s(bool,sK8(X108,X109,X110,bool)) | s(bool,'T_0') = s(bool,X111)) )),
  inference(superposition,[],[f286,f466])).
fof(f4432,plain,(
  ( ! [X97,X98,X96] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X97),s('type.num.num',X96)))) | s(bool,X98) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X96),s('type.num.num',X96))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97))))) | s(bool,'T_0') = s(bool,X98)) )),
  inference(subsumption_resolution,[],[f4172,f188])).
fof(f4172,plain,(
  ( ! [X97,X98,X96] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X97),s('type.num.num',X96)))) | s(bool,X98) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X96),s('type.num.num',X96))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97))))) | s(bool,'T_0') = s(bool,X98)) )),
  inference(superposition,[],[f1097,f466])).
fof(f4431,plain,(
  ( ! [X57,X58,X56] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X57),s('type.num.num',X56)))) | s(bool,X58) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X56),s('type.num.num','const.num.SUC_1'(s('type.num.num',X57))))) | s(bool,'T_0') = s(bool,X58)) )),
  inference(subsumption_resolution,[],[f4156,f188])).
fof(f4156,plain,(
  ( ! [X57,X58,X56] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X57),s('type.num.num',X56)))) | s(bool,X58) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X56),s('type.num.num','const.num.SUC_1'(s('type.num.num',X57))))) | s(bool,'T_0') = s(bool,X58)) )),
  inference(superposition,[],[f3307,f466])).
fof(f4430,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X36)) | p(s(bool,X37)) | ~sP3(X36,X35,X37) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(subsumption_resolution,[],[f4146,f188])).
fof(f4146,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X36)) | p(s(bool,X37)) | ~sP3(X36,X35,X37) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f298,f466])).
fof(f4429,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X32)) | p(s(bool,X33)) | ~sP4(X32,X31,X33) | s(bool,X31) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(subsumption_resolution,[],[f4145,f188])).
fof(f4145,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X32)) | p(s(bool,X33)) | ~sP4(X32,X31,X33) | s(bool,X31) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f294,f466])).
fof(f4428,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X29)) | sP1(X29,X28) | s(bool,X28) = s(bool,X30) | s(bool,'T_0') = s(bool,X30)) )),
  inference(subsumption_resolution,[],[f4144,f188])).
fof(f4144,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X29)) | sP1(X29,X28) | s(bool,X28) = s(bool,X30) | s(bool,'T_0') = s(bool,X30)) )),
  inference(superposition,[],[f281,f466])).
fof(f4427,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X26)) | sP1(X25,X26) | s(bool,X25) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(subsumption_resolution,[],[f4143,f188])).
fof(f4143,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X26)) | sP1(X25,X26) | s(bool,X25) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(superposition,[],[f278,f466])).
fof(f4426,plain,(
  ( ! [X24,X23,X22] : (sP0(X22,X23) | s(bool,X22) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(subsumption_resolution,[],[f4142,f188])).
fof(f4142,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0(X22,X23) | s(bool,X22) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f263,f466])).
fof(f4425,plain,(
  ( ! [X21,X19,X20] : (sP0(X20,X19) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(subsumption_resolution,[],[f4141,f188])).
fof(f4141,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | sP0(X20,X19) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f262,f466])).
fof(f4424,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,X17)) | s(bool,X16) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(subsumption_resolution,[],[f4140,f188])).
fof(f4140,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X17)) | s(bool,X16) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f256,f466])).
fof(f4423,plain,(
  ( ! [X6,X7] : (s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f4136,f188])).
fof(f4136,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f212,f466])).
fof(f4118,plain,(
  ( ! [X4,X2,X3] : (s(bool,X2) != s(bool,X3) | p(s(bool,X3)) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f208,f466])).
fof(f4070,plain,(
  ( ! [X121,X122,X120,X119] : (s(bool,X122) != s(bool,f(s(X119,sK8(X120,X121,bool,X119)))) | s(fun(X119,bool),X120) = s(fun(X119,bool),X121) | s(bool,'T_0') = s(bool,X122) | s(bool,'T_0') = s(bool,g(s(X119,sK8(X120,X121,bool,X119))))) )),
  inference(superposition,[],[f286,f466])).
fof(f4069,plain,(
  ( ! [X118,X116,X117,X115] : (s(X117,f(s(bool,X118))) != s(X117,g(s(bool,X118))) | s(fun(bool,X117),X115) = s(fun(bool,X117),X116) | s(bool,'T_0') = s(bool,X118) | s(bool,'T_0') = s(bool,sK8(X115,X116,X117,bool))) )),
  inference(superposition,[],[f286,f466])).
fof(f3998,plain,(
  ( ! [X50,X48,X49] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X48),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49))))) | s(bool,X50) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X48),s('type.num.num',X48))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X49))))) | s(bool,'T_0') = s(bool,X50)) )),
  inference(superposition,[],[f466,f1105])).
fof(f3997,plain,(
  ( ! [X47,X45,X46] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))),s('type.num.num',X46))) | s(bool,X47) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X45))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X46),s('type.num.num',X46))))) | s(bool,'T_0') = s(bool,X47)) )),
  inference(superposition,[],[f466,f1104])).
fof(f3996,plain,(
  ( ! [X43,X44,X42] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43))) | s(bool,X44) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X42),s('type.num.num',X42))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X43),s('type.num.num',X43))))) | s(bool,'T_0') = s(bool,X44)) )),
  inference(superposition,[],[f466,f246])).
fof(f3995,plain,(
  ( ! [X39,X41,X40] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X39),s('type.num.num',X40))) | s(bool,X41) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X39))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X40),s('type.num.num',X40))))) | s(bool,'T_0') = s(bool,X41)) )),
  inference(superposition,[],[f466,f1089])).
fof(f3992,plain,(
  ( ! [X35,X33,X34] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))))) | s(bool,X35) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34))))) | s(bool,'T_0') = s(bool,X35)) )),
  inference(superposition,[],[f466,f1103])).
fof(f3991,plain,(
  ( ! [X30,X31,X32] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X30),s('type.num.num',X31))) | s(bool,X32) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num',X30))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X31))))) | s(bool,'T_0') = s(bool,X32)) )),
  inference(superposition,[],[f466,f245])).
fof(f3990,plain,(
  ( ! [X28,X29,X27] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X27),s('type.num.num',X28))) | s(bool,X29) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))))) | s(bool,'T_0') = s(bool,X29)) )),
  inference(superposition,[],[f466,f242])).
fof(f3989,plain,(
  ( ! [X24,X23,X22] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))),s('type.num.num',X23))) | s(bool,X24) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X23))))) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f466,f1106])).
fof(f3988,plain,(
  ( ! [X21,X19,X20] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num',X20))) | s(bool,X21) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X20))))) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f466,f1090])).
fof(f3975,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f466,f466])).
fof(f3948,plain,(
  ( ! [X57,X58,X56] : (s(bool,X58) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X56),s('type.num.num','const.num.SUC_1'(s('type.num.num',X57))))) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X56),s('type.num.num',X56))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X57)))))) )),
  inference(superposition,[],[f466,f1105])).
fof(f3947,plain,(
  ( ! [X54,X55,X53] : (s(bool,X55) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X53))),s('type.num.num',X54))) | s(bool,'T_0') = s(bool,X55) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X53))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num',X54)))))) )),
  inference(superposition,[],[f466,f1104])).
fof(f3946,plain,(
  ( ! [X52,X50,X51] : (s(bool,X52) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X50),s('type.num.num',X51))) | s(bool,'T_0') = s(bool,X52) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X50),s('type.num.num',X50))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X51),s('type.num.num',X51)))))) )),
  inference(superposition,[],[f466,f246])).
fof(f3945,plain,(
  ( ! [X47,X48,X49] : (s(bool,X49) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X47),s('type.num.num',X48))) | s(bool,'T_0') = s(bool,X49) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X48),s('type.num.num',X48)))))) )),
  inference(superposition,[],[f466,f1089])).
fof(f3942,plain,(
  ( ! [X43,X41,X42] : (s(bool,X43) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X41),s('type.num.num','const.num.SUC_1'(s('type.num.num',X42))))) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num',X41))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X42)))))) )),
  inference(superposition,[],[f466,f1103])).
fof(f3941,plain,(
  ( ! [X39,X38,X40] : (s(bool,X40) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X38),s('type.num.num',X39))) | s(bool,'T_0') = s(bool,X40) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X38),s('type.num.num',X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num',X39)))))) )),
  inference(superposition,[],[f466,f245])).
fof(f3940,plain,(
  ( ! [X37,X35,X36] : (s(bool,X37) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X35),s('type.num.num',X36))) | s(bool,'T_0') = s(bool,X37) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X35))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X36)))))) )),
  inference(superposition,[],[f466,f242])).
fof(f3937,plain,(
  ( ! [X30,X28,X29] : (s(bool,X30) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))),s('type.num.num',X29))) | s(bool,'T_0') = s(bool,X30) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X29)))))) )),
  inference(superposition,[],[f466,f1106])).
fof(f3936,plain,(
  ( ! [X26,X27,X25] : (s(bool,X27) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X25),s('type.num.num',X26))) | s(bool,'T_0') = s(bool,X27) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26)))))) )),
  inference(superposition,[],[f466,f1090])).
fof(f3896,plain,(
  ( ! [X6,X7] : (~sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6)))))) )),
  inference(superposition,[],[f436,f1062])).
fof(f3895,plain,(
  ( ! [X5] : (~sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X5)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f436,f720])).
fof(f3894,plain,(
  ( ! [X4,X3] : (~sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))) )),
  inference(superposition,[],[f436,f1102])).
fof(f3893,plain,(
  ( ! [X2,X1] : (~sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f436,f1101])).
fof(f3892,plain,(
  ( ! [X0] : (~sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f436,f932])).
fof(f3879,plain,(
  ( ! [X6,X7] : (~sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f436,f1062])).
fof(f3878,plain,(
  ( ! [X5] : (~sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X5)))))) )),
  inference(superposition,[],[f436,f720])).
fof(f3877,plain,(
  ( ! [X4,X3] : (~sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f436,f1102])).
fof(f3876,plain,(
  ( ! [X2,X1] : (~sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f436,f1101])).
fof(f3875,plain,(
  ( ! [X0] : (~sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f436,f932])).
fof(f3710,plain,(
  ( ! [X132,X131] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X132),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X131)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X131))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X131))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))))))) )),
  inference(forward_demodulation,[],[f3709,f1102])).
fof(f3709,plain,(
  ( ! [X132,X131] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X131))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X131))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X132),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X131))))))))) )),
  inference(forward_demodulation,[],[f3708,f2885])).
fof(f3708,plain,(
  ( ! [X132,X131] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X131))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X131))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X132),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X131))))))))) )),
  inference(forward_demodulation,[],[f3662,f3588])).
fof(f3662,plain,(
  ( ! [X132,X131] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X131))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X131))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X132),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X131))))))))) )),
  inference(superposition,[],[f1098,f1102])).
fof(f3706,plain,(
  ( ! [X127,X128] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X128),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X127)))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X127))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X127))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128))))))) )),
  inference(forward_demodulation,[],[f3705,f1102])).
fof(f3705,plain,(
  ( ! [X127,X128] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X127))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X127))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X128),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X127))))))))) )),
  inference(forward_demodulation,[],[f3704,f2885])).
fof(f3704,plain,(
  ( ! [X127,X128] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X127))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X127))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X128),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X127))))))))) )),
  inference(forward_demodulation,[],[f3660,f3588])).
fof(f3660,plain,(
  ( ! [X127,X128] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X127))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X127))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X128),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X127))))))))) )),
  inference(superposition,[],[f1097,f1102])).
fof(f3703,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9)))))))) )),
  inference(forward_demodulation,[],[f3590,f1031])).
fof(f3590,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9)))))))))) )),
  inference(superposition,[],[f328,f1102])).
fof(f3589,plain,(
  ( ! [X8] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))))))) )),
  inference(superposition,[],[f326,f1102])).
fof(f3588,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))))) )),
  inference(superposition,[],[f244,f1102])).
fof(f3587,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4))),s('type.num.num',X5))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))),s('type.num.num',X5)))) )),
  inference(superposition,[],[f243,f1102])).
fof(f3586,plain,(
  ( ! [X2,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))) )),
  inference(superposition,[],[f242,f1102])).
fof(f3585,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f242,f1102])).
fof(f3533,plain,(
  ( ! [X16] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X16)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f3532,f932])).
fof(f3532,plain,(
  ( ! [X16] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X16))))) )),
  inference(forward_demodulation,[],[f3531,f720])).
fof(f3531,plain,(
  ( ! [X16] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X16))))) )),
  inference(forward_demodulation,[],[f3485,f1102])).
fof(f3485,plain,(
  ( ! [X16] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X16))))) )),
  inference(superposition,[],[f3307,f932])).
fof(f3526,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))),s('type.num.num',X8)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))))) )),
  inference(forward_demodulation,[],[f3525,f1101])).
fof(f3525,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))),s('type.num.num',X8)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))))) )),
  inference(forward_demodulation,[],[f3524,f1062])).
fof(f3524,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X7))))))),s('type.num.num',X8)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))))) )),
  inference(forward_demodulation,[],[f3523,f244])).
fof(f3523,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))),s('type.num.num',X8)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))))) )),
  inference(forward_demodulation,[],[f3522,f244])).
fof(f3522,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))),s('type.num.num',X8))))) )),
  inference(forward_demodulation,[],[f3481,f1102])).
fof(f3481,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))),s('type.num.num',X8))))) )),
  inference(superposition,[],[f3307,f328])).
fof(f3516,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f3515,f190])).
fof(f3515,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(forward_demodulation,[],[f3477,f720])).
fof(f3477,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(superposition,[],[f3307,f190])).
fof(f3430,plain,(
  ( ! [X16] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X16)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f3429,f932])).
fof(f3429,plain,(
  ( ! [X16] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X16))))) )),
  inference(forward_demodulation,[],[f3428,f720])).
fof(f3428,plain,(
  ( ! [X16] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X16))))) )),
  inference(forward_demodulation,[],[f3385,f1102])).
fof(f3385,plain,(
  ( ! [X16] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X16))))) )),
  inference(superposition,[],[f3305,f932])).
fof(f3423,plain,(
  ( ! [X8,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))),s('type.num.num',X8)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))))) )),
  inference(forward_demodulation,[],[f3422,f1101])).
fof(f3422,plain,(
  ( ! [X8,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))),s('type.num.num',X8)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))))) )),
  inference(forward_demodulation,[],[f3421,f1062])).
fof(f3421,plain,(
  ( ! [X8,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X7))))))),s('type.num.num',X8)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))))) )),
  inference(forward_demodulation,[],[f3420,f244])).
fof(f3420,plain,(
  ( ! [X8,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))),s('type.num.num',X8)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))))) )),
  inference(forward_demodulation,[],[f3419,f244])).
fof(f3419,plain,(
  ( ! [X8,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))),s('type.num.num',X8))))) )),
  inference(forward_demodulation,[],[f3381,f1102])).
fof(f3381,plain,(
  ( ! [X8,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))),s('type.num.num',X8))))) )),
  inference(superposition,[],[f3305,f328])).
fof(f3413,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f3412,f190])).
fof(f3412,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(forward_demodulation,[],[f3377,f720])).
fof(f3377,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(superposition,[],[f3305,f190])).
fof(f3329,plain,(
  ( ! [X128,X129] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128))),s('type.num.num',X129)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X129),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X128))))))) )),
  inference(forward_demodulation,[],[f3328,f1062])).
fof(f3328,plain,(
  ( ! [X128,X129] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X129),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X128)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X128),s('type.num.num',X128))))),s('type.num.num',X129))))) )),
  inference(forward_demodulation,[],[f3327,f1101])).
fof(f3327,plain,(
  ( ! [X128,X129] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X129),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X128),s('type.num.num',X128))))),s('type.num.num',X129))))) )),
  inference(forward_demodulation,[],[f3326,f1230])).
fof(f3326,plain,(
  ( ! [X128,X129] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X128),s('type.num.num',X128))))),s('type.num.num',X129))))) )),
  inference(forward_demodulation,[],[f3325,f1101])).
fof(f3325,plain,(
  ( ! [X128,X129] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X129))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128)))))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X128),s('type.num.num',X128))))),s('type.num.num',X129))))) )),
  inference(forward_demodulation,[],[f3258,f3183])).
fof(f3258,plain,(
  ( ! [X128,X129] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X129),s('type.num.num',X129))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X128),s('type.num.num',X128))))),s('type.num.num',X129))))) )),
  inference(superposition,[],[f1096,f1062])).
fof(f3320,plain,(
  ( ! [X125,X124] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num',X125)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X125),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X124))))))) )),
  inference(forward_demodulation,[],[f3319,f1062])).
fof(f3319,plain,(
  ( ! [X125,X124] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X125),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X124)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X124),s('type.num.num',X124))))),s('type.num.num',X125))))) )),
  inference(forward_demodulation,[],[f3318,f1101])).
fof(f3318,plain,(
  ( ! [X125,X124] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X125),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X124),s('type.num.num',X124))))),s('type.num.num',X125))))) )),
  inference(forward_demodulation,[],[f3317,f1230])).
fof(f3317,plain,(
  ( ! [X125,X124] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X125))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X124),s('type.num.num',X124))))),s('type.num.num',X125))))) )),
  inference(forward_demodulation,[],[f3316,f1101])).
fof(f3316,plain,(
  ( ! [X125,X124] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X125))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124)))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X124),s('type.num.num',X124))))),s('type.num.num',X125))))) )),
  inference(forward_demodulation,[],[f3256,f3183])).
fof(f3256,plain,(
  ( ! [X125,X124] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X125),s('type.num.num',X125))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X124),s('type.num.num',X124))))),s('type.num.num',X125))))) )),
  inference(superposition,[],[f1095,f1062])).
fof(f3311,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X9))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X9))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9)))))) )),
  inference(forward_demodulation,[],[f3188,f1101])).
fof(f3188,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X9))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X9))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9)))))))) )),
  inference(superposition,[],[f328,f1062])).
fof(f3187,plain,(
  ( ! [X8] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X8))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8)))))) )),
  inference(superposition,[],[f326,f1062])).
fof(f3186,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X6)))))))) )),
  inference(superposition,[],[f244,f1062])).
fof(f3185,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4))),s('type.num.num',X5))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X4))),s('type.num.num',X5)))))) )),
  inference(superposition,[],[f243,f1062])).
fof(f3184,plain,(
  ( ! [X2,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))))) )),
  inference(superposition,[],[f242,f1062])).
fof(f3310,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f3309,f720])).
fof(f3309,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f3308,f1230])).
fof(f3308,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f3301,f932])).
fof(f3301,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(backward_demodulation,[],[f3183,f2308])).
fof(f3305,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(forward_demodulation,[],[f3304,f1230])).
fof(f3304,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(forward_demodulation,[],[f3299,f1101])).
fof(f3299,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(backward_demodulation,[],[f3183,f1096])).
fof(f3148,plain,(
  ( ! [X39,X40] : (s(bool,X40) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X39))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X40)) )),
  inference(subsumption_resolution,[],[f3134,f317])).
fof(f3134,plain,(
  ( ! [X39,X40] : (p(s(bool,'F_0')) | s(bool,X40) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X39))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X40)) )),
  inference(superposition,[],[f520,f1157])).
fof(f3136,plain,(
  ( ! [X4,X5] : (s(bool,X5) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(subsumption_resolution,[],[f3120,f317])).
fof(f3120,plain,(
  ( ! [X4,X5] : (p(s(bool,'F_0')) | s(bool,X5) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f520,f368])).
fof(f3098,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X23)) | p(s(bool,X24)) | ~sP3(X23,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))),X24)) )),
  inference(subsumption_resolution,[],[f3087,f188])).
fof(f3087,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | ~p(s(bool,X23)) | p(s(bool,X24)) | ~sP3(X23,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))),X24)) )),
  inference(superposition,[],[f298,f1813])).
fof(f3097,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,X20)) | p(s(bool,X21)) | ~sP4(X20,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))),X21)) )),
  inference(subsumption_resolution,[],[f3086,f188])).
fof(f3086,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,X20)) | p(s(bool,X21)) | ~sP4(X20,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))),X21)) )),
  inference(superposition,[],[f294,f1813])).
fof(f3096,plain,(
  ( ! [X17,X18] : (p(s(bool,X18)) | sP1(X18,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17)))))) )),
  inference(subsumption_resolution,[],[f3085,f188])).
fof(f3085,plain,(
  ( ! [X17,X18] : (~p(s(bool,'T_0')) | p(s(bool,X18)) | sP1(X18,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17)))))) )),
  inference(superposition,[],[f281,f1813])).
fof(f3095,plain,(
  ( ! [X15,X16] : (p(s(bool,X16)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15)))),X16)) )),
  inference(subsumption_resolution,[],[f3084,f188])).
fof(f3084,plain,(
  ( ! [X15,X16] : (~p(s(bool,'T_0')) | p(s(bool,X16)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15)))),X16)) )),
  inference(superposition,[],[f278,f1813])).
fof(f3059,plain,(
  ( ! [X0] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f317,f1813,f309])).
fof(f3060,plain,(
  ( ! [X0] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f188,f1813,f307])).
fof(f3061,plain,(
  ( ! [X0] : (~sP5('F_0','T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f317,f1813,f309])).
fof(f3062,plain,(
  ( ! [X0] : (sP5('T_0','T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f188,f1813,f307])).
fof(f3005,plain,(
  ( ! [X0] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f317,f1157,f309])).
fof(f3006,plain,(
  ( ! [X0] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f188,f1157,f307])).
fof(f3007,plain,(
  ( ! [X0] : (~sP5('F_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f317,f1157,f309])).
fof(f3008,plain,(
  ( ! [X0] : (sP5('T_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f188,f1157,f307])).
fof(f2900,plain,(
  ( ! [X33,X31,X32] : (sP2('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31)))),X32,X33)) )),
  inference(superposition,[],[f443,f1101])).
fof(f2899,plain,(
  ( ! [X30,X28,X29] : (sP2(X29,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))),X30)) )),
  inference(superposition,[],[f442,f1101])).
fof(f2898,plain,(
  ( ! [X26,X27,X25] : (sP2(X26,X27,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25)))))) )),
  inference(superposition,[],[f441,f1101])).
fof(f2897,plain,(
  ( ! [X24,X23,X22] : (sP3(X23,X24,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))) )),
  inference(superposition,[],[f440,f1101])).
fof(f2896,plain,(
  ( ! [X21,X19,X20] : (sP4(X20,X21,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))))) )),
  inference(superposition,[],[f439,f1101])).
fof(f2895,plain,(
  ( ! [X18] : (sP1('F_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18)))))) )),
  inference(superposition,[],[f438,f1101])).
fof(f2894,plain,(
  ( ! [X17] : (sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17)))),'F_0')) )),
  inference(superposition,[],[f437,f1101])).
fof(f2893,plain,(
  ( ! [X16] : (~sP1('T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16)))))) )),
  inference(superposition,[],[f435,f1101])).
fof(f2892,plain,(
  ( ! [X15] : (~sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15)))),'T_0')) )),
  inference(superposition,[],[f433,f1101])).
fof(f2891,plain,(
  ( ! [X14,X13] : (sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13)))),X14)) )),
  inference(superposition,[],[f432,f1101])).
fof(f2890,plain,(
  ( ! [X12,X11] : (sP0(X12,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11)))))) )),
  inference(superposition,[],[f431,f1101])).
fof(f2987,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9)))))))) )),
  inference(forward_demodulation,[],[f2888,f1102])).
fof(f2888,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9)))))))) )),
  inference(superposition,[],[f328,f1101])).
fof(f2887,plain,(
  ( ! [X8] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8)))))) )),
  inference(superposition,[],[f326,f1101])).
fof(f2886,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6)))))))) )),
  inference(superposition,[],[f244,f1101])).
fof(f2885,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4))),s('type.num.num',X5))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4))),s('type.num.num',X5)))))) )),
  inference(superposition,[],[f243,f1101])).
fof(f2884,plain,(
  ( ! [X2,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f242,f1101])).
fof(f2883,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f242,f1101])).
fof(f2731,plain,(
  ( ! [X14,X15] : (sP2('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X14,X15)) )),
  inference(superposition,[],[f443,f932])).
fof(f2730,plain,(
  ( ! [X12,X13] : (sP2(X12,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X13)) )),
  inference(superposition,[],[f442,f932])).
fof(f2729,plain,(
  ( ! [X10,X11] : (sP2(X10,X11,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f441,f932])).
fof(f2728,plain,(
  ( ! [X8,X9] : (sP3(X8,X9,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f440,f932])).
fof(f2727,plain,(
  ( ! [X6,X7] : (sP4(X6,X7,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f439,f932])).
fof(f2726,plain,(
  sP1('F_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f438,f932])).
fof(f2725,plain,(
  sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'F_0')),
  inference(superposition,[],[f437,f932])).
fof(f2724,plain,(
  ~sP1('T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f435,f932])).
fof(f2723,plain,(
  ~sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'T_0')),
  inference(superposition,[],[f433,f932])).
fof(f2722,plain,(
  ( ! [X5] : (sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X5)) )),
  inference(superposition,[],[f432,f932])).
fof(f2721,plain,(
  ( ! [X4] : (sP0(X4,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f431,f932])).
fof(f2819,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(forward_demodulation,[],[f2818,f720])).
fof(f2818,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(forward_demodulation,[],[f2719,f1102])).
fof(f2719,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f328,f932])).
fof(f2718,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f326,f932])).
fof(f2817,plain,(
  ( ! [X3] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f2717,f2284])).
fof(f2717,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f244,f932])).
fof(f2816,plain,(
  ( ! [X2] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2)))) )),
  inference(forward_demodulation,[],[f2716,f2283])).
fof(f2716,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2)))))) )),
  inference(superposition,[],[f243,f932])).
fof(f2715,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f242,f932])).
fof(f2714,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f242,f932])).
fof(f2687,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X23)) | p(s(bool,X24)) | ~sP3(X23,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X22)))),X24)) )),
  inference(subsumption_resolution,[],[f2676,f188])).
fof(f2676,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | ~p(s(bool,X23)) | p(s(bool,X24)) | ~sP3(X23,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X22)))),X24)) )),
  inference(superposition,[],[f298,f429])).
fof(f2686,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,X20)) | p(s(bool,X21)) | ~sP4(X20,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X19)))),X21)) )),
  inference(subsumption_resolution,[],[f2675,f188])).
fof(f2675,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,X20)) | p(s(bool,X21)) | ~sP4(X20,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X19)))),X21)) )),
  inference(superposition,[],[f294,f429])).
fof(f2685,plain,(
  ( ! [X17,X18] : (p(s(bool,X18)) | sP1(X18,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X17)))))) )),
  inference(subsumption_resolution,[],[f2674,f188])).
fof(f2674,plain,(
  ( ! [X17,X18] : (~p(s(bool,'T_0')) | p(s(bool,X18)) | sP1(X18,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X17)))))) )),
  inference(superposition,[],[f281,f429])).
fof(f2684,plain,(
  ( ! [X15,X16] : (p(s(bool,X16)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X15)))),X16)) )),
  inference(subsumption_resolution,[],[f2673,f188])).
fof(f2673,plain,(
  ( ! [X15,X16] : (~p(s(bool,'T_0')) | p(s(bool,X16)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X15)))),X16)) )),
  inference(superposition,[],[f278,f429])).
fof(f2649,plain,(
  ( ! [X0] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f317,f429,f309])).
fof(f2651,plain,(
  ( ! [X0] : (~sP5('F_0','T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f317,f429,f309])).
fof(f2652,plain,(
  ( ! [X0] : (sP5('T_0','T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f188,f429,f307])).
fof(f2481,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f188,f1517,f256])).
fof(f2482,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f1517,f1517,f256])).
fof(f2483,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f1517,f262])).
fof(f2484,plain,(
  ( ! [X0,X1] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),X1)) )),
  inference(unit_resulting_resolution,[],[f1517,f263])).
fof(f2485,plain,(
  ( ! [X0] : (~sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f188,f1517,f277])).
fof(f2487,plain,(
  ( ! [X0] : (~sP1('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f188,f1517,f277])).
fof(f2488,plain,(
  ( ! [X0,X1] : (~sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f1517,f1517,f277])).
fof(f2489,plain,(
  ( ! [X0] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f317,f1517,f278])).
fof(f2490,plain,(
  ( ! [X0] : (sP1('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f317,f1517,f281])).
fof(f2493,plain,(
  ( ! [X0] : (~sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f188,f317,f1517,f290])).
fof(f2494,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1517,f317,f1517,f290])).
fof(f2499,plain,(
  ( ! [X0] : (sP5('T_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f339,f332,f347,f1517,f291])).
fof(f2500,plain,(
  ( ! [X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),'T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f440,f332,f347,f1517,f291])).
fof(f2501,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f339,f439,f442,f1517,f291])).
fof(f2502,plain,(
  ( ! [X2,X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f440,f439,f442,f1517,f291])).
fof(f2503,plain,(
  ( ! [X0] : (~sP4('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f188,f317,f1517,f294])).
fof(f2512,plain,(
  ( ! [X0] : (~sP4('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f188,f317,f1517,f294])).
fof(f2513,plain,(
  ( ! [X0,X1] : (~sP4('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1517,f317,f1517,f294])).
fof(f2521,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1517,f295])).
fof(f2522,plain,(
  ( ! [X0] : (~sP3('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f188,f317,f1517,f298])).
fof(f2531,plain,(
  ( ! [X0] : (~sP3('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f188,f317,f1517,f298])).
fof(f2532,plain,(
  ( ! [X0,X1] : (~sP3('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1517,f317,f1517,f298])).
fof(f2540,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1517,f299])).
fof(f2541,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1517,f303])).
fof(f2542,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))),X2)) )),
  inference(unit_resulting_resolution,[],[f1517,f304])).
fof(f2543,plain,(
  ( ! [X2,X0,X1] : (sP2('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f1517,f305])).
fof(f2546,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f368,f1517,f307])).
fof(f2547,plain,(
  ( ! [X2,X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f242,f1517,f307])).
fof(f2548,plain,(
  ( ! [X2,X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f1090,f1517,f307])).
fof(f2549,plain,(
  ( ! [X2,X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f245,f1517,f307])).
fof(f2550,plain,(
  ( ! [X2,X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1103,f1517,f307])).
fof(f2551,plain,(
  ( ! [X2,X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))),'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f1106,f1517,f307])).
fof(f2552,plain,(
  ( ! [X2,X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f1089,f1517,f307])).
fof(f2553,plain,(
  ( ! [X2,X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f246,f1517,f307])).
fof(f2554,plain,(
  ( ! [X2,X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f1104,f1517,f307])).
fof(f2555,plain,(
  ( ! [X2,X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1105,f1517,f307])).
fof(f2558,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'F_0','const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f368,f1517,f307])).
fof(f2559,plain,(
  ( ! [X2,X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f242,f1517,f307])).
fof(f2560,plain,(
  ( ! [X2,X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1090,f1517,f307])).
fof(f2561,plain,(
  ( ! [X2,X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f245,f1517,f307])).
fof(f2562,plain,(
  ( ! [X2,X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1103,f1517,f307])).
fof(f2563,plain,(
  ( ! [X2,X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X2)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1106,f1517,f307])).
fof(f2564,plain,(
  ( ! [X2,X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1089,f1517,f307])).
fof(f2565,plain,(
  ( ! [X2,X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f246,f1517,f307])).
fof(f2566,plain,(
  ( ! [X2,X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X2)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1104,f1517,f307])).
fof(f2567,plain,(
  ( ! [X2,X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1105,f1517,f307])).
fof(f2570,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'T_0','const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f357,f1517,f308])).
fof(f2571,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f354,f1517,f308])).
fof(f2574,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f357,f1517,f308])).
fof(f2575,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f354,f1517,f308])).
fof(f2308,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(unit_resulting_resolution,[],[f1349,f1095])).
fof(f2313,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f188,f1349,f256])).
fof(f2314,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f1349,f1349,f256])).
fof(f2315,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f1349,f262])).
fof(f2316,plain,(
  ( ! [X0,X1] : (sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),X1)) )),
  inference(unit_resulting_resolution,[],[f1349,f263])).
fof(f2317,plain,(
  ( ! [X0] : (~sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f188,f1349,f277])).
fof(f2319,plain,(
  ( ! [X0] : (~sP1('T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f188,f1349,f277])).
fof(f2320,plain,(
  ( ! [X0,X1] : (~sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f1349,f1349,f277])).
fof(f2321,plain,(
  ( ! [X0] : (sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f317,f1349,f278])).
fof(f2322,plain,(
  ( ! [X0] : (sP1('F_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f317,f1349,f281])).
fof(f2325,plain,(
  ( ! [X0] : (~sP5('T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f188,f317,f1349,f290])).
fof(f2326,plain,(
  ( ! [X0,X1] : (~sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1349,f317,f1349,f290])).
fof(f2331,plain,(
  ( ! [X0] : (sP5('T_0','T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f339,f332,f347,f1349,f291])).
fof(f2332,plain,(
  ( ! [X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),'T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f440,f332,f347,f1349,f291])).
fof(f2333,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f339,f439,f442,f1349,f291])).
fof(f2334,plain,(
  ( ! [X2,X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f440,f439,f442,f1349,f291])).
fof(f2335,plain,(
  ( ! [X0] : (~sP4('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f188,f317,f1349,f294])).
fof(f2344,plain,(
  ( ! [X0] : (~sP4('T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f188,f317,f1349,f294])).
fof(f2345,plain,(
  ( ! [X0,X1] : (~sP4('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1349,f317,f1349,f294])).
fof(f2353,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1349,f295])).
fof(f2354,plain,(
  ( ! [X0] : (~sP3('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f188,f317,f1349,f298])).
fof(f2363,plain,(
  ( ! [X0] : (~sP3('T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f188,f317,f1349,f298])).
fof(f2364,plain,(
  ( ! [X0,X1] : (~sP3('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1349,f317,f1349,f298])).
fof(f2372,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1349,f299])).
fof(f2373,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1349,f303])).
fof(f2374,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))),X2)) )),
  inference(unit_resulting_resolution,[],[f1349,f304])).
fof(f2375,plain,(
  ( ! [X2,X0,X1] : (sP2('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f1349,f305])).
fof(f2378,plain,(
  ( ! [X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f368,f1349,f307])).
fof(f2379,plain,(
  ( ! [X2,X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f242,f1349,f307])).
fof(f2380,plain,(
  ( ! [X2,X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f1090,f1349,f307])).
fof(f2381,plain,(
  ( ! [X2,X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f245,f1349,f307])).
fof(f2382,plain,(
  ( ! [X2,X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1103,f1349,f307])).
fof(f2383,plain,(
  ( ! [X2,X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))),'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f1106,f1349,f307])).
fof(f2384,plain,(
  ( ! [X2,X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f1089,f1349,f307])).
fof(f2385,plain,(
  ( ! [X2,X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f246,f1349,f307])).
fof(f2386,plain,(
  ( ! [X2,X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f1104,f1349,f307])).
fof(f2387,plain,(
  ( ! [X2,X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1105,f1349,f307])).
fof(f2390,plain,(
  ( ! [X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'F_0','const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f368,f1349,f307])).
fof(f2391,plain,(
  ( ! [X2,X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f242,f1349,f307])).
fof(f2392,plain,(
  ( ! [X2,X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1090,f1349,f307])).
fof(f2393,plain,(
  ( ! [X2,X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f245,f1349,f307])).
fof(f2394,plain,(
  ( ! [X2,X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1103,f1349,f307])).
fof(f2395,plain,(
  ( ! [X2,X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X2)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1106,f1349,f307])).
fof(f2396,plain,(
  ( ! [X2,X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1089,f1349,f307])).
fof(f2397,plain,(
  ( ! [X2,X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f246,f1349,f307])).
fof(f2398,plain,(
  ( ! [X2,X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X2)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1104,f1349,f307])).
fof(f2399,plain,(
  ( ! [X2,X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f1105,f1349,f307])).
fof(f2402,plain,(
  ( ! [X0,X1] : (~sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'T_0','const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f357,f1349,f308])).
fof(f2403,plain,(
  ( ! [X0] : (~sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f354,f1349,f308])).
fof(f2406,plain,(
  ( ! [X0,X1] : (~sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f357,f1349,f308])).
fof(f2407,plain,(
  ( ! [X0] : (~sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f354,f1349,f308])).
fof(f2204,plain,(
  ( ! [X14,X15] : (sP2('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X14,X15)) )),
  inference(superposition,[],[f443,f720])).
fof(f2203,plain,(
  ( ! [X12,X13] : (sP2(X12,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X13)) )),
  inference(superposition,[],[f442,f720])).
fof(f2202,plain,(
  ( ! [X10,X11] : (sP2(X10,X11,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f441,f720])).
fof(f2201,plain,(
  ( ! [X8,X9] : (sP3(X8,X9,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f440,f720])).
fof(f2200,plain,(
  ( ! [X6,X7] : (sP4(X6,X7,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f439,f720])).
fof(f2199,plain,(
  sP1('F_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f438,f720])).
fof(f2198,plain,(
  sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'F_0')),
  inference(superposition,[],[f437,f720])).
fof(f2197,plain,(
  ~sP1('T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f435,f720])).
fof(f2196,plain,(
  ~sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'T_0')),
  inference(superposition,[],[f433,f720])).
fof(f2195,plain,(
  ( ! [X5] : (sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X5)) )),
  inference(superposition,[],[f432,f720])).
fof(f2194,plain,(
  ( ! [X4] : (sP0(X4,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f431,f720])).
fof(f2284,plain,(
  ( ! [X3] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f2191,f319])).
fof(f2191,plain,(
  ( ! [X3] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f244,f720])).
fof(f2283,plain,(
  ( ! [X2] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2)))) )),
  inference(forward_demodulation,[],[f2190,f318])).
fof(f2190,plain,(
  ( ! [X2] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2)))) )),
  inference(superposition,[],[f243,f720])).
fof(f2282,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f2189,f368])).
fof(f2189,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f242,f720])).
fof(f2188,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f242,f720])).
fof(f2152,plain,(
  ( ! [X0,X1] : (sP5('F_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f317,f349,f336,f443,f293])).
fof(f2153,plain,(
  ( ! [X0] : (sP5('F_0','F_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f317,f343,f336,f443,f292])).
fof(f2156,plain,(
  ( ! [X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')),'F_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f317,f343,f351,f443,f292])).
fof(f2110,plain,(
  ( ! [X0] : (sP5('F_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f317,f340,f336,f442,f293])).
fof(f2113,plain,(
  ( ! [X0,X1] : (sP5('F_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f317,f350,f336,f442,f293])).
fof(f2069,plain,(
  ( ! [X0] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f317,f343,f333,f441,f292])).
fof(f2078,plain,(
  ( ! [X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),'F_0','const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f317,f343,f352,f441,f292])).
fof(f2066,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(X0,sK8(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK8(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f286,f201])).
fof(f2065,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK8(X0,X1,X2,bool))) )),
  inference(superposition,[],[f286,f201])).
fof(f2054,plain,(
  ( ! [X0] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f188,f348,f332,f440,f291])).
fof(f2055,plain,(
  ( ! [X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f188,f348,f439,f440,f291])).
fof(f2043,plain,(
  ( ! [X0] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f188,f339,f348,f439,f291])).
fof(f2024,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X35))),s('type.num.num',X36)))) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X36)))),X38)) )),
  inference(superposition,[],[f298,f1106])).
fof(f2023,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))),s('type.num.num',X32)))) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X32)))),X34)) )),
  inference(superposition,[],[f294,f1106])).
fof(f2022,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))),s('type.num.num',X29)))) | p(s(bool,X30)) | sP1(X30,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X29)))))) )),
  inference(superposition,[],[f281,f1106])).
fof(f2021,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)))) | p(s(bool,X27)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26)))),X27)) )),
  inference(superposition,[],[f278,f1106])).
fof(f2020,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))),s('type.num.num',X23)))) | sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X23)))),X24)) )),
  inference(superposition,[],[f263,f1106])).
fof(f2019,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X19))),s('type.num.num',X20)))) | sP0(X21,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X20)))))) )),
  inference(superposition,[],[f262,f1106])).
fof(f2010,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X3)))))) )),
  inference(superposition,[],[f1106,f201])).
fof(f1988,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f317,f1106,f309])).
fof(f1989,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f188,f1106,f307])).
fof(f1990,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f317,f1106,f309])).
fof(f1991,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f188,f1106,f307])).
fof(f1950,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X35),s('type.num.num','const.num.SUC_1'(s('type.num.num',X36)))))) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num',X35))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X36)))),X38)) )),
  inference(superposition,[],[f298,f1105])).
fof(f1949,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X31),s('type.num.num','const.num.SUC_1'(s('type.num.num',X32)))))) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X31))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32)))),X34)) )),
  inference(superposition,[],[f294,f1105])).
fof(f1948,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X28),s('type.num.num','const.num.SUC_1'(s('type.num.num',X29)))))) | p(s(bool,X30)) | sP1(X30,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29)))))) )),
  inference(superposition,[],[f281,f1105])).
fof(f1947,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X25),s('type.num.num','const.num.SUC_1'(s('type.num.num',X26)))))) | p(s(bool,X27)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X25))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X26)))),X27)) )),
  inference(superposition,[],[f278,f1105])).
fof(f1946,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num','const.num.SUC_1'(s('type.num.num',X23)))))) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))),X24)) )),
  inference(superposition,[],[f263,f1105])).
fof(f1945,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num','const.num.SUC_1'(s('type.num.num',X20)))))) | sP0(X21,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X19))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20)))))) )),
  inference(superposition,[],[f262,f1105])).
fof(f1936,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f1105,f201])).
fof(f1925,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f1105,f318])).
fof(f1914,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f317,f1105,f309])).
fof(f1915,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f188,f1105,f307])).
fof(f1916,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f317,f1105,f309])).
fof(f1917,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f188,f1105,f307])).
fof(f1890,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X35))),s('type.num.num',X36)))) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X36)))),X38)) )),
  inference(superposition,[],[f298,f1104])).
fof(f1889,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))),s('type.num.num',X32)))) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X32)))),X34)) )),
  inference(superposition,[],[f294,f1104])).
fof(f1888,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))),s('type.num.num',X29)))) | p(s(bool,X30)) | sP1(X30,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X29)))))) )),
  inference(superposition,[],[f281,f1104])).
fof(f1887,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)))) | p(s(bool,X27)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26)))),X27)) )),
  inference(superposition,[],[f278,f1104])).
fof(f1886,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))),s('type.num.num',X23)))) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X23)))),X24)) )),
  inference(superposition,[],[f263,f1104])).
fof(f1885,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X19))),s('type.num.num',X20)))) | sP0(X21,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X20)))))) )),
  inference(superposition,[],[f262,f1104])).
fof(f1876,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X3)))))) )),
  inference(superposition,[],[f1104,f201])).
fof(f1893,plain,(
  ( ! [X2,X3] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f1892,f1101])).
fof(f1892,plain,(
  ( ! [X2,X3] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f1891,f1062])).
fof(f1891,plain,(
  ( ! [X2,X3] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))))))))) )),
  inference(forward_demodulation,[],[f1874,f243])).
fof(f1874,plain,(
  ( ! [X2,X3] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X2)))))))) )),
  inference(superposition,[],[f1104,f244])).
fof(f1872,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f1104,f318])).
fof(f1854,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f317,f1104,f309])).
fof(f1855,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f188,f1104,f307])).
fof(f1856,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f317,f1104,f309])).
fof(f1857,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f188,f1104,f307])).
fof(f1812,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X35),s('type.num.num','const.num.SUC_1'(s('type.num.num',X36)))))) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num',X35))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X36)))),X38)) )),
  inference(superposition,[],[f298,f1103])).
fof(f1811,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X31),s('type.num.num','const.num.SUC_1'(s('type.num.num',X32)))))) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X31))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32)))),X34)) )),
  inference(superposition,[],[f294,f1103])).
fof(f1810,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X28),s('type.num.num','const.num.SUC_1'(s('type.num.num',X29)))))) | p(s(bool,X30)) | sP1(X30,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29)))))) )),
  inference(superposition,[],[f281,f1103])).
fof(f1809,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X25),s('type.num.num','const.num.SUC_1'(s('type.num.num',X26)))))) | p(s(bool,X27)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X25))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X26)))),X27)) )),
  inference(superposition,[],[f278,f1103])).
fof(f1808,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num','const.num.SUC_1'(s('type.num.num',X23)))))) | sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))),X24)) )),
  inference(superposition,[],[f263,f1103])).
fof(f1807,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num','const.num.SUC_1'(s('type.num.num',X20)))))) | sP0(X21,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X19))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20)))))) )),
  inference(superposition,[],[f262,f1103])).
fof(f1798,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f1103,f201])).
fof(f1818,plain,(
  ( ! [X2,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f1817,f242])).
fof(f1817,plain,(
  ( ! [X2,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f1816,f1101])).
fof(f1816,plain,(
  ( ! [X2,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f1815,f1062])).
fof(f1815,plain,(
  ( ! [X2,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f1789,f243])).
fof(f1789,plain,(
  ( ! [X2,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X2))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f1103,f244])).
fof(f1813,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f1787,f429])).
fof(f1787,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f1103,f318])).
fof(f1776,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f317,f1103,f309])).
fof(f1777,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f188,f1103,f307])).
fof(f1778,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f317,f1103,f309])).
fof(f1779,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f188,f1103,f307])).
fof(f1732,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X35),s('type.num.num',X36)))) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num',X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X36)))),X38)) )),
  inference(superposition,[],[f298,f246])).
fof(f1731,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X31),s('type.num.num',X32)))) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X32)))),X34)) )),
  inference(superposition,[],[f294,f246])).
fof(f1730,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X28),s('type.num.num',X29)))) | p(s(bool,X30)) | sP1(X30,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X29)))))) )),
  inference(superposition,[],[f281,f246])).
fof(f1729,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X25),s('type.num.num',X26)))) | p(s(bool,X27)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X25))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26)))),X27)) )),
  inference(superposition,[],[f278,f246])).
fof(f1728,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num',X23)))) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num',X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X23)))),X24)) )),
  inference(superposition,[],[f263,f246])).
fof(f1727,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num',X20)))) | sP0(X21,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X20)))))) )),
  inference(superposition,[],[f262,f246])).
fof(f1718,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X3)))))) )),
  inference(superposition,[],[f246,f201])).
fof(f1714,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f246,f318])).
fof(f1703,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))))) )),
  inference(superposition,[],[f246,f318])).
fof(f1692,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f317,f246,f309])).
fof(f1693,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f188,f246,f307])).
fof(f1694,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f317,f246,f309])).
fof(f1695,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f188,f246,f307])).
fof(f1682,plain,(
  ( ! [X0] : (~sP2('const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f317,f350,f352,f635,f292])).
fof(f1665,plain,(
  ( ! [X0] : (~sP2('F_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f317,f340,f333,f632,f293])).
fof(f1640,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X35),s('type.num.num',X36)))) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num',X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X36)))),X38)) )),
  inference(superposition,[],[f298,f245])).
fof(f1639,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X31),s('type.num.num',X32)))) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X32)))),X34)) )),
  inference(superposition,[],[f294,f245])).
fof(f1638,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X28),s('type.num.num',X29)))) | p(s(bool,X30)) | sP1(X30,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X29)))))) )),
  inference(superposition,[],[f281,f245])).
fof(f1637,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X25),s('type.num.num',X26)))) | p(s(bool,X27)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X25))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26)))),X27)) )),
  inference(superposition,[],[f278,f245])).
fof(f1636,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23)))) | sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num',X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X23)))),X24)) )),
  inference(superposition,[],[f263,f245])).
fof(f1635,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num',X20)))) | sP0(X21,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X20)))))) )),
  inference(superposition,[],[f262,f245])).
fof(f1626,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X3)))))) )),
  inference(superposition,[],[f245,f201])).
fof(f1611,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))))) )),
  inference(superposition,[],[f245,f318])).
fof(f1600,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f317,f245,f309])).
fof(f1601,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f188,f245,f307])).
fof(f1602,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f317,f245,f309])).
fof(f1603,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f188,f245,f307])).
fof(f1557,plain,(
  ( ! [X0] : (~sP4('T_0','T_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f188,f346,f339,f613,f291])).
fof(f1553,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(subsumption_resolution,[],[f1513,f317])).
fof(f1513,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f1098,f201])).
fof(f1538,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))) )),
  inference(forward_demodulation,[],[f1537,f1101])).
fof(f1537,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))) )),
  inference(forward_demodulation,[],[f1536,f1062])).
fof(f1536,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))) )),
  inference(forward_demodulation,[],[f1504,f243])).
fof(f1504,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X2))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))) )),
  inference(superposition,[],[f1098,f244])).
fof(f1530,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11))))))) )),
  inference(forward_demodulation,[],[f1529,f244])).
fof(f1529,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) )),
  inference(forward_demodulation,[],[f1528,f1101])).
fof(f1528,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) )),
  inference(forward_demodulation,[],[f1527,f1062])).
fof(f1527,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) )),
  inference(forward_demodulation,[],[f1526,f243])).
fof(f1526,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) )),
  inference(forward_demodulation,[],[f1500,f244])).
fof(f1500,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) )),
  inference(superposition,[],[f1098,f244])).
fof(f1517,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) )),
  inference(subsumption_resolution,[],[f1516,f317])).
fof(f1516,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) )),
  inference(forward_demodulation,[],[f1515,f368])).
fof(f1515,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) )),
  inference(forward_demodulation,[],[f1514,f190])).
fof(f1514,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f1495,f318])).
fof(f1495,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f1098,f190])).
fof(f1454,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))) )),
  inference(forward_demodulation,[],[f1453,f1101])).
fof(f1453,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))) )),
  inference(forward_demodulation,[],[f1452,f1062])).
fof(f1452,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))) )),
  inference(forward_demodulation,[],[f1419,f243])).
fof(f1419,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X2))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))) )),
  inference(superposition,[],[f1097,f244])).
fof(f1444,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10)))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11))))))) )),
  inference(forward_demodulation,[],[f1443,f244])).
fof(f1443,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) )),
  inference(forward_demodulation,[],[f1442,f1101])).
fof(f1442,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) )),
  inference(forward_demodulation,[],[f1441,f1062])).
fof(f1441,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) )),
  inference(forward_demodulation,[],[f1440,f243])).
fof(f1440,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) )),
  inference(forward_demodulation,[],[f1415,f244])).
fof(f1415,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) )),
  inference(superposition,[],[f1097,f244])).
fof(f1370,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))) )),
  inference(forward_demodulation,[],[f1369,f1101])).
fof(f1369,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))) )),
  inference(forward_demodulation,[],[f1368,f1062])).
fof(f1368,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))) )),
  inference(forward_demodulation,[],[f1336,f243])).
fof(f1336,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X2))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))) )),
  inference(superposition,[],[f1096,f244])).
fof(f1362,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11))))))) )),
  inference(forward_demodulation,[],[f1361,f244])).
fof(f1361,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) )),
  inference(forward_demodulation,[],[f1360,f1101])).
fof(f1360,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) )),
  inference(forward_demodulation,[],[f1359,f1062])).
fof(f1359,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) )),
  inference(forward_demodulation,[],[f1358,f243])).
fof(f1358,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) )),
  inference(forward_demodulation,[],[f1332,f244])).
fof(f1332,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) )),
  inference(superposition,[],[f1096,f244])).
fof(f1302,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))) )),
  inference(forward_demodulation,[],[f1301,f1101])).
fof(f1301,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))) )),
  inference(forward_demodulation,[],[f1300,f1062])).
fof(f1300,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))) )),
  inference(forward_demodulation,[],[f1267,f243])).
fof(f1267,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X2))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))) )),
  inference(superposition,[],[f1095,f244])).
fof(f1292,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11))))))) )),
  inference(forward_demodulation,[],[f1291,f244])).
fof(f1291,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) )),
  inference(forward_demodulation,[],[f1290,f1101])).
fof(f1290,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) )),
  inference(forward_demodulation,[],[f1289,f1062])).
fof(f1289,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) )),
  inference(forward_demodulation,[],[f1288,f243])).
fof(f1288,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) )),
  inference(forward_demodulation,[],[f1263,f244])).
fof(f1263,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))))) )),
  inference(superposition,[],[f1095,f244])).
fof(f1225,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X35),s('type.num.num',X36)))) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X36)))),X38)) )),
  inference(superposition,[],[f298,f1090])).
fof(f1224,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X31),s('type.num.num',X32)))) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X32)))),X34)) )),
  inference(superposition,[],[f294,f1090])).
fof(f1223,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X28),s('type.num.num',X29)))) | p(s(bool,X30)) | sP1(X30,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X29)))))) )),
  inference(superposition,[],[f281,f1090])).
fof(f1222,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X25),s('type.num.num',X26)))) | p(s(bool,X27)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26)))),X27)) )),
  inference(superposition,[],[f278,f1090])).
fof(f1221,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23)))) | sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X23)))),X24)) )),
  inference(superposition,[],[f263,f1090])).
fof(f1220,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num',X20)))) | sP0(X21,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X20)))))) )),
  inference(superposition,[],[f262,f1090])).
fof(f1211,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X3)))))) )),
  inference(superposition,[],[f1090,f201])).
fof(f1189,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f317,f1090,f309])).
fof(f1190,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f188,f1090,f307])).
fof(f1191,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f317,f1090,f309])).
fof(f1192,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f188,f1090,f307])).
fof(f1156,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X35),s('type.num.num',X36)))) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X36)))),X38)) )),
  inference(superposition,[],[f298,f1089])).
fof(f1155,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X31),s('type.num.num',X32)))) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X32)))),X34)) )),
  inference(superposition,[],[f294,f1089])).
fof(f1154,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X28),s('type.num.num',X29)))) | p(s(bool,X30)) | sP1(X30,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X29)))))) )),
  inference(superposition,[],[f281,f1089])).
fof(f1153,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X25),s('type.num.num',X26)))) | p(s(bool,X27)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X26)))),X27)) )),
  inference(superposition,[],[f278,f1089])).
fof(f1152,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23)))) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X23)))),X24)) )),
  inference(superposition,[],[f263,f1089])).
fof(f1151,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num',X20)))) | sP0(X21,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X20)))))) )),
  inference(superposition,[],[f262,f1089])).
fof(f1142,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X3)))))) )),
  inference(superposition,[],[f1089,f201])).
fof(f1161,plain,(
  ( ! [X2,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f1160,f1101])).
fof(f1160,plain,(
  ( ! [X2,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f1159,f1062])).
fof(f1159,plain,(
  ( ! [X2,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))))))))) )),
  inference(forward_demodulation,[],[f1140,f243])).
fof(f1140,plain,(
  ( ! [X2,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X2)))))))) )),
  inference(superposition,[],[f1089,f244])).
fof(f1157,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f1138,f368])).
fof(f1138,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f1089,f318])).
fof(f1120,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f317,f1089,f309])).
fof(f1121,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f188,f1089,f307])).
fof(f1122,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f317,f1089,f309])).
fof(f1123,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f188,f1089,f307])).
fof(f1106,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f1101,f1091])).
fof(f1105,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(backward_demodulation,[],[f1101,f1092])).
fof(f1104,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f1101,f1093])).
fof(f1103,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(backward_demodulation,[],[f1101,f1094])).
fof(f1102,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3)))))) )),
  inference(backward_demodulation,[],[f1101,f1099])).
fof(f1099,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))))) )),
  inference(backward_demodulation,[],[f1062,f1027])).
fof(f1098,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(backward_demodulation,[],[f1062,f260])).
fof(f1094,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))) )),
  inference(backward_demodulation,[],[f1062,f252])).
fof(f1093,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f1062,f251])).
fof(f1092,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))) )),
  inference(backward_demodulation,[],[f1062,f250])).
fof(f1091,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f1062,f249])).
fof(f1089,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(backward_demodulation,[],[f1062,f247])).
fof(f1031,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))) )),
  inference(forward_demodulation,[],[f1030,f1027])).
fof(f1030,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X4)))))))))))) )),
  inference(forward_demodulation,[],[f1029,f244])).
fof(f1029,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))))))) )),
  inference(forward_demodulation,[],[f1028,f244])).
fof(f1028,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))))))) )),
  inference(forward_demodulation,[],[f1004,f244])).
fof(f1004,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))))))) )),
  inference(superposition,[],[f243,f328])).
fof(f1027,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X3)))))))))) )),
  inference(forward_demodulation,[],[f1026,f244])).
fof(f1026,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))))) )),
  inference(forward_demodulation,[],[f1003,f244])).
fof(f1003,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))))) )),
  inference(superposition,[],[f243,f326])).
fof(f974,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X35),s('type.num.num',X36)))) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X35))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X36)))),X38)) )),
  inference(superposition,[],[f298,f242])).
fof(f973,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X31),s('type.num.num',X32)))) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X32)))),X34)) )),
  inference(superposition,[],[f294,f242])).
fof(f972,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X28),s('type.num.num',X29)))) | p(s(bool,X30)) | sP1(X30,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X29)))))) )),
  inference(superposition,[],[f281,f242])).
fof(f971,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X25),s('type.num.num',X26)))) | p(s(bool,X27)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X26)))),X27)) )),
  inference(superposition,[],[f278,f242])).
fof(f970,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23)))) | sP0('const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X23)))),X24)) )),
  inference(superposition,[],[f263,f242])).
fof(f969,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num',X20)))) | sP0(X21,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X19))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X20)))))) )),
  inference(superposition,[],[f262,f242])).
fof(f960,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f242,f201])).
fof(f946,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f317,f242,f309])).
fof(f947,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f188,f242,f307])).
fof(f948,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f317,f242,f309])).
fof(f949,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f188,f242,f307])).
fof(f932,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f915,f720])).
fof(f915,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f328,f318])).
fof(f832,plain,(
  sP5('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f343,f333,f346,f317,f292])).
fof(f778,plain,(
  ( ! [X0] : (sP5('const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f343,f351,f348,f188,f291])).
fof(f781,plain,(
  ( ! [X0,X1] : (sP5('const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f349,f351,f348,f188,f291])).
fof(f788,plain,(
  sP5('T_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f339,f332,f347,f188,f291])).
fof(f720,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f326,f318])).
fof(f714,plain,(
  ~sP5('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f709,f287])).
fof(f709,plain,(
  ~sP2('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f317,f317,f317,f302])).
fof(f705,plain,(
  ~sP5('F_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f690,f288])).
fof(f690,plain,(
  ~sP3('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f317,f188,f188,f298])).
fof(f663,plain,(
  ~sP4('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f317,f188,f188,f294])).
fof(f632,plain,(
  ( ! [X0] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f317,f368,f309])).
fof(f635,plain,(
  ( ! [X0] : (~sP5('F_0','F_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f317,f368,f309])).
fof(f613,plain,(
  ( ! [X0] : (~sP5('T_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f188,f357,f308])).
fof(f615,plain,(
  ~sP5('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f188,f354,f308])).
fof(f619,plain,(
  ( ! [X0] : (~sP5('T_0','T_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f188,f357,f308])).
fof(f621,plain,(
  ~sP5('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f188,f354,f308])).
fof(f600,plain,(
  ( ! [X0] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f188,f368,f307])).
fof(f603,plain,(
  ( ! [X0] : (sP5('T_0','F_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f188,f368,f307])).
fof(f586,plain,(
  ( ! [X0] : (sP5('F_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f317,f357,f306])).
fof(f587,plain,(
  sP5('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f317,f354,f306])).
fof(f590,plain,(
  ( ! [X0] : (sP5('F_0','T_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f317,f357,f306])).
fof(f591,plain,(
  sP5('F_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f317,f354,f306])).
fof(f466,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f201,f201])).
fof(f429,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f320,f209])).
fof(f430,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f320,f212])).
fof(f431,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f320,f262])).
fof(f432,plain,(
  ( ! [X0,X1] : (sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),X1)) )),
  inference(unit_resulting_resolution,[],[f320,f263])).
fof(f433,plain,(
  ( ! [X0] : (~sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f188,f320,f277])).
fof(f435,plain,(
  ( ! [X0] : (~sP1('T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f188,f320,f277])).
fof(f436,plain,(
  ( ! [X0,X1] : (~sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f320,f320,f277])).
fof(f437,plain,(
  ( ! [X0] : (sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f317,f320,f278])).
fof(f438,plain,(
  ( ! [X0] : (sP1('F_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f317,f320,f281])).
fof(f439,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f320,f295])).
fof(f440,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f320,f299])).
fof(f441,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f320,f303])).
fof(f442,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))),X2)) )),
  inference(unit_resulting_resolution,[],[f320,f304])).
fof(f443,plain,(
  ( ! [X2,X0,X1] : (sP2('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f320,f305])).
fof(f412,plain,(
  ~sP0('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f317,f317,f329])).
fof(f405,plain,(
  sP1('F_0','T_0')),
  inference(unit_resulting_resolution,[],[f317,f188,f281])).
fof(f397,plain,(
  sP1('T_0','F_0')),
  inference(unit_resulting_resolution,[],[f317,f188,f278])).
fof(f393,plain,(
  ~sP1('T_0','T_0')),
  inference(unit_resulting_resolution,[],[f188,f188,f277])).
fof(f391,plain,(
  ~sP1('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f317,f317,f276])).
fof(f354,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f317,f208])).
fof(f357,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f323,f208])).
fof(f349,plain,(
  ( ! [X2,X0,X1] : (sP3('const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f323,f301])).
fof(f350,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f323,f300])).
fof(f351,plain,(
  ( ! [X2,X0,X1] : (sP4('const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f323,f297])).
fof(f352,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f323,f296])).
fof(f348,plain,(
  ( ! [X0,X1] : (sP2('T_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f188,f305])).
fof(f347,plain,(
  ( ! [X0,X1] : (sP2(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f188,f304])).
fof(f346,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f188,f303])).
fof(f343,plain,(
  ( ! [X0,X1] : (sP3('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f317,f301])).
fof(f340,plain,(
  ( ! [X0,X1] : (sP3(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f317,f300])).
fof(f339,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f188,f299])).
fof(f336,plain,(
  ( ! [X0,X1] : (sP4('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f317,f297])).
fof(f333,plain,(
  ( ! [X0,X1] : (sP4(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f317,f296])).
fof(f332,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f188,f295])).
fof(f331,plain,(
  ( ! [X0] : (sP0('T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f188,f263])).
fof(f330,plain,(
  ( ! [X0] : (sP0(X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f188,f262])).
fof(f306,plain,(
  ( ! [X2,X0,X1] : (sP5(X2,X1,X0) | s(bool,X0) = s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f185])).
fof(f185,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (~p(s(bool,X2)) | s(bool,X0) != s(bool,X1))) | sP5(X2,X1,X0)) & (~sP5(X2,X1,X0) | ((~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (s(bool,X0) != s(bool,X1) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f136])).
fof(f136,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> sP5(X2,X1,X0))),
  inference(definition_folding,[],[f114,f135,f134,f133,f132])).
fof(f132,plain,(
  ! [X0,X1,X2] : (sP2(X0,X1,X2) <=> (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f134,plain,(
  ! [X2,X0,X1] : (sP4(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f135,plain,(
  ! [X2,X1,X0] : (sP5(X2,X1,X0) <=> (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP5])])).
fof(f114,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f113])).
fof(f113,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X15,X16,X17] : ((p(s(bool,X17)) <=> s(bool,X15) = s(bool,X16)) <=> ((p(s(bool,X17)) | p(s(bool,X16)) | p(s(bool,X15))) & (p(s(bool,X17)) | ~p(s(bool,X15)) | ~p(s(bool,X16))) & (p(s(bool,X16)) | ~p(s(bool,X15)) | ~p(s(bool,X17))) & (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)))))),
  file('thm.numeral.numeral_lt|split|5','thm.sat.sat_2|49|_prove_ltb')).
fof(f307,plain,(
  ( ! [X2,X0,X1] : (sP5(X2,X1,X0) | s(bool,X0) != s(bool,X1) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f185])).
fof(f308,plain,(
  ( ! [X2,X0,X1] : (~sP5(X2,X1,X0) | ~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f185])).
fof(f309,plain,(
  ( ! [X2,X0,X1] : (~sP5(X2,X1,X0) | s(bool,X0) != s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f185])).
fof(f302,plain,(
  ( ! [X2,X0,X1] : (~sP2(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f184])).
fof(f184,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(flattening,[],[f183])).
fof(f183,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(nnf_transformation,[],[f132])).
fof(f303,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f184])).
fof(f304,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f184])).
fof(f305,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f184])).
fof(f299,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f182])).
fof(f301,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f182])).
fof(f294,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP4(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f179])).
fof(f179,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(rectify,[],[f178])).
fof(f178,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(flattening,[],[f177])).
fof(f177,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(nnf_transformation,[],[f134])).
fof(f295,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f179])).
fof(f296,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f179])).
fof(f297,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f179])).
fof(f287,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f176])).
fof(f176,plain,(
  ! [X0,X1,X2] : ((~sP5(X0,X1,X2) | (sP2(X2,X1,X0) & sP3(X1,X2,X0) & sP4(X0,X2,X1) & (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP2(X2,X1,X0) | ~sP3(X1,X2,X0) | ~sP4(X0,X2,X1) | (~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP5(X0,X1,X2)))),
  inference(rectify,[],[f175])).
fof(f175,plain,(
  ! [X2,X1,X0] : ((~sP5(X2,X1,X0) | (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & (~sP2(X0,X1,X2) | ~sP3(X1,X0,X2) | ~sP4(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2))) | sP5(X2,X1,X0)))),
  inference(flattening,[],[f174])).
fof(f174,plain,(
  ! [X2,X1,X0] : ((~sP5(X2,X1,X0) | (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & ((~sP2(X0,X1,X2) | ~sP3(X1,X0,X2) | ~sP4(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2)))) | sP5(X2,X1,X0)))),
  inference(nnf_transformation,[],[f135])).
fof(f288,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP3(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f176])).
fof(f289,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP4(X0,X2,X1)) )),
  inference(cnf_transformation,[],[f176])).
fof(f290,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f176])).
fof(f291,plain,(
  ( ! [X2,X0,X1] : (~sP2(X2,X1,X0) | ~p(s(bool,X2)) | ~sP4(X0,X2,X1) | ~sP3(X1,X2,X0) | sP5(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f176])).
fof(f292,plain,(
  ( ! [X2,X0,X1] : (~sP2(X2,X1,X0) | p(s(bool,X1)) | ~sP4(X0,X2,X1) | ~sP3(X1,X2,X0) | sP5(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f176])).
fof(f293,plain,(
  ( ! [X2,X0,X1] : (~sP2(X2,X1,X0) | p(s(bool,X0)) | ~sP4(X0,X2,X1) | ~sP3(X1,X2,X0) | sP5(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f176])).
fof(f286,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK8(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK8(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f173])).
fof(f173,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK8(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK8(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8])],[f127])).
fof(f127,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f112])).
fof(f112,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f111])).
fof(f111,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.numeral.numeral_lt|split|5',aHL_EXT)).
fof(f276,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | p(s(bool,X0)) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f171])).
fof(f171,plain,(
  ! [X0,X1] : ((~sP1(X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | ~p(s(bool,X0))))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & p(s(bool,X0))) | sP1(X0,X1)))),
  inference(rectify,[],[f170])).
fof(f170,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1))) | sP1(X1,X0)))),
  inference(flattening,[],[f169])).
fof(f169,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & (((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1)))) | sP1(X1,X0)))),
  inference(nnf_transformation,[],[f130])).
fof(f130,plain,(
  ! [X1,X0] : (sP1(X1,X0) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f277,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | ~p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f171])).
fof(f278,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f171])).
fof(f281,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f171])).
fof(f329,plain,(
  ( ! [X0,X1] : (~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f261,f317])).
fof(f261,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f164])).
fof(f164,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(flattening,[],[f163])).
fof(f163,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0')))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(nnf_transformation,[],[f128])).
fof(f128,plain,(
  ! [X0,X1] : (sP0(X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f262,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f164])).
fof(f263,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f164])).
fof(f260,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f162])).
fof(f252,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))))))) )),
  inference(cnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))))))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X6,X7] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X6))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X7)))))))))),
  file('thm.numeral.numeral_lt|split|5','thm.numeral.numeral_|49||49|_prove_ltb|split|0')).
fof(f251,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X6,X7] : s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num',X6))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X7))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X6)))))),
  file('thm.numeral.numeral_lt|split|5','thm.numeral.numeral_|49||49|_prove_ltb|split|3')).
fof(f250,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))))))) )),
  inference(cnf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))))))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X6,X7] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X6))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X7)))))))))),
  file('thm.numeral.numeral_lt|split|5','thm.numeral.numeral_|49||49|_prove_ltb|split|2')).
fof(f249,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X6,X7] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num',X6))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X7))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X6)))))),
  file('thm.numeral.numeral_lt|split|5','thm.numeral.numeral_|49||49|_prove_ltb|split|1')).
fof(f247,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X12,X13] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X12),s('type.num.num',X13))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X12))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X13)))))),
  file('thm.numeral.numeral_lt|split|5','thm.numeral.numeral_|49||48|_prove_ltb|split|1')).
fof(f246,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X6,X7] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X6))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X7)))))),
  file('thm.numeral.numeral_lt|split|5','thm.numeral.numeral_9_prove_ltb|split|1')).
fof(f245,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X6,X7] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X6))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X7)))))),
  file('thm.numeral.numeral_lt|split|5','thm.numeral.numeral_9_prove_ltb|split|0')).
fof(f212,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f143])).
fof(f209,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f141])).
fof(f320,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) )),
  inference(forward_demodulation,[],[f198,f190])).
fof(f198,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X6] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))))),
  file('thm.numeral.numeral_lt|split|5','thm.prim_rec.LESS_|48|')).
fof(f4745,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706,f4708,f4710,f4712,f4714,f4716,f4718,f4720,f4722,f4724,f4726,f4728,f4730,f4732,f4734,f4736,f4738,f4740,f4742,f4744])).
fof(f4743,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706,f4708,f4710,f4712,f4714,f4716,f4718,f4720,f4722,f4724,f4726,f4728,f4730,f4732,f4734,f4736,f4738,f4740,f4742])).
fof(f4741,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706,f4708,f4710,f4712,f4714,f4716,f4718,f4720,f4722,f4724,f4726,f4728,f4730,f4732,f4734,f4736,f4738,f4740])).
fof(f4739,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706,f4708,f4710,f4712,f4714,f4716,f4718,f4720,f4722,f4724,f4726,f4728,f4730,f4732,f4734,f4736,f4738])).
fof(f4737,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706,f4708,f4710,f4712,f4714,f4716,f4718,f4720,f4722,f4724,f4726,f4728,f4730,f4732,f4734,f4736])).
fof(f4735,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706,f4708,f4710,f4712,f4714,f4716,f4718,f4720,f4722,f4724,f4726,f4728,f4730,f4732,f4734])).
fof(f4733,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706,f4708,f4710,f4712,f4714,f4716,f4718,f4720,f4722,f4724,f4726,f4728,f4730,f4732])).
fof(f4731,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706,f4708,f4710,f4712,f4714,f4716,f4718,f4720,f4722,f4724,f4726,f4728,f4730])).
fof(f4729,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706,f4708,f4710,f4712,f4714,f4716,f4718,f4720,f4722,f4724,f4726,f4728])).
fof(f4727,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706,f4708,f4710,f4712,f4714,f4716,f4718,f4720,f4722,f4724,f4726])).
fof(f4725,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706,f4708,f4710,f4712,f4714,f4716,f4718,f4720,f4722,f4724])).
fof(f4723,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706,f4708,f4710,f4712,f4714,f4716,f4718,f4720,f4722])).
fof(f4721,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706,f4708,f4710,f4712,f4714,f4716,f4718,f4720])).
fof(f4719,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706,f4708,f4710,f4712,f4714,f4716,f4718])).
fof(f4717,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706,f4708,f4710,f4712,f4714,f4716])).
fof(f4715,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706,f4708,f4710,f4712,f4714])).
fof(f4713,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706,f4708,f4710,f4712])).
fof(f4711,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706,f4708,f4710])).
fof(f4709,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706,f4708])).
fof(f4707,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704,f4706])).
fof(f4705,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702,f4704])).
fof(f4703,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700,f4702])).
fof(f4701,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691,f4700])).
fof(f4699,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f4541,f188])).
fof(f4541,plain,(
  ~p(s(bool,'T_0')) | $spl6),
  inference(backward_demodulation,[],[f4413,f3310])).
fof(f4698,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f4697,f188])).
fof(f4697,plain,(
  ~p(s(bool,'T_0')) | $spl6),
  inference(forward_demodulation,[],[f4696,f4413])).
fof(f4696,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11))))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4537,f188])).
fof(f4537,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11))))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1292])).
fof(f4695,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f4694,f188])).
fof(f4694,plain,(
  ~p(s(bool,'T_0')) | $spl6),
  inference(forward_demodulation,[],[f4693,f4413])).
fof(f4693,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11))))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4535,f188])).
fof(f4535,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11))))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1444])).
fof(f4692,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689,f4691])).
fof(f4690,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687,f4689])).
fof(f4688,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685,f4687])).
fof(f4686,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683,f4685])).
fof(f4684,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681,f4683])).
fof(f4682,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655,f4681])).
fof(f4680,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f4679,f188])).
fof(f4679,plain,(
  ~p(s(bool,'T_0')) | $spl6),
  inference(forward_demodulation,[],[f4678,f4413])).
fof(f4678,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4525,f188])).
fof(f4525,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1454])).
fof(f4677,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f4676,f188])).
fof(f4676,plain,(
  ~p(s(bool,'T_0')) | $spl6),
  inference(forward_demodulation,[],[f4675,f4413])).
fof(f4675,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4523,f188])).
fof(f4523,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1302])).
fof(f4674,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f4673,f188])).
fof(f4673,plain,(
  ~p(s(bool,'T_0')) | $spl6),
  inference(forward_demodulation,[],[f4672,f4413])).
fof(f4672,plain,(
  ( ! [X125,X124] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num',X125))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4519,f188])).
fof(f4519,plain,(
  ( ! [X125,X124] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num',X125))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f3320])).
fof(f4671,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f4670,f188])).
fof(f4670,plain,(
  ~p(s(bool,'T_0')) | $spl6),
  inference(forward_demodulation,[],[f4669,f4413])).
fof(f4669,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))),s('type.num.num',X8))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4515,f188])).
fof(f4515,plain,(
  ( ! [X8,X7] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))),s('type.num.num',X8))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f3526])).
fof(f4668,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f4667,f188])).
fof(f4667,plain,(
  ~p(s(bool,'T_0')) | $spl6),
  inference(forward_demodulation,[],[f4666,f4413])).
fof(f4666,plain,(
  ( ! [X127,X128] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X127))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X127))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128))))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4514,f188])).
fof(f4514,plain,(
  ( ! [X127,X128] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X127))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X127))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128))))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f3706])).
fof(f4665,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f4664,f188])).
fof(f4664,plain,(
  ~p(s(bool,'T_0')) | $spl6),
  inference(forward_demodulation,[],[f4663,f4413])).
fof(f4663,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4510,f188])).
fof(f4510,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f3516])).
fof(f4662,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f4661,f188])).
fof(f4661,plain,(
  ~p(s(bool,'T_0')) | $spl6),
  inference(forward_demodulation,[],[f4660,f4413])).
fof(f4660,plain,(
  ( ! [X16] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X16))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4508,f188])).
fof(f4508,plain,(
  ( ! [X16] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X16))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f3533])).
fof(f4659,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f4658,f188])).
fof(f4658,plain,(
  ~p(s(bool,'T_0')) | $spl6),
  inference(forward_demodulation,[],[f4657,f4413])).
fof(f4657,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4500,f188])).
fof(f4500,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f3307])).
fof(f4656,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653,f4655])).
fof(f4654,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651,f4653])).
fof(f4652,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649,f4651])).
fof(f4650,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647,f4649])).
fof(f4648,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645,f4647])).
fof(f4646,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643,f4645])).
fof(f4644,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641,f4643])).
fof(f4642,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639,f4641])).
fof(f4640,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637,f4639])).
fof(f4638,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635,f4637])).
fof(f4636,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633,f4635])).
fof(f4634,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631,f4633])).
fof(f4632,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629,f4631])).
fof(f4630,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627,f4629])).
fof(f4628,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625,f4627])).
fof(f4626,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623,f4625])).
fof(f4624,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621,f4623])).
fof(f4622,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616,f4621])).
fof(f4620,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f4619,f188])).
fof(f4619,plain,(
  ~p(s(bool,'T_0')) | $spl6),
  inference(forward_demodulation,[],[f4618,f4413])).
fof(f4618,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4476,f188])).
fof(f4476,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))) ) | $spl6),
  inference(backward_demodulation,[],[f4413,f1097])).
fof(f4617,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614,f4616])).
fof(f4615,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612,f4614])).
fof(f4613,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610,f4612])).
fof(f4611,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608,f4610])).
fof(f4609,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606,f4608])).
fof(f4607,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603,f4606])).
fof(f4605,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f4447,f188])).
fof(f4447,plain,(
  ~p(s(bool,'T_0')) | $spl6),
  inference(backward_demodulation,[],[f4413,f317])).
fof(f4604,plain,(
  $false | $spl6),
  inference(global_subsumption,[],[f187,f186,f188,f190,f317,f318,f319,f320,f321,f322,f201,f209,f208,f213,f212,f323,f242,f243,f244,f326,f328,f245,f246,f247,f248,f249,f250,f251,f252,f256,f253,f258,f257,f260,f259,f263,f262,f329,f281,f278,f277,f276,f286,f293,f292,f291,f290,f289,f288,f287,f297,f296,f295,f294,f301,f300,f299,f298,f305,f304,f303,f302,f309,f308,f307,f306,f330,f331,f332,f333,f336,f339,f340,f343,f346,f347,f348,f352,f351,f350,f349,f357,f354,f368,f391,f393,f397,f405,f412,f443,f442,f441,f440,f439,f438,f437,f436,f435,f433,f432,f431,f430,f429,f466,f520,f591,f590,f587,f586,f603,f600,f621,f619,f615,f613,f635,f632,f663,f690,f705,f709,f714,f720,f788,f781,f778,f832,f932,f949,f948,f947,f946,f960,f969,f970,f971,f972,f973,f974,f1027,f1031,f1062,f1089,f1090,f1091,f1092,f1093,f1094,f1095,f1096,f1097,f1098,f1099,f1101,f1102,f1103,f1104,f1105,f1106,f1123,f1122,f1121,f1120,f1157,f1161,f1142,f1151,f1152,f1153,f1154,f1155,f1156,f1192,f1191,f1190,f1189,f1230,f1211,f1220,f1221,f1222,f1223,f1224,f1225,f1292,f1302,f1349,f1362,f1370,f1385,f1444,f1454,f1517,f1530,f1538,f1553,f1557,f1603,f1602,f1601,f1600,f1611,f1626,f1635,f1636,f1637,f1638,f1639,f1640,f1665,f1682,f1695,f1694,f1693,f1692,f1703,f1714,f1718,f1727,f1728,f1729,f1730,f1731,f1732,f1779,f1778,f1777,f1776,f1813,f1818,f1798,f1807,f1808,f1809,f1810,f1811,f1812,f1857,f1856,f1855,f1854,f1872,f1893,f1876,f1885,f1886,f1887,f1888,f1889,f1890,f1917,f1916,f1915,f1914,f1925,f1936,f1945,f1946,f1947,f1948,f1949,f1950,f1991,f1990,f1989,f1988,f2010,f2019,f2020,f2021,f2022,f2023,f2024,f2043,f2055,f2054,f2065,f2066,f2078,f2069,f2113,f2110,f2156,f2153,f2152,f2188,f2282,f2283,f2284,f2194,f2195,f2196,f2197,f2198,f2199,f2200,f2201,f2202,f2203,f2204,f2407,f2406,f2403,f2402,f2399,f2398,f2397,f2396,f2395,f2394,f2393,f2392,f2391,f2390,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2375,f2374,f2373,f2372,f2364,f2363,f2354,f2353,f2345,f2344,f2335,f2334,f2333,f2332,f2331,f2326,f2325,f2322,f2321,f2320,f2319,f2317,f2316,f2315,f2314,f2313,f2308,f2307,f2575,f2574,f2571,f2570,f2567,f2566,f2565,f2564,f2563,f2562,f2561,f2560,f2559,f2558,f2555,f2554,f2553,f2552,f2551,f2550,f2549,f2548,f2547,f2546,f2543,f2542,f2541,f2540,f2532,f2531,f2522,f2521,f2513,f2512,f2503,f2502,f2501,f2500,f2499,f2494,f2493,f2490,f2489,f2488,f2487,f2485,f2484,f2483,f2482,f2481,f2652,f2651,f2649,f2684,f2685,f2686,f2687,f2714,f2715,f2816,f2817,f2718,f2819,f2721,f2722,f2723,f2724,f2725,f2726,f2727,f2728,f2729,f2730,f2731,f2883,f2884,f2885,f2886,f2887,f2987,f2890,f2891,f2892,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2900,f3008,f3007,f3006,f3005,f3062,f3061,f3060,f3059,f3095,f3096,f3097,f3098,f3136,f3148,f3183,f3303,f3305,f3307,f3310,f3184,f3185,f3186,f3187,f3311,f3320,f3329,f3413,f3423,f3430,f3516,f3526,f3533,f3585,f3586,f3587,f3588,f3589,f3703,f3706,f3710,f3875,f3876,f3877,f3878,f3879,f3892,f3893,f3894,f3895,f3896,f3936,f3937,f3940,f3941,f3942,f3945,f3946,f3947,f3948,f3975,f3988,f3989,f3990,f3991,f3992,f3995,f3996,f3997,f3998,f4069,f4070,f4118,f4411,f4415,f4418,f4421,f4423,f4424,f4425,f4426,f4427,f4428,f4429,f4430,f4431,f4432,f4175,f4176,f4438,f4440,f4442,f4444,f4413,f4603])).
fof(f4422,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP3(X1,'T_0',X2) | p(s(bool,X2))) ) | $spl12),
  inference(cnf_transformation,[],[f4422_D])).
fof(f4422_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP3(X1,'T_0',X2) | p(s(bool,X2))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f4413,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl6),
  inference(cnf_transformation,[],[f4413_D])).
fof(f4413_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f4444,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X1,'T_0',X2)) )),
  inference(condensation,[],[f4443])).
fof(f4443,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X44)) | p(s(bool,X45)) | ~sP3(X44,'T_0',X45) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(subsumption_resolution,[],[f4191,f520])).
fof(f4191,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X43)) | ~p(s(bool,X44)) | p(s(bool,X45)) | ~sP3(X44,'T_0',X45) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(superposition,[],[f298,f466])).
fof(f4419,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP4(X1,'T_0',X2) | p(s(bool,X2))) ) | $spl10),
  inference(cnf_transformation,[],[f4419_D])).
fof(f4419_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP4(X1,'T_0',X2) | p(s(bool,X2))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f4442,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X1,'T_0',X2)) )),
  inference(condensation,[],[f4441])).
fof(f4441,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X40)) | p(s(bool,X41)) | ~sP4(X40,'T_0',X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(subsumption_resolution,[],[f4190,f520])).
fof(f4190,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X39)) | ~p(s(bool,X40)) | p(s(bool,X41)) | ~sP4(X40,'T_0',X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(superposition,[],[f294,f466])).
fof(f4416,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1(X1,'T_0')) ) | $spl8),
  inference(cnf_transformation,[],[f4416_D])).
fof(f4416_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1(X1,'T_0')) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f4440,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'T_0')) )),
  inference(condensation,[],[f4439])).
fof(f4439,plain,(
  ( ! [X37,X38,X36] : (p(s(bool,X37)) | sP1(X37,'T_0') | s(bool,X36) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(subsumption_resolution,[],[f4189,f520])).
fof(f4189,plain,(
  ( ! [X37,X38,X36] : (~p(s(bool,X36)) | p(s(bool,X37)) | sP1(X37,'T_0') | s(bool,X36) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f281,f466])).
fof(f4412,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1('T_0',X1)) ) | $spl4),
  inference(cnf_transformation,[],[f4412_D])).
fof(f4412_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1('T_0',X1)) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f4438,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('T_0',X1)) )),
  inference(condensation,[],[f4437])).
fof(f4437,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,X34)) | sP1('T_0',X34) | s(bool,X33) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) )),
  inference(subsumption_resolution,[],[f4188,f520])).
fof(f4188,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,X33)) | p(s(bool,X34)) | sP1('T_0',X34) | s(bool,X33) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) )),
  inference(superposition,[],[f278,f466])).
fof(f4421,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X1,'T_0',X2)) )),
  inference(condensation,[],[f4420])).
fof(f4420,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X44)) | p(s(bool,X45)) | ~sP3(X44,'T_0',X45) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(subsumption_resolution,[],[f4131,f520])).
fof(f4131,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X43)) | ~p(s(bool,X44)) | p(s(bool,X45)) | ~sP3(X44,'T_0',X45) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(superposition,[],[f298,f466])).
fof(f4418,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X1,'T_0',X2)) )),
  inference(condensation,[],[f4417])).
fof(f4417,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X40)) | p(s(bool,X41)) | ~sP4(X40,'T_0',X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(subsumption_resolution,[],[f4130,f520])).
fof(f4130,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X39)) | ~p(s(bool,X40)) | p(s(bool,X41)) | ~sP4(X40,'T_0',X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(superposition,[],[f294,f466])).
fof(f4415,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'T_0')) )),
  inference(condensation,[],[f4414])).
fof(f4414,plain,(
  ( ! [X37,X38,X36] : (p(s(bool,X37)) | sP1(X37,'T_0') | s(bool,X36) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(subsumption_resolution,[],[f4129,f520])).
fof(f4129,plain,(
  ( ! [X37,X38,X36] : (~p(s(bool,X36)) | p(s(bool,X37)) | sP1(X37,'T_0') | s(bool,X36) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f281,f466])).
fof(f4411,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('T_0',X1)) )),
  inference(condensation,[],[f4410])).
fof(f4410,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,X34)) | sP1('T_0',X34) | s(bool,X33) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) )),
  inference(subsumption_resolution,[],[f4128,f520])).
fof(f4128,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,X33)) | p(s(bool,X34)) | sP1('T_0',X34) | s(bool,X33) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) )),
  inference(superposition,[],[f278,f466])).
fof(f313,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK7)))))) | $spl0),
  inference(cnf_transformation,[],[f313_D])).
fof(f313_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK7)))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f315,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7),s('type.num.num',sK6)))) | $spl3),
  inference(cnf_transformation,[],[f315_D])).
fof(f315_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7),s('type.num.num',sK6)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f186,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7),s('type.num.num',sK6)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK7))))))),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK7)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7),s('type.num.num',sK6))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK7)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7),s('type.num.num',sK6)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6,sK7])],[f137])).
fof(f137,plain,(
  ? [X0,X1] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f115])).
fof(f115,plain,(
  ? [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) <~> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(ennf_transformation,[],[f53])).
fof(f53,plain,(
  ~! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f52])).
fof(f52,plain,(
  ~! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.numeral.numeral_lt|split|5','thm.numeral.numeral_lt|split|5')).
fof(f314,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK7)))))) | $spl1),
  inference(cnf_transformation,[],[f314_D])).
fof(f314_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK7)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f316,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7),s('type.num.num',sK6)))) | $spl2),
  inference(cnf_transformation,[],[f316_D])).
fof(f316_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7),s('type.num.num',sK6)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f187,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7),s('type.num.num',sK6)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK7))))))),
  inference(cnf_transformation,[],[f138])).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 290
% Passive clauses: 938
% Generated clauses: 6856
% Final active clauses: 186
% Final passive clauses: 419
% Input formulas: 50
% Initial clauses: 124
% 
% Duplicate literals: 79
% Trivial inequalities: 20
% Fw subsumption resolutions: 193
% Fw demodulations: 1323
% Bw demodulations: 182
% Condensations: 99
% Global subsumptions: 55
% 
% Simple tautologies: 64
% Equational tautologies: 54
% Forward subsumptions: 3944
% Fw demodulations to eq. taut.: 6
% Bw demodulations to eq. taut.: 9
% 
% Unit resulting resolution: 1765
% Factoring: 1
% Forward superposition: 1479
% Backward superposition: 1315
% Self superposition: 35
% Equality factoring: 28
% Equality resolution: 1
% 
% Split clauses: 10
% Split components: 20
% SAT solver clauses: 1086
% SAT solver unit clauses: 447
% SAT solver binary clauses: 408
% 
% Sat splits: 10
% Sat splitting refutations: 71
% 
% Memory used [KB]: 4605
% Time elapsed: 0.242 s
% ------------------------------
% ------------------------------
% Success in time 1.566 s
