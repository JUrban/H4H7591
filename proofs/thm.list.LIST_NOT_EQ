Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f896,plain,(
  $false),
  inference(subsumption_resolution,[],[f894,f63])).
fof(f63,plain,(
  s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),sK2)),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),sK2) & s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),sK1))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),sK2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f39])).
fof(f39,plain,(
  ? [X0,X1,X2] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),X2) & ? [X3,X4] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))),
  inference(ennf_transformation,[],[f21])).
fof(f21,plain,(
  ~! [X0,X1,X2] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),X2) => ! [X3,X4] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))),
  inference(flattening,[],[f20])).
fof(f20,plain,(
  ~! [X0] : ! [X1,X2] : (~s('type.list.list'(X0),X1) = s('type.list.list'(X0),X2) => ! [X3,X4] : ~s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (~s('type.list.list'(X6),X7) = s('type.list.list'(X6),X8) => ! [X9,X10] : ~s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X7))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),X8))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (~s('type.list.list'(X6),X7) = s('type.list.list'(X6),X8) => ! [X9,X10] : ~s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X7))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),X8))))),
  file('thm.list.LIST_NOT_EQ','thm.list.LIST_NOT_EQ')).
fof(f894,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),sK2)),
  inference(equality_resolution,[],[f749])).
fof(f749,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),sK1))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),X1))) | s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),X1)) )),
  inference(superposition,[],[f94,f64])).
fof(f64,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),sK1))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),sK2)))),
  inference(cnf_transformation,[],[f44])).
fof(f94,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4)) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) | (s(X0,X1) = s(X0,X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4))) & (s(X0,X1) != s(X0,X3) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),X4) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))),
  inference(flattening,[],[f60])).
fof(f60,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) | (s(X0,X1) = s(X0,X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4))) & ((s(X0,X1) != s(X0,X3) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),X4)) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))),
  inference(nnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) <=> (s(X0,X1) = s(X0,X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4)))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) <=> (s(X0,X1) = s(X0,X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : ! [X15,X16,X17,X18] : (s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),X16))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),X18))) <=> (s(X6,X15) = s(X6,X17) & s('type.list.list'(X6),X16) = s('type.list.list'(X6),X18)))),
  file('thm.list.LIST_NOT_EQ','thm.list.list_|49||49|')).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 30
% Passive clauses: 197
% Generated clauses: 794
% Final active clauses: 25
% Final passive clauses: 111
% Input formulas: 18
% Initial clauses: 38
% 
% Duplicate literals: 82
% Trivial inequalities: 7
% Fw subsumption resolutions: 68
% Fw demodulations: 20
% Bw demodulations: 3
% 
% Simple tautologies: 48
% Equational tautologies: 31
% Forward subsumptions: 323
% 
% Binary resolution: 37
% Factoring: 1
% Forward superposition: 236
% Backward superposition: 190
% Self superposition: 46
% Equality factoring: 50
% Equality resolution: 7
% 
% Split clauses: 18
% Split components: 36
% SAT solver clauses: 69
% SAT solver unit clauses: 3
% SAT solver binary clauses: 22
% 
% Sat splits: 18
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 69
% TWLsolver calls for satisfiability: 51
% 
% Memory used [KB]: 1023
% Time elapsed: 0.019 s
% ------------------------------
% ------------------------------
% Success in time 0.019 s
