Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.list
% (90340)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 314
% Passive clauses: 3712
% Generated clauses: 28904
% Final active clauses: 123
% Final passive clauses: 1629
% Input formulas: 68
% Initial clauses: 119
% 
% Duplicate literals: 514
% Trivial inequalities: 863
% Fw subsumption resolutions: 1137
% Fw demodulations: 4008
% Bw demodulations: 113
% 
% Simple tautologies: 234
% Equational tautologies: 33
% Forward subsumptions: 18275
% Fw demodulations to eq. taut.: 17
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 221
% Factoring: 1
% Forward superposition: 8131
% Backward superposition: 13145
% Self superposition: 195
% Equality factoring: 54
% Equality resolution: 36
% 
% Split clauses: 157
% Split components: 318
% SAT solver clauses: 327
% SAT solver unit clauses: 8
% SAT solver binary clauses: 105
% 
% Sat splits: 157
% Sat splitting refutations: 19
% 
% TWLsolver clauses: 327
% TWLsolver calls for satisfiability: 94
% 
% Memory used [KB]: 21875
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.list
% (90354)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 239
% Passive clauses: 2374
% Generated clauses: 20859
% Final active clauses: 73
% Final passive clauses: 676
% Input formulas: 68
% Initial clauses: 119
% 
% Duplicate literals: 224
% Trivial inequalities: 66
% Fw subsumption resolutions: 648
% Fw demodulations: 3239
% Bw demodulations: 1471
% Condensations: 397
% Global subsumptions: 9
% 
% Simple tautologies: 92
% Equational tautologies: 28
% Forward subsumptions: 10658
% Fw demodulations to eq. taut.: 23
% Bw demodulations to eq. taut.: 59
% 
% Binary resolution: 220
% Factoring: 1
% Forward superposition: 4955
% Backward superposition: 5594
% Self superposition: 177
% Equality factoring: 42
% Equality resolution: 10
% 
% Split clauses: 66
% Split components: 132
% SAT solver clauses: 2621
% SAT solver unit clauses: 158
% SAT solver binary clauses: 70
% SAT solver learnt clauses: 28
% SAT solver learnt literals: 36
% 
% Sat splits: 66
% Sat splitting refutations: 88
% 
% TWLsolver clauses: 2575
% TWLsolver calls for satisfiability: 538
% 
% Memory used [KB]: 18038
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f33959,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f33958])).
fof(f33958,plain,(
  s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK2))),s('type.list.list'(sK0),sK3))) != s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK2))),s('type.list.list'(sK0),sK3)))),
  inference(forward_demodulation,[],[f33439,f2233])).
fof(f2233,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f2232,f2181])).
fof(f2181,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(superposition,[],[f308,f388])).
fof(f388,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f386,f234])).
fof(f234,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X15] : s('type.num.num',X15) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0')))),
  file('thm.list.GENLIST_AUX_compute|split|2','thm.arithmetic.ADD_|48|')).
fof(f386,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) )),
  inference(backward_demodulation,[],[f308,f236])).
fof(f236,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f54])).
fof(f54,axiom,(
  ! [X8] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.list.GENLIST_AUX_compute|split|2','thm.arithmetic.BIT|49|')).
fof(f308,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0,X1] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X8,X15] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))))),
  file('thm.list.GENLIST_AUX_compute|split|2','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f2232,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f2182,f308])).
fof(f2182,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))) )),
  inference(superposition,[],[f308,f390])).
fof(f390,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) )),
  inference(forward_demodulation,[],[f389,f234])).
fof(f389,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(forward_demodulation,[],[f387,f308])).
fof(f387,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(backward_demodulation,[],[f308,f237])).
fof(f237,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(rectify,[],[f55])).
fof(f55,axiom,(
  ! [X8] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  file('thm.list.GENLIST_AUX_compute|split|2','thm.arithmetic.BIT2')).
fof(f33439,plain,(
  s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK2))),s('type.list.list'(sK0),sK3))) != s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))))),s('type.list.list'(sK0),sK3)))),
  inference(superposition,[],[f362,f301])).
fof(f301,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.list.list'(X0),X3))) = s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num',X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num',X2))),s('type.list.list'(X0),X3)))))) )),
  inference(cnf_transformation,[],[f126])).
fof(f126,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.list.list'(X0),X3))) = s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num',X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num',X2))),s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f125])).
fof(f125,plain,(
  ! [X0] : ! [X1,X2,X3] : s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.list.list'(X0),X3))) = s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num',X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num',X2))),s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X7,X8,X9] : s('type.list.list'(X6),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X6),X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.list.list'(X6),X9))) = s('type.list.list'(X6),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X6),X7),s('type.num.num',X8),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,happ(s(fun('type.num.num',X6),X7),s('type.num.num',X8))),s('type.list.list'(X6),X9)))))),
  file('thm.list.GENLIST_AUX_compute|split|2','thm.list.GENLIST_AUX|split|1')).
fof(f362,plain,(
  s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK2))),s('type.list.list'(sK0),sK3))) != s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,happ(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))))),s('type.list.list'(sK0),sK3)))))),
  inference(forward_demodulation,[],[f361,f230])).
fof(f230,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f57])).
fof(f57,axiom,(
  ! [X20] : s('type.num.num',X20) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20)))),
  file('thm.list.GENLIST_AUX_compute|split|2','thm.arithmetic.NUMERAL_DEF')).
fof(f361,plain,(
  s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK2))))),s('type.list.list'(sK0),sK3))) != s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,happ(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))))),s('type.list.list'(sK0),sK3)))))),
  inference(backward_demodulation,[],[f230,f224])).
fof(f224,plain,(
  s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK2))))),s('type.list.list'(sK0),sK3))) != s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,happ(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))))))),s('type.list.list'(sK0),sK3)))))),
  inference(cnf_transformation,[],[f174])).
fof(f174,plain,(
  s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK2))))),s('type.list.list'(sK0),sK3))) != s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,happ(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))))))),s('type.list.list'(sK0),sK3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f159])).
fof(f159,plain,(
  ? [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))),s('type.list.list'(X0),X3))) != s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))))),s('type.list.list'(X0),X3)))))),
  inference(ennf_transformation,[],[f71])).
fof(f71,plain,(
  ~! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))),s('type.list.list'(X0),X3))) = s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))))),s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f70])).
fof(f70,plain,(
  ~! [X0] : ! [X1,X2,X3] : s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))),s('type.list.list'(X0),X3))) = s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))))),s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : s('type.list.list'(X6),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X6),X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8))))),s('type.list.list'(X6),X9))) = s('type.list.list'(X6),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X6),X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,happ(s(fun('type.num.num',X6),X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))))))),s('type.list.list'(X6),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : s('type.list.list'(X6),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X6),X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8))))),s('type.list.list'(X6),X9))) = s('type.list.list'(X6),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X6),X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,happ(s(fun('type.num.num',X6),X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))))))),s('type.list.list'(X6),X9)))))),
  file('thm.list.GENLIST_AUX_compute|split|2','thm.list.GENLIST_AUX_compute|split|2')).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 122
% Passive clauses: 644
% Generated clauses: 33724
% Final active clauses: 97
% Final passive clauses: 458
% Input formulas: 68
% Initial clauses: 119
% 
% Duplicate literals: 14
% Trivial inequalities: 19
% Fw subsumption resolutions: 148
% Fw demodulations: 16486
% Bw demodulations: 82
% Condensations: 30
% 
% Simple tautologies: 43
% Equational tautologies: 34
% Forward subsumptions: 4998
% Fw demodulations to eq. taut.: 11283
% Bw demodulations to eq. taut.: 2
% 
% Unit resulting resolution: 13132
% Factoring: 1
% Forward superposition: 1956
% Backward superposition: 1660
% Self superposition: 55
% Equality factoring: 4
% Equality resolution: 9
% 
% Split clauses: 6
% Split components: 12
% SAT solver clauses: 659
% SAT solver unit clauses: 284
% SAT solver binary clauses: 324
% 
% Sat splits: 6
% Sat splitting refutations: 1
% 
% Memory used [KB]: 15479
% Time elapsed: 0.667 s
% ------------------------------
% ------------------------------
% Success in time 1.99 s
