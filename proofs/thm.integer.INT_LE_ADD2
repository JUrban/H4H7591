Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.integer
% (75082)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 153
% Passive clauses: 1815
% Generated clauses: 22984
% Final active clauses: 143
% Final passive clauses: 1499
% Input formulas: 18
% Initial clauses: 34
% 
% Duplicate literals: 1224
% Trivial inequalities: 256
% Fw subsumption resolutions: 3569
% Fw demodulations: 3252
% Bw demodulations: 9
% 
% Simple tautologies: 453
% Equational tautologies: 62
% Forward subsumptions: 9972
% 
% Binary resolution: 469
% Forward superposition: 6277
% Backward superposition: 7280
% Self superposition: 205
% Equality factoring: 171
% Equality resolution: 28
% 
% Split clauses: 1283
% Split components: 2627
% SAT solver clauses: 2067
% SAT solver unit clauses: 30
% SAT solver binary clauses: 228
% 
% Sat splits: 1283
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2064
% TWLsolver calls for satisfiability: 171
% 
% Memory used [KB]: 9978
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f289,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f280,f62,f101,f91,f115,f117,f121,f60,f97,f67,f105,f118,f123,f59,f99,f234,f244,f90,f114,f211,f212,f64,f103,f92,f116,f136,f141,f61,f95,f71,f107])).
fof(f107,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl16),
  inference(cnf_transformation,[],[f107_D])).
fof(f107_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f71,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X10] : (s(bool,'F_0') = s(bool,X10) <=> ~p(s(bool,X10)))),
  file('thm.integer.INT_LE_ADD2','thm.bool.EQ_CLAUSES|split|3')).
fof(f95,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3)))))) | $spl1),
  inference(cnf_transformation,[],[f95_D])).
fof(f95_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f61,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))))),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int',sK3)))) & ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f39])).
fof(f39,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) & ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ? [X0,X1,X2,X3] : ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) & ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))))),
  inference(ennf_transformation,[],[f20])).
fof(f20,plain,(
  ~! [X0,X1,X2,X3] : ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) => p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9] : ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int',X9))))) => p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X8))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X9)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9] : ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int',X9))))) => p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X8))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X9)))))))),
  file('thm.integer.INT_LE_ADD2','thm.integer.INT_LE_ADD2')).
fof(f141,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | $spl32),
  inference(cnf_transformation,[],[f141_D])).
fof(f141_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f136,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | ($spl1 | $spl16)),
  inference(resolution,[],[f107,f95])).
fof(f116,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) ) | $spl26),
  inference(cnf_transformation,[],[f116_D])).
fof(f116_D,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f92,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X2)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X2)))))),
  inference(flattening,[],[f41])).
fof(f41,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X2))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X2)))))),
  inference(ennf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X2))))) => p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X2)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X7,X8,X9] : ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X7),s('type.integer.int',X8)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int',X9))))) => p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X7),s('type.integer.int',X9)))))),
  file('thm.integer.INT_LE_ADD2','thm.integer.INT_LE_TRANS')).
fof(f103,plain,(
  ~p(s(bool,'F_0')) | $spl9),
  inference(cnf_transformation,[],[f103_D])).
fof(f103_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f64,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.integer.INT_LE_ADD2',aHL_FALSITY)).
fof(f212,plain,(
  ( ! [X2] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',X2))))) ) | $spl52),
  inference(cnf_transformation,[],[f212_D])).
fof(f212_D,plain,(
  ( ! [X2] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',X2))))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f211,plain,(
  ( ! [X2] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',X2))))) ) | ($spl9 | $spl26 | $spl32)),
  inference(subsumption_resolution,[],[f208,f103])).
fof(f208,plain,(
  ( ! [X2] : (p(s(bool,'F_0')) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',X2))))) ) | ($spl26 | $spl32)),
  inference(superposition,[],[f116,f141])).
fof(f114,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X2))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2)))))) ) | $spl22),
  inference(cnf_transformation,[],[f114_D])).
fof(f114_D,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X2))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2)))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f90,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X2))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2)))))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1,X2] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X2))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X7,X8,X9] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int',X9))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X8))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X9)))))),
  file('thm.integer.INT_LE_ADD2','thm.integer.INT_LE_LADD')).
fof(f244,plain,(
  ( ! [X2] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',X2)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',sK3))))) ) | $spl70),
  inference(cnf_transformation,[],[f244_D])).
fof(f244_D,plain,(
  ( ! [X2] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',X2)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',sK3))))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f234,plain,(
  ( ! [X2] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',sK3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',X2))))))) ) | ($spl22 | $spl52)),
  inference(superposition,[],[f212,f114])).
fof(f99,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))) | $spl4),
  inference(cnf_transformation,[],[f99_D])).
fof(f99_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f59,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),
  inference(cnf_transformation,[],[f43])).
fof(f123,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | $spl30),
  inference(cnf_transformation,[],[f123_D])).
fof(f123_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f118,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | ($spl4 | $spl12)),
  inference(resolution,[],[f105,f99])).
fof(f105,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f105_D])).
fof(f105_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f67,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.integer.INT_LE_ADD2','thm.bool.EQ_CLAUSES|split|1')).
fof(f97,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int',sK3)))) | $spl2),
  inference(cnf_transformation,[],[f97_D])).
fof(f97_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int',sK3)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f60,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int',sK3))))),
  inference(cnf_transformation,[],[f43])).
fof(f121,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int',sK3))) | $spl28),
  inference(cnf_transformation,[],[f121_D])).
fof(f121_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int',sK3))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f117,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int',sK3))) | ($spl2 | $spl12)),
  inference(resolution,[],[f105,f97])).
fof(f115,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2)))))) ) | $spl24),
  inference(cnf_transformation,[],[f115_D])).
fof(f115_D,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2)))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f91,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2)))))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1,X2] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2)))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X7,X8,X9] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X7),s('type.integer.int',X8))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X9))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int',X9)))))),
  file('thm.integer.INT_LE_ADD2','thm.integer.INT_LE_RADD')).
fof(f101,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f101_D])).
fof(f101_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f62,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.integer.INT_LE_ADD2',aHL_TRUTH)).
fof(f280,plain,(
  $false | ($spl6 | $spl24 | $spl28 | $spl30 | $spl70)),
  inference(subsumption_resolution,[],[f279,f101])).
fof(f279,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl24 | $spl28 | $spl30 | $spl70)),
  inference(forward_demodulation,[],[f278,f121])).
fof(f278,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int',sK3)))) | ($spl6 | $spl24 | $spl30 | $spl70)),
  inference(subsumption_resolution,[],[f277,f101])).
fof(f277,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int',sK3)))) | ($spl24 | $spl30 | $spl70)),
  inference(forward_demodulation,[],[f263,f123])).
fof(f263,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int',sK3)))) | ($spl24 | $spl70)),
  inference(superposition,[],[f244,f115])).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 23
% Passive clauses: 42
% Generated clauses: 224
% Final active clauses: 19
% Final passive clauses: 15
% Input formulas: 18
% Initial clauses: 34
% 
% Duplicate literals: 2
% Trivial inequalities: 5
% Fw subsumption resolutions: 10
% Fw demodulations: 18
% Bw demodulations: 6
% Global subsumptions: 4
% 
% Simple tautologies: 14
% Equational tautologies: 3
% Forward subsumptions: 62
% 
% Binary resolution: 19
% Forward superposition: 33
% Backward superposition: 41
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 2
% 
% Split clauses: 2
% Split components: 4
% SAT solver clauses: 101
% SAT solver unit clauses: 43
% SAT solver binary clauses: 17
% SAT solver learnt clauses: 9
% 
% Sat splits: 2
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 83
% TWLsolver calls for satisfiability: 109
% 
% Memory used [KB]: 895
% Time elapsed: 0.009 s
% ------------------------------
% ------------------------------
% Success in time 0.633 s
