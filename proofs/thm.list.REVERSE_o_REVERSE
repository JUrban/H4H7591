Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.list
% (48591)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 65
% Passive clauses: 2199
% Generated clauses: 12977
% Final active clauses: 63
% Final passive clauses: 2078
% Input formulas: 13
% Initial clauses: 16
% 
% Duplicate literals: 903
% Trivial inequalities: 170
% Fw subsumption resolutions: 1704
% Fw demodulations: 524
% 
% Simple tautologies: 277
% Equational tautologies: 101
% Forward subsumptions: 5357
% 
% Binary resolution: 46
% Forward superposition: 5588
% Backward superposition: 3276
% Self superposition: 359
% Equality factoring: 283
% Equality resolution: 16
% 
% Split clauses: 625
% Split components: 1263
% SAT solver clauses: 1802
% SAT solver unit clauses: 276
% SAT solver binary clauses: 552
% 
% Sat splits: 625
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1794
% TWLsolver calls for satisfiability: 65
% 
% Memory used [KB]: 6524
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.list
% (48676)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 40
% Passive clauses: 366
% Generated clauses: 5679
% Final active clauses: 37
% Final passive clauses: 324
% Input formulas: 13
% Initial clauses: 16
% 
% Duplicate literals: 859
% Trivial inequalities: 48
% Fw subsumption resolutions: 202
% Fw demodulations: 95
% Bw demodulations: 1
% Condensations: 1392
% 
% Simple tautologies: 103
% Equational tautologies: 61
% Forward subsumptions: 1839
% 
% Binary resolution: 16
% Forward superposition: 1616
% Backward superposition: 1040
% Self superposition: 227
% Equality factoring: 176
% Equality resolution: 6
% 
% Split clauses: 56
% Split components: 113
% SAT solver clauses: 793
% SAT solver unit clauses: 22
% SAT solver binary clauses: 72
% 
% Sat splits: 56
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 793
% TWLsolver calls for satisfiability: 56
% 
% Memory used [KB]: 5628
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f72705,plain,(
  $false),
  inference(subsumption_resolution,[],[f72704,f48])).
fof(f48,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))),
  inference(flattening,[],[f18])).
fof(f18,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : ! [X13] : s('type.list.list'(X6),X13) = s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X13)))))),
  file('thm.list.REVERSE_o_REVERSE','thm.list.REVERSE_REVERSE')).
fof(f72704,plain,(
  s('type.list.list'(sK1),happ(s(fun(sK0,'type.list.list'(sK1)),sK2),s(sK0,sK4('const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),'const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),sK2)))),sK2,sK0,'type.list.list'(sK1))))) != s('type.list.list'(sK1),'const.list.REVERSE_1'(s('type.list.list'(sK1),'const.list.REVERSE_1'(s('type.list.list'(sK1),happ(s(fun(sK0,'type.list.list'(sK1)),sK2),s(sK0,sK4('const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),'const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),sK2)))),sK2,sK0,'type.list.list'(sK1)))))))))),
  inference(forward_demodulation,[],[f72703,f315])).
fof(f315,plain,(
  ( ! [X30,X31,X29,X32] : (s('type.list.list'(X29),'const.list.REVERSE_1'(s('type.list.list'(X29),happ(s(fun(X30,'type.list.list'(X29)),X31),s(X30,X32))))) = s('type.list.list'(X29),'const.combin.o_3'(s(fun('type.list.list'(X29),'type.list.list'(X29)),'const.list.REVERSE_0'),s(fun(X30,'type.list.list'(X29)),X31),s(X30,X32)))) )),
  inference(superposition,[],[f57,f49])).
fof(f49,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X0),'type.list.list'(X0)),'const.list.REVERSE_0'),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1] : s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X0),'type.list.list'(X0)),'const.list.REVERSE_0'),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f20])).
fof(f20,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X0),'type.list.list'(X0)),'const.list.REVERSE_0'),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : ! [X14] : s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X14))) = s('type.list.list'(X6),happ(s(fun('type.list.list'(X6),'type.list.list'(X6)),'const.list.REVERSE_0'),s('type.list.list'(X6),X14)))),
  file('thm.list.REVERSE_o_REVERSE','ARITY_0_1_const.list.REVERSE')).
fof(f57,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X7,X6,X12] : ! [X8,X11,X10] : s(X7,'const.combin.o_3'(s(fun(X6,X7),X8),s(fun(X12,X6),X11),s(X12,X10))) = s(X7,happ(s(fun(X6,X7),X8),s(X6,happ(s(fun(X12,X6),X11),s(X12,X10)))))),
  file('thm.list.REVERSE_o_REVERSE','thm.combin.o_THM')).
fof(f72703,plain,(
  s('type.list.list'(sK1),happ(s(fun(sK0,'type.list.list'(sK1)),sK2),s(sK0,sK4('const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),'const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),sK2)))),sK2,sK0,'type.list.list'(sK1))))) != s('type.list.list'(sK1),'const.list.REVERSE_1'(s('type.list.list'(sK1),'const.combin.o_3'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),sK2),s(sK0,sK4('const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),'const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),sK2)))),sK2,sK0,'type.list.list'(sK1)))))))),
  inference(forward_demodulation,[],[f72701,f58])).
fof(f58,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X7,X12,X6] : ! [X14,X15,X16] : s(X7,'const.combin.o_3'(s(fun(X12,X7),X14),s(fun(X6,X12),X15),s(X6,X16))) = s(X7,happ(s(fun(X6,X7),'const.combin.o_2'(s(fun(X12,X7),X14),s(fun(X6,X12),X15))),s(X6,X16)))),
  file('thm.list.REVERSE_o_REVERSE','ARITY_2_3_const.combin.o')).
fof(f72701,plain,(
  s('type.list.list'(sK1),happ(s(fun(sK0,'type.list.list'(sK1)),sK2),s(sK0,sK4('const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),'const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),sK2)))),sK2,sK0,'type.list.list'(sK1))))) != s('type.list.list'(sK1),'const.list.REVERSE_1'(s('type.list.list'(sK1),happ(s(fun(sK0,'type.list.list'(sK1)),'const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),sK2))),s(sK0,sK4('const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),'const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),sK2)))),sK2,sK0,'type.list.list'(sK1)))))))),
  inference(superposition,[],[f24297,f315])).
fof(f24297,plain,(
  s('type.list.list'(sK1),happ(s(fun(sK0,'type.list.list'(sK1)),sK2),s(sK0,sK4('const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),'const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),sK2)))),sK2,sK0,'type.list.list'(sK1))))) != s('type.list.list'(sK1),'const.combin.o_3'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),'const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),sK2))),s(sK0,sK4('const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),'const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),sK2)))),sK2,sK0,'type.list.list'(sK1)))))),
  inference(superposition,[],[f1828,f58])).
fof(f1828,plain,(
  s('type.list.list'(sK1),happ(s(fun(sK0,'type.list.list'(sK1)),sK2),s(sK0,sK4('const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),'const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),sK2)))),sK2,sK0,'type.list.list'(sK1))))) != s('type.list.list'(sK1),happ(s(fun(sK0,'type.list.list'(sK1)),'const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),'const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),sK2))))),s(sK0,sK4('const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),'const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),sK2)))),sK2,sK0,'type.list.list'(sK1)))))),
  inference(unit_resulting_resolution,[],[f43,f56])).
fof(f56,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,happ(s(fun(X1,X0),X2),s(X1,sK4(X3,X2,X1,X0)))) != s(X0,happ(s(fun(X1,X0),X3),s(X1,sK4(X3,X2,X1,X0)))) | s(fun(X1,X0),X2) = s(fun(X1,X0),X3)) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1,X2,X3] : ((s(fun(X1,X0),X2) != s(fun(X1,X0),X3) | ! [X5] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X5)))) & (s(X0,happ(s(fun(X1,X0),X2),s(X1,sK4(X3,X2,X1,X0)))) != s(X0,happ(s(fun(X1,X0),X3),s(X1,sK4(X3,X2,X1,X0)))) | s(fun(X1,X0),X2) = s(fun(X1,X0),X3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4])],[f41])).
fof(f41,plain,(
  ! [X0,X1,X2,X3] : ((s(fun(X1,X0),X2) != s(fun(X1,X0),X3) | ! [X5] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X5)))) & (? [X4] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) != s(X0,happ(s(fun(X1,X0),X3),s(X1,X4))) | s(fun(X1,X0),X2) = s(fun(X1,X0),X3)))),
  inference(rectify,[],[f40])).
fof(f40,plain,(
  ! [X0,X1,X2,X3] : ((s(fun(X1,X0),X2) != s(fun(X1,X0),X3) | ! [X4] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X4)))) & (? [X4] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) != s(X0,happ(s(fun(X1,X0),X3),s(X1,X4))) | s(fun(X1,X0),X2) = s(fun(X1,X0),X3)))),
  inference(nnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1,X2,X3] : (s(fun(X1,X0),X2) = s(fun(X1,X0),X3) <=> ! [X4] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X4))))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0,X1] : ! [X2,X3] : (s(fun(X1,X0),X2) = s(fun(X1,X0),X3) <=> ! [X4] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X4))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X7,X6] : ! [X8,X11] : (s(fun(X6,X7),X8) = s(fun(X6,X7),X11) <=> ! [X10] : s(X7,happ(s(fun(X6,X7),X8),s(X6,X10))) = s(X7,happ(s(fun(X6,X7),X11),s(X6,X10))))),
  file('thm.list.REVERSE_o_REVERSE','thm.bool.FUN_EQ_THM')).
fof(f43,plain,(
  s(fun(sK0,'type.list.list'(sK1)),sK2) != s(fun(sK0,'type.list.list'(sK1)),'const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),'const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),sK2)))))),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  s(fun(sK0,'type.list.list'(sK1)),sK2) != s(fun(sK0,'type.list.list'(sK1)),'const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),'const.combin.o_2'(s(fun('type.list.list'(sK1),'type.list.list'(sK1)),'const.list.REVERSE_0'),s(fun(sK0,'type.list.list'(sK1)),sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f33])).
fof(f33,plain,(
  ? [X0,X1,X2] : s(fun(X0,'type.list.list'(X1)),X2) != s(fun(X0,'type.list.list'(X1)),'const.combin.o_2'(s(fun('type.list.list'(X1),'type.list.list'(X1)),'const.list.REVERSE_0'),s(fun(X0,'type.list.list'(X1)),'const.combin.o_2'(s(fun('type.list.list'(X1),'type.list.list'(X1)),'const.list.REVERSE_0'),s(fun(X0,'type.list.list'(X1)),X2)))))),
  inference(ennf_transformation,[],[f16])).
fof(f16,plain,(
  ~! [X0,X1,X2] : s(fun(X0,'type.list.list'(X1)),X2) = s(fun(X0,'type.list.list'(X1)),'const.combin.o_2'(s(fun('type.list.list'(X1),'type.list.list'(X1)),'const.list.REVERSE_0'),s(fun(X0,'type.list.list'(X1)),'const.combin.o_2'(s(fun('type.list.list'(X1),'type.list.list'(X1)),'const.list.REVERSE_0'),s(fun(X0,'type.list.list'(X1)),X2)))))),
  inference(flattening,[],[f15])).
fof(f15,plain,(
  ~! [X0,X1] : ! [X2] : s(fun(X0,'type.list.list'(X1)),X2) = s(fun(X0,'type.list.list'(X1)),'const.combin.o_2'(s(fun('type.list.list'(X1),'type.list.list'(X1)),'const.list.REVERSE_0'),s(fun(X0,'type.list.list'(X1)),'const.combin.o_2'(s(fun('type.list.list'(X1),'type.list.list'(X1)),'const.list.REVERSE_0'),s(fun(X0,'type.list.list'(X1)),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : s(fun(X6,'type.list.list'(X7)),X8) = s(fun(X6,'type.list.list'(X7)),'const.combin.o_2'(s(fun('type.list.list'(X7),'type.list.list'(X7)),'const.list.REVERSE_0'),s(fun(X6,'type.list.list'(X7)),'const.combin.o_2'(s(fun('type.list.list'(X7),'type.list.list'(X7)),'const.list.REVERSE_0'),s(fun(X6,'type.list.list'(X7)),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : s(fun(X6,'type.list.list'(X7)),X8) = s(fun(X6,'type.list.list'(X7)),'const.combin.o_2'(s(fun('type.list.list'(X7),'type.list.list'(X7)),'const.list.REVERSE_0'),s(fun(X6,'type.list.list'(X7)),'const.combin.o_2'(s(fun('type.list.list'(X7),'type.list.list'(X7)),'const.list.REVERSE_0'),s(fun(X6,'type.list.list'(X7)),X8)))))),
  file('thm.list.REVERSE_o_REVERSE','thm.list.REVERSE_o_REVERSE')).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 266
% Passive clauses: 6521
% Generated clauses: 79843
% Final active clauses: 102
% Final passive clauses: 668
% Input formulas: 13
% Initial clauses: 16
% Discarded non-redundant clauses: 2235
% 
% Duplicate literals: 5543
% Trivial inequalities: 601
% Fw subsumption resolutions: 4753
% Fw demodulations: 5233
% Bw demodulations: 4021
% Condensations: 9799
% Global subsumptions: 81
% 
% Simple tautologies: 846
% Equational tautologies: 868
% Forward subsumptions: 45118
% Fw demodulations to eq. taut.: 28
% Bw demodulations to eq. taut.: 271
% 
% Unit resulting resolution: 1900
% Forward superposition: 24221
% Backward superposition: 14099
% Self superposition: 521
% Equality factoring: 317
% Equality resolution: 44
% 
% Split clauses: 310
% Split components: 626
% SAT solver clauses: 7298
% SAT solver unit clauses: 33
% SAT solver binary clauses: 381
% 
% Sat splits: 310
% Sat splitting refutations: 74
% 
% Memory used [KB]: 42600
% Time elapsed: 9.058 s
% ------------------------------
% ------------------------------
% Success in time 10.378 s
