Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.divides
% (89762)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 623
% Passive clauses: 9059
% Generated clauses: 18277
% Final active clauses: 618
% Final passive clauses: 7951
% Input formulas: 43
% Initial clauses: 168
% 
% Duplicate literals: 327
% Trivial inequalities: 20
% Fw subsumption resolutions: 1667
% Fw demodulations: 329
% Bw demodulations: 4
% 
% Simple tautologies: 216
% Equational tautologies: 57
% Forward subsumptions: 6133
% Fw demodulations to eq. taut.: 3
% 
% Binary resolution: 9933
% Factoring: 1059
% Forward superposition: 2297
% Backward superposition: 2234
% Self superposition: 59
% Equality factoring: 34
% Equality resolution: 10
% 
% Split clauses: 523
% Split components: 1053
% SAT solver clauses: 836
% SAT solver unit clauses: 18
% SAT solver binary clauses: 151
% 
% Sat splits: 523
% 
% TWLsolver clauses: 835
% TWLsolver calls for satisfiability: 385
% 
% Memory used [KB]: 9210
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.divides
% (89786)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 407
% Passive clauses: 2377
% Generated clauses: 11819
% Final active clauses: 394
% Final passive clauses: 1930
% Input formulas: 43
% Initial clauses: 168
% 
% Duplicate literals: 219
% Trivial inequalities: 38
% Fw subsumption resolutions: 808
% Fw demodulations: 746
% Bw demodulations: 47
% Condensations: 398
% Global subsumptions: 13
% 
% Simple tautologies: 240
% Equational tautologies: 21
% Forward subsumptions: 4101
% Fw demodulations to eq. taut.: 4
% 
% Binary resolution: 3141
% Factoring: 197
% Forward superposition: 1950
% Backward superposition: 1601
% Self superposition: 53
% Equality factoring: 32
% Equality resolution: 18
% 
% Split clauses: 58
% Split components: 121
% SAT solver clauses: 2975
% SAT solver unit clauses: 179
% SAT solver binary clauses: 84
% SAT solver learnt clauses: 26
% SAT solver learnt literals: 10
% 
% Sat splits: 58
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 2923
% TWLsolver calls for satisfiability: 1697
% 
% Memory used [KB]: 13048
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.divides
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.divides
% SZS output start Proof for thm.divides
fof(f101846,plain,(
  $false),
  inference(unit_resulting_resolution,[],[f454,f101787,f250])).
fof(f250,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f159])).
fof(f159,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X17] : (s(bool,'T_0') = s(bool,X17) <=> p(s(bool,X17)))),
  file('thm.divides.DIVIDES_MULT','thm.bool.EQ_CLAUSES|split|1')).
fof(f101787,plain,(
  ( ! [X0] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK13),s('type.num.num',X0))))))) )),
  inference(unit_resulting_resolution,[],[f289,f52048])).
fof(f52048,plain,(
  ( ! [X37,X36] : (s('type.num.num',X36) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X37),s('type.num.num',sK13))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',X36))))) )),
  inference(superposition,[],[f4373,f1327])).
fof(f1327,plain,(
  s('type.num.num',sK13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK12),s('type.num.num',sK19(sK13,sK12))))),
  inference(subsumption_resolution,[],[f1322,f235])).
fof(f235,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f11])).
fof(f11,axiom,(
  p(s(bool,'T_0'))),
  file('thm.divides.DIVIDES_MULT','thm.bool.TRUTH')).
fof(f1322,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num',sK13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK12),s('type.num.num',sK19(sK13,sK12))))),
  inference(superposition,[],[f411,f457])).
fof(f457,plain,(
  s(bool,'T_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK13)))),
  inference(unit_resulting_resolution,[],[f233,f250])).
fof(f233,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK13))))),
  inference(cnf_transformation,[],[f156])).
fof(f156,plain,(
  p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK13)))) & ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK13),s('type.num.num',sK14))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14])],[f110])).
fof(f110,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) & ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))))),
  inference(ennf_transformation,[],[f45])).
fof(f45,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) => p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X6),s('type.num.num',X7)))) => p(s(bool,'const.divides.divides_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X6),s('type.num.num',X7)))) => p(s(bool,'const.divides.divides_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8)))))))),
  file('thm.divides.DIVIDES_MULT','thm.divides.DIVIDES_MULT')).
fof(f411,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',sK19(X1,X0))))) )),
  inference(forward_demodulation,[],[f298,f289])).
fof(f298,plain,(
  ( ! [X0,X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK19(X1,X0)),s('type.num.num',X0))) | ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f186])).
fof(f186,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK19(X1,X0)),s('type.num.num',X0)))) & (! [X2] : s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK19])],[f185])).
fof(f185,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ? [X3] : s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X0)))) & (! [X2] : s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(rectify,[],[f184])).
fof(f184,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ? [X2] : s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))) & (! [X2] : s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> ? [X2] : s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X6,X7] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X6),s('type.num.num',X7)))) <=> ? [X20] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num',X6))))),
  file('thm.divides.DIVIDES_MULT','thm.divides.divides_def')).
fof(f4373,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X2) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X1),s('type.num.num',X2))))) )),
  inference(superposition,[],[f1639,f289])).
fof(f1639,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X3) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X2),s('type.num.num',X3))))) )),
  inference(superposition,[],[f299,f326])).
fof(f326,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X9,X10,X11] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X10))),s('type.num.num',X11)))),
  file('thm.divides.DIVIDES_MULT','thm.arithmetic.MULT_ASSOC')).
fof(f299,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f186])).
fof(f289,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X9,X10] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X10))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X9)))),
  file('thm.divides.DIVIDES_MULT','thm.arithmetic.MULT_SYM')).
fof(f454,plain,(
  s(bool,'T_0') != s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK13),s('type.num.num',sK14)))))),
  inference(unit_resulting_resolution,[],[f234,f249])).
fof(f249,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f159])).
fof(f234,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK13),s('type.num.num',sK14))))))),
  inference(cnf_transformation,[],[f156])).
% SZS output end Proof for thm.divides
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 1591
% Passive clauses: 9591
% Generated clauses: 101451
% Final active clauses: 1560
% Final passive clauses: 7105
% Input formulas: 43
% Initial clauses: 168
% 
% Duplicate literals: 1514
% Trivial inequalities: 73
% Fw subsumption resolutions: 2274
% Fw demodulations: 11600
% Bw demodulations: 140
% Condensations: 2176
% Global subsumptions: 44
% 
% Simple tautologies: 119
% Equational tautologies: 3653
% Forward subsumptions: 68768
% Fw demodulations to eq. taut.: 23
% Bw demodulations to eq. taut.: 37
% 
% Unit resulting resolution: 44408
% Factoring: 4
% Forward superposition: 24879
% Backward superposition: 18165
% Self superposition: 190
% Equality factoring: 120
% Equality resolution: 18
% 
% Split clauses: 155
% Split components: 315
% SAT solver clauses: 11406
% SAT solver unit clauses: 7141
% SAT solver binary clauses: 1942
% 
% Sat splits: 155
% Sat splitting refutations: 1459
% 
% Memory used [KB]: 66139
% Time elapsed: 4.878 s
% ------------------------------
% ------------------------------
% Success in time 6.192 s
