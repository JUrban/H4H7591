Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (45821)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1165
% Passive clauses: 7993
% Generated clauses: 32180
% Final active clauses: 1072
% Final passive clauses: 6036
% Input formulas: 261
% Initial clauses: 563
% 
% Duplicate literals: 110
% Trivial inequalities: 103
% Fw subsumption resolutions: 1120
% Fw demodulations: 2578
% Bw demodulations: 91
% 
% Simple tautologies: 279
% Equational tautologies: 55
% Forward subsumptions: 18123
% Fw demodulations to eq. taut.: 3
% 
% Binary resolution: 12855
% Factoring: 284
% Forward superposition: 6773
% Backward superposition: 6827
% Self superposition: 57
% Equality factoring: 2
% Equality resolution: 17
% 
% Split clauses: 1220
% Split components: 2442
% SAT solver clauses: 2563
% SAT solver unit clauses: 19
% SAT solver binary clauses: 479
% 
% Sat splits: 1220
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 2561
% TWLsolver calls for satisfiability: 709
% 
% Memory used [KB]: 18293
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f23933,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f23900,f996,f1596,f1109,f1654,f1163,f1701,f6932,f6934,f983,f1579,f1133,f1676,f2048,f2054,f982,f1577,f1046,f1632])).
fof(f1632,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl88),
  inference(cnf_transformation,[],[f1632_D])).
fof(f1632_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f1046,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f764])).
fof(f764,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f320])).
fof(f320,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X9] : (s(bool,'T_0') = s(bool,X9) <=> p(s(bool,X9)))),
  file('thm.rich_list.NOT_NULL_SNOC','thm.bool.EQ_CLAUSES|split|0')).
fof(f1577,plain,(
  p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK15),'const.list.SNOC_2'(s(sK15,sK16),s('type.list.list'(sK15),sK17)))))) | $spl0),
  inference(cnf_transformation,[],[f1577_D])).
fof(f1577_D,plain,(
  p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK15),'const.list.SNOC_2'(s(sK15,sK16),s('type.list.list'(sK15),sK17)))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f982,plain,(
  p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK15),'const.list.SNOC_2'(s(sK15,sK16),s('type.list.list'(sK15),sK17))))))),
  inference(cnf_transformation,[],[f758])).
fof(f758,plain,(
  p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK15),'const.list.SNOC_2'(s(sK15,sK16),s('type.list.list'(sK15),sK17))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK15,sK16,sK17])],[f668])).
fof(f668,plain,(
  ? [X0,X1,X2] : p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))))))),
  inference(ennf_transformation,[],[f264])).
fof(f264,plain,(
  ~! [X0,X1,X2] : ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))))))),
  inference(flattening,[],[f263])).
fof(f263,plain,(
  ~! [X0] : ! [X1,X2] : ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X7),s('type.list.list'(X6),X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X7),s('type.list.list'(X6),X8))))))),
  file('thm.rich_list.NOT_NULL_SNOC','thm.rich_list.NOT_NULL_SNOC')).
fof(f2054,plain,(
  s(bool,'T_0') = s(bool,'const.list.NULL_1'(s('type.list.list'(sK15),'const.list.SNOC_2'(s(sK15,sK16),s('type.list.list'(sK15),sK17))))) | $spl778),
  inference(cnf_transformation,[],[f2054_D])).
fof(f2054_D,plain,(
  s(bool,'T_0') = s(bool,'const.list.NULL_1'(s('type.list.list'(sK15),'const.list.SNOC_2'(s(sK15,sK16),s('type.list.list'(sK15),sK17))))) <=> ~$spl778),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl778])])).
fof(f2048,plain,(
  s(bool,'T_0') = s(bool,'const.list.NULL_1'(s('type.list.list'(sK15),'const.list.SNOC_2'(s(sK15,sK16),s('type.list.list'(sK15),sK17))))) | ($spl0 | $spl88)),
  inference(resolution,[],[f1632,f1577])).
fof(f1676,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) | $spl148),
  inference(cnf_transformation,[],[f1676_D])).
fof(f1676_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f1133,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1))))) )),
  inference(cnf_transformation,[],[f811])).
fof(f811,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1))))))),
  inference(nnf_transformation,[],[f391])).
fof(f391,plain,(
  ! [X0,X1] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f390])).
fof(f390,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : ! [X8] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X6),X8)))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X8))),
  file('thm.rich_list.NOT_NULL_SNOC','thm.list.NULL_EQ')).
fof(f1579,plain,(
  p(s(bool,'T_0')) | $spl2),
  inference(cnf_transformation,[],[f1579_D])).
fof(f1579_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f983,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rich_list.NOT_NULL_SNOC',aHL_TRUTH)).
fof(f6934,plain,(
  s('type.list.list'(sK15),'const.list.NIL_0') = s('type.list.list'(sK15),'const.list.SNOC_2'(s(sK15,sK16),s('type.list.list'(sK15),sK17))) | $spl2496),
  inference(cnf_transformation,[],[f6934_D])).
fof(f6934_D,plain,(
  s('type.list.list'(sK15),'const.list.NIL_0') = s('type.list.list'(sK15),'const.list.SNOC_2'(s(sK15,sK16),s('type.list.list'(sK15),sK17))) <=> ~$spl2496),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2496])])).
fof(f6932,plain,(
  s('type.list.list'(sK15),'const.list.NIL_0') = s('type.list.list'(sK15),'const.list.SNOC_2'(s(sK15,sK16),s('type.list.list'(sK15),sK17))) | ($spl2 | $spl148 | $spl778)),
  inference(subsumption_resolution,[],[f6906,f1579])).
fof(f6906,plain,(
  ~p(s(bool,'T_0')) | s('type.list.list'(sK15),'const.list.NIL_0') = s('type.list.list'(sK15),'const.list.SNOC_2'(s(sK15,sK16),s('type.list.list'(sK15),sK17))) | ($spl148 | $spl778)),
  inference(superposition,[],[f1676,f2054])).
fof(f1701,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) ) | $spl198),
  inference(cnf_transformation,[],[f1701_D])).
fof(f1701_D,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) ) <=> ~$spl198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl198])])).
fof(f1163,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f427])).
fof(f427,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f426])).
fof(f426,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f73])).
fof(f73,axiom,(
  ! [X6] : ! [X7,X8] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X7),s('type.list.list'(X6),X8)))))),
  file('thm.rich_list.NOT_NULL_SNOC','thm.list.LENGTH_SNOC')).
fof(f1654,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) ) | $spl104),
  inference(cnf_transformation,[],[f1654_D])).
fof(f1654_D,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f1109,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f349])).
fof(f349,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),
  inference(flattening,[],[f348])).
fof(f348,plain,(
  ! [X0] : ~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f104])).
fof(f104,axiom,(
  ! [X18] : ~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))),
  file('thm.rich_list.NOT_NULL_SNOC','thm.num.NOT_SUC')).
fof(f1596,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) ) | $spl18),
  inference(cnf_transformation,[],[f1596_D])).
fof(f1596_D,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f996,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f271])).
fof(f271,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f96])).
fof(f96,axiom,(
  ! [X6] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.rich_list.NOT_NULL_SNOC','thm.list.LENGTH|split|0')).
fof(f23900,plain,(
  $false | ($spl18 | $spl104 | $spl198 | $spl2496)),
  inference(subsumption_resolution,[],[f23899,f1654])).
fof(f23899,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK15),sK17))))) | ($spl18 | $spl198 | $spl2496)),
  inference(forward_demodulation,[],[f23829,f1596])).
fof(f23829,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK15),'const.list.NIL_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK15),sK17))))) | ($spl198 | $spl2496)),
  inference(superposition,[],[f1701,f6934])).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 619
% Passive clauses: 3383
% Generated clauses: 22939
% Final active clauses: 469
% Final passive clauses: 2669
% Input formulas: 261
% Initial clauses: 563
% 
% Duplicate literals: 95
% Trivial inequalities: 80
% Fw subsumption resolutions: 733
% Fw demodulations: 2823
% Bw demodulations: 160
% Condensations: 46
% Global subsumptions: 27
% 
% Simple tautologies: 314
% Equational tautologies: 12
% Forward subsumptions: 11451
% Fw demodulations to eq. taut.: 3
% 
% Binary resolution: 2517
% Factoring: 59
% Forward superposition: 6414
% Backward superposition: 5811
% Self superposition: 67
% Equality factoring: 2
% Equality resolution: 12
% 
% Split clauses: 61
% Split components: 122
% SAT solver clauses: 4534
% SAT solver unit clauses: 683
% SAT solver binary clauses: 171
% SAT solver learnt clauses: 55
% SAT solver learnt literals: 18
% 
% Sat splits: 61
% Sat splitting refutations: 11
% 
% TWLsolver clauses: 4425
% TWLsolver calls for satisfiability: 3401
% 
% Memory used [KB]: 23411
% Time elapsed: 0.597 s
% ------------------------------
% ------------------------------
% Success in time 1.24 s
