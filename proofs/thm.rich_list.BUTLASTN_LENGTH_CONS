Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (31383)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 125
% Passive clauses: 3392
% Generated clauses: 16918
% Final active clauses: 120
% Final passive clauses: 3067
% Input formulas: 37
% Initial clauses: 59
% 
% Duplicate literals: 746
% Trivial inequalities: 195
% Fw subsumption resolutions: 2734
% Fw demodulations: 1094
% Bw demodulations: 4
% 
% Simple tautologies: 362
% Equational tautologies: 82
% Forward subsumptions: 6900
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 749
% Factoring: 8
% Forward superposition: 6489
% Backward superposition: 4210
% Self superposition: 260
% Equality factoring: 194
% Equality resolution: 22
% 
% Split clauses: 606
% Split components: 1243
% SAT solver clauses: 1557
% SAT solver unit clauses: 30
% SAT solver binary clauses: 449
% 
% Sat splits: 606
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 1554
% TWLsolver calls for satisfiability: 187
% 
% Memory used [KB]: 9850
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (31396)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 79
% Passive clauses: 325
% Generated clauses: 8885
% Final active clauses: 72
% Final passive clauses: 228
% Input formulas: 37
% Initial clauses: 59
% 
% Duplicate literals: 867
% Trivial inequalities: 93
% Fw subsumption resolutions: 819
% Fw demodulations: 308
% Bw demodulations: 21
% Condensations: 1641
% Global subsumptions: 5
% 
% Simple tautologies: 198
% Equational tautologies: 68
% Forward subsumptions: 3075
% 
% Binary resolution: 215
% Factoring: 3
% Forward superposition: 2066
% Backward superposition: 2212
% Self superposition: 203
% Equality factoring: 166
% Equality resolution: 18
% 
% Split clauses: 58
% Split components: 119
% SAT solver clauses: 589
% SAT solver unit clauses: 80
% SAT solver binary clauses: 38
% SAT solver learnt clauses: 10
% 
% Sat splits: 58
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 569
% TWLsolver calls for satisfiability: 229
% 
% Memory used [KB]: 7036
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f37325,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f37307])).
fof(f37307,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0')))),
  inference(superposition,[],[f135,f3645])).
fof(f3645,plain,(
  ( ! [X10,X11,X9] : (s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X11),s('type.list.list'(X9),'const.list.NIL_0'))) = s('type.list.list'(X9),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X11),s('type.list.list'(X9),X10)))))) )),
  inference(forward_demodulation,[],[f3644,f952])).
fof(f952,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),X1)))) )),
  inference(superposition,[],[f180,f169])).
fof(f169,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f62])).
fof(f62,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X13] : ! [X7] : s('type.list.list'(X13),X7) = s('type.list.list'(X13),'const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X7)))),
  file('thm.rich_list.BUTLASTN_LENGTH_CONS','thm.rich_list.APPEND_NIL|split|1')).
fof(f180,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))))),
  inference(flattening,[],[f77])).
fof(f77,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X10,X11] : s('type.list.list'(X6),X11) = s('type.list.list'(X6),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X10))),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X11),s('type.list.list'(X6),X10)))))),
  file('thm.rich_list.BUTLASTN_LENGTH_CONS','thm.rich_list.BUTLASTN_LENGTH_APPEND')).
fof(f3644,plain,(
  ( ! [X10,X11,X9] : (s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X11),s('type.list.list'(X9),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))),s('type.list.list'(X9),X10))))) = s('type.list.list'(X9),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X11),s('type.list.list'(X9),X10)))))) )),
  inference(subsumption_resolution,[],[f3606,f136])).
fof(f136,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rich_list.BUTLASTN_LENGTH_CONS',aHL_TRUTH)).
fof(f3606,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'T_0')) | s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X11),s('type.list.list'(X9),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))),s('type.list.list'(X9),X10))))) = s('type.list.list'(X9),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X11),s('type.list.list'(X9),X10)))))) )),
  inference(superposition,[],[f181,f204])).
fof(f204,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f138,f145])).
fof(f145,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f114])).
fof(f114,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.rich_list.BUTLASTN_LENGTH_CONS','thm.bool.EQ_CLAUSES|split|1')).
fof(f138,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X14] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num',X14))))),
  file('thm.rich_list.BUTLASTN_LENGTH_CONS','thm.arithmetic.LESS_EQ_REFL')).
fof(f181,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ! [X3] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))))))),
  inference(ennf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => ! [X3] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))))))),
  inference(flattening,[],[f79])).
fof(f79,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => ! [X3] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X9,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) => ! [X8] : s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),'const.rich_list.BUTLASTN_2'(s('type.num.num',X9),s('type.list.list'(X6),X7))))) = s('type.list.list'(X6),'const.rich_list.BUTLASTN_2'(s('type.num.num',X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X7))))))),
  file('thm.rich_list.BUTLASTN_LENGTH_CONS','thm.rich_list.BUTLASTN_CONS')).
fof(f135,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1)))))),
  inference(cnf_transformation,[],[f111])).
fof(f111,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f95])).
fof(f95,plain,(
  ? [X0,X1,X2] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1,X2] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),'const.list.NIL_0'))) = s('type.list.list'(X6),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),'const.list.NIL_0'))) = s('type.list.list'(X6),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X7)))))),
  file('thm.rich_list.BUTLASTN_LENGTH_CONS','thm.rich_list.BUTLASTN_LENGTH_CONS')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 233
% Passive clauses: 2076
% Generated clauses: 38603
% Final active clauses: 133
% Final passive clauses: 422
% Input formulas: 37
% Initial clauses: 59
% 
% Duplicate literals: 1752
% Trivial inequalities: 397
% Fw subsumption resolutions: 3326
% Fw demodulations: 5208
% Bw demodulations: 1285
% Condensations: 3113
% Global subsumptions: 316
% 
% Simple tautologies: 484
% Equational tautologies: 499
% Forward subsumptions: 20840
% Fw demodulations to eq. taut.: 71
% Bw demodulations to eq. taut.: 51
% 
% Unit resulting resolution: 3240
% Factoring: 1
% Forward superposition: 11164
% Backward superposition: 6394
% Self superposition: 259
% Equality factoring: 142
% Equality resolution: 32
% 
% Split clauses: 133
% Split components: 286
% SAT solver clauses: 3075
% SAT solver unit clauses: 143
% SAT solver binary clauses: 680
% 
% Sat splits: 133
% Sat splitting refutations: 415
% 
% Memory used [KB]: 17014
% Time elapsed: 1.623 s
% ------------------------------
% ------------------------------
% Success in time 2.95 s
