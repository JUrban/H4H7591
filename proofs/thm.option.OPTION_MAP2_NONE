Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.option
% (91546)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 118
% Passive clauses: 2242
% Generated clauses: 17535
% Final active clauses: 105
% Final passive clauses: 1893
% Input formulas: 28
% Initial clauses: 52
% 
% Duplicate literals: 778
% Trivial inequalities: 298
% Fw subsumption resolutions: 2602
% Fw demodulations: 1569
% Bw demodulations: 11
% 
% Simple tautologies: 353
% Equational tautologies: 60
% Forward subsumptions: 8521
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 277
% Factoring: 3
% Forward superposition: 5136
% Backward superposition: 6247
% Self superposition: 247
% Equality factoring: 165
% Equality resolution: 20
% 
% Split clauses: 909
% Split components: 1890
% SAT solver clauses: 1289
% SAT solver unit clauses: 42
% SAT solver binary clauses: 259
% 
% Sat splits: 909
% 
% TWLsolver clauses: 1277
% TWLsolver calls for satisfiability: 123
% 
% Memory used [KB]: 12665
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.option
% (91568)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 89
% Passive clauses: 569
% Generated clauses: 9529
% Final active clauses: 80
% Final passive clauses: 469
% Input formulas: 28
% Initial clauses: 52
% 
% Duplicate literals: 762
% Trivial inequalities: 98
% Fw subsumption resolutions: 811
% Fw demodulations: 241
% Bw demodulations: 16
% Condensations: 1450
% Global subsumptions: 9
% 
% Simple tautologies: 196
% Equational tautologies: 46
% Forward subsumptions: 4500
% 
% Binary resolution: 179
% Factoring: 2
% Forward superposition: 3177
% Backward superposition: 3003
% Self superposition: 237
% Equality factoring: 108
% Equality resolution: 12
% 
% Split clauses: 63
% Split components: 142
% SAT solver clauses: 960
% SAT solver unit clauses: 67
% SAT solver binary clauses: 51
% SAT solver learnt clauses: 18
% 
% Sat splits: 63
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 924
% TWLsolver calls for satisfiability: 233
% 
% Memory used [KB]: 11001
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.option
% SZS output start Proof for thm.option
fof(f1953,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f99,f154,f98,f156,f152,f97,f153,f155,f151,f596,f597,f635,f598,f599,f639,f638,f601,f602,f642,f641,f604,f637,f643,f651,f653,f652,f1227,f1229,f1234,f1236,f1238,f1241,f1245,f1306,f1307,f1311,f1316,f1318,f1204,f1320,f1203,f1321,f1202,f1322,f1201,f1323,f1200,f1324,f1319,f1388,f1389,f1393,f1398,f1446,f1932,f1933,f1940,f1937,f1934,f1935,f1943,f1936,f1945,f1938,f1942,f1952,f1946])).
fof(f1946,plain,(
  $false | ($spl0 | $spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f151,f1918])).
fof(f1918,plain,(
  ( ! [X26,X25] : (s('type.option.option'(X25),'const.option.NONE_0') != s('type.option.option'(X25),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,X25)),X26),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),sK3)))) ) | ($spl3 | $spl5)),
  inference(superposition,[],[f1742,f1400])).
fof(f1400,plain,(
  s('type.option.option'(sK2),sK3) = s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,sK6(sK3,sK2)))) | $spl3),
  inference(unit_resulting_resolution,[],[f154,f134])).
fof(f134,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK6(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK6(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6])],[f50])).
fof(f50,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0] : ! [X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X7] : ! [X17] : (s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),X17) | ? [X15] : s('type.option.option'(X7),X17) = s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X15))))),
  file('thm.option.OPTION_MAP2_NONE','thm.option.option_nchotomy')).
fof(f1742,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.option.option'(X41),'const.option.NONE_0') != s('type.option.option'(X41),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(X42,X41)),X43),s('type.option.option'(sK1),sK4),s('type.option.option'(X42),'const.option.SOME_1'(s(X42,X44)))))) ) | $spl5),
  inference(superposition,[],[f758,f1448])).
fof(f1448,plain,(
  s('type.option.option'(sK1),sK4) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK6(sK4,sK1)))) | $spl5),
  inference(unit_resulting_resolution,[],[f156,f134])).
fof(f758,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (s('type.option.option'(X18),'const.option.NONE_0') != s('type.option.option'(X18),'const.option.OPTION_MAP2_3'(s(fun(X20,fun(X19,X18)),X21),s('type.option.option'(X20),'const.option.SOME_1'(s(X20,X22))),s('type.option.option'(X19),'const.option.SOME_1'(s(X19,X23)))))) )),
  inference(superposition,[],[f137,f148])).
fof(f148,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X5),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X4))),s('type.option.option'(X2),'const.option.SOME_1'(s(X2,X3))))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X5),s(X1,X4))),s(X2,X3)))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X5),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X4))),s('type.option.option'(X2),'const.option.SOME_1'(s(X2,X3))))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X5),s(X1,X4))),s(X2,X3)))))),
  inference(flattening,[],[f66])).
fof(f66,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X5),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X4))),s('type.option.option'(X2),'const.option.SOME_1'(s(X2,X3))))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X5),s(X1,X4))),s(X2,X3)))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X7,X8,X6] : ! [X16,X15,X11] : s('type.option.option'(X7),'const.option.OPTION_MAP2_3'(s(fun(X8,fun(X6,X7)),X11),s('type.option.option'(X8),'const.option.SOME_1'(s(X8,X15))),s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X16))))) = s('type.option.option'(X7),'const.option.SOME_1'(s(X7,happ(s(fun(X6,X7),happ(s(fun(X8,fun(X6,X7)),X11),s(X8,X15))),s(X6,X16)))))),
  file('thm.option.OPTION_MAP2_NONE','thm.option.OPTION_MAP2_THM|split|0')).
fof(f137,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1] : s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(flattening,[],[f53])).
fof(f53,plain,(
  ! [X0] : ! [X1] : ~s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X7] : ! [X15] : ~s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X15)))),
  file('thm.option.OPTION_MAP2_NONE','thm.option.NOT_NONE_SOME')).
fof(f1952,plain,(
  $false | ($spl0 | $spl3 | $spl5)),
  inference(trivial_inequality_removal,[],[f1950])).
fof(f1950,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.NONE_0') | ($spl0 | $spl3 | $spl5)),
  inference(superposition,[],[f1918,f151])).
fof(f1942,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | $spl42),
  inference(cnf_transformation,[],[f1942_D])).
fof(f1942_D,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f1938,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK7(X0,X1,bool,bool))) ) | $spl38),
  inference(cnf_transformation,[],[f1938_D])).
fof(f1938_D,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK7(X0,X1,bool,bool))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f1945,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | $spl47),
  inference(cnf_transformation,[],[f1945_D])).
fof(f1945_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f1936,plain,(
  ( ! [X12,X13] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X12) = s(fun(bool,bool),X13) | s(bool,'T_0') = s(bool,sK7(X12,X13,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f590,f107])).
fof(f107,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.option.OPTION_MAP2_NONE',aHL_BOOL_CASES)).
fof(f590,plain,(
  ( ! [X17,X18,X16] : (s(X18,f(s(bool,'F_0'))) != s(X18,g(s(bool,'F_0'))) | s(fun(bool,X18),X16) = s(fun(bool,X18),X17) | s(bool,'T_0') = s(bool,sK7(X16,X17,X18,bool))) )),
  inference(superposition,[],[f144,f107])).
fof(f144,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK7(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK7(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK7(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK7(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7])],[f72])).
fof(f72,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f58])).
fof(f58,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.option.OPTION_MAP2_NONE',aHL_EXT)).
fof(f1943,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) | $spl44),
  inference(cnf_transformation,[],[f1943_D])).
fof(f1943_D,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f1935,plain,(
  ( ! [X10,X11,X9] : (s(bool,X9) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X10) = s(fun(bool,bool),X11) | s(bool,'T_0') = s(bool,sK7(X10,X11,bool,bool)) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f590,f169])).
fof(f169,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f107,f107])).
fof(f1934,plain,(
  ( ! [X6,X8,X7] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X7) = s(fun(bool,bool),X8) | s(bool,'T_0') = s(bool,sK7(X7,X8,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f590,f169])).
fof(f1937,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) | $spl36),
  inference(cnf_transformation,[],[f1937_D])).
fof(f1937_D,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f1940,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | $spl41),
  inference(cnf_transformation,[],[f1940_D])).
fof(f1940_D,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl41),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl41])])).
fof(f1933,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,sK7(X3,X4,bool,bool)) | s(bool,X5) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f590,f169])).
fof(f1932,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK7(X0,X1,bool,bool)) | s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f590,f169])).
fof(f1446,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f1445,f137])).
fof(f1445,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK6('const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),sK3)),sK0)))) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f1433,f1404])).
fof(f1404,plain,(
  s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),sK3))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK6('const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),sK3)),sK0)))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f1327,f134])).
fof(f1327,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),sK3))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f155,f152])).
fof(f1433,plain,(
  ( ! [X10,X11,X9] : (s('type.option.option'(X9),'const.option.NONE_0') = s('type.option.option'(X9),'const.option.OPTION_MAP2_3'(s(fun(X10,fun(sK2,X9)),X11),s('type.option.option'(X10),'const.option.NONE_0'),s('type.option.option'(sK2),sK3)))) ) | $spl3),
  inference(superposition,[],[f147,f1400])).
fof(f147,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X4),s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X4),s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))),
  inference(flattening,[],[f64])).
fof(f64,plain,(
  ! [X0,X1,X2] : ! [X3,X4] : s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X4),s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X8,X6,X7] : ! [X16,X11] : s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),'const.option.OPTION_MAP2_3'(s(fun(X8,fun(X6,X7)),X11),s('type.option.option'(X8),'const.option.NONE_0'),s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X16)))))),
  file('thm.option.OPTION_MAP2_NONE','thm.option.OPTION_MAP2_THM|split|2')).
fof(f1398,plain,(
  $false | ($spl1 | $spl4 | $spl24)),
  inference(subsumption_resolution,[],[f1380,f145])).
fof(f145,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X3),s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X1),'const.option.NONE_0')))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1,X2,X3] : s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X3),s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X1),'const.option.NONE_0')))),
  inference(flattening,[],[f60])).
fof(f60,plain,(
  ! [X0,X1,X2] : ! [X3] : s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X3),s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X1),'const.option.NONE_0')))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X8,X6,X7] : ! [X11] : s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),'const.option.OPTION_MAP2_3'(s(fun(X8,fun(X6,X7)),X11),s('type.option.option'(X8),'const.option.NONE_0'),s('type.option.option'(X6),'const.option.NONE_0')))),
  file('thm.option.OPTION_MAP2_NONE','thm.option.OPTION_MAP2_THM|split|3')).
fof(f1380,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0'))) | ($spl1 | $spl4 | $spl24)),
  inference(backward_demodulation,[],[f1319,f1327])).
fof(f1393,plain,(
  $false | $spl24),
  inference(subsumption_resolution,[],[f1349,f1319])).
fof(f1349,plain,(
  ( ! [X23,X21,X19,X20,X18] : (s('type.option.option'(X18),'const.option.NONE_0') != s('type.option.option'(X18),'const.option.OPTION_MAP2_3'(s(fun(X20,fun(X19,X18)),X21),s('type.option.option'(X20),'const.option.NONE_0'),s('type.option.option'(X19),'const.option.SOME_1'(s(X19,X23)))))) ) | $spl24),
  inference(backward_demodulation,[],[f1319,f758])).
fof(f1389,plain,(
  $false | $spl24),
  inference(subsumption_resolution,[],[f1337,f1319])).
fof(f1337,plain,(
  ( ! [X24,X23,X21,X15,X22] : (s('type.option.option'(X21),'const.option.NONE_0') != s('type.option.option'(X21),'const.option.OPTION_MAP2_3'(s(fun(X22,fun(X15,X21)),X23),s('type.option.option'(X22),'const.option.SOME_1'(s(X22,X24))),s('type.option.option'(X15),'const.option.NONE_0')))) ) | $spl24),
  inference(backward_demodulation,[],[f1319,f1075])).
fof(f1075,plain,(
  ( ! [X24,X23,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.option.option'(X21),'const.option.NONE_0') != s('type.option.option'(X21),'const.option.OPTION_MAP2_3'(s(fun(X22,fun(X15,X21)),X23),s('type.option.option'(X22),'const.option.SOME_1'(s(X22,X24))),s('type.option.option'(X15),'const.option.OPTION_MAP2_3'(s(fun(X17,fun(X16,X15)),X18),s('type.option.option'(X17),'const.option.SOME_1'(s(X17,X19))),s('type.option.option'(X16),'const.option.SOME_1'(s(X16,X20)))))))) )),
  inference(superposition,[],[f758,f148])).
fof(f1388,plain,(
  $false | $spl24),
  inference(subsumption_resolution,[],[f1336,f1319])).
fof(f1336,plain,(
  ( ! [X24,X23,X21,X15,X22] : (s('type.option.option'(X21),'const.option.NONE_0') != s('type.option.option'(X21),'const.option.OPTION_MAP2_3'(s(fun(X15,fun(X22,X21)),X23),s('type.option.option'(X15),'const.option.NONE_0'),s('type.option.option'(X22),'const.option.SOME_1'(s(X22,X24)))))) ) | $spl24),
  inference(backward_demodulation,[],[f1319,f1042])).
fof(f1042,plain,(
  ( ! [X24,X23,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.option.option'(X21),'const.option.NONE_0') != s('type.option.option'(X21),'const.option.OPTION_MAP2_3'(s(fun(X15,fun(X22,X21)),X23),s('type.option.option'(X15),'const.option.OPTION_MAP2_3'(s(fun(X17,fun(X16,X15)),X18),s('type.option.option'(X17),'const.option.SOME_1'(s(X17,X19))),s('type.option.option'(X16),'const.option.SOME_1'(s(X16,X20))))),s('type.option.option'(X22),'const.option.SOME_1'(s(X22,X24)))))) )),
  inference(superposition,[],[f758,f148])).
fof(f1319,plain,(
  ( ! [X87,X84] : (s('type.option.option'(X84),'const.option.NONE_0') = s('type.option.option'(X84),X87)) ) | $spl24),
  inference(cnf_transformation,[],[f1319_D])).
fof(f1319_D,plain,(
  ( ! [X87,X84] : (s('type.option.option'(X84),'const.option.NONE_0') = s('type.option.option'(X84),X87)) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f1324,plain,(
  ( ! [X59,X57,X58,X56,X51] : (s('type.option.option'(X56),'const.option.SOME_1'(s(X56,happ(s(fun(X57,X56),happ(s(fun('type.option.option'(X51),fun(X57,X56)),X58),s('type.option.option'(X51),'const.option.NONE_0'))),s(X57,X59))))) = s('type.option.option'(X56),'const.option.OPTION_MAP2_3'(s(fun('type.option.option'(X51),fun(X57,X56)),X58),s('type.option.option'('type.option.option'(X51)),'const.option.SOME_1'(s('type.option.option'(X51),'const.option.NONE_0'))),s('type.option.option'(X57),'const.option.SOME_1'(s(X57,X59)))))) ) | $spl34),
  inference(cnf_transformation,[],[f1324_D])).
fof(f1324_D,plain,(
  ( ! [X59,X57,X58,X56,X51] : (s('type.option.option'(X56),'const.option.SOME_1'(s(X56,happ(s(fun(X57,X56),happ(s(fun('type.option.option'(X51),fun(X57,X56)),X58),s('type.option.option'(X51),'const.option.NONE_0'))),s(X57,X59))))) = s('type.option.option'(X56),'const.option.OPTION_MAP2_3'(s(fun('type.option.option'(X51),fun(X57,X56)),X58),s('type.option.option'('type.option.option'(X51)),'const.option.SOME_1'(s('type.option.option'(X51),'const.option.NONE_0'))),s('type.option.option'(X57),'const.option.SOME_1'(s(X57,X59)))))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f1200,plain,(
  ( ! [X59,X57,X52,X58,X56,X55,X51] : (s('type.option.option'(X56),'const.option.SOME_1'(s(X56,happ(s(fun(X57,X56),happ(s(fun('type.option.option'(X51),fun(X57,X56)),X58),s('type.option.option'(X51),'const.option.NONE_0'))),s(X57,X59))))) = s('type.option.option'(X56),'const.option.OPTION_MAP2_3'(s(fun('type.option.option'(X51),fun(X57,X56)),X58),s('type.option.option'('type.option.option'(X51)),'const.option.SOME_1'(s('type.option.option'(X51),'const.option.NONE_0'))),s('type.option.option'(X57),'const.option.SOME_1'(s(X57,X59))))) | s('type.option.option'(X52),'const.option.NONE_0') = s('type.option.option'(X52),X55)) )),
  inference(superposition,[],[f148,f513])).
fof(f513,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X3,X2)),X4),s('type.option.option'(X0),X1),s('type.option.option'(X3),'const.option.NONE_0'))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(superposition,[],[f146,f134])).
fof(f146,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X4),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X3))),s('type.option.option'(X1),'const.option.NONE_0')))) )),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X4),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X3))),s('type.option.option'(X1),'const.option.NONE_0')))),
  inference(flattening,[],[f62])).
fof(f62,plain,(
  ! [X0,X1,X2] : ! [X3,X4] : s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X4),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X3))),s('type.option.option'(X1),'const.option.NONE_0')))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X8,X6,X7] : ! [X15,X11] : s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),'const.option.OPTION_MAP2_3'(s(fun(X8,fun(X6,X7)),X11),s('type.option.option'(X8),'const.option.SOME_1'(s(X8,X15))),s('type.option.option'(X6),'const.option.NONE_0')))),
  file('thm.option.OPTION_MAP2_NONE','thm.option.OPTION_MAP2_THM|split|1')).
fof(f1323,plain,(
  ( ! [X68,X66,X60,X67,X65] : (s('type.option.option'(X65),'const.option.OPTION_MAP2_3'(s(fun(X66,fun('type.option.option'(X60),X65)),X67),s('type.option.option'(X66),'const.option.SOME_1'(s(X66,X68))),s('type.option.option'('type.option.option'(X60)),'const.option.SOME_1'(s('type.option.option'(X60),'const.option.NONE_0'))))) = s('type.option.option'(X65),'const.option.SOME_1'(s(X65,happ(s(fun('type.option.option'(X60),X65),happ(s(fun(X66,fun('type.option.option'(X60),X65)),X67),s(X66,X68))),s('type.option.option'(X60),'const.option.NONE_0')))))) ) | $spl32),
  inference(cnf_transformation,[],[f1323_D])).
fof(f1323_D,plain,(
  ( ! [X68,X66,X60,X67,X65] : (s('type.option.option'(X65),'const.option.OPTION_MAP2_3'(s(fun(X66,fun('type.option.option'(X60),X65)),X67),s('type.option.option'(X66),'const.option.SOME_1'(s(X66,X68))),s('type.option.option'('type.option.option'(X60)),'const.option.SOME_1'(s('type.option.option'(X60),'const.option.NONE_0'))))) = s('type.option.option'(X65),'const.option.SOME_1'(s(X65,happ(s(fun('type.option.option'(X60),X65),happ(s(fun(X66,fun('type.option.option'(X60),X65)),X67),s(X66,X68))),s('type.option.option'(X60),'const.option.NONE_0')))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f1201,plain,(
  ( ! [X61,X68,X66,X64,X60,X67,X65] : (s('type.option.option'(X65),'const.option.OPTION_MAP2_3'(s(fun(X66,fun('type.option.option'(X60),X65)),X67),s('type.option.option'(X66),'const.option.SOME_1'(s(X66,X68))),s('type.option.option'('type.option.option'(X60)),'const.option.SOME_1'(s('type.option.option'(X60),'const.option.NONE_0'))))) = s('type.option.option'(X65),'const.option.SOME_1'(s(X65,happ(s(fun('type.option.option'(X60),X65),happ(s(fun(X66,fun('type.option.option'(X60),X65)),X67),s(X66,X68))),s('type.option.option'(X60),'const.option.NONE_0'))))) | s('type.option.option'(X61),'const.option.NONE_0') = s('type.option.option'(X61),X64)) )),
  inference(superposition,[],[f148,f513])).
fof(f1322,plain,(
  ( ! [X69] : (s('type.option.option'('type.option.option'(X69)),'const.option.SOME_1'(s('type.option.option'(X69),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(X69)),'const.option.SOME_1'(s('type.option.option'(X69),sK6('const.option.SOME_1'(s('type.option.option'(X69),'const.option.NONE_0')),'type.option.option'(X69)))))) ) | $spl30),
  inference(cnf_transformation,[],[f1322_D])).
fof(f1322_D,plain,(
  ( ! [X69] : (s('type.option.option'('type.option.option'(X69)),'const.option.SOME_1'(s('type.option.option'(X69),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(X69)),'const.option.SOME_1'(s('type.option.option'(X69),sK6('const.option.SOME_1'(s('type.option.option'(X69),'const.option.NONE_0')),'type.option.option'(X69)))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f1202,plain,(
  ( ! [X70,X69,X73] : (s('type.option.option'('type.option.option'(X69)),'const.option.SOME_1'(s('type.option.option'(X69),'const.option.NONE_0'))) = s('type.option.option'('type.option.option'(X69)),'const.option.SOME_1'(s('type.option.option'(X69),sK6('const.option.SOME_1'(s('type.option.option'(X69),'const.option.NONE_0')),'type.option.option'(X69))))) | s('type.option.option'(X70),'const.option.NONE_0') = s('type.option.option'(X70),X73)) )),
  inference(superposition,[],[f209,f513])).
fof(f209,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK6('const.option.SOME_1'(s(X0,X1)),X0))))) )),
  inference(unit_resulting_resolution,[],[f137,f134])).
fof(f1321,plain,(
  ( ! [X80,X74,X81,X79,X82] : (s('type.option.option'(X79),'const.option.NONE_0') != s('type.option.option'(X79),'const.option.OPTION_MAP2_3'(s(fun('type.option.option'(X74),fun(X80,X79)),X81),s('type.option.option'('type.option.option'(X74)),'const.option.SOME_1'(s('type.option.option'(X74),'const.option.NONE_0'))),s('type.option.option'(X80),'const.option.SOME_1'(s(X80,X82)))))) ) | $spl28),
  inference(cnf_transformation,[],[f1321_D])).
fof(f1321_D,plain,(
  ( ! [X80,X74,X81,X79,X82] : (s('type.option.option'(X79),'const.option.NONE_0') != s('type.option.option'(X79),'const.option.OPTION_MAP2_3'(s(fun('type.option.option'(X74),fun(X80,X79)),X81),s('type.option.option'('type.option.option'(X74)),'const.option.SOME_1'(s('type.option.option'(X74),'const.option.NONE_0'))),s('type.option.option'(X80),'const.option.SOME_1'(s(X80,X82)))))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f1203,plain,(
  ( ! [X80,X78,X74,X81,X79,X75,X82] : (s('type.option.option'(X79),'const.option.NONE_0') != s('type.option.option'(X79),'const.option.OPTION_MAP2_3'(s(fun('type.option.option'(X74),fun(X80,X79)),X81),s('type.option.option'('type.option.option'(X74)),'const.option.SOME_1'(s('type.option.option'(X74),'const.option.NONE_0'))),s('type.option.option'(X80),'const.option.SOME_1'(s(X80,X82))))) | s('type.option.option'(X75),'const.option.NONE_0') = s('type.option.option'(X75),X78)) )),
  inference(superposition,[],[f758,f513])).
fof(f1320,plain,(
  ( ! [X90,X88,X83,X91,X89] : (s('type.option.option'(X88),'const.option.NONE_0') != s('type.option.option'(X88),'const.option.OPTION_MAP2_3'(s(fun(X89,fun('type.option.option'(X83),X88)),X90),s('type.option.option'(X89),'const.option.SOME_1'(s(X89,X91))),s('type.option.option'('type.option.option'(X83)),'const.option.SOME_1'(s('type.option.option'(X83),'const.option.NONE_0')))))) ) | $spl26),
  inference(cnf_transformation,[],[f1320_D])).
fof(f1320_D,plain,(
  ( ! [X90,X88,X83,X91,X89] : (s('type.option.option'(X88),'const.option.NONE_0') != s('type.option.option'(X88),'const.option.OPTION_MAP2_3'(s(fun(X89,fun('type.option.option'(X83),X88)),X90),s('type.option.option'(X89),'const.option.SOME_1'(s(X89,X91))),s('type.option.option'('type.option.option'(X83)),'const.option.SOME_1'(s('type.option.option'(X83),'const.option.NONE_0')))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f1204,plain,(
  ( ! [X90,X88,X87,X83,X91,X89,X84] : (s('type.option.option'(X88),'const.option.NONE_0') != s('type.option.option'(X88),'const.option.OPTION_MAP2_3'(s(fun(X89,fun('type.option.option'(X83),X88)),X90),s('type.option.option'(X89),'const.option.SOME_1'(s(X89,X91))),s('type.option.option'('type.option.option'(X83)),'const.option.SOME_1'(s('type.option.option'(X83),'const.option.NONE_0'))))) | s('type.option.option'(X84),'const.option.NONE_0') = s('type.option.option'(X84),X87)) )),
  inference(superposition,[],[f758,f513])).
fof(f1318,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f1225,f1247])).
fof(f1247,plain,(
  ( ! [X17,X18] : (s('type.option.option'(X17),'const.option.NONE_0') = s('type.option.option'(X17),X18)) ) | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f1246,f545])).
fof(f545,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X3,fun(X0,X2)),X4),s('type.option.option'(X3),'const.option.NONE_0'),s('type.option.option'(X0),X1))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(superposition,[],[f147,f134])).
fof(f1246,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.option.option'(X19),'const.option.NONE_0') != s('type.option.option'(X19),'const.option.OPTION_MAP2_3'(s(fun(sK0,fun(X17,X19)),X20),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.option.option'(X17),X18))) | s('type.option.option'(X17),'const.option.NONE_0') = s('type.option.option'(X17),X18)) ) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f1221,f145])).
fof(f1221,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.option.option'(X19),'const.option.NONE_0') != s('type.option.option'(X19),'const.option.OPTION_MAP2_3'(s(fun(sK0,fun(X17,X19)),X20),s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0'))),s('type.option.option'(X17),X18))) | s('type.option.option'(X17),'const.option.NONE_0') = s('type.option.option'(X17),X18)) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f1173,f1120])).
fof(f1120,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.option.option'(X19),'const.option.NONE_0') != s('type.option.option'(X19),'const.option.OPTION_MAP2_3'(s(fun(sK0,fun(X17,X19)),X20),s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),'const.option.NONE_0'))),s('type.option.option'(X17),X18))) | s('type.option.option'(X17),'const.option.NONE_0') = s('type.option.option'(X17),X18)) ) | ($spl1 | $spl2)),
  inference(superposition,[],[f1045,f134])).
fof(f1045,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.option.option'(X37),'const.option.NONE_0') != s('type.option.option'(X37),'const.option.OPTION_MAP2_3'(s(fun(sK0,fun(X38,X37)),X39),s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),'const.option.NONE_0'))),s('type.option.option'(X38),'const.option.SOME_1'(s(X38,X40)))))) ) | ($spl1 | $spl2)),
  inference(superposition,[],[f758,f208])).
fof(f208,plain,(
  s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),'const.option.NONE_0'))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK6('const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),'const.option.NONE_0')),sK0)))) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f158,f134])).
fof(f158,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),'const.option.NONE_0'))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f152,f153])).
fof(f1173,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK4) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f158,f513])).
fof(f1225,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9,X16] : (s('type.option.option'(X15),'const.option.NONE_0') != s('type.option.option'(X15),'const.option.OPTION_MAP2_3'(s(fun(X9,fun(sK0,X15)),X16),s('type.option.option'(X9),'const.option.OPTION_MAP2_3'(s(fun(X11,fun(X10,X9)),X12),s('type.option.option'(X11),'const.option.SOME_1'(s(X11,X13))),s('type.option.option'(X10),'const.option.SOME_1'(s(X10,X14))))),s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0')))))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f1173,f1158])).
fof(f1158,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9,X16] : (s('type.option.option'(X15),'const.option.NONE_0') != s('type.option.option'(X15),'const.option.OPTION_MAP2_3'(s(fun(X9,fun(sK0,X15)),X16),s('type.option.option'(X9),'const.option.OPTION_MAP2_3'(s(fun(X11,fun(X10,X9)),X12),s('type.option.option'(X11),'const.option.SOME_1'(s(X11,X13))),s('type.option.option'(X10),'const.option.SOME_1'(s(X10,X14))))),s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),'const.option.NONE_0')))))) ) | ($spl1 | $spl2)),
  inference(superposition,[],[f1078,f148])).
fof(f1078,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.option.option'(X37),'const.option.NONE_0') != s('type.option.option'(X37),'const.option.OPTION_MAP2_3'(s(fun(X38,fun(sK0,X37)),X39),s('type.option.option'(X38),'const.option.SOME_1'(s(X38,X40))),s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),'const.option.NONE_0')))))) ) | ($spl1 | $spl2)),
  inference(superposition,[],[f758,f208])).
fof(f1316,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f1222,f1247])).
fof(f1222,plain,(
  ( ! [X26,X25] : (s('type.option.option'(X25),'const.option.NONE_0') != s('type.option.option'(X25),'const.option.OPTION_MAP2_3'(s(fun(sK0,fun(sK0,X25)),X26),s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0'))),s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0')))))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f1173,f1122])).
fof(f1122,plain,(
  ( ! [X26,X25] : (s('type.option.option'(X25),'const.option.NONE_0') != s('type.option.option'(X25),'const.option.OPTION_MAP2_3'(s(fun(sK0,fun(sK0,X25)),X26),s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),'const.option.NONE_0'))),s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),'const.option.NONE_0')))))) ) | ($spl1 | $spl2)),
  inference(superposition,[],[f1045,f208])).
fof(f1311,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f1270,f1247])).
fof(f1270,plain,(
  ( ! [X23,X21,X19,X20,X18] : (s('type.option.option'(X18),'const.option.NONE_0') != s('type.option.option'(X18),'const.option.OPTION_MAP2_3'(s(fun(X20,fun(X19,X18)),X21),s('type.option.option'(X20),'const.option.NONE_0'),s('type.option.option'(X19),'const.option.SOME_1'(s(X19,X23)))))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f1247,f758])).
fof(f1307,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f1259,f1247])).
fof(f1259,plain,(
  ( ! [X24,X23,X21,X15,X22] : (s('type.option.option'(X21),'const.option.NONE_0') != s('type.option.option'(X21),'const.option.OPTION_MAP2_3'(s(fun(X22,fun(X15,X21)),X23),s('type.option.option'(X22),'const.option.SOME_1'(s(X22,X24))),s('type.option.option'(X15),'const.option.NONE_0')))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f1247,f1075])).
fof(f1306,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f1258,f1247])).
fof(f1258,plain,(
  ( ! [X24,X23,X21,X15,X22] : (s('type.option.option'(X21),'const.option.NONE_0') != s('type.option.option'(X21),'const.option.OPTION_MAP2_3'(s(fun(X15,fun(X22,X21)),X23),s('type.option.option'(X15),'const.option.NONE_0'),s('type.option.option'(X22),'const.option.SOME_1'(s(X22,X24)))))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f1247,f1042])).
fof(f1245,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f1244,f756])).
fof(f756,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.OPTION_MAP2_3'(s(fun(X7,fun(X0,X6)),X8),s('type.option.option'(X7),'const.option.NONE_0'),s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X2,fun(X1,X0)),X3),s('type.option.option'(X2),'const.option.SOME_1'(s(X2,X4))),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X5)))))))) )),
  inference(superposition,[],[f147,f148])).
fof(f1244,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9,X16] : (s('type.option.option'(X15),'const.option.NONE_0') != s('type.option.option'(X15),'const.option.OPTION_MAP2_3'(s(fun(sK0,fun(X9,X15)),X16),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.option.option'(X9),'const.option.OPTION_MAP2_3'(s(fun(X11,fun(X10,X9)),X12),s('type.option.option'(X11),'const.option.SOME_1'(s(X11,X13))),s('type.option.option'(X10),'const.option.SOME_1'(s(X10,X14)))))))) ) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f1220,f145])).
fof(f1220,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9,X16] : (s('type.option.option'(X15),'const.option.NONE_0') != s('type.option.option'(X15),'const.option.OPTION_MAP2_3'(s(fun(sK0,fun(X9,X15)),X16),s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0'))),s('type.option.option'(X9),'const.option.OPTION_MAP2_3'(s(fun(X11,fun(X10,X9)),X12),s('type.option.option'(X11),'const.option.SOME_1'(s(X11,X13))),s('type.option.option'(X10),'const.option.SOME_1'(s(X10,X14)))))))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f1173,f1119])).
fof(f1119,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9,X16] : (s('type.option.option'(X15),'const.option.NONE_0') != s('type.option.option'(X15),'const.option.OPTION_MAP2_3'(s(fun(sK0,fun(X9,X15)),X16),s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),'const.option.NONE_0'))),s('type.option.option'(X9),'const.option.OPTION_MAP2_3'(s(fun(X11,fun(X10,X9)),X12),s('type.option.option'(X11),'const.option.SOME_1'(s(X11,X13))),s('type.option.option'(X10),'const.option.SOME_1'(s(X10,X14)))))))) ) | ($spl1 | $spl2)),
  inference(superposition,[],[f1045,f148])).
fof(f1241,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f1240,f137])).
fof(f1240,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK6('const.option.OPTION_MAP2_3'(s(fun(sK0,fun(X1,X0)),X2),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))),X0))))) ) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f1239,f147])).
fof(f1239,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(sK0,fun(X1,X0)),X2),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3))))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK6('const.option.OPTION_MAP2_3'(s(fun(sK0,fun(X1,X0)),X2),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))),X0))))) ) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f1218,f145])).
fof(f1218,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(sK0,fun(X1,X0)),X2),s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0'))),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3))))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK6('const.option.OPTION_MAP2_3'(s(fun(sK0,fun(X1,X0)),X2),s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0'))),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))),X0))))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f1173,f1090])).
fof(f1090,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(sK0,fun(X1,X0)),X2),s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),'const.option.NONE_0'))),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3))))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK6('const.option.OPTION_MAP2_3'(s(fun(sK0,fun(X1,X0)),X2),s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),'const.option.NONE_0'))),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))),X0))))) ) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f1045,f134])).
fof(f1238,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f1237,f146])).
fof(f1237,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.option.option'(X37),'const.option.NONE_0') != s('type.option.option'(X37),'const.option.OPTION_MAP2_3'(s(fun(X38,fun(sK0,X37)),X39),s('type.option.option'(X38),'const.option.SOME_1'(s(X38,X40))),s('type.option.option'(sK0),'const.option.NONE_0')))) ) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f1217,f145])).
fof(f1217,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.option.option'(X37),'const.option.NONE_0') != s('type.option.option'(X37),'const.option.OPTION_MAP2_3'(s(fun(X38,fun(sK0,X37)),X39),s('type.option.option'(X38),'const.option.SOME_1'(s(X38,X40))),s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0')))))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f1173,f1078])).
fof(f1236,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f1235,f147])).
fof(f1235,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.option.option'(X37),'const.option.NONE_0') != s('type.option.option'(X37),'const.option.OPTION_MAP2_3'(s(fun(sK0,fun(X38,X37)),X39),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.option.option'(X38),'const.option.SOME_1'(s(X38,X40)))))) ) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f1216,f145])).
fof(f1216,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.option.option'(X37),'const.option.NONE_0') != s('type.option.option'(X37),'const.option.OPTION_MAP2_3'(s(fun(sK0,fun(X38,X37)),X39),s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0'))),s('type.option.option'(X38),'const.option.SOME_1'(s(X38,X40)))))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f1173,f1045])).
fof(f1234,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f1233,f137])).
fof(f1233,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.option.option'(X12),'const.option.NONE_0') = s('type.option.option'(X12),'const.option.SOME_1'(s(X12,happ(s(fun(sK0,X12),happ(s(fun(X13,fun(sK0,X12)),X14),s(X13,X15))),s(sK0,sK6('const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0')),sK0))))))) ) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f1232,f146])).
fof(f1232,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.option.option'(X12),'const.option.OPTION_MAP2_3'(s(fun(X13,fun(sK0,X12)),X14),s('type.option.option'(X13),'const.option.SOME_1'(s(X13,X15))),s('type.option.option'(sK0),'const.option.NONE_0'))) = s('type.option.option'(X12),'const.option.SOME_1'(s(X12,happ(s(fun(sK0,X12),happ(s(fun(X13,fun(sK0,X12)),X14),s(X13,X15))),s(sK0,sK6('const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0')),sK0))))))) ) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f1215,f145])).
fof(f1215,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.option.option'(X12),'const.option.OPTION_MAP2_3'(s(fun(X13,fun(sK0,X12)),X14),s('type.option.option'(X13),'const.option.SOME_1'(s(X13,X15))),s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0'))))) = s('type.option.option'(X12),'const.option.SOME_1'(s(X12,happ(s(fun(sK0,X12),happ(s(fun(X13,fun(sK0,X12)),X14),s(X13,X15))),s(sK0,sK6('const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0')),sK0))))))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f1173,f705])).
fof(f705,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.option.option'(X12),'const.option.OPTION_MAP2_3'(s(fun(X13,fun(sK0,X12)),X14),s('type.option.option'(X13),'const.option.SOME_1'(s(X13,X15))),s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),'const.option.NONE_0'))))) = s('type.option.option'(X12),'const.option.SOME_1'(s(X12,happ(s(fun(sK0,X12),happ(s(fun(X13,fun(sK0,X12)),X14),s(X13,X15))),s(sK0,sK6('const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),'const.option.NONE_0')),sK0))))))) ) | ($spl1 | $spl2)),
  inference(superposition,[],[f148,f208])).
fof(f1229,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f1228,f137])).
fof(f1228,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK6('const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0')),sK0)))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f1212,f145])).
fof(f1212,plain,(
  s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0'))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK6('const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0')),sK0)))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f1173,f208])).
fof(f1227,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f1211,f145])).
fof(f1211,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0'))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f1173,f158])).
fof(f652,plain,(
  ( ! [X18] : (s(bool,'T_0') = s(bool,X18)) ) | $spl20),
  inference(cnf_transformation,[],[f652_D])).
fof(f652_D,plain,(
  ( ! [X18] : (s(bool,'T_0') = s(bool,X18)) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f653,plain,(
  ( ! [X17] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'T_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X17)))) ) | $spl22),
  inference(cnf_transformation,[],[f653_D])).
fof(f653_D,plain,(
  ( ! [X17] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'T_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X17)))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f651,plain,(
  ( ! [X17,X18] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'T_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X17))) | s(bool,'T_0') = s(bool,X18)) ) | $spl14),
  inference(subsumption_resolution,[],[f648,f339])).
fof(f339,plain,(
  ( ! [X39,X38] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'T_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X38))) | s(bool,X39) = s(bool,sK6('const.option.SOME_1'(s(bool,X38)),bool)) | s(bool,'T_0') = s(bool,X39)) )),
  inference(superposition,[],[f209,f169])).
fof(f648,plain,(
  ( ! [X17,X18] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'T_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X17))) | s(bool,X18) != s(bool,sK6('const.option.SOME_1'(s(bool,X17)),bool)) | s(bool,'T_0') = s(bool,X18)) ) | $spl14),
  inference(backward_demodulation,[],[f641,f645])).
fof(f645,plain,(
  ( ! [X17,X18] : (s(bool,X18) != s(bool,sK6('const.option.SOME_1'(s(bool,X17)),bool)) | s(bool,'T_0') = s(bool,X18) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X17)))) )),
  inference(subsumption_resolution,[],[f618,f100])).
fof(f100,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.option.OPTION_MAP2_NONE',aHL_TRUTH)).
fof(f618,plain,(
  ( ! [X17,X18] : (~p(s(bool,'T_0')) | s(bool,X18) != s(bool,sK6('const.option.SOME_1'(s(bool,X17)),bool)) | s(bool,'T_0') = s(bool,X18) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X17)))) )),
  inference(superposition,[],[f171,f230])).
fof(f230,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,sK6('const.option.SOME_1'(s(bool,X0)),bool)) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X0)))) )),
  inference(superposition,[],[f209,f107])).
fof(f171,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | s(bool,X0) != s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f113,f107])).
fof(f113,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X14] : (s(bool,'F_0') = s(bool,X14) <=> ~p(s(bool,X14)))),
  file('thm.option.OPTION_MAP2_NONE','thm.bool.EQ_CLAUSES|split|2')).
fof(f643,plain,(
  ( ! [X14] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,sK6('const.option.SOME_1'(s(bool,X14)),bool)))) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X14)))) ) | $spl18),
  inference(cnf_transformation,[],[f643_D])).
fof(f643_D,plain,(
  ( ! [X14] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,sK6('const.option.SOME_1'(s(bool,X14)),bool)))) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X14)))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f637,plain,(
  s(bool,'T_0') = s(bool,sK6('const.option.SOME_1'(s(bool,'T_0')),bool)) | $spl8),
  inference(cnf_transformation,[],[f637_D])).
fof(f637_D,plain,(
  s(bool,'T_0') = s(bool,sK6('const.option.SOME_1'(s(bool,'T_0')),bool)) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f604,plain,(
  ( ! [X14] : (s(bool,'T_0') = s(bool,sK6('const.option.SOME_1'(s(bool,'T_0')),bool)) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,sK6('const.option.SOME_1'(s(bool,X14)),bool)))) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X14)))) )),
  inference(superposition,[],[f230,f230])).
fof(f641,plain,(
  s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'T_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) | $spl14),
  inference(cnf_transformation,[],[f641_D])).
fof(f641_D,plain,(
  s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'T_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f642,plain,(
  ( ! [X10,X9] : (s(bool,X9) = s(bool,sK6('const.option.SOME_1'(s(bool,X9)),bool)) | s(bool,'T_0') = s(bool,X10) | s(bool,X9) = s(bool,X10)) ) | $spl16),
  inference(cnf_transformation,[],[f642_D])).
fof(f642_D,plain,(
  ( ! [X10,X9] : (s(bool,X9) = s(bool,sK6('const.option.SOME_1'(s(bool,X9)),bool)) | s(bool,'T_0') = s(bool,X10) | s(bool,X9) = s(bool,X10)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f602,plain,(
  ( ! [X12,X11] : (s(bool,X11) = s(bool,sK6('const.option.SOME_1'(s(bool,X11)),bool)) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'T_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) | s(bool,X11) = s(bool,X12) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f230,f169])).
fof(f601,plain,(
  ( ! [X10,X9] : (s(bool,X9) = s(bool,sK6('const.option.SOME_1'(s(bool,X9)),bool)) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'T_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f230,f169])).
fof(f638,plain,(
  ( ! [X4] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X4))) | s(bool,'T_0') = s(bool,X4)) ) | $spl10),
  inference(cnf_transformation,[],[f638_D])).
fof(f638_D,plain,(
  ( ! [X4] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X4))) | s(bool,'T_0') = s(bool,X4)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f639,plain,(
  ( ! [X5] : (s(bool,'T_0') = s(bool,sK6('const.option.SOME_1'(s(bool,X5)),bool)) | s(bool,'T_0') = s(bool,X5)) ) | $spl12),
  inference(cnf_transformation,[],[f639_D])).
fof(f639_D,plain,(
  ( ! [X5] : (s(bool,'T_0') = s(bool,sK6('const.option.SOME_1'(s(bool,X5)),bool)) | s(bool,'T_0') = s(bool,X5)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f599,plain,(
  ( ! [X6,X7] : (s(bool,'T_0') = s(bool,sK6('const.option.SOME_1'(s(bool,X7)),bool)) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X6))) | s(bool,'T_0') = s(bool,X7) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f230,f169])).
fof(f598,plain,(
  ( ! [X4,X5] : (s(bool,'T_0') = s(bool,sK6('const.option.SOME_1'(s(bool,X5)),bool)) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X4))) | s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f230,f169])).
fof(f635,plain,(
  ( ! [X0,X1] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X1) | s(bool,X0) = s(bool,X1)) ) | $spl6),
  inference(cnf_transformation,[],[f635_D])).
fof(f635_D,plain,(
  ( ! [X0,X1] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X1) | s(bool,X0) = s(bool,X1)) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f597,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') = s(bool,sK6('const.option.SOME_1'(s(bool,'T_0')),bool)) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X2))) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f230,f169])).
fof(f596,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,sK6('const.option.SOME_1'(s(bool,'T_0')),bool)) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X0))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f230,f169])).
fof(f151,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),sK3))) | $spl0),
  inference(cnf_transformation,[],[f151_D])).
fof(f151_D,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),sK3))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f155,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK4) | $spl4),
  inference(cnf_transformation,[],[f155_D])).
fof(f155_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK4) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f153,plain,(
  s('type.option.option'(sK2),'const.option.NONE_0') = s('type.option.option'(sK2),sK3) | $spl2),
  inference(cnf_transformation,[],[f153_D])).
fof(f153_D,plain,(
  s('type.option.option'(sK2),'const.option.NONE_0') = s('type.option.option'(sK2),sK3) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f97,plain,(
  s('type.option.option'(sK2),'const.option.NONE_0') = s('type.option.option'(sK2),sK3) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK4) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),sK3)))),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),sK3))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK4) | s('type.option.option'(sK2),'const.option.NONE_0') = s('type.option.option'(sK2),sK3)) & (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),sK3))) | (s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),sK4) & s('type.option.option'(sK2),'const.option.NONE_0') != s('type.option.option'(sK2),sK3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f74])).
fof(f74,plain,(
  ? [X0,X1,X2,X3,X4,X5] : ((s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X5),s('type.option.option'(X1),X4),s('type.option.option'(X2),X3))) | s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),X4) | s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),X3)) & (s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X5),s('type.option.option'(X1),X4),s('type.option.option'(X2),X3))) | (s('type.option.option'(X1),'const.option.NONE_0') != s('type.option.option'(X1),X4) & s('type.option.option'(X2),'const.option.NONE_0') != s('type.option.option'(X2),X3))))),
  inference(flattening,[],[f73])).
fof(f73,plain,(
  ? [X0,X1,X2,X3,X4,X5] : ((s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X5),s('type.option.option'(X1),X4),s('type.option.option'(X2),X3))) | (s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),X4) | s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),X3))) & (s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X5),s('type.option.option'(X1),X4),s('type.option.option'(X2),X3))) | (s('type.option.option'(X1),'const.option.NONE_0') != s('type.option.option'(X1),X4) & s('type.option.option'(X2),'const.option.NONE_0') != s('type.option.option'(X2),X3))))),
  inference(nnf_transformation,[],[f68])).
fof(f68,plain,(
  ? [X0,X1,X2,X3,X4,X5] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X5),s('type.option.option'(X1),X4),s('type.option.option'(X2),X3))) <~> (s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),X4) | s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),X3)))),
  inference(ennf_transformation,[],[f31])).
fof(f31,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X5),s('type.option.option'(X1),X4),s('type.option.option'(X2),X3))) <=> (s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),X4) | s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),X3)))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X5),s('type.option.option'(X1),X4),s('type.option.option'(X2),X3))) <=> (s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),X4) | s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),X3)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.OPTION_MAP2_3'(s(fun(X7,fun(X8,X6)),X11),s('type.option.option'(X7),X10),s('type.option.option'(X8),X9))) <=> (s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),X10) | s('type.option.option'(X8),'const.option.NONE_0') = s('type.option.option'(X8),X9)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.OPTION_MAP2_3'(s(fun(X7,fun(X8,X6)),X11),s('type.option.option'(X7),X10),s('type.option.option'(X8),X9))) <=> (s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),X10) | s('type.option.option'(X8),'const.option.NONE_0') = s('type.option.option'(X8),X9)))),
  file('thm.option.OPTION_MAP2_NONE','thm.option.OPTION_MAP2_NONE')).
fof(f152,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),sK3))) | $spl1),
  inference(cnf_transformation,[],[f152_D])).
fof(f152_D,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),sK3))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f156,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),sK4) | $spl5),
  inference(cnf_transformation,[],[f156_D])).
fof(f156_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),sK4) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f98,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),sK4) | s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),sK3)))),
  inference(cnf_transformation,[],[f75])).
fof(f154,plain,(
  s('type.option.option'(sK2),'const.option.NONE_0') != s('type.option.option'(sK2),sK3) | $spl3),
  inference(cnf_transformation,[],[f154_D])).
fof(f154_D,plain,(
  s('type.option.option'(sK2),'const.option.NONE_0') != s('type.option.option'(sK2),sK3) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f99,plain,(
  s('type.option.option'(sK2),'const.option.NONE_0') != s('type.option.option'(sK2),sK3) | s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK5),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),sK3)))),
  inference(cnf_transformation,[],[f75])).
% SZS output end Proof for thm.option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 63
% Passive clauses: 271
% Generated clauses: 1942
% Final active clauses: 45
% Final passive clauses: 88
% Input formulas: 28
% Initial clauses: 52
% 
% Duplicate literals: 89
% Trivial inequalities: 22
% Fw subsumption resolutions: 61
% Fw demodulations: 33
% Bw demodulations: 128
% Condensations: 166
% Global subsumptions: 1
% 
% Simple tautologies: 44
% Equational tautologies: 38
% Forward subsumptions: 1177
% 
% Unit resulting resolution: 79
% Factoring: 1
% Forward superposition: 716
% Backward superposition: 368
% Self superposition: 48
% Equality factoring: 28
% Equality resolution: 4
% 
% Split clauses: 21
% Split components: 48
% SAT solver clauses: 335
% SAT solver unit clauses: 54
% SAT solver binary clauses: 113
% 
% Sat splits: 21
% Sat splitting refutations: 19
% 
% Memory used [KB]: 2686
% Time elapsed: 0.108 s
% ------------------------------
% ------------------------------
% Success in time 1.422 s
