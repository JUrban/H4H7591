Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f8738,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f8721,f220,f382,f218,f388,f383,f386,f932,f931,f930,f219,f384,f381,f8674,f393,f4007,f243,f389,f227,f392,f277,f391,f396])).
fof(f396,plain,(
  ( ! [X0,X1] : (~sP0(X0,X1) | p(s(bool,X0)) | p(s(bool,X1))) ) | $spl20),
  inference(cnf_transformation,[],[f396_D])).
fof(f396_D,plain,(
  ( ! [X0,X1] : (~sP0(X0,X1) | p(s(bool,X0)) | p(s(bool,X1))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f391,plain,(
  p(s(bool,'F_0')) | $spl12),
  inference(cnf_transformation,[],[f391_D])).
fof(f391_D,plain,(
  p(s(bool,'F_0')) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f277,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f173])).
fof(f173,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(flattening,[],[f172])).
fof(f172,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0')))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(nnf_transformation,[],[f127])).
fof(f127,plain,(
  ! [X0,X1] : (sP0(X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f392,plain,(
  ~p(s(bool,'F_0')) | $spl13),
  inference(cnf_transformation,[],[f392_D])).
fof(f392_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f227,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.list.EXISTS_LIST',aHL_FALSITY)).
fof(f389,plain,(
  p(s(bool,'T_0')) | $spl10),
  inference(cnf_transformation,[],[f389_D])).
fof(f389_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f243,plain,(
  p(s(bool,'T_0')) | p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f156])).
fof(f156,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f155])).
fof(f155,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,'F_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0] : ((p(s(bool,'F_0')) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X10] : ((p(s(bool,'F_0')) => p(s(bool,X10))) <=> p(s(bool,'T_0')))),
  file('thm.list.EXISTS_LIST','thm.bool.IMP_CLAUSES|split|2')).
fof(f4007,plain,(
  $false | ($spl2 | $spl8)),
  inference(subsumption_resolution,[],[f388,f382])).
fof(f393,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl14),
  inference(cnf_transformation,[],[f393_D])).
fof(f393_D,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f8674,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | ($spl2 | $spl5 | $spl6 | $spl10 | $spl13 | $spl20)),
  inference(subsumption_resolution,[],[f8673,f392])).
fof(f8673,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | p(s(bool,X0))) ) | ($spl2 | $spl5 | $spl6 | $spl10 | $spl20)),
  inference(forward_demodulation,[],[f8672,f1030])).
fof(f1030,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),'const.list.NIL_0'))) | $spl5),
  inference(resolution,[],[f384,f240])).
fof(f240,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f53])).
fof(f53,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X10] : (s(bool,'F_0') = s(bool,X10) <=> ~p(s(bool,X10)))),
  file('thm.list.EXISTS_LIST','thm.bool.EQ_CLAUSES|split|3')).
fof(f8672,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),'const.list.NIL_0')))) | p(s(bool,X0))) ) | ($spl2 | $spl6 | $spl10 | $spl20)),
  inference(resolution,[],[f8655,f396])).
fof(f8655,plain,(
  ( ! [X1] : (sP0(happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),'const.list.NIL_0')),X1)) ) | ($spl2 | $spl6 | $spl10)),
  inference(backward_demodulation,[],[f8649,f4011])).
fof(f4011,plain,(
  ( ! [X1] : (sP0(happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),sK14)),X1)) ) | $spl6),
  inference(resolution,[],[f386,f279])).
fof(f279,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f173])).
fof(f8649,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') = s('type.list.list'(sK12),sK14) | ($spl2 | $spl6 | $spl10)),
  inference(subsumption_resolution,[],[f8641,f389])).
fof(f8641,plain,(
  ~p(s(bool,'T_0')) | s('type.list.list'(sK12),'const.list.NIL_0') = s('type.list.list'(sK12),sK14) | ($spl2 | $spl6)),
  inference(superposition,[],[f4190,f4008])).
fof(f4008,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),sK14))) | $spl6),
  inference(resolution,[],[f386,f236])).
fof(f236,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.list.EXISTS_LIST','thm.bool.EQ_CLAUSES|split|0')).
fof(f4190,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),X0)))) | s('type.list.list'(sK12),'const.list.NIL_0') = s('type.list.list'(sK12),X0)) ) | $spl2),
  inference(superposition,[],[f382,f263])).
fof(f263,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK17(X1,X0)),s('type.list.list'(X0),sK18(X1,X0)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f167])).
fof(f167,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK17(X1,X0)),s('type.list.list'(X0),sK18(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK17,sK18])],[f70])).
fof(f70,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))),
  inference(flattening,[],[f69])).
fof(f69,plain,(
  ! [X0] : ! [X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6] : ! [X8] : (s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X8) | ? [X9,X10] : s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X10))))),
  file('thm.list.EXISTS_LIST','thm.list.list_CASES')).
fof(f381,plain,(
  ( ! [X4] : (~p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),X4))))) ) | $spl0),
  inference(cnf_transformation,[],[f381_D])).
fof(f381_D,plain,(
  ( ! [X4] : (~p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),X4))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f384,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),'const.list.NIL_0')))) | $spl5),
  inference(cnf_transformation,[],[f384_D])).
fof(f384_D,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),'const.list.NIL_0')))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f219,plain,(
  ( ! [X4] : (~p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),'const.list.NIL_0')))) | ~p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),X4))))) )),
  inference(cnf_transformation,[],[f148])).
fof(f148,plain,(
  (p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),sK14)))) | p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK15),s('type.list.list'(sK12),sK16))))))) & (! [X4] : ~p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),X4)))) | (~p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),'const.list.NIL_0')))) & ! [X2,X3] : ~p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,X2),s('type.list.list'(sK12),X3))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16])],[f147])).
fof(f147,plain,(
  ? [X0,X1] : ((? [X7] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X7)))) | p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | ? [X5,X6] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X6))))))) & (! [X4] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X4)))) | (~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) & ! [X2,X3] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3)))))))))),
  inference(rectify,[],[f146])).
fof(f146,plain,(
  ? [X0,X1] : ((? [X2] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) | p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | ? [X3,X4] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))))) & (! [X2] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) | (~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) & ! [X3,X4] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))))))),
  inference(flattening,[],[f145])).
fof(f145,plain,(
  ? [X0,X1] : ((? [X2] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) | (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | ? [X3,X4] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))))) & (! [X2] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) | (~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) & ! [X3,X4] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))))))),
  inference(nnf_transformation,[],[f99])).
fof(f99,plain,(
  ? [X0,X1] : (? [X2] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) <~> (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | ? [X3,X4] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))))))),
  inference(ennf_transformation,[],[f41])).
fof(f41,plain,(
  ~! [X0,X1] : (? [X2] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) <=> (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | ? [X3,X4] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))))))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ~! [X0] : ! [X1] : (? [X2] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) <=> (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | ? [X3,X4] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (? [X8] : p(s(bool,happ(s(fun('type.list.list'(X6),bool),X7),s('type.list.list'(X6),X8)))) <=> (p(s(bool,happ(s(fun('type.list.list'(X6),bool),X7),s('type.list.list'(X6),'const.list.NIL_0')))) | ? [X9,X10] : p(s(bool,happ(s(fun('type.list.list'(X6),bool),X7),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X10))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (? [X8] : p(s(bool,happ(s(fun('type.list.list'(X6),bool),X7),s('type.list.list'(X6),X8)))) <=> (p(s(bool,happ(s(fun('type.list.list'(X6),bool),X7),s('type.list.list'(X6),'const.list.NIL_0')))) | ? [X9,X10] : p(s(bool,happ(s(fun('type.list.list'(X6),bool),X7),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X10))))))))),
  file('thm.list.EXISTS_LIST','thm.list.EXISTS_LIST')).
fof(f930,plain,(
  $false | ($spl0 | $spl4)),
  inference(subsumption_resolution,[],[f383,f381])).
fof(f931,plain,(
  $false | ($spl0 | $spl8)),
  inference(subsumption_resolution,[],[f388,f381])).
fof(f932,plain,(
  $false | ($spl0 | $spl6)),
  inference(subsumption_resolution,[],[f386,f381])).
fof(f386,plain,(
  p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),sK14)))) | $spl6),
  inference(cnf_transformation,[],[f386_D])).
fof(f386_D,plain,(
  p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),sK14)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f383,plain,(
  p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),'const.list.NIL_0')))) | $spl4),
  inference(cnf_transformation,[],[f383_D])).
fof(f383_D,plain,(
  p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),'const.list.NIL_0')))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f388,plain,(
  p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK15),s('type.list.list'(sK12),sK16)))))) | $spl8),
  inference(cnf_transformation,[],[f388_D])).
fof(f388_D,plain,(
  p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK15),s('type.list.list'(sK12),sK16)))))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f218,plain,(
  p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK15),s('type.list.list'(sK12),sK16)))))) | p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),sK14))))),
  inference(cnf_transformation,[],[f148])).
fof(f382,plain,(
  ( ! [X2,X3] : (~p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,X2),s('type.list.list'(sK12),X3))))))) ) | $spl2),
  inference(cnf_transformation,[],[f382_D])).
fof(f382_D,plain,(
  ( ! [X2,X3] : (~p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,X2),s('type.list.list'(sK12),X3))))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f220,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,X2),s('type.list.list'(sK12),X3)))))) | ~p(s(bool,happ(s(fun('type.list.list'(sK12),bool),sK13),s('type.list.list'(sK12),X4))))) )),
  inference(cnf_transformation,[],[f148])).
fof(f8721,plain,(
  $false | ($spl2 | $spl14)),
  inference(resolution,[],[f393,f382])).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 515
% Passive clauses: 2717
% Generated clauses: 8533
% Final active clauses: 448
% Final passive clauses: 1867
% Input formulas: 38
% Initial clauses: 159
% 
% Duplicate literals: 230
% Trivial inequalities: 103
% Fw subsumption resolutions: 906
% Fw demodulations: 126
% Bw demodulations: 65
% 
% Simple tautologies: 169
% Equational tautologies: 59
% Forward subsumptions: 4111
% 
% Binary resolution: 3871
% Factoring: 880
% Forward superposition: 634
% Backward superposition: 1353
% Self superposition: 24
% Equality factoring: 26
% Equality resolution: 32
% 
% Split clauses: 191
% Split components: 384
% SAT solver clauses: 400
% SAT solver unit clauses: 13
% SAT solver binary clauses: 93
% SAT solver learnt clauses: 3
% SAT solver learnt literals: 2
% 
% Sat splits: 191
% Sat splitting refutations: 9
% 
% TWLsolver clauses: 389
% TWLsolver calls for satisfiability: 250
% 
% Memory used [KB]: 3709
% Time elapsed: 0.151 s
% ------------------------------
% ------------------------------
% Success in time 0.152 s
