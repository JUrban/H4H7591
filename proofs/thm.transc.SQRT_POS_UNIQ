Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.transc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.transc
% SZS output start Proof for thm.transc
fof(f1369,plain,(
  $false),
  inference(subsumption_resolution,[],[f1368,f46])).
fof(f46,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.transc.SQRT_POS_UNIQ',aHL_TRUTH)).
fof(f1368,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f1367,f70])).
fof(f70,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK0)))),
  inference(resolution,[],[f42,f53])).
fof(f53,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X9] : (s(bool,'T_0') = s(bool,X9) <=> p(s(bool,X9)))),
  file('thm.transc.SQRT_POS_UNIQ','thm.bool.EQ_CLAUSES|split|0')).
fof(f42,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK0))))),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK1)))) & s('type.realax.real',sK0) = s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.realax.real',sK1) != s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',sK0)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f30])).
fof(f30,plain,(
  ? [X0,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X1)))) & s('type.realax.real',X0) = s('type.realax.real','const.real.pow_2'(s('type.realax.real',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.realax.real',X1) != s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X0))))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ? [X0,X1] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X1)))) & s('type.realax.real',X0) = s('type.realax.real','const.real.pow_2'(s('type.realax.real',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) & s('type.realax.real',X1) != s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X0))))),
  inference(ennf_transformation,[],[f16])).
fof(f16,plain,(
  ~! [X0,X1] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X1)))) & s('type.realax.real',X0) = s('type.realax.real','const.real.pow_2'(s('type.realax.real',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) => s('type.realax.real',X1) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X0))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X6)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X7)))) & s('type.realax.real',X6) = s('type.realax.real','const.real.pow_2'(s('type.realax.real',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) => s('type.realax.real',X7) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X6))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X6)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X7)))) & s('type.realax.real',X6) = s('type.realax.real','const.real.pow_2'(s('type.realax.real',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) => s('type.realax.real',X7) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X6))))),
  file('thm.transc.SQRT_POS_UNIQ','thm.transc.SQRT_POS_UNIQ')).
fof(f1367,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK0))))),
  inference(forward_demodulation,[],[f1366,f44])).
fof(f44,plain,(
  s('type.realax.real',sK0) = s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(cnf_transformation,[],[f34])).
fof(f1366,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(subsumption_resolution,[],[f1365,f45])).
fof(f45,plain,(
  s('type.realax.real',sK1) != s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',sK0)))),
  inference(cnf_transformation,[],[f34])).
fof(f1365,plain,(
  s('type.realax.real',sK1) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',sK0))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(forward_demodulation,[],[f1364,f44])).
fof(f1364,plain,(
  s('type.realax.real',sK1) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(trivial_inequality_removal,[],[f1361])).
fof(f1361,plain,(
  s('type.realax.real',sK0) != s('type.realax.real',sK0) | s('type.realax.real',sK1) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(superposition,[],[f1102,f44])).
fof(f1102,plain,(
  ( ! [X0] : (s('type.realax.real',sK0) != s('type.realax.real',X0) | s('type.realax.real',sK1) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X0))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0))))) )),
  inference(subsumption_resolution,[],[f1101,f46])).
fof(f1101,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.realax.real',sK0) != s('type.realax.real',X0) | s('type.realax.real',sK1) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X0))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0))))) )),
  inference(forward_demodulation,[],[f1091,f71])).
fof(f71,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK1)))),
  inference(resolution,[],[f43,f53])).
fof(f43,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK1))))),
  inference(cnf_transformation,[],[f34])).
fof(f1091,plain,(
  ( ! [X0] : (s('type.realax.real',sK0) != s('type.realax.real',X0) | s('type.realax.real',sK1) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X0))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK1)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0))))) )),
  inference(superposition,[],[f819,f44])).
fof(f819,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X0) != s('type.realax.real','const.real.pow_2'(s('type.realax.real',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.realax.real',X1) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X0))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X1)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0))))) )),
  inference(forward_demodulation,[],[f818,f50])).
fof(f50,plain,(
  ( ! [X0] : (s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X0))) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real',X0)))) )),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0] : s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X0))) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real',X0)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6] : s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X6))) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real',X6)))),
  file('thm.transc.SQRT_POS_UNIQ','thm.transc.sqrt')).
fof(f818,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X1) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real',X0))) | s('type.realax.real',X0) != s('type.realax.real','const.real.pow_2'(s('type.realax.real',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X1)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0))))) )),
  inference(forward_demodulation,[],[f807,f48])).
fof(f48,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.transc.SQRT_POS_UNIQ','thm.arithmetic.TWO')).
fof(f807,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X0) != s('type.realax.real','const.real.pow_2'(s('type.realax.real',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.realax.real',X1) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X0))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X1)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0))))) )),
  inference(superposition,[],[f63,f48])).
fof(f63,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real',X1) != s('type.realax.real','const.real.pow_2'(s('type.realax.real',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) | s('type.realax.real',X2) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.realax.real',X1))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X2)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X1))))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X1)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X2)))) | s('type.realax.real',X1) != s('type.realax.real','const.real.pow_2'(s('type.realax.real',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) | s('type.realax.real',X2) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.realax.real',X1))))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X1)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X2)))) | s('type.realax.real',X1) != s('type.realax.real','const.real.pow_2'(s('type.realax.real',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) | s('type.realax.real',X2) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.realax.real',X1))))),
  inference(ennf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X1)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X2)))) & s('type.realax.real',X1) = s('type.realax.real','const.real.pow_2'(s('type.realax.real',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) => s('type.realax.real',X2) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.realax.real',X1))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X10,X6,X7] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X6)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X7)))) & s('type.realax.real',X6) = s('type.realax.real','const.real.pow_2'(s('type.realax.real',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10)))))) => s('type.realax.real',X7) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.realax.real',X6))))),
  file('thm.transc.SQRT_POS_UNIQ','thm.transc.ROOT_POS_UNIQ')).
% SZS output end Proof for thm.transc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 53
% Passive clauses: 172
% Generated clauses: 1273
% Final active clauses: 44
% Final passive clauses: 78
% Input formulas: 14
% Initial clauses: 22
% 
% Duplicate literals: 134
% Trivial inequalities: 35
% Fw subsumption resolutions: 136
% Fw demodulations: 63
% Bw demodulations: 8
% 
% Simple tautologies: 81
% Equational tautologies: 17
% Forward subsumptions: 613
% 
% Binary resolution: 37
% Forward superposition: 482
% Backward superposition: 265
% Self superposition: 29
% Equality factoring: 28
% Equality resolution: 13
% 
% Split clauses: 36
% Split components: 78
% SAT solver clauses: 57
% SAT solver unit clauses: 3
% SAT solver binary clauses: 22
% 
% Sat splits: 36
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 56
% TWLsolver calls for satisfiability: 20
% 
% Memory used [KB]: 1151
% Time elapsed: 0.034 s
% ------------------------------
% ------------------------------
% Success in time 0.036 s
