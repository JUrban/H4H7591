Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.transc
% (81142)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 253
% Passive clauses: 4037
% Generated clauses: 32530
% Final active clauses: 225
% Final passive clauses: 3334
% Input formulas: 33
% Initial clauses: 66
% 
% Duplicate literals: 914
% Trivial inequalities: 467
% Fw subsumption resolutions: 5459
% Fw demodulations: 5612
% Bw demodulations: 26
% 
% Simple tautologies: 434
% Equational tautologies: 44
% Forward subsumptions: 14659
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 1875
% Factoring: 6
% Forward superposition: 10235
% Backward superposition: 7540
% Self superposition: 137
% Equality factoring: 78
% Equality resolution: 31
% 
% Split clauses: 340
% Split components: 692
% SAT solver clauses: 1289
% SAT solver unit clauses: 33
% SAT solver binary clauses: 392
% 
% Sat splits: 340
% Sat splitting refutations: 33
% 
% TWLsolver clauses: 1285
% TWLsolver calls for satisfiability: 216
% 
% Memory used [KB]: 15223
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.transc
% (81160)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 348
% Passive clauses: 1317
% Generated clauses: 21191
% Final active clauses: 184
% Final passive clauses: 571
% Input formulas: 33
% Initial clauses: 66
% 
% Duplicate literals: 517
% Trivial inequalities: 465
% Fw subsumption resolutions: 2286
% Fw demodulations: 2939
% Bw demodulations: 448
% Condensations: 532
% Global subsumptions: 9
% 
% Simple tautologies: 279
% Equational tautologies: 41
% Forward subsumptions: 10296
% Bw demodulations to eq. taut.: 6
% 
% Binary resolution: 1047
% Factoring: 8
% Forward superposition: 5492
% Backward superposition: 4952
% Self superposition: 174
% Equality factoring: 65
% Equality resolution: 46
% 
% Split clauses: 292
% Split components: 590
% SAT solver clauses: 2482
% SAT solver unit clauses: 99
% SAT solver binary clauses: 89
% SAT solver learnt clauses: 24
% SAT solver learnt literals: 7
% 
% Sat splits: 292
% Sat splitting refutations: 66
% 
% TWLsolver clauses: 2440
% TWLsolver calls for satisfiability: 660
% 
% Memory used [KB]: 13560
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.transc
% (81192)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 543
% Passive clauses: 4016
% Generated clauses: 117183
% Final active clauses: 57
% Final passive clauses: 290
% Input formulas: 33
% Initial clauses: 66
% 
% Duplicate literals: 4565
% Trivial inequalities: 690
% Fw subsumption resolutions: 7373
% Fw demodulations: 20980
% Bw demodulations: 2958
% Condensations: 7743
% Global subsumptions: 5324
% 
% Simple tautologies: 799
% Equational tautologies: 3252
% Forward subsumptions: 55861
% Fw demodulations to eq. taut.: 372
% Bw demodulations to eq. taut.: 147
% 
% Unit resulting resolution: 17798
% Factoring: 3
% Forward superposition: 18370
% Backward superposition: 15926
% Self superposition: 360
% Equality factoring: 249
% Equality resolution: 53
% 
% Split clauses: 247
% Split components: 504
% SAT solver clauses: 15548
% SAT solver unit clauses: 940
% SAT solver binary clauses: 1140
% 
% Sat splits: 247
% Sat splitting refutations: 5711
% 
% Memory used [KB]: 75222
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 183 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.transc
% (81466)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 2903
% Passive clauses: 43714
% Generated clauses: 251055
% Final active clauses: 352
% Final passive clauses: 19519
% Input formulas: 33
% Initial clauses: 64
% 
% Selected by SInE selection: 31
% SInE iterations: 1
% 
% Duplicate literals: 6047
% Trivial inequalities: 3956
% Fw subsumption resolutions: 36783
% Fw demodulations: 44750
% Bw demodulations: 1684
% 
% Simple tautologies: 6077
% Equational tautologies: 130
% Forward subsumptions: 114287
% Fw demodulations to eq. taut.: 4
% Bw demodulations to eq. taut.: 19
% 
% Binary resolution: 30370
% Factoring: 12
% Forward superposition: 70018
% Backward superposition: 46229
% Self superposition: 126
% Equality factoring: 70
% Equality resolution: 148
% 
% Split clauses: 1648
% Split components: 3321
% SAT solver clauses: 2041
% SAT solver unit clauses: 55
% SAT solver binary clauses: 393
% 
% Sat splits: 1648
% Sat splitting refutations: 377
% 
% Memory used [KB]: 53602
% Time elapsed: 4.0000 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.transc
% (81564)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 266
% Passive clauses: 1351
% Generated clauses: 26606
% Final active clauses: 147
% Final passive clauses: 657
% Input formulas: 33
% Initial clauses: 66
% 
% Duplicate literals: 747
% Trivial inequalities: 498
% Fw subsumption resolutions: 3394
% Fw demodulations: 5191
% Bw demodulations: 499
% Global subsumptions: 122
% 
% Simple tautologies: 757
% Equational tautologies: 379
% Forward subsumptions: 13839
% Bw demodulations to eq. taut.: 13
% 
% Unit resulting resolution: 4688
% Forward superposition: 6020
% Backward superposition: 4732
% Self superposition: 66
% Equality factoring: 46
% Equality resolution: 13
% 
% Split clauses: 6
% Split components: 12
% SAT solver clauses: 1815
% SAT solver unit clauses: 469
% SAT solver binary clauses: 290
% 
% Sat splits: 6
% Sat splitting refutations: 334
% 
% Memory used [KB]: 9722
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 135 next slice time: 15
lrs+1011_12_bs=on:bsr=unit_only:cond=on:gs=on:gsaa=from_current:gsssp=full:nwc=1.1:sas=minisat:stl=60:sos=all:sac=on:sdd=off:sser=off:sfr=on:ssfp=100000:ssfq=1.2:ssnc=none:sp=reverse_arity:updr=off_14 on thm.transc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.transc
% SZS output start Proof for thm.transc
fof(f11188,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f837,f1950,f1948,f1994,f3763,f3761,f3766,f5048,f5046,f6735,f1949,f7692,f838,f10877,f10875,f11030,f11169,f11171])).
fof(f11171,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f11170,f229])).
fof(f229,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(forward_demodulation,[],[f203,f201])).
fof(f201,plain,(
  s(bool,'T_0') = s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s(fun('type.num.num','type.realax.real'),sK0)))),
  inference(resolution,[],[f119,f132])).
fof(f132,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X13] : (s(bool,'T_0') = s(bool,X13) <=> p(s(bool,X13)))),
  file('thm.transc.DIVISION_LBOUND_LT','thm.bool.EQ_CLAUSES|split|1')).
fof(f119,plain,(
  p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s(fun('type.num.num','type.realax.real'),sK0))))),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s(fun('type.num.num','type.realax.real'),sK0)))) & s('type.num.num','const.num.|48|_0') != s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))) & ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f74])).
fof(f74,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) & s('type.num.num','const.num.|48|_0') != s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0))) & ? [X3] : ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))))),
  inference(flattening,[],[f73])).
fof(f73,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) & s('type.num.num','const.num.|48|_0') != s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))) & ? [X3] : ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))))),
  inference(ennf_transformation,[],[f36])).
fof(f36,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) & s('type.num.num','const.num.|48|_0') != s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))) => ! [X3] : p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) & ~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))) => ! [X3] : p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ((p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.num.num','type.realax.real'),X6)))) & ~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X6)))) => ! [X9] : p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X7),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9)))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ((p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.num.num','type.realax.real'),X6)))) & ~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X6)))) => ! [X9] : p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X7),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9)))))))))),
  file('thm.transc.DIVISION_LBOUND_LT','thm.transc.DIVISION_LBOUND_LT')).
fof(f203,plain,(
  s(bool,'F_0') != s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))),s(fun('type.num.num','type.realax.real'),sK0)))),
  inference(resolution,[],[f119,f135])).
fof(f135,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f43])).
fof(f43,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X13] : (s(bool,'F_0') = s(bool,X13) <=> ~p(s(bool,X13)))),
  file('thm.transc.DIVISION_LBOUND_LT','thm.bool.EQ_CLAUSES|split|3')).
fof(f11170,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl16),
  inference(forward_demodulation,[],[f11161,f5397])).
fof(f5397,plain,(
  s(bool,'T_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',sK2)))),
  inference(resolution,[],[f5396,f132])).
fof(f5396,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))))),
  inference(forward_demodulation,[],[f5395,f194])).
fof(f194,plain,(
  s('type.realax.real',sK1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.|48|_0')))),
  inference(resolution,[],[f119,f174])).
fof(f174,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))) )),
  inference(cnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))))),
  inference(ennf_transformation,[],[f68])).
fof(f68,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) => s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X6,X7,X8] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.num.num','type.realax.real'),X6)))) => s('type.realax.real',X7) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num','const.num.|48|_0'))))),
  file('thm.transc.DIVISION_LBOUND_LT','thm.transc.DIVISION_LHS')).
fof(f5395,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK2))))),
  inference(subsumption_resolution,[],[f5372,f122])).
fof(f122,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.transc.DIVISION_LBOUND_LT',aHL_TRUTH)).
fof(f5372,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.|48|_0'))),s('type.realax.real',sK2))))),
  inference(superposition,[],[f226,f387])).
fof(f387,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))),
  inference(resolution,[],[f255,f132])).
fof(f255,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))))))),
  inference(resolution,[],[f193,f171])).
fof(f171,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0,X1] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f64])).
fof(f64,plain,(
  ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X10,X9] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X9)))) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num',X10)))))),
  file('thm.transc.DIVISION_LBOUND_LT','thm.arithmetic.NOT_LESS_EQUAL')).
fof(f193,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))),s('type.num.num','const.num.|48|_0'))))),
  inference(trivial_inequality_removal,[],[f192])).
fof(f192,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))),s('type.num.num','const.num.|48|_0'))))),
  inference(superposition,[],[f120,f139])).
fof(f139,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) )),
  inference(cnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))))),
  inference(nnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num','const.num.|48|_0')))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X9))),
  file('thm.transc.DIVISION_LBOUND_LT','thm.arithmetic.LESS_EQ_|48|')).
fof(f120,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))),
  inference(cnf_transformation,[],[f91])).
fof(f226,plain,(
  ( ! [X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',X1))),s('type.realax.real',sK2))))) )),
  inference(forward_demodulation,[],[f197,f195])).
fof(f195,plain,(
  s('type.realax.real',sK2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))),
  inference(resolution,[],[f119,f175])).
fof(f175,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0))))))),
  inference(ennf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) => s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0))))))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X6,X7,X8] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.num.num','type.realax.real'),X6)))) => s('type.realax.real',X8) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X6))))))),
  file('thm.transc.DIVISION_LBOUND_LT','thm.transc.DIVISION_RHS')).
fof(f197,plain,(
  ( ! [X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',X1))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))))))) )),
  inference(resolution,[],[f119,f177])).
fof(f177,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))) )),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | ! [X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0))))))))))),
  inference(ennf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) => ! [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0))))))))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X6,X7,X8] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.num.num','type.realax.real'),X6)))) => ! [X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X6)))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num',X9))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X6))))))))))),
  file('thm.transc.DIVISION_LBOUND_LT','thm.transc.DIVISION_GT')).
fof(f11161,plain,(
  s(bool,'F_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))) | $spl16),
  inference(backward_demodulation,[],[f11126,f805])).
fof(f805,plain,(
  s(bool,'F_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3)))))))),
  inference(resolution,[],[f121,f136])).
fof(f136,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f96])).
fof(f121,plain,(
  ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3))))))))),
  inference(cnf_transformation,[],[f91])).
fof(f11126,plain,(
  s('type.realax.real',sK2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3))))) | $spl16),
  inference(resolution,[],[f10876,f227])).
fof(f227,plain,(
  ( ! [X3] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))),s('type.num.num',X3)))) | s('type.realax.real',sK2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',X3)))) )),
  inference(forward_demodulation,[],[f200,f160])).
fof(f160,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X9,X10] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X9))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X9),s('type.num.num',X10)))),
  file('thm.transc.DIVISION_LBOUND_LT','thm.arithmetic.GREATER_EQ')).
fof(f200,plain,(
  ( ! [X3] : (s('type.realax.real',sK2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',X3))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))))))) )),
  inference(resolution,[],[f119,f180])).
fof(f180,plain,(
  ( ! [X2,X0,X5,X1] : (s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X5))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X5),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))) )),
  inference(cnf_transformation,[],[f118])).
fof(f118,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | (s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) & ! [X6] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X6))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))))))) & ! [X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X5),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X5)))))) & (s('type.realax.real',X1) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK5(X2,X1,X0)),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',sK5(X2,X1,X0)))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK5(X2,X1,X0)))))))))) | (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK6(X2,X1,X0)),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & s('type.realax.real',X2) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',sK6(X2,X1,X0))))) | p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5,sK6])],[f117])).
fof(f117,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | (s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) & ! [X6] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X6))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))))))) & ! [X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X5),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X5)))))) & (s('type.realax.real',X1) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) | ? [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) | ? [X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & s('type.realax.real',X2) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3)))) | p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))))),
  inference(rectify,[],[f116])).
fof(f116,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | (s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) & ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) & ! [X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3)))))) & (s('type.realax.real',X1) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) | ? [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) | ? [X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & s('type.realax.real',X2) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3)))) | p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))))),
  inference(flattening,[],[f115])).
fof(f115,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | (s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) & ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) & ! [X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3)))))) & ((s('type.realax.real',X1) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) | ? [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) | ? [X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & s('type.realax.real',X2) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))))) | p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))))),
  inference(nnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) <=> (s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) & ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) & ! [X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) <=> (s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) & ! [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) & ! [X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) => s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X6,X7,X8] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.num.num','type.realax.real'),X6)))) <=> (s('type.realax.real',X7) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num','const.num.|48|_0'))) & ! [X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X6)))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num',X9))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))))))) & ! [X9] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X9),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X6)))))) => s('type.realax.real',X8) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num',X9))))))),
  file('thm.transc.DIVISION_LBOUND_LT','thm.transc.DIVISION_THM')).
fof(f10876,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3)))))) | $spl16),
  inference(cnf_transformation,[],[f10876_D])).
fof(f10876_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3)))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f11169,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f11160,f5397])).
fof(f11160,plain,(
  s(bool,'T_0') != s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',sK2))) | $spl16),
  inference(backward_demodulation,[],[f11126,f803])).
fof(f803,plain,(
  s(bool,'T_0') != s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3)))))))),
  inference(resolution,[],[f121,f131])).
fof(f131,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f94])).
fof(f11030,plain,(
  $false | $spl17),
  inference(subsumption_resolution,[],[f11029,f188])).
fof(f188,plain,(
  ~p(s(bool,'F_0'))),
  inference(condensation,[],[f154])).
fof(f154,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0))) & (p(s(bool,X0)) | ~p(s(bool,X0)) | p(s(bool,'F_0'))))),
  inference(flattening,[],[f107])).
fof(f107,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0))) & (p(s(bool,X0)) | (~p(s(bool,X0)) | p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(ennf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f52])).
fof(f52,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X13] : ((p(s(bool,X13)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X13)))),
  file('thm.transc.DIVISION_LBOUND_LT','thm.bool.IMP_CLAUSES|split|4')).
fof(f11029,plain,(
  p(s(bool,'F_0')) | $spl17),
  inference(forward_demodulation,[],[f10993,f805])).
fof(f10993,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3)))))))) | $spl17),
  inference(resolution,[],[f10937,f225])).
fof(f225,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))))) )),
  inference(forward_demodulation,[],[f196,f194])).
fof(f196,plain,(
  ( ! [X0] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.|48|_0'))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))))))) )),
  inference(resolution,[],[f119,f176])).
fof(f176,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))) )),
  inference(cnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | ! [X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))))))))),
  inference(ennf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) => ! [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))))))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X6,X7,X8] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s(fun('type.num.num','type.realax.real'),X6)))) => ! [X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X6)))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num','const.num.|48|_0'))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))))))))),
  file('thm.transc.DIVISION_LBOUND_LT','thm.transc.DIVISION_LT')).
fof(f10937,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))) | $spl17),
  inference(resolution,[],[f10880,f171])).
fof(f10880,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))),s('type.num.num',sK3)))) | $spl17),
  inference(resolution,[],[f10877,f170])).
fof(f170,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f112])).
fof(f112,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) & ((s('type.num.num',X0) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))))),
  inference(flattening,[],[f111])).
fof(f111,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))))) & ((s('type.num.num',X0) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) <=> (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X10,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9)))))) <=> (s('type.num.num',X10) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X9))))))),
  file('thm.transc.DIVISION_LBOUND_LT','thm.arithmetic.arithmetic_2|49|7_prove_ltb')).
fof(f10875,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',X0)))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X0))),s(fun('type.num.num','type.realax.real'),sK0))))) ) | $spl14),
  inference(cnf_transformation,[],[f10875_D])).
fof(f10875_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',X0)))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X0))),s(fun('type.num.num','type.realax.real'),sK0))))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f10877,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3)))))) | $spl17),
  inference(cnf_transformation,[],[f10877_D])).
fof(f10877_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3)))))) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f838,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3)))))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',X0)))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X0))),s(fun('type.num.num','type.realax.real'),sK0))))) )),
  inference(forward_demodulation,[],[f816,f160])).
fof(f816,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',X0)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3))),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK0)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X0))),s(fun('type.num.num','type.realax.real'),sK0))))) )),
  inference(superposition,[],[f121,f180])).
fof(f7692,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) | $spl13),
  inference(cnf_transformation,[],[f7692_D])).
fof(f7692_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f1949,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',sK1)))) | $spl2),
  inference(cnf_transformation,[],[f1949_D])).
fof(f1949_D,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',sK1)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f6735,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',sK1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))))),
  inference(forward_demodulation,[],[f6711,f194])).
fof(f6711,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))))),
  inference(superposition,[],[f6061,f139])).
fof(f6061,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))),
  inference(subsumption_resolution,[],[f6039,f122])).
fof(f6039,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))),
  inference(superposition,[],[f225,f387])).
fof(f5046,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK3),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | $spl9),
  inference(cnf_transformation,[],[f5046_D])).
fof(f5046_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK3),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f5048,plain,(
  s('type.num.num',sK3) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl10),
  inference(cnf_transformation,[],[f5048_D])).
fof(f5048_D,plain,(
  s('type.num.num',sK3) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f3766,plain,(
  s('type.num.num',sK3) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK3),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | $spl5),
  inference(resolution,[],[f3761,f168])).
fof(f168,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f112])).
fof(f3761,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK3),s('type.num.num','const.num.|48|_0')))) | $spl5),
  inference(cnf_transformation,[],[f3761_D])).
fof(f3761_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK3),s('type.num.num','const.num.|48|_0')))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f3763,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl7),
  inference(cnf_transformation,[],[f3763_D])).
fof(f3763_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f1994,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK3),s('type.num.num','const.num.|48|_0')))) | $spl1),
  inference(superposition,[],[f1951,f139])).
fof(f1951,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3))) | $spl1),
  inference(resolution,[],[f1948,f140])).
fof(f140,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f98])).
fof(f1948,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3))),s('type.num.num','const.num.|48|_0')))) | $spl1),
  inference(cnf_transformation,[],[f1948_D])).
fof(f1948_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3))),s('type.num.num','const.num.|48|_0')))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f1950,plain,(
  ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',sK1)))) | $spl3),
  inference(cnf_transformation,[],[f1950_D])).
fof(f1950_D,plain,(
  ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',sK1)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f837,plain,(
  ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',sK1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3))),s('type.num.num','const.num.|48|_0'))))),
  inference(forward_demodulation,[],[f815,f194])).
fof(f815,plain,(
  ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK1),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3))),s('type.num.num','const.num.|48|_0'))))),
  inference(superposition,[],[f121,f139])).
% SZS output end Proof for thm.transc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 274
% Passive clauses: 1460
% Generated clauses: 11000
% Final active clauses: 197
% Final passive clauses: 1108
% Input formulas: 33
% Initial clauses: 66
% 
% Duplicate literals: 248
% Trivial inequalities: 222
% Fw subsumption resolutions: 1057
% Bw subsumption resolutions: 5
% Fw demodulations: 2119
% Bw demodulations: 83
% Condensations: 434
% 
% Simple tautologies: 368
% Equational tautologies: 4
% Forward subsumptions: 5102
% Backward subsumptions: 81
% 
% Binary resolution: 1322
% Forward superposition: 3555
% Backward superposition: 1934
% Equality resolution: 4
% 
% Split clauses: 5
% Split components: 10
% SAT solver clauses: 1470
% SAT solver unit clauses: 50
% SAT solver binary clauses: 322
% 
% Sat splits: 5
% Sat splitting refutations: 3
% 
% Memory used [KB]: 6012
% Time elapsed: 0.248 s
% ------------------------------
% ------------------------------
% Success in time 16.652 s
