Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f4043,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4029,f159,f83,f126,f122,f84,f124,f123,f91,f128])).
fof(f128,plain,(
  ~p(s(bool,'F_0')) | $spl7),
  inference(cnf_transformation,[],[f128_D])).
fof(f128_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f91,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quantHeuristics.ISR_exists',aHL_FALSITY)).
fof(f123,plain,(
  ~p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(sK0,sK1),sK2)))) | $spl1),
  inference(cnf_transformation,[],[f123_D])).
fof(f123_D,plain,(
  ~p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(sK0,sK1),sK2)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f124,plain,(
  ( ! [X3] : (s('type.sum.sum'(sK0,sK1),sK2) != s('type.sum.sum'(sK0,sK1),'const.sum.INR_1'(s(sK1,X3)))) ) | $spl2),
  inference(cnf_transformation,[],[f124_D])).
fof(f124_D,plain,(
  ( ! [X3] : (s('type.sum.sum'(sK0,sK1),sK2) != s('type.sum.sum'(sK0,sK1),'const.sum.INR_1'(s(sK1,X3)))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f84,plain,(
  ( ! [X3] : (s('type.sum.sum'(sK0,sK1),sK2) != s('type.sum.sum'(sK0,sK1),'const.sum.INR_1'(s(sK1,X3))) | ~p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(sK0,sK1),sK2))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  (p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(sK0,sK1),sK2)))) | s('type.sum.sum'(sK0,sK1),sK2) = s('type.sum.sum'(sK0,sK1),'const.sum.INR_1'(s(sK1,sK3)))) & (~p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(sK0,sK1),sK2)))) | ! [X3] : s('type.sum.sum'(sK0,sK1),sK2) != s('type.sum.sum'(sK0,sK1),'const.sum.INR_1'(s(sK1,X3))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f66])).
fof(f66,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(X0,X1),X2)))) | ? [X4] : s('type.sum.sum'(X0,X1),X2) = s('type.sum.sum'(X0,X1),'const.sum.INR_1'(s(X1,X4)))) & (~p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(X0,X1),X2)))) | ! [X3] : s('type.sum.sum'(X0,X1),X2) != s('type.sum.sum'(X0,X1),'const.sum.INR_1'(s(X1,X3)))))),
  inference(rectify,[],[f65])).
fof(f65,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(X0,X1),X2)))) | ? [X3] : s('type.sum.sum'(X0,X1),X2) = s('type.sum.sum'(X0,X1),'const.sum.INR_1'(s(X1,X3)))) & (~p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(X0,X1),X2)))) | ! [X3] : s('type.sum.sum'(X0,X1),X2) != s('type.sum.sum'(X0,X1),'const.sum.INR_1'(s(X1,X3)))))),
  inference(nnf_transformation,[],[f60])).
fof(f60,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(X0,X1),X2)))) <~> ? [X3] : s('type.sum.sum'(X0,X1),X2) = s('type.sum.sum'(X0,X1),'const.sum.INR_1'(s(X1,X3))))),
  inference(ennf_transformation,[],[f27])).
fof(f27,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(X0,X1),X2)))) <=> ? [X3] : s('type.sum.sum'(X0,X1),X2) = s('type.sum.sum'(X0,X1),'const.sum.INR_1'(s(X1,X3))))),
  inference(flattening,[],[f26])).
fof(f26,plain,(
  ~! [X0,X1] : ! [X2] : (p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(X0,X1),X2)))) <=> ? [X3] : s('type.sum.sum'(X0,X1),X2) = s('type.sum.sum'(X0,X1),'const.sum.INR_1'(s(X1,X3))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : (p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(X6,X7),X8)))) <=> ? [X9] : s('type.sum.sum'(X6,X7),X8) = s('type.sum.sum'(X6,X7),'const.sum.INR_1'(s(X7,X9))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : (p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(X6,X7),X8)))) <=> ? [X9] : s('type.sum.sum'(X6,X7),X8) = s('type.sum.sum'(X6,X7),'const.sum.INR_1'(s(X7,X9))))),
  file('thm.quantHeuristics.ISR_exists','thm.quantHeuristics.ISR_exists')).
fof(f122,plain,(
  p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(sK0,sK1),sK2)))) | $spl0),
  inference(cnf_transformation,[],[f122_D])).
fof(f122_D,plain,(
  p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(sK0,sK1),sK2)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f126,plain,(
  s('type.sum.sum'(sK0,sK1),sK2) = s('type.sum.sum'(sK0,sK1),'const.sum.INR_1'(s(sK1,sK3))) | $spl4),
  inference(cnf_transformation,[],[f126_D])).
fof(f126_D,plain,(
  s('type.sum.sum'(sK0,sK1),sK2) = s('type.sum.sum'(sK0,sK1),'const.sum.INR_1'(s(sK1,sK3))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f83,plain,(
  s('type.sum.sum'(sK0,sK1),sK2) = s('type.sum.sum'(sK0,sK1),'const.sum.INR_1'(s(sK1,sK3))) | p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(sK0,sK1),sK2))))),
  inference(cnf_transformation,[],[f67])).
fof(f159,plain,(
  $false | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f156,f123])).
fof(f156,plain,(
  p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(sK0,sK1),sK2)))) | $spl4),
  inference(superposition,[],[f113,f126])).
fof(f113,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(X0,X1),'const.sum.INR_1'(s(X1,X2))))))) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2] : p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(X0,X1),'const.sum.INR_1'(s(X1,X2))))))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ! [X0,X1] : ! [X2] : p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(X0,X1),'const.sum.INR_1'(s(X1,X2))))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6,X7] : ! [X8] : p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(X6,X7),'const.sum.INR_1'(s(X7,X8))))))),
  file('thm.quantHeuristics.ISR_exists','thm.sum.ISR|split|0')).
fof(f4029,plain,(
  $false | ($spl0 | $spl2 | $spl7)),
  inference(subsumption_resolution,[],[f4028,f132])).
fof(f132,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl7),
  inference(resolution,[],[f94,f128])).
fof(f94,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.quantHeuristics.ISR_exists','thm.bool.EQ_CLAUSES|split|1')).
fof(f4028,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f4006,f161])).
fof(f161,plain,(
  s(bool,'T_0') = s(bool,'const.sum.ISR_1'(s('type.sum.sum'(sK0,sK1),sK2))) | $spl0),
  inference(resolution,[],[f122,f95])).
fof(f95,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f70])).
fof(f4006,plain,(
  s(bool,'F_0') = s(bool,'const.sum.ISR_1'(s('type.sum.sum'(sK0,sK1),sK2))) | $spl2),
  inference(superposition,[],[f153,f4001])).
fof(f4001,plain,(
  s('type.sum.sum'(sK0,sK1),sK2) = s('type.sum.sum'(sK0,sK1),'const.sum.INL_1'(s(sK0,sK5(sK2,sK1,sK0)))) | $spl2),
  inference(equality_resolution,[],[f1974])).
fof(f1974,plain,(
  ( ! [X0] : (s('type.sum.sum'(sK0,sK1),sK2) != s('type.sum.sum'(sK0,sK1),X0) | s('type.sum.sum'(sK0,sK1),X0) = s('type.sum.sum'(sK0,sK1),'const.sum.INL_1'(s(sK0,sK5(X0,sK1,sK0))))) ) | $spl2),
  inference(superposition,[],[f124,f114])).
fof(f114,plain,(
  ( ! [X2,X0,X1] : (s('type.sum.sum'(X0,X1),X2) = s('type.sum.sum'(X0,X1),'const.sum.INR_1'(s(X1,sK6(X2,X1,X0)))) | s('type.sum.sum'(X0,X1),X2) = s('type.sum.sum'(X0,X1),'const.sum.INL_1'(s(X0,sK5(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0,X1,X2] : (s('type.sum.sum'(X0,X1),X2) = s('type.sum.sum'(X0,X1),'const.sum.INL_1'(s(X0,sK5(X2,X1,X0)))) | s('type.sum.sum'(X0,X1),X2) = s('type.sum.sum'(X0,X1),'const.sum.INR_1'(s(X1,sK6(X2,X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5,sK6])],[f49])).
fof(f49,plain,(
  ! [X0,X1,X2] : (? [X4] : s('type.sum.sum'(X0,X1),X2) = s('type.sum.sum'(X0,X1),'const.sum.INL_1'(s(X0,X4))) | ? [X3] : s('type.sum.sum'(X0,X1),X2) = s('type.sum.sum'(X0,X1),'const.sum.INR_1'(s(X1,X3))))),
  inference(flattening,[],[f48])).
fof(f48,plain,(
  ! [X0,X1] : ! [X2] : (? [X4] : s('type.sum.sum'(X0,X1),X2) = s('type.sum.sum'(X0,X1),'const.sum.INL_1'(s(X0,X4))) | ? [X3] : s('type.sum.sum'(X0,X1),X2) = s('type.sum.sum'(X0,X1),'const.sum.INR_1'(s(X1,X3))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6,X7] : ! [X15] : (? [X8] : s('type.sum.sum'(X6,X7),X15) = s('type.sum.sum'(X6,X7),'const.sum.INL_1'(s(X6,X8))) | ? [X13] : s('type.sum.sum'(X6,X7),X15) = s('type.sum.sum'(X6,X7),'const.sum.INR_1'(s(X7,X13))))),
  file('thm.quantHeuristics.ISR_exists','thm.sum.sum_CASES')).
fof(f153,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,'const.sum.ISR_1'(s('type.sum.sum'(X0,X1),'const.sum.INL_1'(s(X0,X2)))))) )),
  inference(resolution,[],[f115,f99])).
fof(f99,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.quantHeuristics.ISR_exists','thm.bool.EQ_CLAUSES|split|3')).
fof(f115,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(X1,X0),'const.sum.INL_1'(s(X1,X2))))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2] : ~p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(X1,X0),'const.sum.INL_1'(s(X1,X2))))))),
  inference(flattening,[],[f50])).
fof(f50,plain,(
  ! [X0,X1] : ! [X2] : ~p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(X1,X0),'const.sum.INL_1'(s(X1,X2))))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X7,X6] : ! [X13] : ~p(s(bool,'const.sum.ISR_1'(s('type.sum.sum'(X6,X7),'const.sum.INL_1'(s(X6,X13))))))),
  file('thm.quantHeuristics.ISR_exists','thm.sum.ISR|split|1')).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 79
% Passive clauses: 663
% Generated clauses: 3902
% Final active clauses: 72
% Final passive clauses: 522
% Input formulas: 24
% Initial clauses: 39
% 
% Duplicate literals: 126
% Trivial inequalities: 198
% Fw subsumption resolutions: 313
% Fw demodulations: 688
% Bw demodulations: 5
% 
% Simple tautologies: 105
% Equational tautologies: 23
% Forward subsumptions: 1816
% 
% Binary resolution: 59
% Factoring: 1
% Forward superposition: 890
% Backward superposition: 1488
% Self superposition: 38
% Equality factoring: 33
% Equality resolution: 13
% 
% Split clauses: 12
% Split components: 24
% SAT solver clauses: 32
% SAT solver unit clauses: 6
% SAT solver binary clauses: 16
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 12
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 27
% TWLsolver calls for satisfiability: 11
% 
% Memory used [KB]: 2302
% Time elapsed: 0.080 s
% ------------------------------
% ------------------------------
% Success in time 0.082 s
