Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.frac
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.frac
% SZS output start Proof for thm.frac
fof(f749,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f736])).
fof(f736,plain,(
  s('type.frac.frac',sK0) != s('type.frac.frac',sK0)),
  inference(superposition,[],[f48,f732])).
fof(f732,plain,(
  ( ! [X0] : (s('type.frac.frac',X0) = s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0)))))) )),
  inference(forward_demodulation,[],[f731,f54])).
fof(f54,plain,(
  ( ! [X0] : (s('type.frac.frac',X0) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) )),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0] : s('type.frac.frac',X0) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X10] : s('type.frac.frac',X10) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X10))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10)))))))),
  file('thm.frac.FRAC_AINV_AINV','thm.frac.FRAC')).
fof(f731,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) )),
  inference(forward_demodulation,[],[f720,f596])).
fof(f596,plain,(
  ( ! [X1] : (s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1)))))))) )),
  inference(superposition,[],[f588,f577])).
fof(f577,plain,(
  ( ! [X1] : (s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1)))))) )),
  inference(superposition,[],[f556,f55])).
fof(f55,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) )),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X6))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X6))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X6)))))))),
  file('thm.frac.FRAC_AINV_AINV','thm.frac.frac_ainv_def')).
fof(f556,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))))) )),
  inference(subsumption_resolution,[],[f549,f49])).
fof(f49,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.frac.FRAC_AINV_AINV','thm.bool.TRUTH')).
fof(f549,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))))) )),
  inference(superposition,[],[f67,f99])).
fof(f99,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) )),
  inference(resolution,[],[f53,f58])).
fof(f58,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X9] : (s(bool,'T_0') = s(bool,X9) <=> p(s(bool,X9)))),
  file('thm.frac.FRAC_AINV_AINV','thm.bool.EQ_CLAUSES|split|0')).
fof(f53,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))) )),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0] : p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X10] : p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))))))),
  file('thm.frac.FRAC_AINV_AINV','thm.frac.FRAC_DNMPOS')).
fof(f67,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))) )),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(ennf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X11,X12] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X12)))) => s('type.integer.int',X11) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int',X12))))))))),
  file('thm.frac.FRAC_AINV_AINV','thm.frac.NMR')).
fof(f588,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0)))))))) )),
  inference(superposition,[],[f52,f577])).
fof(f52,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X8] : s('type.integer.int',X8) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X8)))))),
  file('thm.frac.FRAC_AINV_AINV','thm.integer.INT_NEGNEG')).
fof(f720,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) )),
  inference(superposition,[],[f585,f636])).
fof(f636,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0)))))) )),
  inference(superposition,[],[f570,f585])).
fof(f570,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))))) )),
  inference(subsumption_resolution,[],[f563,f49])).
fof(f563,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))))) )),
  inference(superposition,[],[f68,f99])).
fof(f68,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(ennf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X11,X12] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X12)))) => s('type.integer.int',X12) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int',X12))))))))),
  file('thm.frac.FRAC_AINV_AINV','thm.frac.DNM')).
fof(f585,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) )),
  inference(backward_demodulation,[],[f577,f55])).
fof(f48,plain,(
  s('type.frac.frac',sK0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',sK0)))))),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  s('type.frac.frac',sK0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',sK0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f37])).
fof(f37,plain,(
  ? [X0] : s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0)))))),
  inference(ennf_transformation,[],[f19])).
fof(f19,plain,(
  ~! [X0] : s('type.frac.frac',X0) = s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.frac.frac',X6) = s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.frac.frac',X6) = s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X6)))))),
  file('thm.frac.FRAC_AINV_AINV','thm.frac.FRAC_AINV_AINV')).
% SZS output end Proof for thm.frac
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 40
% Passive clauses: 110
% Generated clauses: 669
% Final active clauses: 32
% Final passive clauses: 44
% Input formulas: 17
% Initial clauses: 22
% 
% Duplicate literals: 68
% Trivial inequalities: 20
% Fw subsumption resolutions: 54
% Fw demodulations: 14
% Bw demodulations: 6
% 
% Simple tautologies: 46
% Equational tautologies: 17
% Forward subsumptions: 335
% Fw demodulations to eq. taut.: 1
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 24
% Forward superposition: 206
% Backward superposition: 184
% Self superposition: 32
% Equality factoring: 26
% Equality resolution: 7
% 
% Split clauses: 8
% Split components: 21
% SAT solver clauses: 13
% SAT solver unit clauses: 2
% SAT solver binary clauses: 4
% 
% Sat splits: 8
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 13
% TWLsolver calls for satisfiability: 5
% 
% Memory used [KB]: 1023
% Time elapsed: 0.024 s
% ------------------------------
% ------------------------------
% Success in time 0.03 s
