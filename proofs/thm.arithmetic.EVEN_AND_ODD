Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f121,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f120,f53,f69,f49,f68,f70])).
fof(f70,plain,(
  p(s(bool,'T_0')) | $spl2),
  inference(cnf_transformation,[],[f70_D])).
fof(f70_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f68,plain,(
  p(s(bool,'F_0')) | $spl0),
  inference(cnf_transformation,[],[f68_D])).
fof(f68_D,plain,(
  p(s(bool,'F_0')) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f49,plain,(
  p(s(bool,'F_0')) | p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f17])).
fof(f17,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f14])).
fof(f14,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.arithmetic.EVEN_AND_ODD','thm.bool.NOT_CLAUSES|split|1')).
fof(f69,plain,(
  ~p(s(bool,'F_0')) | $spl1),
  inference(cnf_transformation,[],[f69_D])).
fof(f69_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f53,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.arithmetic.EVEN_AND_ODD',aHL_FALSITY)).
fof(f120,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f119,f70])).
fof(f119,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f118,f81])).
fof(f81,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) | $spl1),
  inference(subsumption_resolution,[],[f77,f69])).
fof(f77,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))),
  inference(superposition,[],[f45,f54])).
fof(f54,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.arithmetic.EVEN_AND_ODD',aHL_BOOL_CASES)).
fof(f45,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) & p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f31])).
fof(f31,plain,(
  ? [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) & p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))))),
  inference(ennf_transformation,[],[f16])).
fof(f16,plain,(
  ~! [X0] : ~(p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) & p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ~(p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6)))) & p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ~(p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6)))) & p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X6)))))),
  file('thm.arithmetic.EVEN_AND_ODD','thm.arithmetic.EVEN_AND_ODD')).
fof(f118,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f116,f70])).
fof(f116,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) | $spl1),
  inference(superposition,[],[f56,f82])).
fof(f82,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) | $spl1),
  inference(subsumption_resolution,[],[f78,f69])).
fof(f78,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))),
  inference(superposition,[],[f46,f54])).
fof(f46,plain,(
  p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f37])).
fof(f56,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) & (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) <=> ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))))),
  inference(flattening,[],[f21])).
fof(f21,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) <=> ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X6)))) <=> ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6)))))),
  file('thm.arithmetic.EVEN_AND_ODD','thm.arithmetic.ODD_EVEN')).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 13
% Passive clauses: 26
% Generated clauses: 74
% Final active clauses: 8
% Final passive clauses: 5
% Input formulas: 14
% Initial clauses: 23
% 
% Duplicate literals: 1
% Fw subsumption resolutions: 8
% Fw demodulations: 1
% Bw demodulations: 4
% 
% Simple tautologies: 9
% Equational tautologies: 2
% Forward subsumptions: 19
% 
% Binary resolution: 1
% Forward superposition: 14
% Backward superposition: 10
% Self superposition: 4
% Equality factoring: 2
% 
% Split clauses: 6
% Split components: 12
% SAT solver clauses: 13
% SAT solver unit clauses: 3
% SAT solver binary clauses: 9
% SAT solver learnt clauses: 1
% 
% Sat splits: 6
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 12
% TWLsolver calls for satisfiability: 5
% 
% Memory used [KB]: 639
% Time elapsed: 0.013 s
% ------------------------------
% ------------------------------
% Success in time 0.014 s
