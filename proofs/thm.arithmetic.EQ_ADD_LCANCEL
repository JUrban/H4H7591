Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.arithmetic
% (108374)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 278
% Passive clauses: 3909
% Generated clauses: 43024
% Final active clauses: 247
% Final passive clauses: 3462
% Input formulas: 69
% Initial clauses: 112
% 
% Duplicate literals: 129
% Trivial inequalities: 375
% Fw subsumption resolutions: 518
% Fw demodulations: 15461
% Bw demodulations: 25
% 
% Simple tautologies: 110
% Equational tautologies: 36
% Forward subsumptions: 22480
% Fw demodulations to eq. taut.: 26
% 
% Binary resolution: 221
% Factoring: 1
% Forward superposition: 7296
% Backward superposition: 18734
% Self superposition: 103
% Equality factoring: 52
% Equality resolution: 16
% 
% Split clauses: 88
% Split components: 177
% SAT solver clauses: 132
% SAT solver unit clauses: 9
% SAT solver binary clauses: 85
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 2
% 
% Sat splits: 88
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 130
% TWLsolver calls for satisfiability: 52
% 
% Memory used [KB]: 24306
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.arithmetic
% (108391)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 231
% Passive clauses: 2433
% Generated clauses: 19827
% Final active clauses: 109
% Final passive clauses: 704
% Input formulas: 69
% Initial clauses: 112
% 
% Duplicate literals: 8
% Trivial inequalities: 49
% Fw subsumption resolutions: 611
% Fw demodulations: 5058
% Bw demodulations: 1588
% Condensations: 8
% Global subsumptions: 13
% 
% Simple tautologies: 63
% Equational tautologies: 11
% Forward subsumptions: 8221
% Fw demodulations to eq. taut.: 26
% Bw demodulations to eq. taut.: 5
% 
% Binary resolution: 316
% Factoring: 1
% Forward superposition: 5059
% Backward superposition: 3855
% Self superposition: 42
% Equality factoring: 2
% Equality resolution: 13
% 
% Split clauses: 29
% Split components: 58
% SAT solver clauses: 2342
% SAT solver unit clauses: 162
% SAT solver binary clauses: 47
% SAT solver learnt clauses: 29
% SAT solver learnt literals: 4
% 
% Sat splits: 29
% Sat splitting refutations: 56
% 
% TWLsolver clauses: 2287
% TWLsolver calls for satisfiability: 484
% 
% Memory used [KB]: 16758
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 137 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f3619,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f212,f334,f332,f211,f333,f331,f353,f1007,f1015,f1013,f3607,f3574])).
fof(f3574,plain,(
  $false | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f331,f3259])).
fof(f3259,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',sK1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',sK2)))) ) | $spl3),
  inference(superposition,[],[f3213,f288])).
fof(f288,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))),
  file('thm.arithmetic.EQ_ADD_LCANCEL','thm.arithmetic.ADD_SYM')).
fof(f3213,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',X0)))) ) | $spl3),
  inference(superposition,[],[f3005,f288])).
fof(f3005,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',X0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK2),s('type.num.num',X0)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f334,f321])).
fof(f321,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f210])).
fof(f210,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))),
  inference(nnf_transformation,[],[f148])).
fof(f148,plain,(
  ! [X0,X1,X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6,X7,X8] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))) <=> s('type.num.num',X6) = s('type.num.num',X7))),
  file('thm.arithmetic.EQ_ADD_LCANCEL','thm.arithmetic.EQ_MONO_ADD_EQ')).
fof(f3607,plain,(
  $false | ($spl0 | $spl3)),
  inference(trivial_inequality_removal,[],[f3606])).
fof(f3606,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | ($spl0 | $spl3)),
  inference(superposition,[],[f3259,f331])).
fof(f1013,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK2) | $spl4),
  inference(cnf_transformation,[],[f1013_D])).
fof(f1013_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK2) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f1015,plain,(
  s('type.num.num',sK0) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | $spl7),
  inference(cnf_transformation,[],[f1015_D])).
fof(f1015_D,plain,(
  s('type.num.num',sK0) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f1007,plain,(
  s('type.num.num',sK0) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK2) | $spl0),
  inference(superposition,[],[f298,f331])).
fof(f298,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f161])).
fof(f161,plain,(
  ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1))),
  inference(ennf_transformation,[],[f131])).
fof(f131,plain,(
  ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) => s('type.num.num','const.num.|48|_0') = s('type.num.num',X1))),
  inference(rectify,[],[f68])).
fof(f68,axiom,(
  ! [X6,X7] : (s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))) => s('type.num.num','const.num.|48|_0') = s('type.num.num',X7))),
  file('thm.arithmetic.EQ_ADD_LCANCEL','thm.arithmetic.ADD_INV_|48|')).
fof(f353,plain,(
  $false | ($spl1 | $spl2)),
  inference(trivial_inequality_removal,[],[f352])).
fof(f352,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f332,f333])).
fof(f331,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK2))) | $spl0),
  inference(cnf_transformation,[],[f331_D])).
fof(f331_D,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK2))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f333,plain,(
  s('type.num.num',sK1) = s('type.num.num',sK2) | $spl2),
  inference(cnf_transformation,[],[f333_D])).
fof(f333_D,plain,(
  s('type.num.num',sK1) = s('type.num.num',sK2) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f211,plain,(
  s('type.num.num',sK1) = s('type.num.num',sK2) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK2)))),
  inference(cnf_transformation,[],[f166])).
fof(f166,plain,(
  (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK2))) | s('type.num.num',sK1) = s('type.num.num',sK2)) & (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK2))) | s('type.num.num',sK1) != s('type.num.num',sK2))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f165])).
fof(f165,plain,(
  ? [X0,X1,X2] : ((s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))) | s('type.num.num',X1) = s('type.num.num',X2)) & (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))) | s('type.num.num',X1) != s('type.num.num',X2)))),
  inference(nnf_transformation,[],[f149])).
fof(f149,plain,(
  ? [X0,X1,X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))) <~> s('type.num.num',X1) = s('type.num.num',X2))),
  inference(ennf_transformation,[],[f71])).
fof(f71,plain,(
  ~! [X0,X1,X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))) <=> s('type.num.num',X1) = s('type.num.num',X2))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X8))) <=> s('type.num.num',X7) = s('type.num.num',X8))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X8))) <=> s('type.num.num',X7) = s('type.num.num',X8))),
  file('thm.arithmetic.EQ_ADD_LCANCEL','thm.arithmetic.EQ_ADD_LCANCEL')).
fof(f332,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK2))) | $spl1),
  inference(cnf_transformation,[],[f332_D])).
fof(f332_D,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK2))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f334,plain,(
  s('type.num.num',sK1) != s('type.num.num',sK2) | $spl3),
  inference(cnf_transformation,[],[f334_D])).
fof(f334_D,plain,(
  s('type.num.num',sK1) != s('type.num.num',sK2) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f212,plain,(
  s('type.num.num',sK1) != s('type.num.num',sK2) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK2)))),
  inference(cnf_transformation,[],[f166])).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 96
% Passive clauses: 431
% Generated clauses: 3401
% Final active clauses: 85
% Final passive clauses: 307
% Input formulas: 69
% Initial clauses: 112
% 
% Duplicate literals: 2
% Trivial inequalities: 11
% Fw subsumption resolutions: 29
% Fw demodulations: 924
% Bw demodulations: 38
% Condensations: 7
% 
% Simple tautologies: 32
% Equational tautologies: 31
% Forward subsumptions: 1865
% Fw demodulations to eq. taut.: 63
% 
% Unit resulting resolution: 446
% Factoring: 1
% Forward superposition: 1303
% Backward superposition: 492
% Self superposition: 23
% Equality factoring: 2
% Equality resolution: 6
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 442
% SAT solver unit clauses: 115
% SAT solver binary clauses: 292
% 
% Sat splits: 3
% Sat splitting refutations: 3
% 
% Memory used [KB]: 3198
% Time elapsed: 0.115 s
% ------------------------------
% ------------------------------
% Success in time 1.39 s
