Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f9037,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f9028])).
fof(f9028,plain,(
  s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),sK11),s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,sK12),s('type.list.list'(sK10),sK13))))) != s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),sK11),s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,sK12),s('type.list.list'(sK10),sK13)))))),
  inference(superposition,[],[f258,f4061])).
fof(f4061,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),X5),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X6),s('type.list.list'(X4),X7))))) = s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.SNOC_2'(s(X4,X6),s('type.list.list'(X4),X5))),s('type.list.list'(X4),X7)))) )),
  inference(forward_demodulation,[],[f4050,f339])).
fof(f339,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),X2)))),
  inference(flattening,[],[f101])).
fof(f101,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),X2)))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X6] : ! [X8,X17] : s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X17))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),'const.list.NIL_0'))),s('type.list.list'(X6),X17)))),
  file('thm.rich_list.APPEND_SNOC|49|','thm.rich_list.CONS_APPEND')).
fof(f4050,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.SNOC_2'(s(X4,X6),s('type.list.list'(X4),X5))),s('type.list.list'(X4),X7))) = s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),X5),s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X6),s('type.list.list'(X4),'const.list.NIL_0'))),s('type.list.list'(X4),X7)))))) )),
  inference(superposition,[],[f341,f340])).
fof(f340,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))))),
  inference(flattening,[],[f103])).
fof(f103,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X6] : ! [X8,X17] : s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X8),s('type.list.list'(X6),X17))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),'const.list.NIL_0')))))),
  file('thm.rich_list.APPEND_SNOC|49|','thm.list.SNOC_APPEND')).
fof(f341,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),X3)))) )),
  inference(cnf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),X3)))),
  inference(flattening,[],[f105])).
fof(f105,plain,(
  ! [X0] : ! [X1,X2,X3] : s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),X3)))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X6] : ! [X7,X9,X16] : s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X9),s('type.list.list'(X6),X16))))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X9))),s('type.list.list'(X6),X16)))),
  file('thm.rich_list.APPEND_SNOC|49|','thm.list.APPEND_ASSOC')).
fof(f258,plain,(
  s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),'const.list.SNOC_2'(s(sK10,sK12),s('type.list.list'(sK10),sK11))),s('type.list.list'(sK10),sK13))) != s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),sK11),s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,sK12),s('type.list.list'(sK10),sK13)))))),
  inference(cnf_transformation,[],[f168])).
fof(f168,plain,(
  s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),'const.list.SNOC_2'(s(sK10,sK12),s('type.list.list'(sK10),sK11))),s('type.list.list'(sK10),sK13))) != s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),sK11),s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,sK12),s('type.list.list'(sK10),sK13)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12,sK13])],[f128])).
fof(f128,plain,(
  ? [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X2),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X3)))),
  inference(ennf_transformation,[],[f55])).
fof(f55,plain,(
  ~! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X2),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X3)))),
  inference(flattening,[],[f54])).
fof(f54,plain,(
  ~! [X0] : ! [X1,X2,X3] : s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X2),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X3)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X9))))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X8),s('type.list.list'(X6),X7))),s('type.list.list'(X6),X9)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X9))))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X8),s('type.list.list'(X6),X7))),s('type.list.list'(X6),X9)))),
  file('thm.rich_list.APPEND_SNOC|49|','thm.rich_list.APPEND_SNOC|49|')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 476
% Passive clauses: 3078
% Generated clauses: 8739
% Final active clauses: 438
% Final passive clauses: 2274
% Input formulas: 52
% Initial clauses: 189
% 
% Duplicate literals: 218
% Trivial inequalities: 70
% Fw subsumption resolutions: 911
% Fw demodulations: 38
% Bw demodulations: 37
% 
% Simple tautologies: 187
% Equational tautologies: 60
% Forward subsumptions: 4026
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 4369
% Factoring: 887
% Forward superposition: 870
% Backward superposition: 971
% Self superposition: 37
% Equality factoring: 26
% Equality resolution: 29
% 
% Split clauses: 226
% Split components: 458
% SAT solver clauses: 428
% SAT solver unit clauses: 9
% SAT solver binary clauses: 110
% 
% Sat splits: 226
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 426
% TWLsolver calls for satisfiability: 258
% 
% Memory used [KB]: 4093
% Time elapsed: 0.232 s
% ------------------------------
% ------------------------------
% Success in time 0.236 s
