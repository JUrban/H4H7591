Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.list
% (102561)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 150
% Passive clauses: 1895
% Generated clauses: 18668
% Final active clauses: 129
% Final passive clauses: 1611
% Input formulas: 23
% Initial clauses: 57
% 
% Duplicate literals: 943
% Trivial inequalities: 383
% Fw subsumption resolutions: 3283
% Fw demodulations: 1934
% Bw demodulations: 12
% 
% Simple tautologies: 515
% Equational tautologies: 61
% Forward subsumptions: 7901
% Bw demodulations to eq. taut.: 3
% 
% Binary resolution: 268
% Forward superposition: 4977
% Backward superposition: 6211
% Self superposition: 195
% Equality factoring: 159
% Equality resolution: 46
% 
% Split clauses: 1144
% Split components: 2395
% SAT solver clauses: 1805
% SAT solver unit clauses: 26
% SAT solver binary clauses: 152
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 1144
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 1801
% TWLsolver calls for satisfiability: 180
% 
% Memory used [KB]: 8955
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.list
% (102573)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 88
% Passive clauses: 322
% Generated clauses: 8604
% Final active clauses: 81
% Final passive clauses: 224
% Input formulas: 23
% Initial clauses: 57
% 
% Duplicate literals: 1078
% Trivial inequalities: 128
% Fw subsumption resolutions: 716
% Fw demodulations: 361
% Bw demodulations: 12
% Condensations: 1576
% Global subsumptions: 4
% 
% Simple tautologies: 285
% Equational tautologies: 62
% Forward subsumptions: 2715
% Bw demodulations to eq. taut.: 3
% 
% Binary resolution: 38
% Forward superposition: 1669
% Backward superposition: 2433
% Self superposition: 173
% Equality factoring: 162
% Equality resolution: 27
% 
% Split clauses: 156
% Split components: 317
% SAT solver clauses: 861
% SAT solver unit clauses: 48
% SAT solver binary clauses: 75
% SAT solver learnt clauses: 9
% SAT solver learnt literals: 1
% 
% Sat splits: 156
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 844
% TWLsolver calls for satisfiability: 293
% 
% Memory used [KB]: 6524
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f1461,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f94,f166,f93,f168,f164,f92,f169,f163,f511,f514,f506,f500,f517,f518,f520,f515,f632,f633,f644,f653,f677,f679,f757,f780,f784,f852,f854,f853,f909,f910,f917,f914,f911,f912,f920,f913,f922,f915,f919,f1031,f513,f1062,f1063,f1064,f519,f1056,f1066,f1067,f1080,f1078,f1081,f1083,f1082,f1269,f1272,f1270,f1451,f1454])).
fof(f1454,plain,(
  $false | ($spl1 | $spl6)),
  inference(subsumption_resolution,[],[f1453,f1396])).
fof(f1396,plain,(
  s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),sK0)))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),sK0)))) | ($spl1 | $spl6)),
  inference(unit_resulting_resolution,[],[f1273,f169])).
fof(f1273,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),sK0)),s('type.num.num',sK1)))) | $spl1),
  inference(unit_resulting_resolution,[],[f126,f164,f793])).
fof(f793,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK5(X3,'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2)),X0)),s('type.num.num',X2)))) | s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2)))) )),
  inference(forward_demodulation,[],[f787,f126])).
fof(f787,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK5(X3,'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2)),X0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2)))))))) | s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2)))) )),
  inference(superposition,[],[f131,f126])).
fof(f131,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK5(X2,X1,X0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),X2)) )),
  inference(cnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0,X1,X2] : ((s('type.list.list'(X0),X1) != s('type.list.list'(X0),X2) | (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) & ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s(X0,'const.list.EL_2'(s('type.num.num',X4),s('type.list.list'(X0),X1))) = s(X0,'const.list.EL_2'(s('type.num.num',X4),s('type.list.list'(X0),X2)))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK5(X2,X1,X0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) & s(X0,'const.list.EL_2'(s('type.num.num',sK5(X2,X1,X0)),s('type.list.list'(X0),X1))) != s(X0,'const.list.EL_2'(s('type.num.num',sK5(X2,X1,X0)),s('type.list.list'(X0),X2)))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5])],[f85])).
fof(f85,plain,(
  ! [X0,X1,X2] : ((s('type.list.list'(X0),X1) != s('type.list.list'(X0),X2) | (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) & ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s(X0,'const.list.EL_2'(s('type.num.num',X4),s('type.list.list'(X0),X1))) = s(X0,'const.list.EL_2'(s('type.num.num',X4),s('type.list.list'(X0),X2)))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | ? [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) & s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X1))) != s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X2)))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),X2)))),
  inference(rectify,[],[f84])).
fof(f84,plain,(
  ! [X0,X1,X2] : ((s('type.list.list'(X0),X1) != s('type.list.list'(X0),X2) | (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) & ! [X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X1))) = s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X2)))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | ? [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) & s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X1))) != s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X2)))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),X2)))),
  inference(flattening,[],[f83])).
fof(f83,plain,(
  ! [X0,X1,X2] : ((s('type.list.list'(X0),X1) != s('type.list.list'(X0),X2) | (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) & ! [X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X1))) = s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X2)))))) & ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | ? [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) & s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X1))) != s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X2))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),X2)))),
  inference(nnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1,X2] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),X2) <=> (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) & ! [X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X1))) = s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X2))))))),
  inference(ennf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),X2) <=> (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) & ! [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) => s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X1))) = s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X2))))))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ! [X0] : ! [X1,X2] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),X2) <=> (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) & ! [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) => s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X1))) = s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X2))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : ! [X18,X19] : (s('type.list.list'(X6),X18) = s('type.list.list'(X6),X19) <=> (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X18))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X19))) & ! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X18)))))) => s(X6,'const.list.EL_2'(s('type.num.num',X10),s('type.list.list'(X6),X18))) = s(X6,'const.list.EL_2'(s('type.num.num',X10),s('type.list.list'(X6),X19))))))),
  file('thm.list.GENLIST_FUN_EQ','thm.list.LIST_EQ_REWRITE')).
fof(f126,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2)))))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0,X1,X2] : s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2)))))),
  inference(flattening,[],[f42])).
fof(f42,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2)))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X6] : ! [X8,X7] : s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.GENLIST_2'(s(fun('type.num.num',X6),X8),s('type.num.num',X7)))))),
  file('thm.list.GENLIST_FUN_EQ','thm.list.LENGTH_GENLIST')).
fof(f1453,plain,(
  s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),sK0)))) != s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),sK0)))) | $spl1),
  inference(forward_demodulation,[],[f1452,f1397])).
fof(f1397,plain,(
  ( ! [X0,X1] : (s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),sK0)))) = s(X0,'const.list.EL_2'(s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),sK0)),s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',sK1)))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f1273,f683])).
fof(f683,plain,(
  ( ! [X4,X2,X5,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X2)))) | s(X4,happ(s(fun('type.num.num',X4),X5),s('type.num.num',X3))) = s(X4,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X4),'const.list.GENLIST_2'(s(fun('type.num.num',X4),X5),s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f635,f126])).
fof(f635,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X2)))) | s(X4,happ(s(fun('type.num.num',X4),X5),s('type.num.num',X3))) = s(X4,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X4),'const.list.GENLIST_2'(s(fun('type.num.num',X4),X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2)))))))))) )),
  inference(superposition,[],[f133,f126])).
fof(f133,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X2)))) | s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num',X3))) = s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2)))))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X2)))) | s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num',X3))) = s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2))))))),
  inference(ennf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X2)))) => s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num',X3))) = s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2))))))),
  inference(flattening,[],[f48])).
fof(f48,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X2)))) => s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num',X3))) = s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2))))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6] : ! [X8,X7,X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num',X7)))) => s(X6,happ(s(fun('type.num.num',X6),X8),s('type.num.num',X10))) = s(X6,'const.list.EL_2'(s('type.num.num',X10),s('type.list.list'(X6),'const.list.GENLIST_2'(s(fun('type.num.num',X6),X8),s('type.num.num',X7))))))),
  file('thm.list.GENLIST_FUN_EQ','thm.list.EL_GENLIST')).
fof(f1452,plain,(
  s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),sK0)))) != s(sK0,'const.list.EL_2'(s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),sK0)),s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1))))) | $spl1),
  inference(forward_demodulation,[],[f1442,f1397])).
fof(f1442,plain,(
  s(sK0,'const.list.EL_2'(s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),sK0)),s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1))))) != s(sK0,'const.list.EL_2'(s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),sK0)),s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1))))) | $spl1),
  inference(unit_resulting_resolution,[],[f126,f164,f860])).
fof(f860,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s(X0,'const.list.EL_2'(s('type.num.num',sK5(X3,'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2)),X0)),s('type.list.list'(X0),X3))) != s(X0,'const.list.EL_2'(s('type.num.num',sK5(X3,'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2)),X0)),s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2))))) | s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2)))) )),
  inference(superposition,[],[f132,f126])).
fof(f132,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | s(X0,'const.list.EL_2'(s('type.num.num',sK5(X2,X1,X0)),s('type.list.list'(X0),X1))) != s(X0,'const.list.EL_2'(s('type.num.num',sK5(X2,X1,X0)),s('type.list.list'(X0),X2))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),X2)) )),
  inference(cnf_transformation,[],[f86])).
fof(f1451,plain,(
  $false | ($spl1 | $spl6)),
  inference(subsumption_resolution,[],[f1450,f1419])).
fof(f1419,plain,(
  s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),sK0)))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),sK0)))) | ($spl1 | $spl6)),
  inference(unit_resulting_resolution,[],[f1274,f169])).
fof(f1274,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),sK0)),s('type.num.num',sK1)))) | $spl1),
  inference(unit_resulting_resolution,[],[f126,f164,f793])).
fof(f1450,plain,(
  s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),sK0)))) != s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),sK0)))) | $spl1),
  inference(forward_demodulation,[],[f1449,f1420])).
fof(f1420,plain,(
  ( ! [X0,X1] : (s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),sK0)))) = s(X0,'const.list.EL_2'(s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),sK0)),s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',sK1)))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f1274,f683])).
fof(f1449,plain,(
  s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),sK0)))) != s(sK0,'const.list.EL_2'(s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),sK0)),s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1))))) | $spl1),
  inference(forward_demodulation,[],[f1443,f1420])).
fof(f1443,plain,(
  s(sK0,'const.list.EL_2'(s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),sK0)),s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1))))) != s(sK0,'const.list.EL_2'(s('type.num.num',sK5('const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1)),sK0)),s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1))))) | $spl1),
  inference(unit_resulting_resolution,[],[f126,f164,f860])).
fof(f1270,plain,(
  ( ! [X52,X51] : (s(fun(bool,bool),X51) = s(fun(bool,bool),X52)) ) | $spl46),
  inference(cnf_transformation,[],[f1270_D])).
fof(f1270_D,plain,(
  ( ! [X52,X51] : (s(fun(bool,bool),X51) = s(fun(bool,bool),X52)) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f1272,plain,(
  s(bool,'T_0') != s(bool,g(s(bool,'T_0'))) | $spl49),
  inference(cnf_transformation,[],[f1272_D])).
fof(f1272_D,plain,(
  s(bool,'T_0') != s(bool,g(s(bool,'T_0'))) <=> ~$spl49),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl49])])).
fof(f1269,plain,(
  ( ! [X52,X51] : (s(bool,'T_0') != s(bool,g(s(bool,'T_0'))) | s(fun(bool,bool),X51) = s(fun(bool,bool),X52)) ) | ($spl24 | $spl41)),
  inference(forward_demodulation,[],[f1255,f1095])).
fof(f1095,plain,(
  s(bool,'T_0') = s(bool,f(s(bool,'T_0'))) | $spl41),
  inference(unit_resulting_resolution,[],[f170,f1080,f179])).
fof(f179,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f98,f98])).
fof(f98,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.list.GENLIST_FUN_EQ',aHL_BOOL_CASES)).
fof(f170,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f97,f99])).
fof(f99,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.list.GENLIST_FUN_EQ','thm.bool.EQ_CLAUSES|split|1')).
fof(f97,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.list.GENLIST_FUN_EQ',aHL_FALSITY)).
fof(f1255,plain,(
  ( ! [X52,X51] : (s(bool,f(s(bool,'T_0'))) != s(bool,g(s(bool,'T_0'))) | s(fun(bool,bool),X51) = s(fun(bool,bool),X52)) ) | $spl24),
  inference(duplicate_literal_removal,[],[f1254])).
fof(f1254,plain,(
  ( ! [X52,X51] : (s(bool,f(s(bool,'T_0'))) != s(bool,g(s(bool,'T_0'))) | s(fun(bool,bool),X51) = s(fun(bool,bool),X52) | s(fun(bool,bool),X51) = s(fun(bool,bool),X52)) ) | $spl24),
  inference(superposition,[],[f134,f915])).
fof(f134,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK6(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK6(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK6(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK6(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6])],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f50])).
fof(f50,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.list.GENLIST_FUN_EQ',aHL_EXT)).
fof(f1082,plain,(
  ( ! [X3] : (s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X3))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X3)))) ) | $spl42),
  inference(cnf_transformation,[],[f1082_D])).
fof(f1082_D,plain,(
  ( ! [X3] : (s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X3))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X3)))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f1083,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,f(s(X0,sK6(X1,X2,bool,X0)))) | s(bool,'T_0') = s(bool,g(s(X0,sK6(X1,X2,bool,X0))))) ) | $spl44),
  inference(cnf_transformation,[],[f1083_D])).
fof(f1083_D,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,f(s(X0,sK6(X1,X2,bool,X0)))) | s(bool,'T_0') = s(bool,g(s(X0,sK6(X1,X2,bool,X0))))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f1081,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK6(X1,X2,bool,X0)))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X3))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,f(s(X0,sK6(X1,X2,bool,X0))))) ) | ($spl6 | $spl12)),
  inference(subsumption_resolution,[],[f1071,f515])).
fof(f1071,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',sK1))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK6(X1,X2,bool,X0)))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X3))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,f(s(X0,sK6(X1,X2,bool,X0))))) ) | $spl6),
  inference(superposition,[],[f443,f785])).
fof(f785,plain,(
  ( ! [X0,X1] : (s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X0))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X0))) | s(bool,X1) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X1)) ) | $spl6),
  inference(subsumption_resolution,[],[f774,f95])).
fof(f95,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.list.GENLIST_FUN_EQ',aHL_TRUTH)).
fof(f774,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X0))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X0))) | s(bool,X1) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X1)) ) | $spl6),
  inference(superposition,[],[f169,f179])).
fof(f443,plain,(
  ( ! [X17,X18,X16] : (s(bool,'F_0') != s(bool,f(s(X16,sK6(X17,X18,bool,X16)))) | s(fun(X16,bool),X17) = s(fun(X16,bool),X18) | s(bool,'T_0') = s(bool,g(s(X16,sK6(X17,X18,bool,X16))))) )),
  inference(superposition,[],[f134,f98])).
fof(f1078,plain,(
  ( ! [X4,X5,X3] : (s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,X5) | s(bool,X5) = s(bool,sK6(X3,X4,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK6(X3,X4,bool,bool))))) ) | $spl38),
  inference(cnf_transformation,[],[f1078_D])).
fof(f1078_D,plain,(
  ( ! [X4,X5,X3] : (s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,X5) | s(bool,X5) = s(bool,sK6(X3,X4,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK6(X3,X4,bool,bool))))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f1080,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | $spl41),
  inference(cnf_transformation,[],[f1080_D])).
fof(f1080_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) <=> ~$spl41),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl41])])).
fof(f1067,plain,(
  ( ! [X6,X8,X7] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X6) = s(fun(bool,bool),X7) | s(bool,'T_0') = s(bool,g(s(bool,sK6(X6,X7,bool,bool)))) | s(bool,X8) = s(bool,sK6(X6,X7,bool,bool)) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f443,f179])).
fof(f1066,plain,(
  ( ! [X4,X5,X3] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,g(s(bool,sK6(X3,X4,bool,bool)))) | s(bool,X5) = s(bool,sK6(X3,X4,bool,bool)) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f443,f179])).
fof(f1056,plain,(
  ( ! [X45,X44] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X44),s('type.num.num',sK1))) != s(bool,happ(s(fun('type.num.num',bool),X45),s('type.num.num',sK4))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X44))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X44))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X45),s('type.num.num',sK4)))) ) | $spl34),
  inference(cnf_transformation,[],[f1056_D])).
fof(f1056_D,plain,(
  ( ! [X45,X44] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X44),s('type.num.num',sK1))) != s(bool,happ(s(fun('type.num.num',bool),X45),s('type.num.num',sK4))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X44))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X44))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X45),s('type.num.num',sK4)))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f519,plain,(
  ( ! [X5] : (p(s(bool,X5))) ) | $spl16),
  inference(cnf_transformation,[],[f519_D])).
fof(f519_D,plain,(
  ( ! [X5] : (p(s(bool,X5))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f1064,plain,(
  ( ! [X47,X45,X46] : (p(s(bool,X46)) | s(bool,'const.prim_rec.<_2'(s('type.num.num',X45),s('type.num.num',sK1))) != s(bool,happ(s(fun('type.num.num',bool),X47),s('type.num.num',sK4))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X47),s('type.num.num',sK4))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X45))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X45)))) ) | ($spl4 | $spl6)),
  inference(subsumption_resolution,[],[f1021,f99])).
fof(f1021,plain,(
  ( ! [X47,X45,X46] : (p(s(bool,X46)) | s(bool,'const.prim_rec.<_2'(s('type.num.num',X45),s('type.num.num',sK1))) != s(bool,happ(s(fun('type.num.num',bool),X47),s('type.num.num',sK4))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X47),s('type.num.num',sK4))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X45))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X45))) | s(bool,'T_0') = s(bool,X46)) ) | ($spl4 | $spl6)),
  inference(superposition,[],[f839,f785])).
fof(f839,plain,(
  ( ! [X6,X5] : (p(s(bool,X6)) | s(bool,X6) != s(bool,happ(s(fun('type.num.num',bool),X5),s('type.num.num',sK4))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X5),s('type.num.num',sK4)))) ) | $spl4),
  inference(forward_demodulation,[],[f838,f682])).
fof(f682,plain,(
  ( ! [X0,X1] : (s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num',sK4))) = s(X0,'const.list.EL_2'(s('type.num.num',sK4),s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',sK1)))))) ) | $spl4),
  inference(subsumption_resolution,[],[f636,f95])).
fof(f636,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num',sK4))) = s(X0,'const.list.EL_2'(s('type.num.num',sK4),s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',sK1)))))) ) | $spl4),
  inference(superposition,[],[f133,f525])).
fof(f525,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4),s('type.num.num',sK1))) | $spl4),
  inference(unit_resulting_resolution,[],[f168,f100])).
fof(f100,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f65])).
fof(f838,plain,(
  ( ! [X6,X5] : (s(bool,X6) != s(bool,'const.list.EL_2'(s('type.num.num',sK4),s('type.list.list'(bool),'const.list.GENLIST_2'(s(fun('type.num.num',bool),X5),s('type.num.num',sK1))))) | p(s(bool,X6)) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X5),s('type.num.num',sK4)))) ) | $spl4),
  inference(subsumption_resolution,[],[f820,f95])).
fof(f820,plain,(
  ( ! [X6,X5] : (~p(s(bool,'T_0')) | s(bool,X6) != s(bool,'const.list.EL_2'(s('type.num.num',sK4),s('type.list.list'(bool),'const.list.GENLIST_2'(s(fun('type.num.num',bool),X5),s('type.num.num',sK1))))) | p(s(bool,X6)) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X5),s('type.num.num',sK4)))) ) | $spl4),
  inference(superposition,[],[f160,f736])).
fof(f736,plain,(
  ( ! [X10] : (s(bool,'T_0') = s(bool,'const.list.EL_2'(s('type.num.num',sK4),s('type.list.list'(bool),'const.list.GENLIST_2'(s(fun('type.num.num',bool),X10),s('type.num.num',sK1))))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X10),s('type.num.num',sK4)))) ) | $spl4),
  inference(superposition,[],[f682,f98])).
fof(f160,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | s(bool,X0) != s(bool,X1) | p(s(bool,X1))) )),
  inference(condensation,[],[f159])).
fof(f159,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1) | s(bool,X0) != s(bool,X2)) )),
  inference(condensation,[],[f148])).
fof(f148,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | ~p(s(bool,X1)) | p(s(bool,X3))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | ~p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(flattening,[],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) | p(s(bool,X3)))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | (~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(flattening,[],[f60])).
fof(f60,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3))) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(ennf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) = s(bool,X1) & (p(s(bool,X1)) => s(bool,X2) = s(bool,X3))) => ((p(s(bool,X0)) => p(s(bool,X2))) <=> (p(s(bool,X1)) => p(s(bool,X3)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X10,X16,X12,X17] : ((s(bool,X10) = s(bool,X16) & (p(s(bool,X16)) => s(bool,X12) = s(bool,X17))) => ((p(s(bool,X10)) => p(s(bool,X12))) <=> (p(s(bool,X16)) => p(s(bool,X17)))))),
  file('thm.list.GENLIST_FUN_EQ','thm.bool.IMP_CONG')).
fof(f1063,plain,(
  ( ! [X39,X38,X36] : (s(bool,X38) != s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num',sK1))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X36))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X36))) | s(bool,'T_0') = s(bool,X39) | s(bool,X38) = s(bool,X39)) ) | $spl36),
  inference(cnf_transformation,[],[f1063_D])).
fof(f1063_D,plain,(
  ( ! [X39,X38,X36] : (s(bool,X38) != s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num',sK1))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X36))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X36))) | s(bool,'T_0') = s(bool,X39) | s(bool,X38) = s(bool,X39)) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f1062,plain,(
  ( ! [X39,X37,X38,X36] : (p(s(bool,X37)) | s(bool,X38) != s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num',sK1))) | s(bool,X38) = s(bool,X39) | s(bool,'T_0') = s(bool,X39) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X36))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X36)))) ) | $spl6),
  inference(subsumption_resolution,[],[f1018,f99])).
fof(f1018,plain,(
  ( ! [X39,X37,X38,X36] : (p(s(bool,X37)) | s(bool,X38) != s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num',sK1))) | s(bool,X38) = s(bool,X39) | s(bool,'T_0') = s(bool,X39) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X36))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X36))) | s(bool,'T_0') = s(bool,X37)) ) | $spl6),
  inference(superposition,[],[f405,f785])).
fof(f405,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X11)) | s(bool,X10) != s(bool,X11) | s(bool,X10) = s(bool,X12) | s(bool,'T_0') = s(bool,X12)) )),
  inference(subsumption_resolution,[],[f288,f95])).
fof(f288,plain,(
  ( ! [X12,X10,X11] : (~p(s(bool,'T_0')) | s(bool,X10) != s(bool,X11) | p(s(bool,X11)) | s(bool,X10) = s(bool,X12) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f160,f179])).
fof(f513,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f513_D])).
fof(f513_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f1031,plain,(
  ( ! [X45,X43,X44] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X44),s('type.num.num',sK1))) != s(bool,happ(s(fun('type.num.num',bool),X45),s('type.num.num',sK4))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X45),s('type.num.num',sK4))) | s(bool,'T_0') = s(bool,X43) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X44))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X44)))) ) | ($spl4 | $spl6)),
  inference(duplicate_literal_removal,[],[f993])).
fof(f993,plain,(
  ( ! [X45,X43,X44] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X44),s('type.num.num',sK1))) != s(bool,happ(s(fun('type.num.num',bool),X45),s('type.num.num',sK4))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X45),s('type.num.num',sK4))) | s(bool,'T_0') = s(bool,X43) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X44))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X44))) | s(bool,'T_0') = s(bool,X43)) ) | ($spl4 | $spl6)),
  inference(superposition,[],[f855,f785])).
fof(f855,plain,(
  ( ! [X12,X13] : (s(bool,X12) != s(bool,happ(s(fun('type.num.num',bool),X13),s('type.num.num',sK4))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X13),s('type.num.num',sK4))) | s(bool,'T_0') = s(bool,X12)) ) | $spl4),
  inference(subsumption_resolution,[],[f845,f97])).
fof(f845,plain,(
  ( ! [X12,X13] : (p(s(bool,'F_0')) | s(bool,X12) != s(bool,happ(s(fun('type.num.num',bool),X13),s('type.num.num',sK4))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X13),s('type.num.num',sK4))) | s(bool,'T_0') = s(bool,X12)) ) | $spl4),
  inference(superposition,[],[f839,f98])).
fof(f919,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | $spl28),
  inference(cnf_transformation,[],[f919_D])).
fof(f919_D,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f915,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,sK6(X0,X1,bool,bool)) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1)) ) | $spl24),
  inference(cnf_transformation,[],[f915_D])).
fof(f915_D,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,sK6(X0,X1,bool,bool)) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1)) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f922,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | $spl33),
  inference(cnf_transformation,[],[f922_D])).
fof(f922_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl33),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl33])])).
fof(f913,plain,(
  ( ! [X12,X13] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X12) = s(fun(bool,bool),X13) | s(bool,'T_0') = s(bool,sK6(X12,X13,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f438,f98])).
fof(f438,plain,(
  ( ! [X17,X18,X16] : (s(X18,f(s(bool,'F_0'))) != s(X18,g(s(bool,'F_0'))) | s(fun(bool,X18),X16) = s(fun(bool,X18),X17) | s(bool,'T_0') = s(bool,sK6(X16,X17,X18,bool))) )),
  inference(superposition,[],[f134,f98])).
fof(f920,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) | $spl30),
  inference(cnf_transformation,[],[f920_D])).
fof(f920_D,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f912,plain,(
  ( ! [X10,X11,X9] : (s(bool,X9) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X10) = s(fun(bool,bool),X11) | s(bool,'T_0') = s(bool,sK6(X10,X11,bool,bool)) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f438,f179])).
fof(f911,plain,(
  ( ! [X6,X8,X7] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X7) = s(fun(bool,bool),X8) | s(bool,'T_0') = s(bool,sK6(X7,X8,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f438,f179])).
fof(f914,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) | $spl22),
  inference(cnf_transformation,[],[f914_D])).
fof(f914_D,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f917,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | $spl27),
  inference(cnf_transformation,[],[f917_D])).
fof(f917_D,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl27),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl27])])).
fof(f910,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,sK6(X3,X4,bool,bool)) | s(bool,X5) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f438,f179])).
fof(f909,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK6(X0,X1,bool,bool)) | s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f438,f179])).
fof(f853,plain,(
  ( ! [X6,X8] : (s(bool,X6) != s(bool,happ(s(fun('type.num.num',bool),X8),s('type.num.num',sK4))) | s(bool,'T_0') = s(bool,X6) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X8),s('type.num.num',sK4)))) ) | $spl20),
  inference(cnf_transformation,[],[f853_D])).
fof(f853_D,plain,(
  ( ! [X6,X8] : (s(bool,X6) != s(bool,happ(s(fun('type.num.num',bool),X8),s('type.num.num',sK4))) | s(bool,'T_0') = s(bool,X6) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X8),s('type.num.num',sK4)))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f854,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X10)) | s(bool,X9) != s(bool,happ(s(fun('type.num.num',bool),X11),s('type.num.num',sK4))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X11),s('type.num.num',sK4))) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(subsumption_resolution,[],[f844,f99])).
fof(f844,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X10)) | s(bool,X9) != s(bool,happ(s(fun('type.num.num',bool),X11),s('type.num.num',sK4))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X11),s('type.num.num',sK4))) | s(bool,'T_0') = s(bool,X10) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(superposition,[],[f839,f179])).
fof(f852,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X7)) | s(bool,X6) != s(bool,happ(s(fun('type.num.num',bool),X8),s('type.num.num',sK4))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X8),s('type.num.num',sK4))) | s(bool,'T_0') = s(bool,X6)) ) | $spl4),
  inference(subsumption_resolution,[],[f843,f99])).
fof(f843,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X7)) | s(bool,X6) != s(bool,happ(s(fun('type.num.num',bool),X8),s('type.num.num',sK4))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X8),s('type.num.num',sK4))) | s(bool,'T_0') = s(bool,X6) | s(bool,'T_0') = s(bool,X7)) ) | $spl4),
  inference(superposition,[],[f839,f179])).
fof(f784,plain,(
  $false | ($spl3 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f783,f166])).
fof(f783,plain,(
  s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK4))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK4))) | ($spl4 | $spl6)),
  inference(subsumption_resolution,[],[f773,f95])).
fof(f773,plain,(
  ~p(s(bool,'T_0')) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK4))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK4))) | ($spl4 | $spl6)),
  inference(superposition,[],[f169,f525])).
fof(f780,plain,(
  $false | ($spl3 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f779,f95])).
fof(f779,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f770,f525])).
fof(f770,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4),s('type.num.num',sK1)))) | ($spl3 | $spl6)),
  inference(unit_resulting_resolution,[],[f166,f169])).
fof(f757,plain,(
  $false | ($spl0 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f756,f166])).
fof(f756,plain,(
  s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK4))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK4))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f731,f682])).
fof(f731,plain,(
  s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK4))) = s(sK0,'const.list.EL_2'(s('type.num.num',sK4),s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1))))) | ($spl0 | $spl4)),
  inference(superposition,[],[f682,f163])).
fof(f679,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f678,f519])).
fof(f678,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl16),
  inference(subsumption_resolution,[],[f668,f652])).
fof(f652,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(unit_resulting_resolution,[],[f519,f100])).
fof(f668,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | $spl16),
  inference(backward_demodulation,[],[f652,f103])).
fof(f103,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.list.GENLIST_FUN_EQ','thm.bool.EQ_CLAUSES|split|3')).
fof(f677,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f667,f95])).
fof(f667,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(backward_demodulation,[],[f652,f97])).
fof(f653,plain,(
  $false | $spl16),
  inference(unit_resulting_resolution,[],[f170,f519,f100])).
fof(f644,plain,(
  $false | $spl16),
  inference(unit_resulting_resolution,[],[f97,f519])).
fof(f633,plain,(
  ( ! [X28,X29] : (s(bool,'F_0') != s(bool,X28) | s(bool,'T_0') = s(bool,X29) | s(bool,X28) = s(bool,X29)) ) | $spl18),
  inference(cnf_transformation,[],[f633_D])).
fof(f633_D,plain,(
  ( ! [X28,X29] : (s(bool,'F_0') != s(bool,X28) | s(bool,'T_0') = s(bool,X29) | s(bool,X28) = s(bool,X29)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f632,plain,(
  ( ! [X28,X29,X27] : (p(s(bool,X27)) | s(bool,'F_0') != s(bool,X28) | s(bool,X28) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) )),
  inference(subsumption_resolution,[],[f621,f99])).
fof(f621,plain,(
  ( ! [X28,X29,X27] : (p(s(bool,X27)) | s(bool,'F_0') != s(bool,X28) | s(bool,X28) = s(bool,X29) | s(bool,'T_0') = s(bool,X29) | s(bool,'T_0') = s(bool,X27)) )),
  inference(superposition,[],[f405,f98])).
fof(f515,plain,(
  ( ! [X16] : (s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X16))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X16))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num',sK1)))) ) | $spl12),
  inference(cnf_transformation,[],[f515_D])).
fof(f515_D,plain,(
  ( ! [X16] : (s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X16))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X16))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num',sK1)))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f520,plain,(
  ( ! [X10,X11] : (p(s(bool,X11)) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num',sK1))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X10))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X10)))) ) | $spl6),
  inference(subsumption_resolution,[],[f480,f99])).
fof(f480,plain,(
  ( ! [X10,X11] : (p(s(bool,X11)) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num',sK1))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X10))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X10))) | s(bool,'T_0') = s(bool,X11)) ) | $spl6),
  inference(superposition,[],[f104,f408])).
fof(f408,plain,(
  ( ! [X24,X23] : (s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X23))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X23))) | s(bool,X24) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X24)) ) | $spl6),
  inference(subsumption_resolution,[],[f295,f95])).
fof(f295,plain,(
  ( ! [X24,X23] : (~p(s(bool,'T_0')) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X23))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X23))) | s(bool,X24) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X24)) ) | $spl6),
  inference(superposition,[],[f169,f179])).
fof(f104,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f67])).
fof(f518,plain,(
  ( ! [X4] : (s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X4))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X4))) | s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',sK1)))) ) | $spl14),
  inference(cnf_transformation,[],[f518_D])).
fof(f518_D,plain,(
  ( ! [X4] : (s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X4))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X4))) | s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',sK1)))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f517,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',sK1))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X4))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X4)))) ) | $spl6),
  inference(subsumption_resolution,[],[f477,f99])).
fof(f477,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',sK1))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X4))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X4))) | s(bool,'T_0') = s(bool,X5)) ) | $spl6),
  inference(superposition,[],[f99,f408])).
fof(f500,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X1))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X1)))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f460])).
fof(f460,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X1))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl6),
  inference(superposition,[],[f98,f408])).
fof(f506,plain,(
  ( ! [X15,X16] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num',sK1))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X16))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X16))) | s(bool,'T_0') = s(bool,X15)) ) | $spl6),
  inference(duplicate_literal_removal,[],[f450])).
fof(f450,plain,(
  ( ! [X15,X16] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num',sK1))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X16))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X16))) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,X15)) ) | $spl6),
  inference(superposition,[],[f408,f98])).
fof(f514,plain,(
  ( ! [X2,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',sK1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',sK1))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X1))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X1))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X2))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X2)))) ) | $spl10),
  inference(cnf_transformation,[],[f514_D])).
fof(f514_D,plain,(
  ( ! [X2,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',sK1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',sK1))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X1))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X1))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X2))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X2)))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f511,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',sK1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',sK1))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X2))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,X0) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X1))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X1)))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f445])).
fof(f445,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',sK1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',sK1))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X2))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,X0) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X1))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl6),
  inference(superposition,[],[f408,f408])).
fof(f163,plain,(
  s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1))) = s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1))) | $spl0),
  inference(cnf_transformation,[],[f163_D])).
fof(f163_D,plain,(
  s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1))) = s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f169,plain,(
  ( ! [X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num',sK1)))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X5))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X5)))) ) | $spl6),
  inference(cnf_transformation,[],[f169_D])).
fof(f169_D,plain,(
  ( ! [X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num',sK1)))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X5))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X5)))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f92,plain,(
  ( ! [X5] : (s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X5))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X5))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num',sK1)))) | s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1))) = s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)))) )),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  (s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1))) = s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1))) | ! [X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num',sK1)))) | s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',X5))) = s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',X5))))) & (s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1))) != s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4),s('type.num.num',sK1)))) & s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK4))) != s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK4)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f63])).
fof(f63,plain,(
  ? [X0,X1,X2,X3] : ((s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) = s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) | ! [X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num',X1)))) | s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X5))) = s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X5))))) & (s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) != s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) | ? [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X1)))) & s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))) != s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X4))))))),
  inference(rectify,[],[f62])).
fof(f62,plain,(
  ? [X0,X1,X2,X3] : ((s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) = s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) | ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X1)))) | s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))) = s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X4))))) & (s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) != s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) | ? [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X1)))) & s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))) != s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X4))))))),
  inference(nnf_transformation,[],[f54])).
fof(f54,plain,(
  ? [X0,X1,X2,X3] : (s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) = s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) <~> ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X1)))) | s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))) = s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X4)))))),
  inference(ennf_transformation,[],[f26])).
fof(f26,plain,(
  ~! [X0,X1,X2,X3] : (s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) = s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) <=> ! [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X1)))) => s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))) = s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X4)))))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ~! [X0] : ! [X1,X2,X3] : (s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X2),s('type.num.num',X1))) = s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) <=> ! [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X1)))) => s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))) = s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X4)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : (s('type.list.list'(X6),'const.list.GENLIST_2'(s(fun('type.num.num',X6),X8),s('type.num.num',X7))) = s('type.list.list'(X6),'const.list.GENLIST_2'(s(fun('type.num.num',X6),X9),s('type.num.num',X7))) <=> ! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num',X7)))) => s(X6,happ(s(fun('type.num.num',X6),X8),s('type.num.num',X10))) = s(X6,happ(s(fun('type.num.num',X6),X9),s('type.num.num',X10)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : (s('type.list.list'(X6),'const.list.GENLIST_2'(s(fun('type.num.num',X6),X8),s('type.num.num',X7))) = s('type.list.list'(X6),'const.list.GENLIST_2'(s(fun('type.num.num',X6),X9),s('type.num.num',X7))) <=> ! [X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num',X7)))) => s(X6,happ(s(fun('type.num.num',X6),X8),s('type.num.num',X10))) = s(X6,happ(s(fun('type.num.num',X6),X9),s('type.num.num',X10)))))),
  file('thm.list.GENLIST_FUN_EQ','thm.list.GENLIST_FUN_EQ')).
fof(f164,plain,(
  s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1))) != s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1))) | $spl1),
  inference(cnf_transformation,[],[f164_D])).
fof(f164_D,plain,(
  s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1))) != s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f168,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4),s('type.num.num',sK1)))) | $spl4),
  inference(cnf_transformation,[],[f168_D])).
fof(f168_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4),s('type.num.num',sK1)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f93,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4),s('type.num.num',sK1)))) | s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1))) != s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)))),
  inference(cnf_transformation,[],[f64])).
fof(f166,plain,(
  s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK4))) != s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK4))) | $spl3),
  inference(cnf_transformation,[],[f166_D])).
fof(f166_D,plain,(
  s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK4))) != s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK4))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f94,plain,(
  s(sK0,happ(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK4))) != s(sK0,happ(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK4))) | s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK2),s('type.num.num',sK1))) != s('type.list.list'(sK0),'const.list.GENLIST_2'(s(fun('type.num.num',sK0),sK3),s('type.num.num',sK1)))),
  inference(cnf_transformation,[],[f64])).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 59
% Passive clauses: 119
% Generated clauses: 1347
% Final active clauses: 44
% Final passive clauses: 47
% Input formulas: 23
% Initial clauses: 57
% 
% Duplicate literals: 113
% Trivial inequalities: 23
% Fw subsumption resolutions: 83
% Fw demodulations: 126
% Bw demodulations: 13
% Condensations: 125
% 
% Simple tautologies: 62
% Equational tautologies: 45
% Forward subsumptions: 617
% Fw demodulations to eq. taut.: 2
% Bw demodulations to eq. taut.: 1
% 
% Unit resulting resolution: 121
% Forward superposition: 332
% Backward superposition: 241
% Self superposition: 32
% Equality factoring: 30
% Equality resolution: 14
% 
% Split clauses: 23
% Split components: 51
% SAT solver clauses: 176
% SAT solver unit clauses: 9
% SAT solver binary clauses: 45
% 
% Sat splits: 23
% Sat splitting refutations: 9
% 
% Memory used [KB]: 1791
% Time elapsed: 0.046 s
% ------------------------------
% ------------------------------
% Success in time 1.365 s
