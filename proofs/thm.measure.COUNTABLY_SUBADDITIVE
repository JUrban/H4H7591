Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.measure
% (99128)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1002
% Passive clauses: 9198
% Generated clauses: 24107
% Final active clauses: 998
% Final passive clauses: 7891
% Input formulas: 66
% Initial clauses: 248
% 
% Duplicate literals: 378
% Trivial inequalities: 86
% Fw subsumption resolutions: 2967
% Fw demodulations: 1397
% Bw demodulations: 3
% 
% Simple tautologies: 293
% Equational tautologies: 36
% Forward subsumptions: 9014
% 
% Binary resolution: 9695
% Factoring: 776
% Forward superposition: 2756
% Backward superposition: 5535
% Self superposition: 26
% Equality factoring: 26
% Equality resolution: 7
% 
% Split clauses: 715
% Split components: 1436
% SAT solver clauses: 1049
% SAT solver unit clauses: 18
% SAT solver binary clauses: 213
% 
% Sat splits: 715
% 
% TWLsolver clauses: 1049
% TWLsolver calls for satisfiability: 468
% 
% Memory used [KB]: 12792
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.measure
% (99140)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 524
% Passive clauses: 3399
% Generated clauses: 16528
% Final active clauses: 488
% Final passive clauses: 2421
% Input formulas: 66
% Initial clauses: 248
% 
% Duplicate literals: 321
% Trivial inequalities: 97
% Fw subsumption resolutions: 1333
% Fw demodulations: 1005
% Bw demodulations: 481
% Condensations: 539
% Global subsumptions: 22
% 
% Simple tautologies: 367
% Equational tautologies: 19
% Forward subsumptions: 6000
% Bw demodulations to eq. taut.: 3
% 
% Binary resolution: 4286
% Factoring: 190
% Forward superposition: 2473
% Backward superposition: 2042
% Self superposition: 31
% Equality factoring: 28
% Equality resolution: 13
% 
% Split clauses: 82
% Split components: 164
% SAT solver clauses: 3628
% SAT solver unit clauses: 236
% SAT solver binary clauses: 93
% SAT solver learnt clauses: 44
% SAT solver learnt literals: 10
% 
% Sat splits: 82
% Sat splitting refutations: 12
% 
% TWLsolver clauses: 3540
% TWLsolver calls for satisfiability: 1919
% 
% Memory used [KB]: 16247
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.measure
% (99148)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 3104
% Passive clauses: 17636
% Generated clauses: 177000
% Final active clauses: 2081
% Final passive clauses: 6358
% Input formulas: 66
% Initial clauses: 248
% Discarded non-redundant clauses: 8615
% 
% Duplicate literals: 9444
% Trivial inequalities: 157
% Fw subsumption resolutions: 5602
% Fw demodulations: 29004
% Bw demodulations: 838
% Condensations: 12448
% Global subsumptions: 33
% 
% Simple tautologies: 211
% Equational tautologies: 1571
% Forward subsumptions: 93997
% Fw demodulations to eq. taut.: 4
% Bw demodulations to eq. taut.: 3
% 
% Unit resulting resolution: 57538
% Factoring: 1
% Forward superposition: 24874
% Backward superposition: 35957
% Self superposition: 170
% Equality factoring: 140
% Equality resolution: 2
% 
% Split clauses: 368
% Split components: 741
% SAT solver clauses: 20748
% SAT solver unit clauses: 2865
% SAT solver binary clauses: 7807
% 
% Sat splits: 368
% Sat splitting refutations: 2340
% 
% Memory used [KB]: 76374
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 181 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.measure
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.measure
% SZS output start Proof for thm.measure
fof(f23586,plain,(
  $false),
  inference(subsumption_resolution,[],[f23585,f582])).
fof(f582,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.measure.COUNTABLY_SUBADDITIVE',aHL_TRUTH)).
fof(f23585,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f23584,f613])).
fof(f613,plain,(
  s(bool,'T_0') = s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))),
  inference(resolution,[],[f338,f405])).
fof(f405,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f257])).
fof(f257,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f95])).
fof(f95,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.measure.COUNTABLY_SUBADDITIVE','thm.bool.EQ_CLAUSES|split|1')).
fof(f338,plain,(
  p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))),
  inference(cnf_transformation,[],[f215])).
fof(f215,plain,(
  p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))) & p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(sK12,bool)),sK14),s(fun(fun('type.num.num',fun(sK12,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(sK12,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))))) & p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK12,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))),s(fun('type.num.num',fun(sK12,bool)),sK14)))))) & s(fun(sK12,bool),sK15) = s(fun(sK12,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK12,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK12,bool)),sK14),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) & p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),sK15),s(fun(fun(sK12,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))) & ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(sK12,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))),s(fun(sK12,bool),sK15))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK12,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))),s(fun('type.num.num',fun(sK12,bool)),sK14))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15])],[f162])).
fof(f162,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2)))))) & s(fun(X0,bool),X3) = s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),X3))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2)))))))))),
  inference(flattening,[],[f161])).
fof(f161,plain,(
  ? [X0,X1,X2,X3] : ((p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2)))))) & s(fun(X0,bool),X3) = s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) & ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),X3))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2)))))))))),
  inference(ennf_transformation,[],[f69])).
fof(f69,plain,(
  ~! [X0,X1,X2,X3] : ((p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2)))))) & s(fun(X0,bool),X3) = s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),X3))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2)))))))))),
  inference(flattening,[],[f68])).
fof(f68,plain,(
  ~! [X0] : ! [X1,X2,X3] : ((p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2)))))) & s(fun(X0,bool),X3) = s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),X3))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2)))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : ((p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))) & p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X6,bool)),X8),s(fun(fun('type.num.num',fun(X6,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))))) & p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))),s(fun('type.num.num',fun(X6,bool)),X8)))))) & s(fun(X6,bool),X9) = s(fun(X6,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X6,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X6,bool)),X8),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X9),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))),s(fun(X6,bool),X9))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))),s(fun('type.num.num',fun(X6,bool)),X8)))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : ((p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))) & p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X6,bool)),X8),s(fun(fun('type.num.num',fun(X6,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))))) & p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))),s(fun('type.num.num',fun(X6,bool)),X8)))))) & s(fun(X6,bool),X9) = s(fun(X6,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X6,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X6,bool)),X8),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X9),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))),s(fun(X6,bool),X9))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))),s(fun('type.num.num',fun(X6,bool)),X8)))))))))),
  file('thm.measure.COUNTABLY_SUBADDITIVE','thm.measure.COUNTABLY_SUBADDITIVE')).
fof(f23584,plain,(
  ~p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))),
  inference(subsumption_resolution,[],[f23583,f583])).
fof(f583,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f398])).
fof(f398,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f254])).
fof(f254,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f89])).
fof(f89,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X6] : ! [X13] : (s(X6,X13) = s(X6,X13) <=> p(s(bool,'T_0')))),
  file('thm.measure.COUNTABLY_SUBADDITIVE','thm.bool.REFL_CLAUSE')).
fof(f23583,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))),
  inference(forward_demodulation,[],[f23582,f945])).
fof(f945,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(fun(sK12,bool),sK15),s(fun(fun(sK12,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))),
  inference(resolution,[],[f342,f405])).
fof(f342,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),sK15),s(fun(fun(sK12,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))))),
  inference(cnf_transformation,[],[f215])).
fof(f23582,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),sK15),s(fun(fun(sK12,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))) | ~p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))),
  inference(forward_demodulation,[],[f23581,f341])).
fof(f341,plain,(
  s(fun(sK12,bool),sK15) = s(fun(sK12,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK12,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK12,bool)),sK14),s(fun('type.num.num',bool),'const.pred_set.UNIV_0')))))),
  inference(cnf_transformation,[],[f215])).
fof(f23581,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK12,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK12,bool)),sK14),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(sK12,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))) | ~p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))),
  inference(subsumption_resolution,[],[f23580,f343])).
fof(f343,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(sK12,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))),s(fun(sK12,bool),sK15))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK12,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))),s(fun('type.num.num',fun(sK12,bool)),sK14))))))))),
  inference(cnf_transformation,[],[f215])).
fof(f23580,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(sK12,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))),s(fun(sK12,bool),sK15))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK12,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))),s(fun('type.num.num',fun(sK12,bool)),sK14)))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK12,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK12,bool)),sK14),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(sK12,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))) | ~p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))),
  inference(forward_demodulation,[],[f23579,f341])).
fof(f23579,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(sK12,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))),s(fun(sK12,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK12,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK12,bool)),sK14),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK12,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))),s(fun('type.num.num',fun(sK12,bool)),sK14)))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK12,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK12,bool)),sK14),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(sK12,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))) | ~p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))),
  inference(subsumption_resolution,[],[f23578,f339])).
fof(f339,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(sK12,bool)),sK14),s(fun(fun('type.num.num',fun(sK12,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(sK12,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))))))),
  inference(cnf_transformation,[],[f215])).
fof(f23578,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(sK12,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))),s(fun(sK12,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK12,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK12,bool)),sK14),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK12,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))),s(fun('type.num.num',fun(sK12,bool)),sK14)))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK12,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK12,bool)),sK14),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(sK12,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(sK12,bool)),sK14),s(fun(fun('type.num.num',fun(sK12,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(sK12,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))))) | ~p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))),
  inference(subsumption_resolution,[],[f23322,f583])).
fof(f23322,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(sK12,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))),s(fun(sK12,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK12,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK12,bool)),sK14),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK12,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))),s(fun('type.num.num',fun(sK12,bool)),sK14)))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK12,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(sK12,bool)),sK14),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(sK12,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(sK12,bool)),sK14),s(fun(fun('type.num.num',fun(sK12,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(sK12,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))))) | ~p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))),
  inference(superposition,[],[f344,f1093])).
fof(f1093,plain,(
  s(bool,'T_0') = s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK12,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))),s(fun('type.num.num',fun(sK12,bool)),sK14)))))),
  inference(resolution,[],[f340,f405])).
fof(f340,plain,(
  p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(sK12,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))),s(fun('type.num.num',fun(sK12,bool)),sK14))))))),
  inference(cnf_transformation,[],[f215])).
fof(f344,plain,(
  ( ! [X0,X3,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X3),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X3)))))))) | ~p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X3)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X3),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X3),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | ~p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(cnf_transformation,[],[f218])).
fof(f218,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X3),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X3),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X3)))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X3),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X3)))))))))) & ((p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),sK16(X1,X0)),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),sK16(X1,X0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),sK16(X1,X0))))))) & ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),sK16(X1,X0)),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),sK16(X1,X0)))))))))) | p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK16])],[f217])).
fof(f217,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X3),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X3),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X3)))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X3),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X3)))))))))) & (? [X2] : (p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2)))))) & ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2))))))))) | p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(rectify,[],[f216])).
fof(f216,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ! [X2] : (~p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2)))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2)))))))))) & (? [X2] : (p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2)))))) & ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2))))))))) | p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(nnf_transformation,[],[f164])).
fof(f164,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> ! [X2] : (~p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2)))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2))))))))))),
  inference(flattening,[],[f163])).
fof(f163,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> ! [X2] : ((~p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2))))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2))))))))))),
  inference(ennf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> ! [X2] : ((p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2))))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2))))))))))),
  inference(flattening,[],[f70])).
fof(f70,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> ! [X2] : ((p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun(fun('type.num.num',fun(X0,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2))))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X0,bool)),X2),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun('type.num.num',fun(X0,bool)),X2))))))))))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.measure.countably_subadditive_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))) <=> ! [X8] : ((p(s(bool,'const.bool.IN_2'(s(fun('type.num.num',fun(X6,bool)),X8),s(fun(fun('type.num.num',fun(X6,bool)),bool),'const.util_prob.FUNSET_2'(s(fun('type.num.num',bool),'const.pred_set.UNIV_0'),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X6,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X6,bool)),X8),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) & p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))),s(fun('type.num.num',fun(X6,bool)),X8))))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))),s(fun(X6,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X6,bool),bool),'const.pred_set.IMAGE_2'(s(fun('type.num.num',fun(X6,bool)),X8),s(fun('type.num.num',bool),'const.pred_set.UNIV_0'))))))),s('type.realax.real','const.seq.suminf_1'(s(fun('type.num.num','type.realax.real'),'const.combin.o_2'(s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))),s(fun('type.num.num',fun(X6,bool)),X8))))))))))),
  file('thm.measure.COUNTABLY_SUBADDITIVE','thm.measure.countably_subadditive_def')).
% SZS output end Proof for thm.measure
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 774
% Passive clauses: 12244
% Generated clauses: 28932
% Final active clauses: 432
% Final passive clauses: 1670
% Input formulas: 66
% Initial clauses: 245
% 
% Selected by SInE selection: 63
% SInE iterations: 1
% 
% Duplicate literals: 1121
% Trivial inequalities: 274
% Fw subsumption resolutions: 3180
% Fw demodulations: 1248
% Bw demodulations: 28
% 
% Simple tautologies: 2202
% Equational tautologies: 37
% Forward subsumptions: 7813
% 
% Binary resolution: 11631
% Forward superposition: 2608
% Backward superposition: 2752
% Equality resolution: 28
% 
% Split clauses: 914
% Split components: 1997
% SAT solver clauses: 1013
% SAT solver unit clauses: 29
% SAT solver binary clauses: 72
% 
% Sat splits: 914
% Sat splitting refutations: 77
% 
% Memory used [KB]: 6396
% Time elapsed: 0.482 s
% ------------------------------
% ------------------------------
% Success in time 12.332 s
