Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (107009)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1099
% Passive clauses: 7329
% Generated clauses: 42779
% Final active clauses: 1007
% Final passive clauses: 5855
% Input formulas: 517
% Initial clauses: 865
% 
% Duplicate literals: 202
% Trivial inequalities: 65
% Fw subsumption resolutions: 2021
% Fw demodulations: 3111
% Bw demodulations: 80
% 
% Simple tautologies: 285
% Equational tautologies: 27
% Forward subsumptions: 29547
% Fw demodulations to eq. taut.: 7
% 
% Binary resolution: 6536
% Factoring: 940
% Forward superposition: 14593
% Backward superposition: 14175
% Self superposition: 54
% Equality factoring: 2
% Equality resolution: 8
% 
% Split clauses: 311
% Split components: 624
% SAT solver clauses: 552
% SAT solver unit clauses: 19
% SAT solver binary clauses: 81
% 
% Sat splits: 311
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 551
% TWLsolver calls for satisfiability: 422
% 
% Memory used [KB]: 27888
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (107130)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 620
% Passive clauses: 3806
% Generated clauses: 28348
% Final active clauses: 587
% Final passive clauses: 3018
% Input formulas: 517
% Initial clauses: 865
% 
% Duplicate literals: 106
% Trivial inequalities: 43
% Fw subsumption resolutions: 945
% Fw demodulations: 3261
% Bw demodulations: 198
% Condensations: 67
% Global subsumptions: 36
% 
% Simple tautologies: 292
% Equational tautologies: 16
% Forward subsumptions: 15339
% Fw demodulations to eq. taut.: 7
% Bw demodulations to eq. taut.: 3
% 
% Binary resolution: 2345
% Factoring: 127
% Forward superposition: 9621
% Backward superposition: 6786
% Self superposition: 86
% Equality factoring: 2
% Equality resolution: 11
% 
% Split clauses: 17
% Split components: 34
% SAT solver clauses: 5294
% SAT solver unit clauses: 1137
% SAT solver binary clauses: 276
% SAT solver learnt clauses: 72
% SAT solver learnt literals: 12
% 
% Sat splits: 17
% 
% TWLsolver clauses: 5150
% TWLsolver calls for satisfiability: 4786
% 
% Memory used [KB]: 24690
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f71522,plain,(
  $false),
  inference(subsumption_resolution,[],[f71520,f24317])).
fof(f24317,plain,(
  ( ! [X2,X0] : (p(s(bool,happ(s(fun(X0,bool),'=_1'(s(X0,X2))),s(X0,X2))))) )),
  inference(forward_demodulation,[],[f23946,f2454])).
fof(f2454,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.list.list_CASE_3'(s('type.list.list'(X0),'const.list.NIL_0'),s(X1,X2),s(fun(X0,fun('type.list.list'(X0),X1)),X3)))) )),
  inference(cnf_transformation,[],[f1242])).
fof(f1242,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.list.list_CASE_3'(s('type.list.list'(X0),'const.list.NIL_0'),s(X1,X2),s(fun(X0,fun('type.list.list'(X0),X1)),X3)))),
  inference(flattening,[],[f1241])).
fof(f1241,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.list.list_CASE_3'(s('type.list.list'(X0),'const.list.NIL_0'),s(X1,X2),s(fun(X0,fun('type.list.list'(X0),X1)),X3)))),
  inference(rectify,[],[f454])).
fof(f454,axiom,(
  ! [X6,X10] : ! [X65,X22] : s(X10,X65) = s(X10,'const.list.list_CASE_3'(s('type.list.list'(X6),'const.list.NIL_0'),s(X10,X65),s(fun(X6,fun('type.list.list'(X6),X10)),X22)))),
  file('thm.rich_list.DROP_LASTN','thm.list.list_case_def|split|0')).
fof(f23946,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),'=_1'(s(X0,'const.list.list_CASE_3'(s('type.list.list'(X1),'const.list.NIL_0'),s(X0,X2),s(fun(X1,fun('type.list.list'(X1),X0)),X3))))),s(X0,X2))))) )),
  inference(unit_resulting_resolution,[],[f2454,f2489])).
fof(f2489,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),'=_1'(s(X0,X1))),s(X0,X2)))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f1719])).
fof(f1719,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,happ(s(fun(X0,bool),'=_1'(s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | p(s(bool,happ(s(fun(X0,bool),'=_1'(s(X0,X1))),s(X0,X2))))))),
  inference(nnf_transformation,[],[f1286])).
fof(f1286,plain,(
  ! [X0,X1,X2] : (p(s(bool,happ(s(fun(X0,bool),'=_1'(s(X0,X1))),s(X0,X2)))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f453])).
fof(f453,axiom,(
  ! [X74,X66,X67] : (p(s(bool,happ(s(fun(X74,bool),'=_1'(s(X74,X66))),s(X74,X67)))) <=> s(X74,X66) = s(X74,X67))),
  file('thm.rich_list.DROP_LASTN',arity_1_HL_EQ)).
fof(f71520,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'(sK13),bool),'=_1'(s('type.list.list'(sK13),'const.list.DROP_2'(s('type.num.num',sK14),s('type.list.list'(sK13),sK15))))),s('type.list.list'(sK13),'const.list.DROP_2'(s('type.num.num',sK14),s('type.list.list'(sK13),sK15))))))),
  inference(backward_demodulation,[],[f71518,f23412])).
fof(f23412,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'(sK13),bool),'=_1'(s('type.list.list'(sK13),'const.list.DROP_2'(s('type.num.num',sK14),s('type.list.list'(sK13),sK15))))),s('type.list.list'(sK13),'const.rich_list.LASTN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK13),sK15))),s('type.num.num',sK14))),s('type.list.list'(sK13),sK15))))))),
  inference(unit_resulting_resolution,[],[f1779,f2488])).
fof(f2488,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),'=_1'(s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f1719])).
fof(f1779,plain,(
  s('type.list.list'(sK13),'const.list.DROP_2'(s('type.num.num',sK14),s('type.list.list'(sK13),sK15))) != s('type.list.list'(sK13),'const.rich_list.LASTN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK13),sK15))),s('type.num.num',sK14))),s('type.list.list'(sK13),sK15)))),
  inference(cnf_transformation,[],[f1516])).
fof(f1516,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK13),sK15)))))) & s('type.list.list'(sK13),'const.list.DROP_2'(s('type.num.num',sK14),s('type.list.list'(sK13),sK15))) != s('type.list.list'(sK13),'const.rich_list.LASTN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK13),sK15))),s('type.num.num',sK14))),s('type.list.list'(sK13),sK15)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14,sK15])],[f1327])).
fof(f1327,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) & s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))),s('type.list.list'(X0),X2))))),
  inference(ennf_transformation,[],[f520])).
fof(f520,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))),s('type.list.list'(X0),X2))))),
  inference(flattening,[],[f519])).
fof(f519,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))),s('type.list.list'(X0),X2))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) => s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X7),s('type.list.list'(X6),X8))) = s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num',X7))),s('type.list.list'(X6),X8))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) => s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X7),s('type.list.list'(X6),X8))) = s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num',X7))),s('type.list.list'(X6),X8))))),
  file('thm.rich_list.DROP_LASTN','thm.rich_list.DROP_LASTN')).
fof(f71518,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))),s('type.list.list'(X0),X2)))) )),
  inference(forward_demodulation,[],[f71386,f2041])).
fof(f2041,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f790])).
fof(f790,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f789])).
fof(f789,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f53])).
fof(f53,axiom,(
  ! [X6] : ! [X7,X8] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num',X7))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X7),s('type.list.list'(X6),X8)))))),
  file('thm.rich_list.DROP_LASTN','thm.list.LENGTH_DROP')).
fof(f71386,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))),s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f2038,f2048])).
fof(f2048,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f804])).
fof(f804,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f803])).
fof(f803,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f141])).
fof(f141,axiom,(
  ! [X6] : ! [X7,X8] : s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X7),s('type.list.list'(X6),X8))),s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X7),s('type.list.list'(X6),X8)))))),
  file('thm.rich_list.DROP_LASTN','thm.list.TAKE_DROP')).
fof(f2038,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f784])).
fof(f784,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))))),
  inference(flattening,[],[f783])).
fof(f783,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))))),
  inference(rectify,[],[f76])).
fof(f76,axiom,(
  ! [X6] : ! [X23,X24] : s('type.list.list'(X6),X23) = s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X23))),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X24),s('type.list.list'(X6),X23)))))),
  file('thm.rich_list.DROP_LASTN','thm.rich_list.LASTN_LENGTH_APPEND')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 1019
% Passive clauses: 7573
% Generated clauses: 69718
% Final active clauses: 984
% Final passive clauses: 6293
% Input formulas: 517
% Initial clauses: 865
% 
% Duplicate literals: 9
% Trivial inequalities: 67
% Fw subsumption resolutions: 467
% Fw demodulations: 18800
% Bw demodulations: 288
% Condensations: 25
% Global subsumptions: 7
% 
% Simple tautologies: 152
% Equational tautologies: 46
% Forward subsumptions: 41558
% Fw demodulations to eq. taut.: 885
% Bw demodulations to eq. taut.: 8
% 
% Unit resulting resolution: 13515
% Factoring: 2
% Forward superposition: 21157
% Backward superposition: 14340
% Self superposition: 149
% Equality factoring: 2
% Equality resolution: 17
% 
% Split clauses: 10
% Split components: 20
% SAT solver clauses: 7602
% SAT solver unit clauses: 3514
% SAT solver binary clauses: 3312
% 
% Sat splits: 10
% 
% Memory used [KB]: 51171
% Time elapsed: 2.133 s
% ------------------------------
% ------------------------------
% Success in time 3.48 s
