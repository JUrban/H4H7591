Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (95990)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 607
% Passive clauses: 8682
% Generated clauses: 19004
% Final active clauses: 599
% Final passive clauses: 7740
% Input formulas: 69
% Initial clauses: 210
% 
% Duplicate literals: 307
% Trivial inequalities: 55
% Fw subsumption resolutions: 1386
% Fw demodulations: 675
% Bw demodulations: 2
% 
% Simple tautologies: 239
% Equational tautologies: 59
% Forward subsumptions: 7355
% 
% Binary resolution: 8683
% Factoring: 968
% Forward superposition: 3359
% Backward superposition: 3114
% Self superposition: 68
% Equality factoring: 26
% Equality resolution: 22
% 
% Split clauses: 261
% Split components: 558
% SAT solver clauses: 516
% SAT solver unit clauses: 17
% SAT solver binary clauses: 108
% 
% Sat splits: 261
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 515
% TWLsolver calls for satisfiability: 297
% 
% Memory used [KB]: 11385
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (96000)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 386
% Passive clauses: 2047
% Generated clauses: 14829
% Final active clauses: 380
% Final passive clauses: 1634
% Input formulas: 69
% Initial clauses: 210
% 
% Duplicate literals: 417
% Trivial inequalities: 68
% Fw subsumption resolutions: 845
% Fw demodulations: 1022
% Bw demodulations: 29
% Condensations: 733
% Global subsumptions: 14
% 
% Simple tautologies: 287
% Equational tautologies: 21
% Forward subsumptions: 6868
% 
% Binary resolution: 1890
% Factoring: 199
% Forward superposition: 4065
% Backward superposition: 3137
% Self superposition: 80
% Equality factoring: 28
% Equality resolution: 17
% 
% Split clauses: 57
% Split components: 114
% SAT solver clauses: 2686
% SAT solver unit clauses: 217
% SAT solver binary clauses: 74
% SAT solver learnt clauses: 28
% SAT solver learnt literals: 10
% 
% Sat splits: 57
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 2630
% TWLsolver calls for satisfiability: 1609
% 
% Memory used [KB]: 16758
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f75770,plain,(
  $false),
  inference(subsumption_resolution,[],[f75769,f300])).
fof(f300,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rich_list.LUPDATE_APPEND|49|',aHL_TRUTH)).
fof(f75769,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f75737,f578])).
fof(f578,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11)))))),
  inference(unit_resulting_resolution,[],[f298,f319])).
fof(f319,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f225])).
fof(f225,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X13] : (s(bool,'T_0') = s(bool,X13) <=> p(s(bool,X13)))),
  file('thm.rich_list.LUPDATE_APPEND|49|','thm.bool.EQ_CLAUSES|split|0')).
fof(f298,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))))))),
  inference(cnf_transformation,[],[f223])).
fof(f223,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11)))))) & s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),'const.list.LUPDATE_3'(s(sK10,sK14),s('type.num.num',sK13),s('type.list.list'(sK10),sK11))),s('type.list.list'(sK10),sK12))) != s('type.list.list'(sK10),'const.list.LUPDATE_3'(s(sK10,sK14),s('type.num.num',sK13),s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),sK11),s('type.list.list'(sK10),sK12)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12,sK13,sK14])],[f175])).
fof(f175,plain,(
  ? [X0,X1,X2,X3,X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) & s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.LUPDATE_3'(s(X0,X4),s('type.num.num',X3),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.LUPDATE_3'(s(X0,X4),s('type.num.num',X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2,X3,X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) => s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.LUPDATE_3'(s(X0,X4),s('type.num.num',X3),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.LUPDATE_3'(s(X0,X4),s('type.num.num',X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1,X2,X3,X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) => s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.LUPDATE_3'(s(X0,X4),s('type.num.num',X3),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.LUPDATE_3'(s(X0,X4),s('type.num.num',X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) => s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.LUPDATE_3'(s(X6,X10),s('type.num.num',X9),s('type.list.list'(X6),X7))),s('type.list.list'(X6),X8))) = s('type.list.list'(X6),'const.list.LUPDATE_3'(s(X6,X10),s('type.num.num',X9),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) => s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.LUPDATE_3'(s(X6,X10),s('type.num.num',X9),s('type.list.list'(X6),X7))),s('type.list.list'(X6),X8))) = s('type.list.list'(X6),'const.list.LUPDATE_3'(s(X6,X10),s('type.num.num',X9),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X8))))))),
  file('thm.rich_list.LUPDATE_APPEND|49|','thm.rich_list.LUPDATE_APPEND|49|')).
fof(f75737,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))))))),
  inference(unit_resulting_resolution,[],[f299,f379])).
fof(f379,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.LUPDATE_3'(s(X0,X1),s('type.num.num',X2),s('type.list.list'(X0),X3))),s('type.list.list'(X0),X4))) = s('type.list.list'(X0),'const.list.LUPDATE_3'(s(X0,X1),s('type.num.num',X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))))) )),
  inference(cnf_transformation,[],[f189])).
fof(f189,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.LUPDATE_3'(s(X0,X1),s('type.num.num',X2),s('type.list.list'(X0),X3))),s('type.list.list'(X0),X4))) = s('type.list.list'(X0),'const.list.LUPDATE_3'(s(X0,X1),s('type.num.num',X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))))))),
  inference(ennf_transformation,[],[f141])).
fof(f141,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) => s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.LUPDATE_3'(s(X0,X1),s('type.num.num',X2),s('type.list.list'(X0),X3))),s('type.list.list'(X0),X4))) = s('type.list.list'(X0),'const.list.LUPDATE_3'(s(X0,X1),s('type.num.num',X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))))))),
  inference(flattening,[],[f140])).
fof(f140,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) => s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.LUPDATE_3'(s(X0,X1),s('type.num.num',X2),s('type.list.list'(X0),X3))),s('type.list.list'(X0),X4))) = s('type.list.list'(X0),'const.list.LUPDATE_3'(s(X0,X1),s('type.num.num',X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X10,X9,X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) => s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.LUPDATE_3'(s(X6,X10),s('type.num.num',X9),s('type.list.list'(X6),X7))),s('type.list.list'(X6),X8))) = s('type.list.list'(X6),'const.list.LUPDATE_3'(s(X6,X10),s('type.num.num',X9),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X8))))))),
  file('thm.rich_list.LUPDATE_APPEND|49|','thm.list.lupdate_append')).
fof(f299,plain,(
  s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),'const.list.LUPDATE_3'(s(sK10,sK14),s('type.num.num',sK13),s('type.list.list'(sK10),sK11))),s('type.list.list'(sK10),sK12))) != s('type.list.list'(sK10),'const.list.LUPDATE_3'(s(sK10,sK14),s('type.num.num',sK13),s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),sK11),s('type.list.list'(sK10),sK12)))))),
  inference(cnf_transformation,[],[f223])).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 260
% Passive clauses: 774
% Generated clauses: 75471
% Final active clauses: 258
% Final passive clauses: 514
% Input formulas: 69
% Initial clauses: 210
% 
% Duplicate literals: 6
% Trivial inequalities: 3
% Fw subsumption resolutions: 27
% Fw demodulations: 48933
% Bw demodulations: 2
% Condensations: 16
% Global subsumptions: 1
% 
% Simple tautologies: 67
% Equational tautologies: 15
% Forward subsumptions: 10058
% Fw demodulations to eq. taut.: 15538
% 
% Unit resulting resolution: 24048
% Factoring: 1
% Forward superposition: 1300
% Backward superposition: 877
% Self superposition: 42
% Equality factoring: 2
% Equality resolution: 2
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 779
% SAT solver unit clauses: 461
% SAT solver binary clauses: 159
% 
% Sat splits: 1
% 
% Memory used [KB]: 27504
% Time elapsed: 2.007 s
% ------------------------------
% ------------------------------
% Success in time 3.33 s
