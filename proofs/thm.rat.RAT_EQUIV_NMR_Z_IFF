Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.rat
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rat
% SZS output start Proof for thm.rat
fof(f8669,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f8662,f64,f103,f101,f2826,f65,f104,f102,f2769,f2771,f2222,f2223,f1179,f2144,f1303,f1304,f66,f110,f147,f123,f130,f948,f950,f949,f118,f122,f1174,f67,f106,f3159,f3197,f120,f1867,f2052])).
fof(f2052,plain,(
  ( ! [X1] : (s(bool,X1) != s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))) | s(bool,'T_0') = s(bool,X1)) ) | $spl52),
  inference(cnf_transformation,[],[f2052_D])).
fof(f2052_D,plain,(
  ( ! [X1] : (s(bool,X1) != s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))) | s(bool,'T_0') = s(bool,X1)) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f1867,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl40),
  inference(duplicate_literal_removal,[],[f1842])).
fof(f1842,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl40),
  inference(equality_factoring,[],[f1304])).
fof(f120,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f120_D])).
fof(f120_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f3197,plain,(
  ( ! [X83,X82] : (s(bool,X83) != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X82))))) | s(bool,'T_0') = s(bool,X83)) ) | $spl72),
  inference(cnf_transformation,[],[f3197_D])).
fof(f3197_D,plain,(
  ( ! [X83,X82] : (s(bool,X83) != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X82))))) | s(bool,'T_0') = s(bool,X83)) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f3159,plain,(
  ( ! [X83,X81,X82] : (s(bool,X83) != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X82))))) | s(bool,'T_0') = s(bool,X83) | s(bool,'F_0') = s(bool,X81)) ) | ($spl0 | $spl5 | $spl15 | $spl16 | $spl52)),
  inference(duplicate_literal_removal,[],[f3110])).
fof(f3110,plain,(
  ( ! [X83,X81,X82] : (s(bool,X83) != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X82))))) | s(bool,'T_0') = s(bool,X83) | s(bool,'F_0') = s(bool,X81) | s(bool,'F_0') = s(bool,X81)) ) | ($spl0 | $spl5 | $spl15 | $spl16 | $spl52)),
  inference(superposition,[],[f2466,f2843])).
fof(f2843,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))) | s(bool,'F_0') = s(bool,X1)) ) | ($spl0 | $spl16)),
  inference(resolution,[],[f2842,f166])).
fof(f166,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,'F_0') = s(bool,X2)) ) | $spl16),
  inference(resolution,[],[f93,f130])).
fof(f93,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f42])).
fof(f42,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X8,X9] : ((p(s(bool,X8)) => p(s(bool,X9))) => ((p(s(bool,X9)) => p(s(bool,X8))) => s(bool,X8) = s(bool,X9)))),
  file('thm.rat.RAT_EQUIV_NMR_Z_IFF','thm.bool.IMP_ANTISYM_AX')).
fof(f2842,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))) ) | $spl0),
  inference(forward_demodulation,[],[f68,f101])).
fof(f68,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))) )),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0] : p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X14] : p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))))))),
  file('thm.rat.RAT_EQUIV_NMR_Z_IFF','thm.frac.FRAC_DNMPOS')).
fof(f2466,plain,(
  ( ! [X19,X18] : (s(bool,X18) != s(bool,X19) | s(bool,'T_0') = s(bool,X19) | s(bool,'F_0') = s(bool,X18)) ) | ($spl5 | $spl15 | $spl16 | $spl52)),
  inference(subsumption_resolution,[],[f2465,f122])).
fof(f2465,plain,(
  ( ! [X19,X18] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,X18) != s(bool,X19) | s(bool,'T_0') = s(bool,X19) | s(bool,'F_0') = s(bool,X18)) ) | ($spl5 | $spl16 | $spl52)),
  inference(forward_demodulation,[],[f2434,f119])).
fof(f119,plain,(
  s(bool,'T_0') = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))) | $spl5),
  inference(subsumption_resolution,[],[f116,f106])).
fof(f116,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1)))),
  inference(superposition,[],[f63,f70])).
fof(f70,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.rat.RAT_EQUIV_NMR_Z_IFF',aHL_BOOL_CASES)).
fof(f63,plain,(
  p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))))),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1)))) & (s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f46])).
fof(f46,plain,(
  ? [X0,X1] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) & (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1)))) & (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1)))))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ? [X0,X1] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) & ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1)))) & (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))))))),
  inference(nnf_transformation,[],[f39])).
fof(f39,plain,(
  ? [X0,X1] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) & (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) <~> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1)))))),
  inference(ennf_transformation,[],[f20])).
fof(f20,plain,(
  ~! [X0,X1] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) => (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X6),s('type.frac.frac',X7)))) => (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X6))) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X6),s('type.frac.frac',X7)))) => (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X6))) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X7)))))),
  file('thm.rat.RAT_EQUIV_NMR_Z_IFF','thm.rat.RAT_EQUIV_NMR_Z_IFF')).
fof(f2434,plain,(
  ( ! [X19,X18] : (s(bool,X18) != s(bool,X19) | s(bool,'T_0') = s(bool,X19) | s(bool,'F_0') = s(bool,X18) | s(bool,'F_0') = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1)))) ) | ($spl16 | $spl52)),
  inference(superposition,[],[f2052,f231])).
fof(f231,plain,(
  ( ! [X4,X5] : (s(bool,X4) = s(bool,X5) | s(bool,'F_0') = s(bool,X5) | s(bool,'F_0') = s(bool,X4)) ) | $spl16),
  inference(resolution,[],[f166,f130])).
fof(f106,plain,(
  ~p(s(bool,'F_0')) | $spl5),
  inference(cnf_transformation,[],[f106_D])).
fof(f106_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f67,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.rat.RAT_EQUIV_NMR_Z_IFF',aHL_FALSITY)).
fof(f1174,plain,(
  ( ! [X64] : (s(bool,'F_0') = s(bool,X64)) ) | ($spl16 | $spl20)),
  inference(duplicate_literal_removal,[],[f974])).
fof(f974,plain,(
  ( ! [X64] : (s(bool,'F_0') = s(bool,X64) | s(bool,'F_0') = s(bool,X64)) ) | ($spl16 | $spl20)),
  inference(superposition,[],[f949,f193])).
fof(f193,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) ) | $spl16),
  inference(resolution,[],[f190,f130])).
fof(f190,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) )),
  inference(equality_resolution,[],[f89])).
fof(f89,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) != s('type.integer.int',X1) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) != s('type.integer.int',X1))),
  inference(ennf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) => s('type.integer.int',X0) != s('type.integer.int',X1))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) => ~s('type.integer.int',X0) = s('type.integer.int',X1))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X12,X13] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X12),s('type.integer.int',X13)))) => ~s('type.integer.int',X12) = s('type.integer.int',X13))),
  file('thm.rat.RAT_EQUIV_NMR_Z_IFF','thm.integer.INT_LT_IMP_NE')).
fof(f122,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl15),
  inference(cnf_transformation,[],[f122_D])).
fof(f122_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f118,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f70])).
fof(f949,plain,(
  ( ! [X14,X16] : (s(bool,X14) = s(bool,X16) | s(bool,'F_0') = s(bool,X16)) ) | $spl20),
  inference(cnf_transformation,[],[f949_D])).
fof(f949_D,plain,(
  ( ! [X14,X16] : (s(bool,X14) = s(bool,X16) | s(bool,'F_0') = s(bool,X16)) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f950,plain,(
  ( ! [X15] : (s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',X15),s('type.integer.int',X15)))) ) | $spl22),
  inference(cnf_transformation,[],[f950_D])).
fof(f950_D,plain,(
  ( ! [X15] : (s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',X15),s('type.integer.int',X15)))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f948,plain,(
  ( ! [X14,X15,X16] : (s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',X15),s('type.integer.int',X15))) | s(bool,X14) = s(bool,X16) | s(bool,'F_0') = s(bool,X16)) ) | ($spl5 | $spl15 | $spl16)),
  inference(subsumption_resolution,[],[f918,f722])).
fof(f722,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,X0) | s(bool,X0) = s(bool,X1) | s(bool,'F_0') = s(bool,X1)) ) | ($spl15 | $spl16)),
  inference(superposition,[],[f122,f231])).
fof(f918,plain,(
  ( ! [X14,X15,X16] : (s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',X15),s('type.integer.int',X15))) | s(bool,X14) = s(bool,X16) | s(bool,'F_0') = s(bool,X16) | s(bool,'T_0') = s(bool,X14)) ) | ($spl5 | $spl15 | $spl16)),
  inference(superposition,[],[f722,f221])).
fof(f221,plain,(
  ( ! [X6,X5] : (s(bool,X6) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X5),s('type.integer.int',X5))) | s(bool,'T_0') = s(bool,X6)) ) | ($spl5 | $spl16)),
  inference(subsumption_resolution,[],[f219,f106])).
fof(f219,plain,(
  ( ! [X6,X5] : (p(s(bool,'F_0')) | s(bool,X6) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X5),s('type.integer.int',X5))) | s(bool,'T_0') = s(bool,X6)) ) | ($spl5 | $spl16)),
  inference(superposition,[],[f132,f193])).
fof(f132,plain,(
  ( ! [X2,X3] : (p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) ) | $spl5),
  inference(subsumption_resolution,[],[f127,f106])).
fof(f127,plain,(
  ( ! [X2,X3] : (p(s(bool,'F_0')) | p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f90,f70])).
fof(f90,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f43])).
fof(f130,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) | $spl16),
  inference(cnf_transformation,[],[f130_D])).
fof(f130_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f123,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl5),
  inference(resolution,[],[f90,f106])).
fof(f147,plain,(
  $false | ($spl5 | $spl12)),
  inference(subsumption_resolution,[],[f134,f106])).
fof(f134,plain,(
  p(s(bool,'F_0')) | $spl12),
  inference(backward_demodulation,[],[f120,f63])).
fof(f110,plain,(
  p(s(bool,'T_0')) | $spl10),
  inference(cnf_transformation,[],[f110_D])).
fof(f110_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f66,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rat.RAT_EQUIV_NMR_Z_IFF',aHL_TRUTH)).
fof(f1304,plain,(
  ( ! [X62,X63] : (s(bool,'T_0') = s(bool,X62) | s(bool,X63) = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))) | s(bool,X62) = s(bool,X63)) ) | $spl40),
  inference(cnf_transformation,[],[f1304_D])).
fof(f1304_D,plain,(
  ( ! [X62,X63] : (s(bool,'T_0') = s(bool,X62) | s(bool,X63) = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))) | s(bool,X62) = s(bool,X63)) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f1303,plain,(
  ( ! [X61,X62,X63] : (s(bool,'T_0') = s(bool,X62) | s(bool,X62) = s(bool,X63) | s(bool,X63) = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))) | s(bool,'F_0') = s(bool,X61)) ) | ($spl5 | $spl10 | $spl16)),
  inference(subsumption_resolution,[],[f1288,f130])).
fof(f1288,plain,(
  ( ! [X61,X62,X63] : (~p(s(bool,X61)) | s(bool,'T_0') = s(bool,X62) | s(bool,X62) = s(bool,X63) | s(bool,X63) = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))) | s(bool,'F_0') = s(bool,X61)) ) | ($spl5 | $spl10 | $spl16)),
  inference(superposition,[],[f214,f240])).
fof(f240,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))) | s(bool,'F_0') = s(bool,X4)) ) | ($spl5 | $spl10 | $spl16)),
  inference(subsumption_resolution,[],[f237,f110])).
fof(f237,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | s(bool,X4) = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))) | s(bool,'F_0') = s(bool,X4)) ) | ($spl5 | $spl16)),
  inference(superposition,[],[f166,f119])).
fof(f214,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X3)) | s(bool,'T_0') = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,X2) = s(bool,X3)) ) | $spl5),
  inference(resolution,[],[f132,f93])).
fof(f2144,plain,(
  $false | ($spl22 | $spl24)),
  inference(trivial_inequality_removal,[],[f2139])).
fof(f2139,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl22 | $spl24)),
  inference(superposition,[],[f950,f1179])).
fof(f1179,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl24),
  inference(cnf_transformation,[],[f1179_D])).
fof(f1179_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f2223,plain,(
  ( ! [X25] : (s(bool,X25) = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))) | s(bool,'F_0') = s(bool,X25)) ) | $spl54),
  inference(cnf_transformation,[],[f2223_D])).
fof(f2223_D,plain,(
  ( ! [X25] : (s(bool,X25) = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))) | s(bool,'F_0') = s(bool,X25)) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f2222,plain,(
  ( ! [X26,X25] : (s(bool,'F_0') = s(bool,X25) | s(bool,'T_0') = s(bool,X26) | s(bool,X25) = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1)))) ) | ($spl5 | $spl16 | $spl40)),
  inference(subsumption_resolution,[],[f2207,f114])).
fof(f114,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f106,f70])).
fof(f2207,plain,(
  ( ! [X26,X25] : (p(s(bool,X26)) | s(bool,'F_0') = s(bool,X25) | s(bool,'T_0') = s(bool,X26) | s(bool,X25) = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1)))) ) | ($spl16 | $spl40)),
  inference(superposition,[],[f130,f1304])).
fof(f2771,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1))))) | $spl64),
  inference(cnf_transformation,[],[f2771_D])).
fof(f2771_D,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1))))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f2769,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1))))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl2 | $spl16 | $spl54)),
  inference(forward_demodulation,[],[f2768,f198])).
fof(f198,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))),s('type.integer.int',X0)))) ) | $spl2),
  inference(forward_demodulation,[],[f69,f103])).
fof(f69,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X12] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X12)))),
  file('thm.rat.RAT_EQUIV_NMR_Z_IFF','thm.integer.INT_MUL_LZERO')).
fof(f2768,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl16 | $spl54)),
  inference(subsumption_resolution,[],[f2750,f130])).
fof(f2750,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))) | s(bool,'F_0') = s(bool,X0)) ) | $spl54),
  inference(superposition,[],[f94,f2223])).
fof(f94,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) & (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))))),
  inference(nnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) <=> s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X15,X16] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X15),s('type.frac.frac',X16)))) <=> s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X15))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X16))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X16))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X15))))))),
  file('thm.rat.RAT_EQUIV_NMR_Z_IFF','thm.rat.rat_equiv_def')).
fof(f102,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl1),
  inference(cnf_transformation,[],[f102_D])).
fof(f102_D,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f104,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl3),
  inference(cnf_transformation,[],[f104_D])).
fof(f104_D,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f65,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f47])).
fof(f2826,plain,(
  $false | ($spl1 | $spl2 | $spl5 | $spl22 | $spl64)),
  inference(subsumption_resolution,[],[f2811,f950])).
fof(f2811,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))))) | ($spl1 | $spl2 | $spl5 | $spl64)),
  inference(superposition,[],[f187,f2805])).
fof(f2805,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1))) | ($spl1 | $spl2 | $spl64)),
  inference(subsumption_resolution,[],[f2804,f111])).
fof(f111,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) | ($spl1 | $spl2)),
  inference(superposition,[],[f102,f103])).
fof(f2804,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1))) | ($spl2 | $spl64)),
  inference(trivial_inequality_removal,[],[f2789])).
fof(f2789,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1))) | ($spl2 | $spl64)),
  inference(superposition,[],[f1524,f2771])).
fof(f1524,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1)))) ) | $spl2),
  inference(forward_demodulation,[],[f1523,f103])).
fof(f1523,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) ) | $spl2),
  inference(forward_demodulation,[],[f1522,f103])).
fof(f1522,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) ) | $spl2),
  inference(forward_demodulation,[],[f96,f103])).
fof(f96,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & ((s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))),
  inference(flattening,[],[f60])).
fof(f60,plain,(
  ! [X0,X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) & ((s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))),
  inference(nnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) <=> (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X12,X13] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',X13))) <=> (s('type.integer.int',X12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.rat.RAT_EQUIV_NMR_Z_IFF','thm.integer.INT_ENTIRE')).
fof(f187,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) ) | ($spl2 | $spl5)),
  inference(subsumption_resolution,[],[f186,f106])).
fof(f186,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) ) | $spl2),
  inference(superposition,[],[f183,f70])).
fof(f183,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))) ) | $spl2),
  inference(forward_demodulation,[],[f68,f103])).
fof(f101,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl0),
  inference(cnf_transformation,[],[f101_D])).
fof(f101_D,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f103,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl2),
  inference(cnf_transformation,[],[f103_D])).
fof(f103_D,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f64,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f47])).
fof(f8662,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,X2)) ) | ($spl0 | $spl3 | $spl5 | $spl10 | $spl16 | $spl72)),
  inference(subsumption_resolution,[],[f8636,f221])).
fof(f8636,plain,(
  ( ! [X2] : (s(bool,X2) != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))) | s(bool,'T_0') = s(bool,X2)) ) | ($spl0 | $spl3 | $spl5 | $spl10 | $spl72)),
  inference(superposition,[],[f3197,f8577])).
fof(f8577,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))) | ($spl0 | $spl3 | $spl5 | $spl10)),
  inference(subsumption_resolution,[],[f8570,f2841])).
fof(f2841,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f104,f101])).
fof(f8570,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))) | ($spl0 | $spl5 | $spl10)),
  inference(trivial_inequality_removal,[],[f8552])).
fof(f8552,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))) | ($spl0 | $spl5 | $spl10)),
  inference(superposition,[],[f3219,f8051])).
fof(f8051,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))) | ($spl0 | $spl5 | $spl10)),
  inference(forward_demodulation,[],[f2774,f2877])).
fof(f2877,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int',X0)))) ) | $spl0),
  inference(forward_demodulation,[],[f69,f101])).
fof(f2774,plain,(
  s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))) | ($spl5 | $spl10)),
  inference(subsumption_resolution,[],[f2752,f110])).
fof(f2752,plain,(
  ~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))) | $spl5),
  inference(superposition,[],[f94,f119])).
fof(f3219,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0)))) ) | $spl0),
  inference(forward_demodulation,[],[f3218,f101])).
fof(f3218,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) ) | $spl0),
  inference(forward_demodulation,[],[f3217,f101])).
fof(f3217,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) ) | $spl0),
  inference(forward_demodulation,[],[f96,f101])).
% SZS output end Proof for thm.rat
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 104
% Passive clauses: 802
% Generated clauses: 8417
% Final active clauses: 72
% Final passive clauses: 539
% Input formulas: 18
% Initial clauses: 37
% 
% Duplicate literals: 513
% Trivial inequalities: 139
% Fw subsumption resolutions: 1310
% Fw demodulations: 1066
% Bw demodulations: 19
% 
% Simple tautologies: 180
% Equational tautologies: 52
% Forward subsumptions: 4046
% 
% Binary resolution: 123
% Factoring: 2
% Forward superposition: 2779
% Backward superposition: 2042
% Self superposition: 155
% Equality factoring: 120
% Equality resolution: 22
% 
% Split clauses: 190
% Split components: 381
% SAT solver clauses: 444
% SAT solver unit clauses: 3
% SAT solver binary clauses: 49
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 190
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 441
% TWLsolver calls for satisfiability: 82
% 
% Memory used [KB]: 3965
% Time elapsed: 0.196 s
% ------------------------------
% ------------------------------
% Success in time 0.198 s
